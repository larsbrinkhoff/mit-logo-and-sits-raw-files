.MLLIT==1
TITLE NEW 11 LOADER
A=2
B=3
C=15
D=16
E=4
F=5
P=17
DIC==1
DOC==2
BTYOC==15
TYOC==16
TYIC==17

;ITS STYLE COMMAND LINE SCANNER
;	NON-SKIP RETURN FOR NULL FILE SPEC
;CLOBBERS ACS WITH RECKLESS ABANDON

BREAK=1		;RETURNS WITH CHARACTER THAT BROKE SCAN
DEV=4		;RETURNS DEV,FN1,FN2,SNAME
FN1=5
FN2=6
SNAME=7
AC=10
CHAR=11
ACPTR=12
TEMP=13
LIMBO=14	;SCANNER READ AHEAD CHARACTER
		;CANNOT LEAVE NAME UNTIL ZERO
;COMMAND BUFFER FILLING AND GETTING
.=42
	JSR TSINT
.=100

COMPNT:	0
COMBUF:	BLOCK 69.
COMCNT:	0
CRLF:	.IOT TYOC,[15]
	POPJ P,
TTYLIN:	MOVE B,[010700,,COMBUF-1]
	SETZM COMCNT
TTYL1:	.IOT TYIC,A
	JUMPE A,TTYL1
	CAIN A,177
	JRST RUBOUT
	CAIN A,15
	JRST TTYCR
	CAIN A,14
	JRST TTYL1	;IGNORE FORM FEEDS
	CAIN A,12
	JRST TTYLF
	PUSHJ P,COMPUT
	JRST TTYL1

RUBOUT:	SOSGE COMCNT
	JRST [	PUSHJ P,CRLF
		JRST TTYLIN]
	LDB A,B
	PUSHJ P,TYO
	PUSHJ P,DECBP	;DECREMENT BYTE POINTER
	JRST TTYL1

DECBP:	ADD B,[070000,,0]
	JUMPGE B,CPOPJ
	SUB B,[430000,,1]
	POPJ P,

TTYLF:	MOVEI A,15
	PUSHJ P,TYO
TTYCR:	PUSHJ P,COMPUT
	MOVEI A,12
	PUSHJ P,COMPUT
	MOVE B,[010700,,COMBUF-1]
	MOVEM B,COMPNT
	POPJ P,

COMPUT:	IDPB A,B
	AOS COMCNT
	POPJ P,

COMGET:	SOSGE COMCNT
	.VALUE
	ILDB BREAK,COMPNT
	POPJ P,


GETCC:	0			;GET CHARACTER FOR COMMAND LINE SCANNER
	SKIPN BREAK,LIMBO
	PUSHJ P,COMGET
	SETZM LIMBO
	JRST @GETCC

NAME:	0			;BREAK OFF WORD FROM INPUT STREAM
NA1:	JSR GETCC
	CAIE BREAK,40		;IGNORE LEADING SPACES
	CAIN BREAK,11		;TABS TOO
	JRST NA1
	MOVE ACPTR,[440600,,AC]
	TDZA AC,AC
NAME1:	JSR GETCC
	JSR BRKTST
	JRST NAMBRK		;FOUND A BREAK CHARACTER
NAME2:	TLNE ACPTR,770000	;IGNORE EVERYTHING AFTER 6 CHARACTERS
	IDPB CHAR,ACPTR
	JRST NAME1

NAMBRK:	JUMPN CHAR,@NAME	;NO TRAILING SPACES
NAMBR1:	JSR GETCC
	CAIE BREAK,40		;IGNORE TRAILING SPACES
	CAIN BREAK,11
	JRST NAMBR1
	JSR BRKTST
	JRST @NAME		;A BREAK CHARACTER
	MOVEM BREAK,LIMBO		;SPACE BROKE US
	MOVEI BREAK,40
	JRST @NAME

;CONVERTS BREAK TO SIXBIT AND PUTS RESULT IN CHAR
;^Q QUOTES NEXT CHARACTER
;FAILS TO SKIP ON BREAK CHARACTER

BRKTST:	0
	CAIN BREAK,11
	MOVEI BREAK,40
	JSR SIXTST
	JUMPL CHAR,[	CAIE BREAK,21		;^Q
			JRST @BRKTST		;NON-SIXBIT BREAKS US
			JSR GETCC
			JSR SIXTST
			JUMPL CHAR,@BRKTST	;NON-SIXBIT
			JRST BRKT1]
	JUMPE CHAR,@BRKTST
	CAIE CHAR,':
	CAIN CHAR,';
	JRST @BRKTST
BRKT1:	AOS BRKTST		;WHEW!
	JRST @BRKTST

;CONVERT BREAK TO SIXBIT

SIXTST:	0
	MOVNI CHAR,1
	CAIL BREAK,40
	CAILE BREAK,"_
	JRST SIXT1	;MIGHT BE LOWER CASE
	MOVEI CHAR,-40(BREAK)
	JRST @SIXTST
SIXT1:	CAIL BREAK,"A
	CAILE BREAK,"Z
	JRST @SIXTST
	MOVEI CHAR,<"A-"A-40>(BREAK)
	JRST @SIXTST

;THIS ROUTINE SCANS COMMAND LINE FOR FILE SPECIFICATION

GETFIL:0
	SETZB FN1,FN2
	SETZB DEV,SNAME
	SETZM LIMBO
	JSR NAME
	JUMPE AC,@GETFIL
	AOSA GETFIL
GETF1:	JSR NAME		;BREAK OFF FIRST NAME
	JUMPE AC,@GETFIL	;LET INITL WORRY ABOUT IT
	CAIN BREAK,":
	JRST [	MOVE DEV,AC
		JRST GETF1]
	CAIN BREAK,";
	JRST [	MOVE SNAME,AC
		JRST GETF1]

;THIS MUST BE FN1 OR FN2

	CAIE BREAK,40
	JRST [	JUMPN FN1,[	MOVE FN2,AC
				JRST @GETFIL]
		MOVE FN1,AC
		JRST @GETFIL]
	JUMPN FN1,[	MOVE FN2,AC
			JRST GETF1]
	MOVE FN1,AC
	JRST GETF1

TYO:	.IOT TYOC,A
	POPJ P,
GO:	.SUSET [.SMASK,,[0]]
	.OPEN TYOC,[SIXBIT /  !TTY/]
	.VALUE
	.OPEN TYIC,[SIXBIT /   TTY/]
	.VALUE
	MOVEI P,PDL
	PUSHJ P,TTYLIN
	JSR GETFIL
	CAIN DEV,
	MOVSI DEV,'DSK
	HLRM DEV,INFILE
	CAIN SNAME,
	.SUSET [.RSNAM,,SNAME]
	.SUSET [.SSNAM,,SNAME]
	CAIN FN2,
	MOVE FN2,[SIXBIT /BIN/]
	MOVEM FN1,INFILE+1
	MOVEM FN2,INFILE+2
RESTRT:	.OPEN DIC,INFILE
	.VALUE
	.OPEN BTYOC,[47,,(SIXBIT /TTY/)]
	.VALUE
	.OPEN TYOC,[41,,(SIXBIT /TTY/)]
	.VALUE
	SETZM PCKNUM
	SETZM PCKCNT
	SETZM ABSCNT
	SETZM LSTABS
	SETZM DSKCNT

	JRST SYNC	;GO GET THE 11 READY TO GO


SEND:	AOS PCKNUM
	SETZM ACKN	;PREPARE FOR THE NEXT ACK
	MOVSI A,(SETZ)
	.REALT A,
	JFCL
	.SUSET [.SMSK2,,[1_TYIC]]
	PUSHJ P,MAKPCK	;MAKE UP A PACKET TO SEND
RESEND:	PUSHJ P,MAKPPR	;RESET PACKET VARIABLES
	MOVEI D,4	;EACH PACKET IS FOUR MESSAGES
MESSSN:	HRLZ A,PCKPNT
	HRRI A,DATA
	BLT A,DATA+32.
	MOVEI B,32.
	ADDM B,PCKPNT	;UPDATE PACKET POINTER
	MOVEI C,0
	MOVEI B,32.
	MOVEI A,DATA
CHKLP:	ADD C,(A)
	AOS A
	SOJG B,CHKLP
	ADD C,PCKNUM
	MOVNS C
	MOVEM C,CHKSUM
	MOVE A,[440700,,OUT]
	MOVEM A,OUTPNT
	MOVEI A,MESS	;BASE POINTER TO DATA BLOCK
	MOVEI B,11.	;NUMBER OF 3 WORD BLOCKS IN BLOCK
LUP11:	MOVEI C,7.	;DPB POINTER POINTER
LUP3W:	MOVEI E,0
	LDB F,LDBTB1(C)
	DPB F,DPBTB1(C)
	LDB F,LDBTB2(C)
	DPB F,DPBTB2(C)
	ADDI E,40
	IDPB E,OUTPNT
	SOJGE C,LUP3W
	ADDI A,3
	SOJG B,LUP11
	MOVEI E,3
	IDPB E,OUTPNT
	IDPB E,OUTPNT
	IDPB E,OUTPNT
	MOVE A,[-8.*11./5-1,,OUT]
	IDPB E,OUTPNT
	.IOT BTYOC,A
	SOJG D,MESSSN
	MOVE A,[600000,,[30.]]	;GIVE HIM A FULL 1/2 SECOND TO RESPOND
	.REALT A,
	JFCL
	.SUSET [.SMASK,,[200000,,]]	;ENABLE IT
	SKIP
	.HANG		;WAIT FOREVER, INT LEVEL TAKES OVER FROM HERE

SYNC:	SETZM ACKN
	SETZM SYNCED
SYNC1:	.IOT TYOC,[1]	;TO ESTABLISH SYNC WITH THE 11
	MOVEI A,1
	.SLEEP A,
	SKIPN SYNCED
	JRST SYNC1
	JRST RESEND

TSINT:	0?0
	PUSH P,A
	MOVE A,TSINT
	JUMPL A,TYIINT
	TLNN A,200000
	JRST [POP P,A ? .DISMISS TSINT+1]	;FUNNY INT, TRY TO IGNORE
	MOVSI A,(SETZ)
	.REALT A,
	JFCL
	SETZM ACKN
	POP P,A		;GOT A TIME OUT
	.DISMISS [SYNC]	;TRY TO RESYNC WITH THE 11
TYIINT:	MOVEI A,TYIC
	.ITYIC A,
	JRST [POP P,A ? .DISMISS TSINT+1] ;THE CHARACTER SEEMS TO DISAPPER?
	.IOT TYIC,A
	SKIPE ACKN
	JRST ACKCHK
	CAIN A,"R	;DOES HE WANT THE FILE RESENT?
	JRST [POP P,A ? JRST RESTRT]
	CAIN A,"S	;ARE WE NOW IN SYNC?
	JRST [SETOM SYNCED ? POP P,A ? .DISMIS TSINT+1]
	CAIN A,"A
	JRST [SETOM ACKN ? SOS ACKN ? POP P,A ? .DISMIS TSINT+1]
	POP P,A
	.DISMIS [SYNC]
ACKCHK:	SUBI A,40
	SUB A,PCKNUM	;IS THE ACK FOR THE CURRENT PACKET?
	TRNE A,77
	JRST [POP P,A ? .DISMISS [SYNC]]
	AOSE ACKN
	JRST [POP P,A ? .DISMIS TSINT+1]
	POP P,A
	.DISMIS [SEND]
SYMBOL:	.VALUE [ASCIZ /:LOGOUT /]

ACKN:	0
SYNCED:	0
PCKNUM:	0
		
LDBTB1:	600,,2(A)
	60600,,2(A)
	200,,1(A)
	20600,,1(A)
	100600,,1(A)
	400,,(A)
	40600,,(A)
	120600,,(A)

LDBTB2:	0
	0
	140400,,2(A)
	0
	0
	160200,,1(A)
	0
	0

DPBTB1:	600,,E
	600,,E
	40200,,E
	600,,E
	600,,E
	20400,,E
	600,,E
	600,,E

DPBTB2:	0
	0
	400,,E
	0
	0
	200,,E
	0
	0

OUT:	BLOCK 100.
OUTPNT:	0

MESS:
CHKSUM:	0
DATA:	BLOCK 33.
MSGPNT:	DATA
MSGCNT:	33.

PACK:	BLOCK 256.
PCKPNT:	PACK
PCKCNT:	0

ABS:	BLOCK 1000.
ABSPNT:	ABS
ABSCNT:	0
LSTABS:	0	;SETOM WHEN IN LAST BLOCK OF ABS LOADER STUFF

DISK:	BLOCK 2000
DSKPNT:	DISK
DSKCNT:	0


;GET A WORD FROM THE DISK FILE:
GDSK:	SOSGE DSKCNT
	JRST GDSK1
	MOVE A,@DSKPNT
	AOS DSKPNT
	POPJ P,
GDSK1:	MOVE A,[-2000,,DISK]
	.IOT DIC,A
	MOVEI A,DISK
	MOVEM A,DSKPNT
	MOVEI A,2000
	MOVEM A,DSKCNT
	JRST GDSK


;GET A BYTE FROM THE ABSOLUTE BLOCK
GABS:	SOSGE ABSCNT
	JRST GABS1
	MOVE A,@ABSPNT
	AOS ABSPNT
	POPJ P,
GABS1:	SKIPE LSTABS
	JRST [	MOVEI A,0
		POPJ P,]
	PUSH P,B
	PUSH P,C	;FOR THE CHECKSUM
	PUSH P,D	;FOR THE COUNT
	MOVEI B,ABS
	MOVEM B,ABSPNT
	SETZB C,ABSCNT	;THE CHECKSUM AND THE COUNT
	PUSHJ P,GABSW
	CAIE A,1	;SHOULD BE START OF A BLOCK
	.VALUE		;IT'S NOT
	PUSHJ P,GABSW	;SHOULD BE ZERO
	JUMPN A,[.VALUE]
	PUSHJ P,GABSW	;LOW BYTE OF COUNT
	MOVE D,A
	PUSHJ P,GABSW	;HIGH BYTE
	DPB A,[101000,,D]	;COMPLETE COUNT
	SUBI D,3	;CORRECT FOR WHAT WE'VE ALREADY LOOKED AT
	CAIN D,3	;IS IT THE START BLOCK?
	SETOM LSTABS	;THIS IS THE LAST BLOCK OF ABSLOUTE FORMAT STUFF
	PUSHJ P,GABSW	;GET A BYTE
	SOJG D,.-1	;AND ANOTHER IF THERE ARE MORE
	JUMPN C,[.VALUE]	;IF THE CHECKSUM IS WRONG, DIE
	MOVEI A,ABS
	MOVEM A,ABSPNT
	POP P,D
	POP P,C
	POP P,B
	JRST GABS	;NOW REALLY GET IT

GABSW:	PUSHJ P,GDSK	;A WORD FROM THE DISK, PLEASE
	MOVEM A,@ABSPNT
	AOS ABSPNT
	AOS ABSCNT
	ADD C,A		;UPDATE CHECKSUM
	TDZ C,[-1,,777400]	;KEEP IT TO A BYTE
	POPJ P,

;MAKE A PACKET
MAKPCK:	PUSHJ P,MAKPPR
	SKIPGE ABSCNT	;IS THE ABS LOADER STUFF USED UP?
	JRST SYMBOL	;THEN SEND SYMBOLS
MAKPC1:	PUSHJ P,GABS	;GET ONE ABS LOADER BYTE
	MOVE B,A	;SAVE IT
	PUSHJ P,GABS	;GET THE NEXT BYTE
	DPB A,[101000,,B]	;MAKE A 16 BIT WORD
	MOVEM B,@PCKPNT
	AOS PCKPNT
	SOSE PCKCNT
	JRST MAKPC1
MAKPPR:	MOVEI A,PACK
	MOVEM A,PCKPNT	;RESET POINTER
	MOVEI A,128.
	MOVEM A,PCKCNT	;RESET COUNT
	POPJ P,

PDL:	BLOCK 100
OUTSIX:	MOVE B,[440600,,A]
OUTSX1:	ILDB C,B
	JUMPE C,CPOPJ
	ADDI C,40
	.IOT 2,C
	TLNE B,770000
	JRST OUTSX1
CPOPJ:	POPJ P,
OUTOCT:	MOVE B,[220300,,A]
OUTOC1:	ILDB C,B
	JUMPN C,OUTOC2
	TLNE B,770000
	JRST OUTOC1
	SKIPA
OUTOC3:	ILDB C,B
OUTOC2:	ADDI C,60
	.IOT 2,C
	TLNE B,770000
	JRST OUTOC3
	POPJ P,
INFILE:	SIXBIT /  &DSKL3000 SEGBIN/
END GO
