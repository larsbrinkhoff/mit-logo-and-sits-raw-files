.MACRO FLASK Q,FLAG
.IF1
.PRINT /Q
FLAG=/
.TTYMAC F
FLAG==F
.ENDM
.ENDC
.ENDM


;MACRO TO PUSH THINGS ONTO THE STACK
.MACRO SAVE THINGS
.IRP X,<THINGS>
	MOV X,-(P)
.ENDM
.ENDM

;MACRO TO POP THINGS FROM STACK
.MACRO REST THINGS
.IRP X,<THINGS>
	MOV (P)+,X
.ENDM
.ENDM
.ABS
A=%0
B=%1
C=%2
D=%3
E=%4
F=%5
P=%6
PC=%7
.XCREF A,B,C,D,E,F,P,PC,FOO,FOOBAR


;CONSOLE SWITCHES AND DISPLAY
CDISP=177570
CSWR=177570

TVINCR=164140	;THE INCREMENT REGISTER FOR THE TV'S
TVINC==77	;THE MASK FOR THE INCREMENT
TVRSET==100000	;THE RESET BIT
TVCLRW==400	;THE COLOR WRITE BIT

TVSEL=164142	;THE CONSOLE SELECT REGISTER
TVRCNS==77	;THE CONSOLE NUMBER MASK
TVRWMD==300	;THE REGULAR WRITE MODE MASK
TVNSH==0	;NO SHIFT WRITE MODE
TVINOR==100	;THE INCLUSIVE OR MODE
TVXOR==200	;THE XOR MODE
TVMOV==300	;THE MOVE FUNCTION
TVDCNS==TVRCNS*400	;DISK CONSOLE NUMBER (SAME, BUT IN TOP BYTE)
TVDWMD==TVRWMD*400	;THE DISK WRITE MODE MASK

TVRADR=164144	;THE REGULAR ADDRESS REGISTER

TVWC=164146	;THE WORD COUNT FOR THE BLOCK WRITE

TVDADR=164150	;THE DISK TRANSFER ADDRESS REGISTER

TVSHR=164152	;THE SHIFT REGISTER
TVSHCN==17	;THE SHIFT COUNT
TVMAP==17400	;THE START OF THE 16K PAGE (IN 4K BLOCKS)
TVAMAP==20000	;THE ACTIVATE TVMAP BIT

TVMSK=164154	;THE MASK REGISTER

TVDWIN=164156	;THE WINDOW FOR DISK TRANSFERS

TVRWIN=164160	;THE WINDOW FOR REGULAR TRANSFERS

TVCNSL=164162	;THE CONSOLE REGISTER FOR THE MEMORY
TVCLR==160000	;THE COLOR NUMBER

TVYSIZ==454.	;LINES ON TV SCREEN

.MACRO DEF Z
.IF1
Z==FOO
FOO==FOO+2
.ENDC
.ENDM

;DEFINE A SHIP FRAME
NSHIPS==2
FOOBAR==0
FOO==0
DEF OFA			;OLD FRAME ADDRESS
DEF NFA			;NEW FRAME ADDRESS
DEF PICADD		;PICTURES ADDRESS
DEF H			;HEADING
DEF X			;X POSITION
DEF Y			;Y POSITION
DEF XV			;X VELOCITY
DEF YV			;Y VELOCITY
DEF S			;SENSES
RT==1			;RIGHT TURN
LT==2			;LEFT TURN
TH==4			;THRUST
FM==10			;FIRE MISSLE
HS==20			;ENTER HYPERSPACE
.IF1
LSHIP==FOO/2
.ENDC
PICSZ==40		;BYTES / PICTURE
FRMSZ==PICSZ+1		;WORDS / PICTURE FRAME
NPIC==10		;PICTURES / QUADRANT
.=10000

GO:	RESET
	MOV #STACK,P
	MOV #10000,TVCNSL
	MOV #TVNSH,TVSEL
	CLR TVRADR		;CLEAR THE DISPLAY
	MOV #0,TVRWIN
	MOV #1,TVINCR
	MOV #-<TVYSIZ*44>,TVWC
	JSR PC,PICINT		;MAKE THE OTHER 3 QUADRANTS OF PICTURES
	TST TVWC
	BLT .-4
	MOV #1044,TVINCR
	MOV #TVXOR,TVSEL
	MOV #SHIPS,A		;INITIALIZE THE SHIP FRAMES
	MOV #NSHIPS,B
	MOV #FRAMS,C
GO1:	MOV C,NFA(A)
	ADD #FRMSZ*2,C		;FILL IN THIS SHIPS FRAME
	MOV C,OFA(A)
	ADD #FRMSZ*2,C
	MOV #PICTUR,PICADD(A)
	ADD #LSHIP*2,A
	SOB B,GO1
GO2:	MOV #SHIPS,A
	MOV #NSHIPS,B
	SAVE <CSWR>
GO3:	MOV (P),S(A)
	JSR PC,SHIPUP		;UPDATE SHIP FRAME VARIABLES
	JSR PC,NEWSHP		;MAKE THE NEW PICTURE FRAME
	JSR PC,DISHIP		;ERASE AND DISPLAY SHIP
	SWAB (P)
	ADD #LSHIP*2,A
	SOB B,GO3
	TST (P)+
	MOV WAITIM,F
	SOB F,.
	BR GO2


PICINT:	MOV #<3*NPIC*PICSZ/2>+1,F
	MOV #PICTUR,A
	MOV #PICTUR+<NPIC*PICSZ>,-(P)
	CLR D
	SEC
	BR PICIN3

PICIN1:	MOV #20,E
	MOV (A)+,C
PICIN2:	TST -(B)
	ASL C
	BCC .+4
	BIS D,(B)
	SOB E,PICIN2
	CLC
	ROR D
	BCC PICIN4
PICIN3:	ROR D
	ADD #PICSZ,(P)
PICIN4:	MOV (P),B
	SOB F,PICIN1
	TST (P)+
	RTS PC

;UPDATE THE SHIP VARIABLES
;(A)=ADDRESS OF SHIP FRAME  (CLOBBERS C,D,E,F)

SHIPUP:	BIT #TH,S(A)
	BEQ SHIP.1		;NO THRUST
	MOV H(A),F
	MOV THRUST,E
	JSR PC,TRIG
	ADD E,XV(A)		;THRUST*(COS H)
	ADD F,YV(A)		;THRUST*(SIN H)
SHIP.1:	BIT #RT,S(A)
	BEQ SHIP.2
	SUB TRNVEL,H(A)
	BGE .+10
	ADD #3110,H(A)
	BR SHIP.3
SHIP.2:	BIT #LT,S(A)
	BEQ SHIP.3
	ADD TRNVEL,H(A)
	CMP H(A),#3110
	BLT .+10
	SUB #3110,H(A)
SHIP.3:	ADD XV(A),X(A)
	SUB YV(A),Y(A)
SHIP.4:	CMP X(A),#22000
	BLT SHIP.5
	SUB #22000,X(A)
	BR SHIP.4
SHIP.5:	TST X(A)
	BGE SHIP.6
	ADD #22000,X(A)
	BLT .-6
SHIP.6:	CMP Y(A),#TVYSIZ*20
	BLT SHIP.7
	SUB #TVYSIZ*20,Y(A)
	BR SHIP.6
SHIP.7:	TST Y(A)
	BGE SHIP.8
	ADD #TVYSIZ*20,Y(A)
	BLT .-6
SHIP.8:	RTS PC			;MORE CONTRLS ADDED HERE

;MAKE THE NEW SHIP PICTURE FRAME (CLOBBERS C,D,E,F)
;(A)=SHIP FRAME ADDRESS

NEWSHP:	SAVE <A,B>
	MOV NFA(A),B
	MOV Y(A),D
	ASH #-4,D		;LINE NUMBER
	SUB #10,D
	BGE .+6
	ADD #TVYSIZ,D
	MUL #44,D		;COMPUTE OFFSET INTO DISPLAY BUFFER
	MOV X(A),C
	SUB #210,C
	BGE .+6
	ADD #22000,C
	MOV C,E
	SWAB E
	BIC #177400,E
	ADD E,D
	ASL D
	MOV D,(B)+		;STORE DISPLAY START ADDRESS
	ASH #-4,C
	BIC #177760,C
	NEG C
	ADD #17,C		;SHIFT LEFT
	MOV H(A),E
	ADD #3110/<NPIC*10>,E
	CMP E,#3110
	BLT .+6
	SUB #3110,E
	MUL #24276,E		;(2**15)/PI
	MUL #NPIC*PICSZ/100,E	;GET OFFSET INTO PICTURE TABLE
	BIC #PICSZ-1,F
	ADD PICADD(A),F
	MOV F,A
	MOV #PICSZ/2,D
NEWSH1:	CLR E
	MOV (A)+,F
	ASHC C,E
	MOV F,PICSZ(B)
	MOV E,(B)+
	SOB D,NEWSH1
	REST <B,A>
	RTS PC

;DISPLAY A SHIP (CLOBBERS F,E,D)
;(A)=SHIP FRAME TO DISPLAY

DISHIP:	MOV OFA(A),F
	JSR PC,DISHP1
	MOV NFA(A),F
	MOV OFA(A),NFA(A)
	MOV F,OFA(A)
DISHP1:	MOV (F)+,E
	MOV E,TVRADR
	MOV #PICSZ/2,D
DISHP2:	MOV (F)+,TVRWIN
	SOB D,DISHP2
	MOV #PICSZ/2,D
	INC E
	INC E
	MOV E,TVRADR
DISHP3:	MOV (F)+,TVRWIN
	SOB D,DISHP3
	RTS PC

;COMPUTE TRIG FUNCTIONS (CLOBBERS C,D,E,F)
;RETURN (E)*COS(F) IN E
;RETURN (E)*SIN(F) IN F
;(F) IS IN RADIANS * (2**8)

TRIG:	SAVE <B,E>
	CLR E
	DIV #311,E		;MOD PI/4
	ASL E
	SAVE <E>		;INDEX INTO TRIG TABLES
	SWAB F
	ASR F			;MULTIPLY BY 2**7
	BIC #100000,F		;0 < (F) < PI/4*(2**15)
	MOV TRIGTB(E),E
	BEQ TRIG.1
	SUB F,E			;USE PI/4-H
	BR TRIG.2
TRIG.1:	MOV F,E			;USE H
TRIG.2:	MOV E,C			;SIN H KEPT IN C
	MOV #77777,D		;COS H KEPT IN D
	MOV E,B
	BEQ TRIG.3		;DONE
	MUL B,E
	SUB E,D			;(H**2)/2
	MUL B,E
	ASL E
	BEQ TRIG.3		;DONE
	MOV E,F
	CLR E
	DIV #3,E
	SUB E,C			;(H**3)/6
	MUL B,E
	ASR E
	BEQ TRIG.3		;DONE
	ADD E,D			;(H**4)/24.
	MUL B,E
	MOV E,F
	BEQ TRIG.3		;DONE
	CLR E
	ASL F
	DIV #5,E
	ADD E,C			;(H**5)/120.
	MUL B,E
	BEQ TRIG.3		;DONE
	CLR E
	DIV #3,E
	SUB E,D			;(H**6)/720.
TRIG.3:	REST <B>
	MOV D,E			;COS
	TST TRIGSW(B)
	BEQ TRIG.4
	MOV C,E			;SWITCH SIN AND COS
	MOV D,C			;SIN
TRIG.4:	MOV TRIGNG(B),F		;NEGATE SOME VALUES
	BPL .+4
	NEG E			;NEGATE COS
	TSTB F
	BPL .+4
	NEG C			;NEGATE SIN
	MUL (P),E		;MULTIPLY BY (E)
	MUL (P)+,C
	MOV C,F
	REST <B>
	RTS PC

;STACK AND DATA FRAMES ASSEMBLED HERE

.BLKW 100
STACK:
WAITIM:	0
THRUST:	10
TRNVEL:	10
TRIGTB:	.WORD 0,62200,0,62200,0,62200,0,62200
TRIGSW:	.WORD 0,1,1,0,0,1,1,0
TRIGNG:	.WORD 0,0,177400,177400,-1,-1,377,377
PICTUR:
ZERO:	.WORD 0,0,0,77600,177600,3014,1436,777
	.WORD 777,1436,3014,177600,77600,0,0,0


PI.16:	.WORD 0,0,0,1600,17614,77037,177477,141777
	.WORD 776,614,1400,1740,17740,37400,34000,0


PI.8:	.WORD 0,0,0,1030,7476,37076,77176,61776
	.WORD 1714,600,700,740,3700,17400,4000,0


PI3.16:	.WORD 0,0,416,1637,7437,17077,77776,170740
	.WORD 140700,370,360,740,3700,7400,3000,0


PI.4:	.WORD 0,0,70,174,6174,16174,34370,77700
	.WORD 167600,140600,100660,760,340,700,1600,3400


PI5.16:	.WORD 70,174,174,1174,3170,7340,17700,17710
	.WORD 34734,70170,70160,20160,340,300,700,600


PI3.8:	.WORD 0,360,760,770,370,4360,6700,17600
	.WORD 17620,30770,30160,60160,60140,340,300,0


PI7.16:	.WORD 340,740,1760,1760,740,14700,14600,15630
	.WORD 37730,36370,30160,70160,70160,60140,340,300

	.BLKB PICSZ*<3*NPIC>
FRAMS:	.BLKW FRMSZ*NSHIPS*2
SHIPS:	.BLKW NSHIPS*LSHIP

.END GO
