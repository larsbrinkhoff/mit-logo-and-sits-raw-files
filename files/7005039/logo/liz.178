.xgp
.font 0 30vr
.ss
.adjust
.ce
Individual Profiles -- Laura

Laura got into working with LOGO very quickly.  She seemed to master basic ideas of the language:  use of turtle commands, syntax for writing procedures, using procedures as subprocedures, naming procedures, etc.  She then worked really well for about the first 12 or 13 sessions -- after which her work bogged down a bit as a I introduced several new ideas in close succession, and the projects she was trying to do became harder.

Throughout the 26 sessions, Laura had a tendency to try to learn quickly.  She wanted to "know" the answer immediately and preferred not to ask for help except when absolutely stuck.  She also did not like to be observed while working.  She sometimes had a difficult time articulating her purposes in working.  Whether this was due to the fact that she herself did not know her purposes, whether she knew them but could not articulate them, or whether she just felt that they were "private" and did not want to share, is not clear to me.  What is clear is that according to the dribble file, there were times when she was clearly confused about left and right turns, about the effects of a series of steps in a procedure, or about error messages generated by misunderstandings about LOGO syntax -- and she did not ask for help, or use any other thoughtful strategies for clarifying her confusion.  Laura often evidenced confusion by appearing bored, or by acting in a particularly "perky" manner.  As I describe Laura's experience I will try to identify what I believe she learned solidly, and what she evidenced confusion about. 

At the very first session, Laura showed great interest in names and in "communicating" with the computer.  She noticed "FOO" on the display screen, and asked "Does the computer eat?  It says `FOOD'"  She was also very interested when a typing mistake put "BLT" on the screen, and the computer responded "YOU HAVEN'T TOLD ME HOW TO BLT."  (Much later she was to say "let's teach it how to BLT," and "Gary, remember BLT?"

During this same first section, Laura had a good deal of difficulty "driving the turtle" -- choosing correct numbers for right, left and forward.  She appeared "bored" with turtle driving activities, and I introduced the idea of writing a random procedure, and repeating it -- an idea that Laura seemed to enjoy and understand -- but that she never tried for herself when working alone. 
At session 5, Laura got her first chance to work alone at a graphics terminal.  Laura worked without advance planning.  She built an elaborate open ended design, using direct commands quite carefully, to put a rectangle around a circle.  At session 6, she did another elaborate design involving many instructions, some of which had already disappeared from the screen before the design was complete.  When she attempted to "capture" the design on paper so that she could teach it to the computer, she had already lost some critical steps from the first part of her exploration.

At the beginning of the next session, I suggested that she plan a simple design by drawing it first on paper, then trying it out, and then trying to teach it to the computer.  Laura decided to make a face, and drew a simple face on paper. (See Figure L-1-)

.block 18
.sp 16
.ce
Figure L-1

Carrying out this project was difficult for Laura.  She had not yet written any procedures, and this project needed sub-procedures.  In addition; all her previous designs had been "planned as they went along," with Laura working in "designer mode" -- try this -- then try that.  Now she was trying out a fixed plan -- but she did not understand clearly enough how to manipulate the sizes of the elements -- circles and squares, and how to locate the turtle so that they would be in the correct positions.  She needed a lot of help from me to work through this project.  (See figure L-2)

.block 22
.sp 20
.ce
Figure L-2

I now feel that this project was, in a sense an "interuption" of Laura's "natural learning path."  The things that she "learned" were not totally absorbed by her at this point.  Laura was also put in the position of "needing help", which continued through the next session, until the project was finished.  On the other hands, Laura was very pleased with the result, and did have an opportunity to work much more carefully and critically with turtle manipulations.  She did write procedures and sub-procedures, and was exposed to the idea of a superprocedure (although she never really used it again on her own!).

In session 9, Laura went back to "designing," this time, using circles of different sizes.  It is interesting to note that Laura did not construct her procedure AROUND, a collection of different sized LCIRCLES all starting from the same point, by following a specific pattern -- rather, Laura added the circles in a somewhat random way:  Large, smaller, smaller, smaller, smallest, largest, smaller, smaller, larger...as if she were studying the design and asking "what size circle would look good now?"  Her procedure was copied directly from the screen to her notebook, and from her notebook to the procedure.  She also began numbering steps by 10's. (See figure L-3)

.block 15
.sp 13
.ce
Figure L-3

I next suggested that she make a symmetrical procedure with RCIRCLEs, and then put them both together.  Following this Laura went back to more free form experimentation in her "designer" mode  -- try this...then see what looks good next.

Session 11 was one of Laura' best days.  She developed a fairly complex -- but not too complex -- design.  She copied the steps in her notebook, (with a little help from me), and then taught the procedure to the computer.  At my suggestion, Laura made one part of the design a sub-procedure, which simplified the debugging which was later necessary.  Laura had to do a lot of debugging -- mostly because she had difficulty copying correctly from her notebook.  She worked a lot with the ED and PO command, and I got her to compare the steps as written in her notebook, with the steps as listed in the procedure.  She did not debug by tracing through the procedure directly, to see what each step was doing. (See figure L-4)

.block 15
.sp 13
.ce
Figure L-4

I have a model of Laura' working style:  Try something.  If you like it, copy the steps down in your notebook.  Then teach it to the computer copying the steps from your notebook.  Try to be careful not to make a mistake copying.  Although Laura now realizes that procedures can be changed if necessary, she does not see the procedure itself as the thing that you experiment with -- trying it out, and then changing it to make it do what you want.  (GEO uses precisely this second method in his work.)

During sessions 12-22, Laura worked a lot with recursion, variables, stop rules, and a long language project -- a "mad lib" game.  She did not return to "designer mode" until session 23, when she picked up on one of her first project ideas -- making her initials.

Looking at the dribble files, it is clear that Laura worked on her initials by a proces of trial and error -- then wrote down the correct steps in her notebook.  She did not plan ahead or try to think about the easiest way to do it.  As a result, she wound up having procedures with many more steps than necessary, as she retraced her course in finishing her letter.  Her E, made of just four straight lines, had 15 steps.  (The steps were numbered as follows: 10, 20, ....100, 101, 102, ...107.)
In addition, she had problems copying steps into and out of her notebook.  
I suggested stepping through the procedure after printing it out and checking it against her notebook.  
Laura did not have the idea of stepping through the procedure on her own, (or didn't think she could do it without help, or didn't want to bother doing it without help.)

When Laura worked on her B (her last initial), she ran into exactly the same problems:  little or no planning; poor copying to and from notebook; line numbers increase by 1s above 100; confusion about which way to turn the turtle, LT 90 or RT 90; and especially no clear sense of how to debug by stepping through a procedure (playing computer), although I had worked on this technique with her for five classes in a row.

Laura missed two of the last four classes (she was absent for one, and went on a class trip for another) and never completed her initials -- although I believe she would have finished them, and created a superprocedure to draw all three, in about one more session.  Laura also did not bring a visitor to class at the next-to-last session, when the children were given an opportunity to do so.

How can we account for Laura' confusion about things that she had worked on so often?  I think there are two aspects. From the beginning, Laura had difficulty "driving the turtle," distinguishing between left and right, etc.  She is left handed, and often confused left/right.  (In her face project, the eye on the right of the drawing was called LEFTEYE which would have been accurate from the perspective of the face -- looking out from the display screen.)  She also reversed letters in spelling a lot (NOES for "nose", for example.)

At the same time, Laura demonstrated  over and over again, that she did not like to make an analytical effort in her work.  She could copy a "formula" successfully, and even have an idea why it worked, but she had difficulty in adapting it to a new situation, or changing it slightly.  She rarely made a specific plan that she tried to carry through -- preferring to erase a procedure rather than edit it, and to use CS and start again with a drawing, rather than analyze what was wrong.  She even developed a habit of typing POTS, every time she wanted to make any change in what she was doing.  This had the effect of displaying a long string of procedure names on the screen, and totally "wiping out" her previous work.  (Some kids do the same thing by typing a string of carriage returns.)

I believe that it is important for Laura to "give the world the impression" that she "knows a lot," without making a real intellectual effort to learn.  Along with this goes the strategy of hiding what she doesn't know, and when she does ask for help, only attending to the minimal amount necessary to solve the immediate problem -- i.e. get the procedure to do the right thing -- without concentrating on the underlying principles or debugging strategies.

During classes 12-16, I introduced several new ideas to Laura:  recursion, procedures with inputs, recursion with fixed inputs and recursion with varying inputs.  In classes 17-19 she worked on a long language project - creating a kind of "madlib" game, and then in classes 19-21, she did some more work with variables -- recursive procedures with two inputs.

In session 12 I introduced both recursion, and the use of variables to Laura.  I showed her a procedure:  

.indent 6
.nofill
.block 4
TO TWIST
10 LCIRCLE 40
20 RT 30
50 TWIST

.indent 0
.adjust
She then wanted to make TWISTs of different sizes.  I showed her how to make the size of the circle a variable.  She wrote: 

.indent 6
.nofill
.block 4
TO TWIST2: SIZE
10 LCIRCLE :SIZE
20 RT 90
30 TWIST2:SIZE

.indent 0
.adjust
She seemed to understand what she was doing.  Although she had introduced the RT 90 in line 20, she seemed surprised that the shape of her circle design was different.  She understood how to vary the size of the design by varying the input to TWIST2.

In the next session (13) Laura continued to write procedures with a variable SIZE.  She began to show some confusions.  She usually left the :SIZE out of the procedure title.  She tried to use EDT, but used it incorrectly and disregarded error messages.  She wrote a procedure called TO SQUARE: SIZE, which did not use a variable :SIZE within the procedure.  And, when copying from me, the procedure TO SQ:SIZE, she made all the forward steps FD 66:SIZE, not understanding that :SIZE replaced the specific forward step.  Once she had the SQ:SIZE procedure defined correctly, she made a very exciting design using SQ 1, SQ 2, ...SQ 82. (See figure L-5)

.block 21
.sp 19
.ce
Figure L-5

To capitalize on this discovery, I decided to introduce the following procedure to Laura at the next class (14): 

.nofill
.block 3
TO GROWSQ:SIZE
10 SQ:SIZE
20 GROWSQ:SIZE+1

.adjust
However, when Laura atried to copy this, she typed: 

.nofill
.block 3
TO GROW SQ:SIZE
10 SQ:SIZE
20 GROW SQ:SIZE

.adjust
She forgot to type in the +1, despite a very careful explanation on my part of how the procedure worked.  Also, since she left a space between GROW and SQ:SIZE, she kept getting error messages when she tried to use the procedure.  She did read the error messages, and tried several ways of typing the procedure, to try to eliminate the error. She tried GROW SQ, GROW SQ 1, GROWSQ 1, GROW SQ 1 100, GROW 1 100, none of which worked.  Finally she asked for help, and I suggested she erase the procedure GROW and copy it over, making GROWSQ one word.  Notice that she was resourceful in trying different ways of typing the procedure names, but she did not look at the procedure itself to see what was wrong.  Another example of Laura' basic working style; lots of trial and error -- no analysis!

Later in the same period, Laura was trying TWIST 80, TWIST 40, TWIST 300.  All of these produced the same figure, since TWIST was a fixed instruction procedure.  When Laura finally asked for help, I suggested she print out the procedure and look at it -- looking at it together we could see why it always made the same shape.  Once again, Laura had tried different things, but had not looked at the procedure to see what was wrong.  Still later in the period, she was making a procedure to draw a letter T for a friend, whose name was Tina.  She made two attempts TINA, and TINA1, neither of which worked.  In neither case did she look at the procedure and try to analyze it.

I began the next session (15) by talking to the whole group about debugging, and the use of PO and step by step analysis of a procedure.  Laura spent the period playing around with old procedures, trying to copy other kids procedures from the bulletin board -- without copying the subprocedures needed, and in general wasting time.  I interpreted this as "boredom" and decided that I should show Laura a new project.  I brought this up with Laura.  She agreed to try something new, but in her notebook that day she wrote "By the way, I am not board"(sic).  I now feel that she was confused about what had happened when she tried to use variables -- that what she needed was more simple projects using variables in procedures and subprocedures.  I had given Laura more ideas than she could absorb in classes 12-14, and this was the message she was giving me -- not boredom.

Instead of giving Laura an opportunity to play around with things she already knew, and to consolidate what she was learning about variables.  I launched her into a new project:  writing a program to produce Madlibs.  This was a learning experience for her.  She had to clarify her ideas about nouns, verbs, adjectives and adverbs and how they are used in English -- as well as to make up a simple story, and choose lists of words that would make the story funny.  On the other hand, it presented her with a whole new set of things to be confused about, as well as requiring a lot of precise typing.  Although Laura was able to understand the language aspects of the procedure, it is unclear what she understood about the programming required, which involved the use of OUTPUT, MAKE and a bit of list processing.  Laura was pleased when the project was completed -- but she hadn't been able to do much of the programming or understand how the procedures worked.

If I were continuing with Laura as a student now, I have a few ideas of how I would try to shape her experience to enhance her learning:
.indent 6

1. I would encourage her to continue explorations with turtle commands.  She still has a lot to resolve in the areas of left/right discrimination, analyzing sequences of steps to see their effect, and attention to detail in copying.

2. I would try to stress planning of simple projects like initials, encouraging more use of subprocedures.

3. I would go back to simple applications of variables, again with stress on planning -- what is supposed to change?  where does it belong in the procedure?  what name is chosen for the variable? etc.  Then there would be examples of the use of procedures with variables as subprocedures, in both recursive and non-recursive situations.  I do think that Laura was close to understanding these points -- but got presented with too much, too soon.

4.  One area which Laura did not really get into, which might excxite her as a designer, is repetition of a random set of commands.

5.  I would experiment with the use of an automatic drawing procedure like DRAW, so that Laura could experience success with some of her more elaborate designs.

.indent 0
Given Laura' avoidance of "cognitive risk"; her reluctance to reveal her confusions; and her desire to appear to "know" everything instantly, she would always be a difficult child to teach.  On the other hand, situations with more stress on ways she could plan and predict outcomes, and fewer sources of confusion introduced from outside, could possibly help Laura assimilate some of the problem solving skills which she is now avoiding.
