New things in LOGO versions greater than 340:

The disk error system has been revamped. The new format of
error messages from disk functions is:
<function name>: <error message>
In the case of the general file-not-found type of error message:
<function name>: <file name that failed> <error message>
Note that the file-not-found type of error message is generally
generated whenever the failing operation involved a file
name; the reson for failure might be something other than
file not found. The function name given is that of the LOGO
function that caused the error. On the floppy disk system, most
types of hardware disk errors now trap back properly to
the LOGO user. There are two types of hardware disk errors: the
type which simply causes an abort of the current function and
clobbers the channel, and the type that indicates that the diskette
file structure might have been clobbered and the disk should
be checked with SALV. The english text for the first is
"DISK ERROR" the second is "BAD DISK ERROR, CHECK DISK".
The french text for the new errors is not yet complete; some
of them just give the english text. The new error system is
not yet complete in another sense: while disk errors always
(I think) give a reasonable error message back to the user,
hardware disk errors can cause the file system to become
wedged in strange ways. I intend to debug this when I have a
machine to debug it on.

READ can now be done while defining a procedure. If the procedure
being defined is also defined in the file, the file definition
will be SKIPPED in the usual way. When the file has finished
being read, the user will be still defining the procdure he
was defining when the READ was executed.

The entire 2500 display system LOGO driver has been revamped.
LOGO now tries to keep track of snap space and display space,
as well as x and y coordinates. Thus, the commands XCOR, YCOR,
HEADING and HERE now work for the 2500 (sometimes). The (sometimes)
is due to the fact that, because of insufficient 2500/LOGO communication,
LOGO sometimes loses track of the turtle on the 2500. This
condition is known as the turtle being dizzy. The turtle becomes
dizzy due to MOVET or SPIN commands; also RUBDIS will make the turtle
dizzy. DISPLAY does NOT make the turtle dizzy, by virtue of the
fact that the displayed snap has no effect on the x, y, heading
or pen state. In order to implement this, the DISPLAY command
now represnets 6 2500 words if the pen is up and 7 if it is
down when the DISPLAY command is issued. Once the turtle is dizzy,
it remains dizzy until the next CLEARSCREEN command. Once the
turtle is dizzy LOGO no longer makes any attempt to figure
out where it is; this is equivelant to the old mode of
running the 2500, and is much faster than the new mode. The
turtle can be made permanently dizzy (to enter "old mode")
by doing DIZZY 1; DIZZY 0 will clear that state. Also note that
when the turtle is dizzy, DISPLAY is a 2 word command again,
just like old times. SNAP has also changed drastically; the old
effect of snap can be had with the command OSNAP. New SNAP does not
take an argument; rather, it returns a value. LOGO now keeps track
of the lenght of the current display list and snap area. When SNAP
is executed LOGO attemts to assign the new snap room under all of
the old snaps; if there is enough room it issues the proper SNAP
command to the 2500 and returns the address of the bottom of the area
it assigned. Note that old snaps never go away, unless the WIPECLEAN
command is issued (the name of this command may be changed). Internal
to LOGO 2500 snaps are just numbers; LOGO does not keep track which
snaps are contained in other snaps, or are displayed on the screen.

There is a new command .LPCNT which takes 0 or 1 arguments. Given 0
arguments it returns a number which is current line printer line
count; given 1 argument it sets the line count to the given value.
