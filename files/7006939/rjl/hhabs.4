L.CKSM=%0
L.A=%1
L.BC=%2
L.BY=%3
R4=%4
L.PTR=%5
SP=%6
PC=%7
R1=%1
R2=%2
LOAD=.
	.REPT 75
	.BYTE 351
	.ENDR
.=LOAD+75
.BYTE 75
L.DEV=DEVICE
L.LOAD:	WAITIN	;THIS VERSION KEEPS GOING AFTER LOADING FOR HABS, HALTS FOR STUFER
	BR L.LD1	;TO JUST LOAD START AT XXX500
	BR CLEAR	;TO CLEAR FIRST, START AT XXX502
L.LD1:	MOV PC,SP
	SUB #.-L.LOAD,SP	;DON'T CLOBBER OURSELVES WITH THE STACK
	MOV PC,L.PTR
	ADD #L.READ-.,L.PTR
;	CLR L.A
L.LD1B:	;MOV (PC)+,(SP)
;L.SR:	0			;SWITCH REGISTER
;	ROR @SP
;	BCS L.LD1C	;NEED RELOCATION
;	CLR @SP		;NO RELOACTE
;	BR L.LD2
;L.LD1C:	ASL @SP		;CHECK SWITCH REG FOR NON-ZERO
;	BNE L.LD2
;	MOV L.A,@SP
;;LOOK FOR BEG OF A BLOCK
L.LD2:	CLR L.CKSM
	JSR PC,@L.PTR
	DECB L.BY
	BEQ L.LD24
	CMP #65,L.BY	;IS IT A STOP CODE?
	BNE L.LD2	;NOPE
	HALT		;YES, STOP FOR A SEC
	BR L.LD2
L.LD24:	JSR PC,@L.PTR

	JSR PC,L.GWRD
	MOV R4,L.BC
	SUB #4,L.BC
	CMP #2,L.BC
	BEQ L.JMP
	JSR PC,L.GWRD
;	ADD @SP,R4	;ADD IN RELOCATE
	MOV R4,L.A

L.LD3:	JSR PC,@L.PTR
	BGE L.LD4
	TSTB L.CKSM
	BEQ L.LD2
L.BAD:	0
	BR L.LD2

L.LD4:	MOVB L.BY,(L.A)+
	BR L.LD3

L.READ:	MOV L.DEV,L.BY
	INCB @L.BY
L.R1:	TSTB @L.BY
	BPL L.R1
	MOVB 2(L.BY),L.BY
	ADD L.BY,L.CKSM
	BIC #177400,L.BY
	DEC L.BC
	RTS PC

L.GWRD:	MOV (SP)+,L.TMP
	JSR PC,@L.PTR
	MOV L.BY,R4
	JSR PC,@L.PTR
	SWAB L.BY
	BIS L.BY,R4
	MOV L.TMP,PC

L.JMP:	JSR PC,L.GWRD
	JSR PC,@L.PTR
	TSTB L.CKSM
	BNE L.BAD
	ASR R4
	BCC L.JMP1
	HALT
	BR L.LD1B
L.JMP1:	ASL R4
;	ADD @SP,R4
	JMP @R4
L.TMP:	.WORD 0

CLEAR1:	CLR -(R4)
	TST R4
	BNE CLEAR1
	BR L.LOAD

.=LOAD+324		;PUT THIS STUFF WHERE GOD INTENDED IT TO BE
			;THOUGH GOD KNOWS IF ITS NEEDED
CLEAR:
L.INIT:	MOV PC,R4
	SUB #.-L.LOAD,R4
	240
	240
	240
	JMP CLEAR1

BEGER:	MOV DEVICE,R1
LOOP:	MOV (PC)+,R2
	.BYTE BRNCH-LOAD-1
	.BYTE -<BRNCH-L.INIT+2/2>
	.=LOAD+374
BRNCH:	; BR BEGER
	.=.+2
DEVICE:	; 0
