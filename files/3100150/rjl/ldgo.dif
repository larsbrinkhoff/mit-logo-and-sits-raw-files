

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 1

LINE 3, PAGE 1
1)	;(C) COPYRIGHT,1970,BOLT BERANEK AND NEWMAN INC., CAMBRIDGE, MASS.
1)	
LINE 3, PAGE 1
2)	;(C) COPYRIGHT,1969,BOLT BERANEK AND NEWMAN INC., CAMBRIDGE, MASS.
2)	


LINE 10, PAGE 1
1)	BBN50==4
1)	TURTLE==10
1)	SAVBRK==20	;IF ON, SAVEUP THE STATE OF LOGO SO THAT "GO" PROCEEDS
1)	OFILE==40	;OLD STYLE FILES
1)	NFILE==100	;NEW STYLE FILES
1)	LEVELC==200
1)	CONFIG==TEN50!LEVELC!BBN50!SAVBRK!NFILE
1)	
1)	
1)	
1)	ERPDLL==20	;LENGTH OF ERROR PDL, NEEDS TO BE LONG ENOUGH TO
1)			; AVOID PDL OVERFLOW TRAP
1)	
LINE 10, PAGE 1
2)	CONFIG==TENEX
2)	


LINE 44, PAGE 1
1)	UPFF==4		;COMEXR CALLED FROM RETURN CODE, NOT FROM COMEX
1)	TIF==10
1)	BREAKF==20
1)	TOF==40		;TYPE OR PRINT IN PROGRESS
1)	GOF==100	;USER TYPED  DIRECT GO
LINE 33, PAGE 1
2)	UPFF==4		;DENOTES COMEXR CALLED FROM USER DEFINED COMMAND
2)	TIF==10
2)	BREAKF==20
2)	ERRORF==40	;CALLING UPROD FROM ERROR PROCESSOR
2)	GOF==100	;USER TYPED  DIRECT GO


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 2

LINE 55, PAGE 1
1)	SAVEF==20000	;SAVE IN PROGRESS, FOR ALTERNATE FORMS OF TYPEOUT
1)	STEPF==40000	;1 IF THERE IS A COMPILED STEP AT SAVED BREAK
1)	^L
LINE 44, PAGE 1
2)	SAVEF==40000	;SAVE IN PROGRESS, FOR ALTERNATE FORMS OF TYPEOUT
2)	^L


LINE 9, PAGE 2
1)	FSYMF==20	;0 IF FIRST ELEMENT OF LINE BEING COMPILED,USED W NNUMF
1)	NNUMF==40	;NON-NUMERIC INPUT
LINE 9, PAGE 2
2)	FSYMF==20	;0 IF FIRST ELEMENT OF LINE BEING SCANNED,USED W NNUMF
2)	NNUMF==40	;NON-NUMERIC INPUT


LINE 36, PAGE 2
1)	;ALSO IN THE LEFT HALF OF COMPILED ELEMENT CAN BE STRING BITS
1)	
LINE 36, PAGE 2
2)	;ALSO IN THE LEFT HALF OF COMPILED ELEMENT ACAN BE STRING POINTERS
2)	


LINE 54, PAGE 2
1)	OPDEF PJRST [254B8]
1)	^L
LINE 54, PAGE 2
2)	^L


LINE 13, PAGE 3
1)	FOR TENEX,< TT WS,2000,<[EXP W,WSB,WSD,UUOACS+W,0]>>
1)	FOR TEN50,<TT WS,2000,<[EXP W,WSB,WSD,UUOACS+W,BUFLOC,BUFLOC+1,FPTR,0>>>
1)	;THIS ONE MUST ALWAYS BE LAST SO MEM TRAP CAN BE USED AS END TEST
1)	DEFINE POINTR
LINE 13, PAGE 3
2)	 TT WS,2000,<[EXP WSB,WSD,UUOACS+W,0]>	;THIS ONE MUST ALWAYS BE LAST SO MEM TRAP CAN BE USED AS END TEST
2)	>
2)	DEFINE POINTR


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 3

LINE 25, PAGE 3
1)	 MM WS,B>
1)	
1)	DEFINE U(A1)<UU(A1,1)>
LINE 24, PAGE 3
2)	 MM WS,B
2)	>
2)	DEFINE U(A1)<UU(A1,1)>


LINE 35, PAGE 3
1)	DEFINE FOR (WHO,WHAT)
1)	<IFN CONFIG&WHO, <WHAT>>
1)	
1)	DEFINE NOTFOR (WHO,WHAT)
1)	<IFE CONFIG&WHO, <WHAT>>
1)	
1)	DEFINE UNDEX (AC)
1)	< ADD	AC,[XWD 070000,0]
1)	  CAIG	AC,0
1)	  SUB	AC,[XWD 430000,1]>
1)	^L
LINE 34, PAGE 3
2)	DEFINE FOR (WHAT)
2)	<IFE CONFIG-WHAT>
2)	
2)	^L


LINE 6, PAGE 4
1)	UU UUOTRP,2;	;Z
1)			;JRST DOUUO
LINE 6, PAGE 4
2)	UU UUOTRP,2	;Z
2)			;JRST DOUUO


LINE 11, PAGE 4
1)	U PTOP;	;ORDER OF THE NEXT THREE IS EXTREMELY IMPORTANT, MUST BE
1)	U CTOP;	; THE SAME AS THEIR CORRESPONDING TABLES IN TT
1)	U DTOP
1)	U WTOP
1)	U CDBOT;	;BASE OF ALL DIRECT LINES
1)	U CBOT;		;BASE OF DIRECT LINE
1)	U RANNO;	;STUFF TO COMPUTE PSEUDO-RANDOM DIGIT
1)	
1)	FOR TENEX,<	UU JFNTAB,10;	;FOR OPENNING FILES
1)			UU CHNTAB,^D17>	;PSEUDO-INTERRUPT CHANNEL DISPATCHES
1)	;OTHER GOOD FILE STUFFî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 41)	
1)	U CHIN;		;INSTRUCTION TO EXECUTE TO READ A CHARACTER
1)	U CHOUT;	;INSTRUCTION TO EXECUTE TO WRITE A CHARACTER
1)	U INFILE;
1)	FOR OFILE,<U OUTFILE>
1)	FOR NFILE,<
1)	U FPTR;		;BYTE PTR INTO A BUFFER (ALWAYS ASSOCIATED WITH LBUF+1)
1)	U CCOUNT;	;COUNT OF CHARS REMAINING UNUSED IN LBUF+1
1)	U TANDD;	;TIME AND DATE OF STARTUP
1)	U FILEAD;	;FIRST BLOCK OF ENTRY BEING WRITTEN
1)	U FILECT;	;COUNT OF BLOCKS USED IN WRITING THIS FILE
1)	U LABS;		;WHERE PTR TO TOP OF FREE SPACE IS STORED DURING OPERATION
1)	U LDIRNO;	;BLOCK NUMBER OF PREVIOUS DIRECTORY
1)	U LDIRL;	;NUMBER OF ENTRIES IN LDIRNO
1)	
1)	;DATA FOR EACH PHYSICAL BUFFER
1)	
1)	UU BUFLOC,2;	;LOCATION IN CORE
1)	UU PBLOCK,2;	;LOGICAL BLOCK NUMBER IN THE BUFFER
1)	UU CHANGE,2;	;0 IF NOT ALTERED
1)	
1)	;DATA FOR EACH LOGICAL BUFFER
1)	
1)	UU LBLOCK,2;	;LOGICAL BLOCK NUMBER IN THIS LOGICAL BUFFER
1)	UU LBUF,2;	;PHYSICAL BUFFER USED BY LOG BUFFER (0 OR 1)
1)	
1)	FOR TEN50,<UU LUKDAT,4
1)	U FILSIZ;	;SIZE IN DISC BLOCKS OF FILE
1)	UU BUFADR,2;	;STRING POINTER LOCATIONS OF FILE BUFFERS
1)	>>
1)	^L
1)	
LINE 11, PAGE 4
2)	U PTOP	;ORDER OF THE NEXT THREE IS EXTREMELY IMPORTANT, MUST BE
2)	U CTOP	; THE SAME AS THEIR CORRESPONDING TABLES IN TT
2)	U DTOP
2)	U WTOP
2)	U CDBOT		;BASE OF ALL DIRECT LINES
2)	U RANNO		;STUFF TO COMPUTE PSEUDO-RANDOM DIGIT
2)	
2)	U INFILE	;THESE MAY OR MAY NOT NEED TO BE INITIALIZED NON-ZERO
2)	U OUTFILE	; DEPENDING ON THE SYSTEM
2)	FOR TENEX,<	UU JFNTAB,10	;FOR OPENNING FILES
2)			UU CHNTAB,^D17>	;PSEUDO-INTERRUPT CHANNEL DISPATCHES
2)	


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 5

LINE 6, PAGE 5
1)	U CHARNO;	;THESE FOR INPUT SECTION
1)	U BCHAR
1)	U TRACEM;	;LIKE BCHAR BUT ONLY FOR TRACE OUTPUT
1)	U SCOUNT
1)	U CHGNO;	;XWD SEQNO,CBOT; FOR CURRENT LINE. REPLACE WHEN COMING BACK TO THAT LEVEL
1)	U LINENO
1)	U PRODNM;	;NAME OF PROCEDURE IN PROGRESS
1)	U TRUTH
1)	U CPP;		;POINTER INTO COMPILED LINE
1)	U SPP;		;CONTENTS OF S AND P AT START OF LINE
1)	U LINBOT
1)	U SRCBOT
1)	U NEWBOT
1)	U NXLINE;	;PTR TO NEXT LINE IN CURRENT PROCEDURE
1)	U THISPR;	;MACHINE PROCEDURE LAST IN, PTR TO 2ND ENTRY IN CMPT
1)	U TOPROD;	;NAME OF PROCEDURE BEING DEFINED
1)	U BRKTEM;	;TEM STORAGE FOR BREAKY ROUTINE
1)	FOR TENEX,<U BRKTEB>	;MORE TEM FOR BREAK KEY
1)	U SEQNO;	;VERSION NUMBER OF LAST LINE INPUTTED OR EDITED
1)	U RADIX;	;RADIX FOR CURRENT NUMBER CONVERSION
1)	U GODEPT;	;THE NUMBER OF GO'S IN THE STACK
1)	U BSP;		;SPP ASSOCIATED WITH GODEPTH, STACKS AT LAST SAVED BREAK
1)	U GCTEM;	;TEM STORAGE FOR GC AND ALLOCATOR
1)	UU UUOACS,20
1)	UU ERRPDL,ERPDLL;	;FIXED PUSHDOWN FOR ERROR HANDLER
1)	FOR TENEX,<	UU LEVLTB,3>	;FOR PSI SYSTEM
LINE 26, PAGE 4
2)	U CHARNO	;THESE FOR INPUT SECTION
2)	U BCHAR
2)	U TRACEM	;LIKE BCHAR BUT ONLY FOR TRACE OUTPUT
2)	U SCOUNT
2)	U CHGNO		;XWD SEQNO,CBOT; FOR CURRENT LINE. REPLACE WHEN COMING BACK TO THAT LEVEL
2)	U LINENO
2)	U PRODNM	;NAME OF PROCEDURE IN PROGRESS
2)	U TRUTH
2)	U CPP		;POINTER INTO COMPILED LINE
2)	U SSP		;CONTENTS OF S AT START OF LINE
2)	U SPP		;     "   "  P
2)			;ALSO DTOP ABOVE
2)	U LINBOT
2)	U SRCBOT
2)	U NEWBOT
2)	U NXLINE	;PTR TO NEXT LINE IN CURRENT PROCEDURE
2)	U THISPR	;MACHINE PROCEDURE LAST IN, PTR TO 2ND ENTRY IN CMPT
2)	U CBOT		;BASE OF DIRECT LINE
2)	U TOPROD	;NAME OF PROCEDURE BEING DEFINED
2)	U BRKTEM	;TEM STORAGE FOR BREAKY ROUTINE
2)	U SEQNO		;VERSION NUMBER OF LAST LINE INPUTTED OR EDITEDî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 62)	U RADIX		;RADIX FOR CURRENT NUMBER CONVERSION
2)	U GODEPT	;THE NUMBER OF GO'S IN THE STACK
2)	U GCTEM		;TEM STORAGE FOR GC AND ALLOCATOR
2)	UU UUOACS,20
2)	FOR TENEX,<	UU LEVLTB,3>	;FOR PSI SYSTEM


LINE 18, PAGE 6
1)		HLRZ	A,JOBSA		;INITIALIZE THE LOW SEG
1)		HRLI	A,(A)
LINE 18, PAGE 5
2)		HRRZ	A,JOBFF	;INITIALIZE THE LOW SEG
2)		HRLI	A,(A)


LINE 23, PAGE 6
1)		BLT	A,(B) >		;CLEAR FROM JOBFF TO TOP OF ASSIGNED CORE
1)	
1)	FOR TENEX,<
1)		RESET
1)		MOVE	A,[SIXBIT /LOGO/]
1)		SETNM				;SET UP NAME FOR SYSTAT
1)		MOVE	A,[XWD 20000,20001]
1)		SETZM	20000
1)		BLT	A,21777 >
1)	
LINE 23, PAGE 5
2)		BLT	A,(B)	;CLEAR FROM JOBFF TO TOP OF ASSIGNED CORE
2)	>
2)	FOR TENEX,<
2)		MOVE	A,[XWD 20000,20001]
2)		SETZM	20000
2)		BLT	A,21777
2)	>
2)	


LINE 42, PAGE 6
1)	^L
1)	FOR TEN50,<	HLRZ	B,JOBSA>	;ALWAYS THE FIRST FREE LOCATION
1)	FOR TENEX,<	MOVEI	B,20000>	;ENOUGH ROOM FOR CODE AND SYMBOLS
1)		HRRZI	A,RP
1)	INILU:	HLRZ	C,ALOCTB-RP(A)	;POINTER TO LIST OF CELLS TO BE SET UP
1)	
1)		HRRZM	B,(A)		;RP ETC.
1)		JUMPE	C,INILUR	;NO SUBSIDIARY LIST
1)	
1)		MOVE	E,(C)
1)		JUMPE	E,INILUR	;END OF SUBSIDIARY LIST
1)		HRRM	B,(E)		;NO, RPA ETC.
1)		AOJA	C,.-3		;NEXT IN THIS LISTî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 71)	
1)	INILUR:	ADD	B,ALOCTB-RP(A)	;HOW MUCH TO GIVE TO THIS SPACE
1)		CAIE	A,WS
1)		AOJA	A,INILU		;MORE SPACES TO GO
1)	
1)		MOVEI	A,0
1)		JSP	C,SETPDL
1)	
1)	FOR TEN50,<
1)		HRRZ	A,JOBREL
1)		CAMGE	A,@WTOP	;IS WTOP INSIDE CURRENT ALLOCATION?
1)		EXPAND	WS	;NO, GET A K SO WS WILL FIT
1)		PUSHJ	P,SETTTM	;SET TELETYPE MODE TO BBN'S TELCOMP MODE
1)		MOVEI	A,220000
1)		CALL	A,[SIXBIT /APRENB/] >	;REQUEST PDL AND ILL MEM REF TRAPS
1)	
1)	FOR TENEX,<
1)		MOVEI	A,@WTOP
1)		JSP	E,SETMEM >	;LOCK PAGE ABOVE ABOVE ADDRESS
1)	
LINE 40, PAGE 5
2)	
2)	FOR TEN50,<	HLRZ	A,JOBSA>	;ALWAYS THE FIRST FREE LOCATION
2)	FOR TENEX,<	MOVEI	A,20000>	;ENOUGH ROOM FOR CODE AND SYMBOLS
2)		HRRZI	B,ALOCTB
2)		HRRZI	C,RP
2)	
2)		HRRZM	A,(C)
2)		ADD	A,(B)
2)		ADDI	B,1
2)		CAIE	C,WS
2)		AOJA	C,.-4	;SET UP ALL INITIAL ALLOCATIONS
2)	
2)	^L
2)		MOVE	A,RP	;SET UP RIGHT HALVES OF SPACE POINTERS
2)		HRRM	A,RPA
2)		MOVE	A,PS
2)		HRRM	A,PSA
2)		HRRM	A,PSD
2)		HRRM	A,PSM
2)		MOVE	A,CS
2)		HRRM	A,CSA
2)		HRRM	A,CSD
2)		HRRM	A,CSM
2)		MOVE	W,WS
2)		HRRM	W,WSB
2)		HRRM	W,WSD
2)		MOVE	P,PP
2)	


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 8

LINE 37, PAGE 7
1)		HRRZI	A,FLUSHM
1)		HRRM	A,JOBSA	;DON'T REDO THE INITIAL STORAGE ALLOCATION
1)	
1)		MOVEI	B,[ASCIZ /
LINE 20, PAGE 6
2)		HRRZI	A,RESET
2)		HRRM	A,JOBSA	;DON'T REDO THE INITIAL STORAGE ALLOCATION
2)	FOR TEN50,<
2)		HRRZ	A,JOBREL
2)		CAMGE	A,@WTOP	;IS WTOP INSIDE CURRENT ALLOCATION?
2)		EXPAND	WS	;NO, GET A K SO WS WILL FIT
2)		PUSHJ	P,SETTTM	;SET TELETYPE MODE TO BBN'S TELCOMP MODE
2)		MOVEI	A,220000
2)		CALL	A,[SIXBIT /APRENB/]	;REQUEST PDL AND ILL MEM REF TRAPS
2)	>
2)	FOR TENEX,<
2)		MOVEI	A,@WTOP
2)		JSP	E,SETMEM	;LOCK PAGE ABOVE ABOVE ADDRESS
2)	>
2)		MOVEI	B,[ASCIZ /


LINE 2, PAGE 8
1)	RESET:	SETZM	TRACEM	;TRACE MARGIN 
1)	
1)	FOR TEN50,<	PUSHJ	P,SETTTM	;ENTER TELCOMP MODE
LINE 2, PAGE 7
2)	RESET:	MOVE	P,PP
2)		SUB	P,PP+1
2)		HRLOS	P
2)		HRR	P,PP
2)		SUBI	P,1	;DON'T WASTE ONE ON PROCEDURE PUSHDOWN
2)		MOVE	S,SP
2)		SUB	S,SP+1
2)		HRLOS	S
2)		ADD	S,SP
2)		SETZB	F,PRODNM
2)		SETZM	GODEPTH
2)		MOVE	A,CDBOT		;MAKE THE BASE OF ALL DIRECT LINES
2)		MOVEM	A,CTOP		;THE TOP OF ALL COMPILED LINES AND
2)		MOVEM	A,CBOT		;BASE OF CURRENT DIRECT LINE
2)		SETZM	TRACEM	;TRACE MARGIN 
2)		HRRZ	W,WS	;W INDEXES TO BASE OF WORK SPACE
2)		MOVEI	B,2
2)		MOVEM	B,DTOP	;FLUSH ALL DUMMIES
2)	FOR TEN50,<	PUSHJ	P,SETTTM	;ENTER TELCOMP MODE


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 9

LINE 27, PAGE 8
1)		SFMOD >			;SET THEM
1)	
1)	
1)		SQUEZE			;TAKE OUT ANY EXTRA ALLOCATION
1)	^L
1)	MAINL:	TLZ	F,STEPF
1)		MOVEI	B,[ASCIZ /_/]
1)		SKIPE	TOPROD	;ARE WE DEFINING A PROCEDURE NOW?
1)		MOVEI	B,[BYTE (7) 76]	;YES, ASCIZ RT BRACKET
1)		PUSHJ	P,TIS
1)		 JRST	MAINL
1)	MAINL1:	PUSHJ	P,COMPIL
1)		 JRST	MAINL	;GOT A STORED LINE
1)		PUSHJ	P,EXECUT
1)		JRST	MAINL
1)	
1)	
1)	DOUUO:	MOVEM	17,UUOACS+17
LINE 43, PAGE 7
2)		SFMOD			;SET THEM
2)	>
2)	^L
2)	MAINL:	MOVEI	B,[ASCIZ /_/]
2)		SKIPE	TOPROD	;ARE WE DEFINING A PROCEDURE NOW?
2)		MOVEI	B,[ASCIZ />/]	;YES
2)		PUSHJ	P,TIS
2)		 JRST	MAINL
2)		PUSHJ	P,COMPIL
2)		 JRST	MAINL	;GOT A STORED LINE
2)		PUSHJ	P,EXECUT
2)		JRST	MAINL
2)	^L
2)	DOUUO:	MOVEM	17,UUOACS+17


LINE 29, PAGE 9
1)	^L
1)	FOR TEN50,<
1)	CALDDT:
1)	FOR BBN50,<MOVEI A,20000	;LEAVE TELCOMP MODE IF IN IT
1)		TTCALL	6,A
1)		TLZ	A,600000
1)		TTCALL	7,A >
1)		HRRZ	A,JOBDDT
LINE 17, PAGE 9
2)	
2)	FOR TEN50,<
2)	CALDDT:	MOVEI	A,20000î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 102)		TTCALL	6,A
2)		TLZ	A,600000
2)		TTCALL	7,A	;LEAVE TELCOMP MODE
2)		HRRZ	A,JOBDDT


LINE 14, PAGE 10
1)	SETTTM:
1)	FOR BBN50,<	MOVEI	A,20000
1)		TTCALL	6,A
1)		TLO	A,600000
1)		TTCALL	7,A >
1)		POPJ	P,
LINE 29, PAGE 9
2)	SETTTM:	MOVEI	A,20000	;SUBROUTINE TO SET TELCOMP TTY MODE
2)		TTCALL	6,A
2)		TLO	A,600000
2)		TTCALL	7,A
2)		POPJ	P,


LINE 26, PAGE 10
1)		JRST	2,@JOBOPC >
1)	
1)	FOR TENEX,<
1)	BREAKY:	MOVEM	A,BRKTEM
1)		MOVEM	B,BRKTEB
1)		HRLZI	A,400000	;DENOTE THIS FORK
1)		MOVE	B,A		;DENOTE INTERRUPT CHANNEL 0
1)		DIC			;DEACTIVATE BREAK KEY
1)		MOVE	B,BRKTEB
1)		MOVEI	A,100
LINE 40, PAGE 9
2)		JRST	2,@JOBOPC
2)	>
2)	FOR TENEX,<
2)	BREAKY:	MOVEM	A,BRKTEM
2)		MOVEI	A,100


LINE 43, PAGE 10
1)		JRST	2,@LEVLTB	;RETURN TO STOPPED PROCESS WITHOUT DEBRK
1)	CALDDT:	PUSHJ	P,770000	;FOR NOW, ASSUME RESIDENT DDT
1)		JRST	COMEX >
1)	^L
1)	COMPIL:	TRZ	F,STORED
1)		MOVE	A,CTOP
1)		MOVEM	A,CBOT
1)	CMCOMP:	TRZ	F,FSYMF		;ENTER HERE FROM CMAKE
1)		POP	S,L
1)		MOVE	M,UA		;IF THE DEPTH OF ABBREVIATION EXPANSIONî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 111)		SUB	M,UA+1		;IS GREATER THAN THE NUMBER OF ABBS
1)		LSH	M,-1		;THEN THERE IS A LOOP IN ABB DEFINITION
1)		HRLZI	M,-2(M)		;-MAX NO OF ABBREVIATIONS,,0
1)	COMPAB:	HRLI	L,10700+W
LINE 52, PAGE 9
2)		DEBRK			;GOT HERE FROM PSI, NOT TTY
2)	
2)	CALDDT:	PUSHJ	P,770000	;FOR NOW, ASSUME RESIDENT DDT
2)		JRST	COMEX
2)	>
2)	^L
2)	COMPIL:	TRZ	F,STORED
2)		TRZ	F,FSYMF		;ENTER HERE FROM CMAKE
2)		POP	S,L
2)		PUSH	P,CTOP
2)		MOVEI	M,0
2)	COMPAB:	HRLI	L,10700+W


LINE 15, PAGE 11
1)		SETZB	N,SCOUNT	;CLEAR TYPE OF SYMBOL (N) AND CHAR COUNT
1)		PUSHJ	P,NEWSTR
LINE 11, PAGE 10
2)		SETZB	N,SCOUNT	;CLEAR TYPE OF SYMBOL (N) AAND CHAR COUNT
2)		PUSHJ	P,NEWSTR


LINE 15, PAGE 12
1)		AOBJN	M,COMPAB	;WE ARE NOW ONE LEVEL DEEPER IN ABBREVS
1)		ERROR	ABBER1		;LOOP IN ABBREVIATION DEFINITION
1)	
LINE 15, PAGE 11
2)		AOJA	M,COMPAB	;WE ARE NOW ONE LEVEL DEEPER IN ABBREVS
2)	


LINE 29, PAGE 12
1)		AOBJN	M,GNS
1)		ERROR	IOPERR		;SYSTEM ABB MUST TERMINATE THE LOOP
1)	
1)	
1)	ABBJ:	TRNN	M,-1	;TOP LEVEL ABBREVIATION?
1)		JRST	CMPLA	;YES, DONE WITH WHOLE INPUT, ADD TERMINATOR
1)		POP	S,LINBOT	;NOT TOP LEVEL
1)		POP	P,L
1)		ADD	L,LINBOT
1)		SUB	M,[XWD 1,1]	;UP ONE LEVEL
1)		JRST	GNS1	;CONTINUE WITH PREVIOUS INPUT STRING
1)	
1)	CMPLA:	PUSHJ	P,CSTORE
1)		TRO	F,FSYMF	;NO LONGER FIRST ELEMENTî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 121)		JUMPN	N,GNS
1)	CMPEND:	TRNE	F,MAKEF
1)		POPJ	P,
1)		TRZE	F,STORED
1)		JRST	TOLINE
1)		MOVE	A,CBOT
1)		MOVEM	A,CPP	;WILL START EXECUTING HERE
1)		SUB	A,CDBOT	;MAKE IT RELATIVE TO BASE OF DIRECT LINES
1)		EXCH	A,0(P)	;PUT IT ON THE STACK
1)		TLO	F,STEPF	;NOW HAVE A COMPILED STEP
1)		JRST	1(A)	;R2 TO DENOTE IT NEEDS EXECUTION
LINE 28, PAGE 11
2)		AOJA	M,GNS
2)	
2)	
2)	ABBJ:	JUMPE	M,CMPLA	;TOP LEVEL,DONE WITH WHOLE INPUT,ADD TERMINATOR
2)		POP	S,LINBOT	;NOT TOP LEVEL
2)		POP	P,L
2)		ADD	L,LINBOT
2)		SOJA	M,GNS1	;UP A LEVEL
2)	
2)	CMPLA:	PUSHJ	P,CSTORE
2)		TRO	F,FSYMF	;NO LONGER FIRST ELEMENT
2)		JUMPE	N,CMPEND
2)		TLNN	N,COMMTF
2)		JRST	GNS
2)		SETZ	N,
2)		JRST	CMPLA	;FOR NOW, COMMENT IMMEDIATELY PRECEDES EOL
2)	CMPEND:	TRNE	F,MAKEF
2)		JRST	APOPJ
2)		TRZE	F,STORED
2)		JRST	TOLINE
2)		POP	P,A
2)		MOVEM	A,CPP	;WILL START EXECUTING HERE
2)		MOVEM	A,CBOT	;REMEMBER FOR POSTERITY
2)		SUB	A,CDBOT	;MAKE IT RELATIVE TO BASE OF DIRECT LINES
2)		EXCH	A,0(P)	;PUT IT ON THE STACK
2)		JRST	1(A)	;R2 TO DENOTE IT NEEDS EXECUTION


LINE 52, PAGE 13
1)	LINE 52, PAGE 12
2)	
2)	

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 13

LINE 26, PAGE 15
1)		PUSHJ	P,CMCOMP
1)		SOS	A,CTOP
LINE 26, PAGE 14
2)		PUSHJ	P,COMPIL+1
2)		SOS	A,CTOP


LINE 33, PAGE 15
1)		PUSHJ	P,CMCOMP
1)		TRZ	F,MAKEF
LINE 33, PAGE 14
2)		PUSHJ	P,COMPIL+1
2)		TRZ	F,MAKEF


LINE 2, PAGE 16
1)		TLZE	F,BREAKF
1)		ERROR	BREAK
1)		PUSH	P,[EXP [EXP [ERROR NOCMD]]]
1)		MOVE	A,CPP
LINE 2, PAGE 15
2)		HRRZI	A,(S)
2)		SUB	A,SP
2)		MOVEM	A,SSP
2)		HRRZI	A,(P)
2)		SUB	A,PP
2)		MOVEM	A,SPP
2)	EXECU0:	PUSH	P,[EXP [EXP [ERROR NOCMD]]]
2)		TLZE	F,BREAKF
2)		ERROR	BREAK
2)		MOVE	A,CPP


LINE 33, PAGE 17
1)	EXIT:	ERROR	XITERR	;USER DEFINED ERROR MESSAGE.
1)				;  USEFUL IN HOARDED PROCEDURES
1)	^L
LINE 33, PAGE 16
2)	EXIT:	ERROR	XITERR
2)	^L


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 14

LINE 6, PAGE 18
1)	COMEXU:	TLOA	F,UPFF	;DENOTE CALLED BY USER COMMAND
1)	COMEXR:	TLZ	F,UPFF	;DENOTE ROUTINE CALLED BY MACHINE COMMAND
1)		POP	P,A	;THE RETURN TO OPEX
1)	COMXRA:	POP	P,A
1)		CAIN	A,[EXP [ERROR NOCMD]]
1)		JRST	COMXRB	;PRENS MATCH AND ONLY ONE COMMAND ON LINE
LINE 6, PAGE 17
2)	COMEXU:	TLOA	F,UPFF		;A USER DEFINED COMMAND
2)	COMEXR:	TLZ	F,UPFF		;A SYSTEM COMMAND
2)		POP	P,A	;THE RETURN TO OPEX
2)	COMXRA:	POP	P,A
2)		CAMN	A,[EXP [ERROR NOCMD]]
2)		JRST	COMXRB	;PRENS MATCH AND ONLY ONE COMMAND ON LINE


LINE 27, PAGE 18
1)		ERROR	PRNER1		;M .LT. 0 _ MORE ) THAN (
1)	
1)	COMXRD:	JUMPN	M,[ERROR PRNER2]	;PRENS DON'T COUNT OUT
1)		AOS	A,CPP
LINE 27, PAGE 17
2)		ERROR	PRENR1		;M<0 _ MORE ) THAN (
2)	
2)	COMXRD:	JUMPN	M,[ERROR PRENR2]	;PRENS DON'T COUNT OUT
2)		AOS	A,CPP


LINE 48, PAGE 18
1)		JRST	EXECUTE
1)	^L
LINE 48, PAGE 17
2)		JRST	EXECU0
2)	^L


LINE 40, PAGE 19
1)	^L
1)	
1)	THING:	MOVE	A,(S)
1)	THING1:	MOVE	B,DP
LINE 40, PAGE 18
2)	^LTHING:	MOVE	A,(S)
2)	THING1:	MOVE	B,DP


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 15

LINE 27, PAGE 24
1)		MOVE	E,A	;SAVE POINTER TO NEXT WORD
1)	BTLSN4:	ILDB	C,A
LINE 27, PAGE 23
2)	BTLSN3:	MOVE	E,A	;SAVE POINTER TO NEXT WORD
2)	BTLSN4:	ILDB	C,A


LINE 15, PAGE 25
1)		PUSHJ	P,NEWSTR	;SET UP B AND NEWBOT
1)		PUSHJ	P,NEWSR1	;SET UP A TO -1(S) AND SRCBOT
LINE 15, PAGE 24
2)	WORD1:	PUSHJ	P,NEWSTR	;SET UP B AND NEWBOT
2)		PUSHJ	P,NEWSR1	;SET UP A TO -1(S) AND SRCBOT


LINE 32, PAGE 27
1)	
1)	RANDOM:	MOVE	C,[EXP 1000003]
1)		IMULB	C,RANNO
1)		TLZ	C,400000	;MAKE IT POSITIVE
1)		MULI	C,12
LINE 32, PAGE 26
2)	;THIS RANDOM NUMBER GENERATOR IS FROM PDP-9 KALEIDASCOPE
2)	
2)	RANDOM:	MOVE	C,[EXP 1000003]
2)		IMULB	C,RANNO
2)		MULI	C,12


LINE 30, PAGE 30
1)	SUM7:	HRLI	A,350700+W	;SKIPPING OVER FIRST CHAR
1)		AOJA	A,.+2
LINE 30, PAGE 29
2)		HRLI	A,350700+W	;SKIPPING OVER FIRST CHAR
2)		AOJA	A,.+2


LINE 8, PAGE 31
1)		MOVE	C,@A
LINE 8, PAGE 30
2)		MOVEI	G,2(D)
2)		MOVE	C,@A
2)		TRNE	C,77400	;IS NEXT TO LAST CHAR EOM?
2)		TRNN	F,TF	;SKIP IF BOTH PENULT NON-ZERO AND ADDING A CHAR
2)		MOVEI	G,-1(G)
2)		HRRZI	C,@WTOP
2)		ADDI	C,(G)
2)		CAMLE	C,JOBRELî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 162)		 EXPAND	WS
2)		MOVE	C,@A


LINE 4, PAGE 32
1)		TRO	F,TF	;SET CARRY INTO LOW ORDER DIGIT
LINE 4, PAGE 31
2)		PUSHJ	P,NEWSTR
2)		TRO	F,TF	;SET CARRY INTO LOW ORDER DIGIT


LINE 16, PAGE 32
1)		DPB	C,A
1)		ILDB	C,A
1)		JUMPN	C,NINECM
1)	
1)		TRNE	F,PMF		;NEGATIVE RESULT?
1)		POPJ	P,		;NO
1)		UNDEX	A		;DECREMENT THE BYTE POINTER IN A
1)		MOVEI	D,"-"
1)		DPB	D,A
1)		POPJ	P,
1)	^L
LINE 17, PAGE 31
2)		IDPB	C,B
2)		ILDB	C,A
2)		JUMPN	C,NINECM
2)	
2)		MOVEI	D,"-"
2)		TRNN	F,PMF
2)		DPB	D,B
2)		JRST	ENDSTP
2)	^L


LINE 30, PAGE 33
1)	SUMMR3:	UNDEX	L
1)		LDB	C,L	;GET PREVIOUS CHAR, (WAS 0 OR 9)
1)		CAIN	C,"9"
LINE 30, PAGE 32
2)	SUMMR3:	SUBI	L,1	;UNDEX PTR IN L
2)		REPEAT 3,<IBP L>
2)		ILDB	C,L	;GET PREVIOUS CHAR, (WAS 0 OR 9)
2)		CAIN	C,"9"


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 17

LINE 1, PAGE 34
1)	PRODUCT:	MOVE	A,(S)	;ARE BOTH ARGS NUMBERS?
1)		PUSHJ	P,NUMBRQ
1)		 ERROR	SUMERR
1)		MOVE	A,-1(S)
1)		PUSHJ	P,NUMBRQ
1)		 ERROR	SUMERR
1)		MOVE	A,@(S)		;LENGTH OF ONE INPUT
1)		CAIG	A,@-1(S)	;.GTR. THAN OTHER INPUT?
1)		JRST	.+4
1)		MOVE	A,(S)
1)		EXCH	A,-1(S)		;COMMUTATIVE LAW OF MULTIPLICATION
1)		MOVEM	A,(S)		;NOW FIRST ARG -1(S), .GE. SECOND
1)		PUSHJ	P,REVERS	;REVERSE SHORTER STRING
1)		CAIE	D,"-"		;SIGN OF IT
1)		TRZA	F,PMF		;IS +
1)		TRO	F,PMF		;IS -
1)		MOVE	A,(S)
1)		EXCH	A,-1(S)
1)		MOVEM	A,(S)		;EXCHANGE AGAIN, 0(S) NOW .GE.
1)		PUSHJ	P,REVERS	;REVERSE THE LONGER INPUT
1)		CAIN	D,"-"		;SIGN OF OTHER
1)		TRC	F,PMF		;IF - COMPLEMENT SIGN OF RESULT
1)		MOVE	L,-1(S)		;THE SHORTER ONE
1)		HRLI	L,010700+W
1)		MOVEM	L,LINBOT
1)		PUSHJ	P,NEWSTR	;PLACE FOR PRODUCT REVERSED
1)		PUSHJ	P,NEWSRC	;MULTIPLICAND
1)	^L
1)	PRODLA:	MOVE	B,L
1)		ADD	B,NEWBOT
1)		SUB	B,LINBOT	;LINE UP PARTIAL RESULT
1)		ILDB	C,L		;NEXT CHAR FROM MULTIPLIER
1)		JUMPE	C,PRDED1	;END OF MULTIPLIER
1)		SUBI	C,"0"
1)		JUMPE	C,PDZERO	;BRING DOWN A 0
1)		MOVE	A,SRCBOT	;MULTIPLICAND AGAIN
1)		SETZ	D,		;CARRY FROM LAST DIGIT
1)	
1)	PRODLB:	ILDB	E,A		;NEXT CHAR IN MULTIPLICAND
1)		JUMPE	E,PRDED2	;ICAND DONE, PROPAGATE CARRY
1)		SUBI	E,"0"
1)		IMULI	E,(C)		;DIG*DIG, .LE. 81
1)		PUSHJ	P,PCARRY	;ADD IN THE CARRY ETC
1)		JRST	PRODLB
1)	
1)	PCARRY:	ILDB	H,B		;CURRENT PARTIAL RESULT, THIS PLACE
1)		CAIE	H,0		;PAST END OF PREVIOUS PARTIAL RESULT?
1)		SUBI	H,"0"		;NO,REMOVE CHAR OFFSETî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 181)		ADDI	D,(H)
1)		ADDI	D,(E)		;MAX IN D IS 81+9+9=99
1)		IDIVI	D,12		;CARRY_D
1)		ADDI	E,"0"		;PARTIAL RESLUT INTO E
1)		DPB	E,B		;BACK INTO PRODUCT
1)		POPJ	P,
1)	
1)	PRDED2:	JUMPE	D,PRODLA	;PROPAGAE CARRY AS LONG AS NON-ZERO
1)		MOVEI	E,0		;NO NEW RESULT
1)		PUSHJ	P,PCARRY
1)		JRST	PRDED2
1)	
1)	PDZERO:	ILDB	E,B		;MAKE SURE A PLACE HOLDER EXISTS
1)		CAIN	E,0		;IN THIS POSITION IN RESULT
1)		MOVEI	E,"0"
1)		DPB	E,B
1)		JRST	PRODLA
1)	
1)	PRDED1:	TRZ	F,TF		;SEARCH FOR END AND NON-ZERO
1)		MOVE	B,NEWBOT
1)	PRDED4:	ILDB	C,B
1)		JUMPE	C,PRDED3	;END OF RESULT
1)		CAIE	C,"0"
1)		TRO	F,TF		;SEEN A NON-ZERO DIGIT
1)		JRST	PRDED4
1)	PRDED3:	TRZN	F,TF
1)		TRZ	F,PMF		;DON'T ALLOW -0
1)		MOVEI	E,"-"
1)		TRZE	F,PMF
1)		DPB	E,B
1)		SETZM	LINBOT
1)		POP	S,A
1)		POP	S,A
1)		MOVE	A,NEWBOT
1)		JRST	SUM7		;DELETE LEADING ZEROES AND REVERSE BACK
1)	^L
1)	
1)	;HERE FOLLOW THE COMMANDS
LINE 1, PAGE 33
2)	;HERE FOLLOW THE COMMANDS


LINE 7, PAGE 36
1)		TLO	F,TOF	;DENOTE TYPEOUT FOR BREAKY ERROR
1)		SETZM	BCHAR
1)		POP	S,A	;GET THE THING TO TYPE OR PRINT
LINE 5, PAGE 33
2)		POP	S,A	;GET THE THING TO TYPE OR PRINT


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 19

LINE 13, PAGE 36
1)		TLZ	F,TOF	;NO LONGER TYPING OUT
1)		JRST	COMEX
LINE 9, PAGE 33
2)		JRST	COMEX


LINE 18, PAGE 36
1)		ERROR	NOPERR		;END WHAT? YOU ARE NOT DEFINING ANYTHING
1)		SKIPN	PRODNM		;IF THE "END" WAS STORED, OR
1)		TLNE	F,GETF		;IN ANY CASE, IF GETTING
LINE 13, PAGE 33
2)		ERROR	ENDERR	;END WHAT? YOU ARE NOT DEFINING ANYTHING
2)		TLNE	F,GETF		;IN ANY CASE, IF GETTING


LINE 16, PAGE 37
1)		ERROR	WHATER	;MUST BE EITHER TRUE OR FALSE
1)	
LINE 16, PAGE 34
2)		ERROR	IFERR	;MUST BE EITHER TRUE OR FALSE
2)	


LINE 29, PAGE 37
1)	
1)	
1)	GOODBYE:	JSP	D,COMEXR	;MAKE SURE LINE IS OK FIRST, THEN
1)	FOR TENEX,<	MOVEI	A,100	;PRIMARY INPUT FILE
1)		CFIBF		;FLUSH ANY OTHER JUNK
1)		MOVE	C,[ASCII /LOGO
1)	/]
1)		MOVNI	D,5
1)		SETZ	B,
1)		ROTC	B,7
1)		STI		;SIMULATE TERMINAL INPUT TO EXEC
1)		AOJL	D,.-3
1)		HALTF >		;AND RETURN TO EXEC
1)	FOR TEN50,<	CALL	[SIXBIT /EXIT/]>
1)	^L
LINE 29, PAGE 34
2)	^L


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 20

LINE 21, PAGE 38
1)	IGNORE:	POP	S,A	;FLUSH ONE INPUT, THE NAME IF MAKE
1)		JRST COMEX
LINE 21, PAGE 35
2)		POP	S,A	;FLUSH THE NAME
2)		JRST COMEX


LINE 34, PAGE 38
1)		 ERROR	STOERR	;LOCAL CAN ONLY BE STORED
1)		MOVE	E,DTOP
LINE 34, PAGE 35
2)		 ERROR	.	;LOCAL CAN ONLY BE STORED
2)		MOVE	E,DTOP


LINE 55, PAGE 38
1)	;NOTE: WHEN DP GOES AWAY DUE TO THE PDL'S BEING USED FOR OLD
1)	; BINDINGS, LOCAL WILL HAVE TO ALTER SPP
1)	^L
LINE 55, PAGE 35
2)	^L


LINE 6, PAGE 39
1)		ERROR	NOPERR	;NO, CANNOT RETITLE NO PROCEDURE
1)		PUSHJ	P,GNE
1)		 ERROR	ERMSSG
1)		CAME	A,[XWD MPF,TOL+1]	;IS THE NEXT THING "TO"
1)		ERROR	TITER2	;WORD AFTER TITLE MUST BE TO
1)		TLO	F,TITLEF
LINE 6, PAGE 36
2)		ERROR		;NO, CANNOT RETITLE NO PROCEDURE
2)		PUSHJ	P,GNE
2)		 ERROR	ERMSSG
2)		CAME	A,[XWD MPF,TOL+1]	;IS THE NEXT THING "TO"
2)		ERROR		;WORD AFTER TITLE MUST BE TO
2)		TLO	F,TITLEF


LINE 16, PAGE 39
1)	TO0:	MOVE	H,CPP	;WHERE TO START SAVING THE CODE OF TITLE LINE
1)		PUSHJ	P,GNE	;NEXT NON-COMMENT ELEMENT
1)		 ERROR	ERMSSG	;MUST HAVE A PROCEDURE NAME
1)		TLNN	A,UPRF
1)		 ERROR	TOERR5	;CANNOT BE USED AS A PROCEDURE NAME
1)		MOVEI	E,(A)
1)		MOVE	G,@RPA
1)		CAMN	G,[EXP -1]	;IS THE PROCEDURE ALREADY DEFINED?î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 211)		JRST	TO1		;NO, ALWAYS OK
LINE 16, PAGE 36
2)	TO0:	AOS	D,CPP
2)		MOVE	A,@CSD
2)		TLNN	A,UPRF
2)		ERROR
2)		MOVNI	B,1
2)		CAMN	B,@RPA		;IS THE PROCEDURE ALREADY DEFINED?
2)		JRST	TO1		;NO, ALWAYS OK


LINE 30, PAGE 39
1)		 ERROR	TOERR6	;NO TO EITHER, THE PROCEDURE IS ALREADY DEFINED
1)	TO1:	SETZ	M,	;COUNT OF DUMMIES ENCOUNTERED
1)		PUSHJ	P,GNE	;NEXT NON-COMMENT ELEMENT
1)		 JRST	TOA	;NO DUMMIES
1)	TO2:	TLNN	A,VARF		;IS IT A DUMMY?
1)		ERROR	TOERR2	;NO
1)		MOVEI	M,1(M)	;YES, COUNT IT
1)	TO3:	PUSHJ	P,GNE	;CHECK FOR "AND"
1)		 JRST	TOA	;NOTHING, SO NO AND
1)		CAME	A,[XWD MPF,ANDL+1]	;IS IT "AND"?
1)		JRST	TO2		;NOT AND, TRY DUMMY
1)		PUSHJ	P,GNE
1)		 ERROR	ERMSSG		;"AND" LAST, NOT WELL FORMED
1)		JRST	TO2		;IT MUST EXIST AND BE A VARIABLE
1)	^L
LINE 28, PAGE 36
2)		ERROR			;NO TO EITHER
2)	TO1:	MOVEI	A,1(D)
2)		MOVE	B,@CSA		;CHECK THE LINE FOR ACCURACY COMPLETELY
2)		TLNE	B,COMMTF	;BEFORE MAKING ANY DATABASE CHANGES
2)		JRST	TOA		;ALL OK
2)		JUMPE	B,TOA		;ALL OK
2)	TO2:	TLNN	B,VARF		;IS IT A DUMMY?
2)		ERROR	TOERR2	;NO
2)		MOVEI	A,1(A)	;NEXT ONE
2)	TO3:	MOVE	B,@CSA
2)		JUMPE	B,TOA
2)		TLNE	B,COMMTF
2)		JRST	TOA
2)		CAME	B,[XWD MPF,ANDL+1]	;IS IT "AND"?
2)		JRST	TO2		;NOT AND, TRY DUMMY
2)		MOVEI	A,1(A)
2)		MOVE	B,@CSA
2)		TLNN	B,VARF
2)		ERROR	TOERR2
2)		AOJA	A,TO3	;IS AND, GO FOR ANOTHER DUMMY
2)	^L


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 22

LINE 8, PAGE 40
1)		MOVEI	A,[ASCIZ / IS ALREADY DEFINED./]
1)		PUSHJ	P,PTOSSM
LINE 8, PAGE 37
2)		MOVEI	A,[ASCIZ / IS ALREADY DEFINED/]
2)		PUSHJ	P,PTOSSM


LINE 13, PAGE 40
1)	TOA:	TLNN	F,TITLEF	;TITLE LINE NOW VALID
1)		JRST	TOB		;TO, NOT TITLE
1)		MOVE	A,TOPROD
1)		MOVNI	G,1
1)		EXCH	G,@RPA		;OLD PROCEDURE OPEN NOW UNDEFINED
1)		HRLI	G,-1(M)		;NO OF DUMMIES-1,LOC OF DIRECTORY
1)		MOVEI	A,(E)
1)		MOVEM	A,TOPROD	;NEW PROCEDURE NAME NOW OPEN
1)		MOVEM	G,@RPA		;AND DEFINED
1)	
1)	
1)		MOVEI	A,(G)
1)		MOVEM	M,@PSA		;NUMBER OF DUMMIES
1)		MOVEI	A,1(A)
1)		PUSHJ	P,TOLINH
1)		JRST	SCOMEX
1)	
1)	TOB:	MOVEM	E,TOPROD	;PROCEDURE NOW OPEN
1)		HRLZI	G,-1(M)
1)		HRR	G,PTOP		;NEW DIRECTORY GOES HERE
1)		MOVEI	A,(E)
1)		MOVEM	G,@RPA		;PROCEDURE DEFINED
1)		MOVEI	A,(M)
1)		PUSHJ	P,MOVEMP
1)		MOVEI	G,(A)		;SAVE PSA PTR TO COMPILE CODE PTR
1)		PUSHJ	P,MOVEMP	;MAKE A HOLE
1)		MOVEI	A,(G)		;GET PSA PTR BACK
1)		PUSHJ	P,TOLINJ
1)		JRST	SCOMEX
LINE 13, PAGE 37
2)	TOA:	MOVE	A,CPP
2)		HRRZ	E,@CSA
2)		MOVEI	A,0
2)		PUSHJ	P,MOVEMP	;PTR TO TO LINE
2)		MOVEI	A,0
2)		MOVE	M,PTOP	;PTR TO NO OF DUMMIES
2)		PUSHJ	P,MOVEMP
2)		TRZ	F,TF	;TF=1_AND PRECEDING THE NEXT DUMMY
2)	
2)	TOC:	AOS	A,CPPî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 232)		MOVE	A,@CSA
2)	TOC1:	JUMPE	A,TOD
2)		TLNE	A,COMMTF
2)		JRST	TOE
2)		TRZE	F,TF
2)		TLO	A,ANDF
2)		PUSHJ	P,MOVEMP
2)		AOS	@PSM	;BUMP NO OF DUMMIES
2)		AOS	A,CPP
2)		MOVE	A,@CSA
2)		CAME	A,[XWD MPF,ANDL+1]
2)		JRST	TOC1
2)		TRO	F,TF
2)		JRST	TOC
2)	^L
2)	
2)	TOE:	MOVEI	D,-1(M)
2)		MOVEM	A,@PSD	;COMMENT GETS STASHED HERE
2)		AOS	CPP	;CPP POINTS AT A ZERO WHEN FALLING INTO TOD
2)	TOD:	TLZN	F,TITLEF	;DOING TITLE?
2)		SOJA	M,TOF
2)		MOVE	A,TOPROD	;COPY OLD LINES,CAN ONLY BE CURRENT PROC
2)		MOVE	D,@RPA
2)		PUSH	P,D
2)		PUSH	P,M
2)		MOVEI	M,1(D)
2)		ADD	M,@PSM
2)		MOVEI	M,1(M)
2)		MOVE	A,@PSM		;GET NEXT LINE OF NUMBERED STEPS
2)		JUMPE	A,.+3		;END OF LIST
2)		PUSHJ	P,MOVEMP	;COPY TO END OF NEW PROCEDURE DIRECTORY
2)		AOJA	M,.-3
2)		PUSHJ	P,MOVEMP	;PUT LAST ONE AWAY
2)	
2)		POP	P,M
2)		MOVEI	D,-1(M)		;PTR TO BEGINNING OF NEW DIRECTORY
2)		MOVEI	A,@PSD		;ABSOLUTE
2)	
2)		POP	P,M
2)		MOVEI	C,@PSM		;PTR TO BEG OF OLD DIR
2)	
2)		MOVE	D,PTOP		;END OF NEW DIRECTORY
2)		ADDI	D,(A)
2)		SUBI	D,(C)		;WHERE END WILL END UP
2)	
2)		HRLI	C,(A)		;FROM BEG OF NEW DIR TO BEG OF OLD
2)		BLT	C,@PSD
2)		MOVEM	D,PTOP		;OFFSET BY AMOUNT FLUSHED
2)		MOVE	A,TOPROD
2)		SETOM	@RPA		;OLD PROCEDURE NAME BECOMES UNDEFINED
2)	î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 242)	TOF:	MOVEM	E,TOPROD	;NOW OK TO HAVE PROCEDURE OPEN
2)		MOVEI	D,1(M)
2)		MOVE	D,@PSD
2)		HRLI	M,-1(D)		;NUMBER OF ARGS-1
2)		MOVEI	A,(E)
2)		MOVEM	M,@RPA
2)		JRST	SCOMEX


LINE 1, PAGE 41
1)	TOFLUS:	MOVE	A,CBOT
1)		MOVEM	A,CTOP
1)		POPJ	P,
LINE 1, PAGE 39
2)	TOFLUS:	POP	P,CTOP
2)		POPJ	P,


LINE 9, PAGE 41
1)		MOVE	A,CBOT	;POINTER TO BASE OF NEW COMPILED LINE
1)		MOVEI	H,1(A)	;SAVE THE LINE BUT NOT THE LINE NUMBER
1)		MOVE	L,@CSA
LINE 8, PAGE 39
2)		MOVE	A,0(P)	;POINTER TO BASE OF NEW COMPILED LINE ON STACK
2)		MOVE	L,@CSA


LINE 3, PAGE 42
1)		MOVSM	B,@PSA	;XWD SEQNO,CBOT INTO PROCEDURE DIRECTORY
1)	
1)		MOVE	A,CTOP
1)		MOVEI	B,@CSA	;B_CTOP+CS
1)		MOVE	C,CBOT	;CBOT, BASE OF THIS LINE TO BE STORED
1)		MOVE	A,CDBOT
1)		SUBI	C,(A)	;C_CBOT-CDBOT, LENGTH OF OTHER DIRECT LINES
1)		MOVEI	A,@CSA	;A_CS+CDBOT, ABS LOC OF CDBOT
1)		MOVEI	E,(B)
1)		ADDI	E,(C)	;E_CS+CTOP+CBOT-CDBOT, END OF COPIED DIRECT LINES
1)		CAML	E,CS+1	;IS THAT INSIDE CURRENT CS ALLOCATION
1)		 EXPAND	C,CS	;NO, NEED AT LEAST ENOUGH ROOM FOR COPIED LINES
1)	
1)		HRLZI	D,(A)	;FROM BASE OF DIRECT LINES
1)		HRRI	D,(B)	;TO CURRENT END OF COMPILED CODE
1)		BLT	D,(E)	;ENDING WITH END OF ALL OTHER DIRECT LINES
1)	
1)		MOVE	D,CTOP	;H CONTAINS START OF GOOD STUFF TO SAVE
1)		SUBI	D,(H)	;D_LENGTH OF STUFF TO BE SAVED
1)		ADDB	D,CDBOT	;THE DIRECT LINES GET MOVED UP BY THAT AMOUNT
1)		ADDI	D,(C)	;LENGTH(STORED)+LENGTH(OTHER DIRECT)
1)		MOVEM	D,CTOP	;IS THE NEW LENGTH OF ALL PARSED CODE
1)		ADD	H,CS	;ABSOLUTEî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 251)		HRLI	A,(H)	;WHERE THE GOOD STUFF IS COMING FROM
1)		BLT	A,@CSD	;ENDING AT THE END OF GOOD LINES
1)		MOVEM	D,CBOT	;THIS MUST BE A CROCK
1)		MOVEI	D,-1(D)
1)		MOVEM	D,CPP	;POINT AT THE END OF THE LINE
1)		POPJ	P,	;R1 FROM COMPIL
LINE 3, PAGE 40
2)		MOVSM	B,@PSA	;PPD SEQNO,CBOT INTO PROCEDURE DIRECTORY
2)	
2)		MOVE	A,CTOP
2)		MOVEI	B,@CSA	;B_CTOP+CS
2)		POP	P,C	;CBOT, BASE OF THIS LINE TO BE STORED
2)		MOVE	A,CDBOT
2)		SUBI	C,(A)	;C_CBOT-CDBOT, LENGTH OF OTHER DIRECT LINES
2)		MOVEI	A,@CSA	;A_CS+CDBOT, ABS LOC OF CDBOT
2)		MOVEI	D,(B)
2)		ADDI	D,(C)	;D_CS+CTOP+CBOT-CDBOT, END OF COPIED DIRECT LINES
2)		CAML	D,CS+1	;IS THAT INSIDE CURRENT CS ALLOCATION
2)		 EXPAND	C,CS	;NO, NEED AT LEAST ENOUGH ROOM FOR COPIED LINES
2)	
2)		HRLZI	E,(A)	;FROM BASE OF DIRECT LINES
2)		HRRI	E,(B)	;TO CURRENT END OF COMPILED CODE
2)		BLT	E,(D)	;ENDING WITH END OF ALL OTHER DIRECT LINES
2)	
2)		SOS	D,CTOP	;NET EFFECT OF SWITCH IS ONE LESS WORD
2)		SUBI	D,(C)	;D_CTOP+CDBOT-CBOT-1
2)		MOVEM	D,CDBOT	;BECAUSE LINE NO WORD OF STORED LINE IS FLUSHED
2)	
2)		ADDI	C,1(A)	;C_CS+(CDBOT-CDBOT)+CBOT+1
2)		HRLI	A,(C)	;COPY FROM WORD AFTER LINE NO WORD
2)		BLT	A,-1(B)	;TO CDBOT ENDING AT OLD TOP MINUS ONE
2)		POPJ	P,	;R1 FROM COMPIL


LINE 35, PAGE 42
1)		 ERROR	ERMSSG	;NOTHING
1)		TLNN	A,UPRF	;TRACE A USER PROCEDURE?
1)		 ERROR	WHATER	;CANNOT TRACE THAT
1)		MOVEI	A,-1(A)	;POINT AT FIRST WORD OF RP PAIR
LINE 31, PAGE 40
2)		 ERROR		;NOTHING
2)		TLNN	A,UPRF	;TRACE A USER PROCEDURE?
2)		 ERROR		;CANNOT TRACE THAT
2)		MOVEI	A,-1(A)	;POINT AT FIRST WORD OF RP PAIR


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 26

LINE 10, PAGE 43
1)		JSP	D,SAVEUP	;PUSH ALL THE GOOD STUFF
1)		HRRZM	A,PRODNM
1)	
LINE 10, PAGE 41
2)	UPROD1:	PUSH	P,PRODNM	;PUSH THIS FIRST SO IT CAN BE LAST OFF
2)					; FOR COMERR IN A STORED LINE
2)		PUSH	P,CHGNO
2)		PUSH	P,LINENO
2)		PUSH	P,DTOP
2)		PUSH	P,TRUTH
2)		HRRZ	B,CPP
2)		CAMGE	B,CDBOT
2)		JRST	.+4
2)		SUB	B,CDBOT
2)		TLO	B,400000	;NOTE THIS ONE RELATIVE TO CDBOT
2)		JRST	.+3	;INSTEAD OF RELATIVE TO BASE OF THIS LINE
2)		SUB	B,CHGNO	;LINE GENERATION NO AND LOCATION REL TO CS
2)		HRRZI	B,(B)	;MAKE SURE LH IS ZERO
2)		PUSH	P,B
2)		PUSH	P,SSP
2)		PUSH	P,SPP
2)	
2)		SETZM	TRUTH
2)		SETZM	LINENO
2)		HRRZM	A,PRODNM
2)	
2)		TLZE	F,ERRORF	;WAS UPROD CALLED BY ERROR
2)		JRST	MAINL
2)	


LINE 25, PAGE 43
1)	^L
1)		HRRZ	D,@RPA
1)		PUSH	P,BCHAR	;SAVE CURRENT STATE OF MARGIN
LINE 47, PAGE 41
2)	
2)		HRRZ	D,@RPA	;GET PTR TO PROCEDURE
2)		MOVEI	D,1(D)	;POINT TO NUMBER OF ARGS
2)		CAME	C,@PSD	;SAME NUMBER OF ARGS AS WHEN SCANNED?
2)		ERROR		;NO
2)	^L
2)		PUSH	P,BCHAR	;SAVE CURRENT STATE OF MARGIN


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 27

LINE 22, PAGE 44
1)		MOVEI	D,1(D)	;POINT TO PTR TO TO LINE 
1)		MOVE	D,@PSD	;FETCH PTR TO TO LINE
1)		MOVN	E,C	;-N
LINE 21, PAGE 42
2)	
2)		MOVEI	D,1(D)	;POINT TO FIRST DUMMY NAME
2)		MOVN	E,C	;-N


LINE 29, PAGE 44
1)		ADD	G,-4(P)	;OLD VALUE OF DTOP
1)		JUMPGE	C,UPDVCR	;NO DUMMIES, GET FIRST LINE
1)	
LINE 28, PAGE 42
2)		ADD	G,-5(P)	;OLD VALUE OF DTOP
2)		JUMPGE	C,UPFRST	;NO DUMMIES, GET FIRST LINE
2)	


LINE 37, PAGE 44
1)		MOVE	A,@CSD	;LOOP TO COPY INTO DP, GET DUMMY NAME
1)		TLNN	A,VARF	;IS IT A DUMMY NAME
1)		AOJA	D,.-2	;NO, TRY NEXT ELEMENT
1)		MOVEM	A,(G)	;INTO DUMMY VAR TABLE
LINE 36, PAGE 42
2)		MOVE	A,@PSD	;LOOP TO COPY INTO DP, GET DUMMY NAME
2)		MOVEM	A,(G)	;INTO DUMMY VAR TABLE


LINE 51, PAGE 44
1)	UPDVCR:	TRNE	F,TF		;BUT BEFORE EXECUTING,
1)		PUSHJ	P,CRLF		;NEATEN UP
LINE 48, PAGE 42
2)		TRNE	F,TF
2)		PUSHJ	P,CRLF		;NEATEN UP


LINE 56, PAGE 44
1)		ADDM	A,TRACEM	;NEXT TRACE CALL INDENTED TWO MORE SPACES
1)	^L
LINE 53, PAGE 42
2)		ADDM	A,TRACEM	;NEXT TRACED CALL SHOULD BE INDENTED TWO MORE SPACES
2)	^L


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 28

LINE 8, PAGE 45
1)	UPNXT1:	MOVEM	B,LINENO	;FOUND A LINE NO .GTR. PREVIOUS LINE
1)		AOS	A,NXLINE
LINE 8, PAGE 43
2)	UPNXT1:	MOVEM	B,LINENO	;FOUND A LINE NO > PREVIOUS LINE
2)		AOS	A,NXLINE


LINE 19, PAGE 45
1)		JUMPN	B,UPNXT1	;LINE NO .NE. 0_MORE TO DO
1)		JRST	OUTPTA		;NO MORE LINES, DONE WITH PROCEDURE
LINE 19, PAGE 43
2)		JUMPN	B,UPNXT1	;LINE NO<>0_MORE TO DO
2)		JRST	OUTPTA		;NO MORE LINES, DONE WITH PROCEDURE


LINE 4, PAGE 46
1)	FOR SAVBRK,<
1)	GO:	JSP	H,GORE
1)		POPJ	P,
1)	
1)	CANCEL:	SKIPG	GODEPTH
1)		 ERROR	CANER1	;NOTHING TO CANCEL
1)		JSP	H,GORE
1)		JRST	FLUSHM	;FLUSH TO BSP
1)	
1)	GORE:	SKIPE	PRODNM
1)		ERROR	DIRERR	;"GO" ALONE CAN ONLY BE DIRECT
1)		SKIPG	GODEPTH
1)		ERROR	GOERR9	;NOPLACE TO GO
1)		SOS	GODEPTH	;TEST ABOVE SO IT DOESN'T GO NEGATIVE
1)		MOVE	A,BSP
1)		ADDI	A,1
1)		JSP	C,SETPDL
1)		POP	P,BSP
1)		JSP	D,RESTOR
1)		JRST	(H) >
1)	
1)	
1)	ESTOP:	TLO	F,COMF
1)	
1)	OUTPUT:	SKIPN	PRODNM
1)		ERROR	STOERR		;OUTPUT AND STOP MUST BOTH BE STORED
1)	RETURN:	JSP	D,COMEXR	;DO THE END OF LINE CHECKS
1)		POP	P,0(P)
1)	RETA:	JSP	E,RESTOA	;RESTORE ALL BUT PRODNM
1)		TLNE	F,GOF		;IS THIS RETURN UNTRACEABLE?
LINE 4, PAGE 44
2)	RETTRN:	SKIPE	PRODNMî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 292)		ERROR		;"GO" ALONE CAN ONLY BE DIRECT
2)		SKIPG	GODEPTH
2)		ERROR	GOERR9	;NOPLACE TO GO
2)		SOS	GODEPTH	;TEST ABOVE SO IT DOESN'T GO NEGATIVE
2)	GETOUT:	TLO	F,GOF	;GO AND GET TREATED MUCH THE SAME
2)		POP	P,A
2)		POP	P,A
2)		JRST	RET0
2)	ESTOP:	SKIPN	PRODNM
2)		ERROR			;STOP CAN ONLY BE STORED
2)		TLO	F,COMF
2)		JRST	RETURN
2)	
2)	OUTPUT:	SKIPN	PRODNM
2)		ERROR
2)	RETURN:	JSP	D,COMEXR	;DO THE END OF LINE CHECKS
2)	RET0:	POP	P,0(P)
2)	RETA:	POP	P,SPP
2)		POP	P,SSP
2)		POP	P,A	;CPP
2)		POP	P,TRUTH
2)		POP	P,DTOP
2)		POP	P,LINENO
2)		POP	P,CHGNO
2)		JUMPGE	A,.+3	;RELATIVE TO BASE OF THIS LINE ?
2)		ADD	A,CDBOT	; NO, RELATIVE TO CDBOT
2)		JRST	.+2
2)		ADD	A,CHGNO
2)		HRRZM	A,CPP
2)		TLNE	F,GOF		;IS THIS RETURN UNTRACEABLE?


LINE 28, PAGE 47
1)	RETD:	POP	P,E	;OLD PRODNM INTO E
1)		ANDI	E,377777	;TRUTH BIT IS PACKED IN THIS HALFWORD
1)		EXCH	E,PRODNM	;SAVE NAME OF PR BEING EXITED IN E
1)		TLZE	F,COMF	;DID THE PROCEDURE OUTPUT?
1)		JSP	D,COMEXU	;NO, TREAT IT LIKE A COMMAND
1)	
1)		SKIPN	PRODNM	;DIRECT COMMAND?
1)		POPJ	P,
1)	RETE:	JSP	C,SRCHLN	;SEARCH FOR THAT LINE AGAIN
1)		 CAME	B,LINENO	;THIS TIME FOR =
1)		 ERROR	LNDERR		;NO LONGER EXISTS, PROBABLY AN ERROR
1)		MOVEI	A,1(A)
1)		MOVE	B,CHGNO
1)		SUB	B,@PSA	;NEW POSITION OF SAME LINE IS ALWAYS .LE. OLD POS
1)		TLNE	B,-1	;ONLY CHECK THE SEQUENCE NUMBERS FOR EQUALITY
1)		 ERROR	LNAERR	;LINE ALTERED WHILE IN IT
1)		MOVN	B,B	;THE AMOUNT THE SAME LINE GOT MOVED BACK OR 0
LINE 28, PAGE 45î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 302)	RETD:	TLZN	F,COMF	;DID THIS PROCEDURE OUTPUT?
2)		JRST	RETE	;YES,TREAT LIKE AN OPERATION
2)		MOVE	E,(P)	;SAVE THE OLD PRODNM
2)		JSP	D,COMEXU	;NO, TREAT IT LIKE A COMMAND
2)		MOVEM	E,PRODNM
2)		JRST	.+2
2)	RETE:	POP	P,PRODNM
2)		SETOM	NXLINE	;DON'T TRY TO REMEMBER WHERE WE WERE
2)	
2)		TLZN	F,GOF	;WAS RETURN CALLED BY GO
2)		SKIPN	PRODNM	;DIRECT COMMAND?
2)		POPJ	P,
2)		JSP	C,SRCHLN	;SEARCH FOR THAT LINE AGAIN
2)		 CAME	B,LINENO	;THIS TIME FOR =
2)		 ERROR		;NO LONGER EXISTS, PROBABLY AN ERROR
2)		MOVEI	A,1(A)
2)		MOVE	B,CHGNO
2)		SUB	B,@PSA	;NEW POSITION OF SAME LINE IS ALWAYS <= OLD POS
2)		TLNE	B,-1	;ONLY CHECK THE SEQUENCE NUMBERS FOR EQUALITY
2)		 ERROR		;LINE CHANGED WHILE IN IT
2)		MOVN	B,B	;THE AMOUNT THE SAME LINE GOT MOVED BACK OR 0


LINE 2, PAGE 48
1)	SRCHL1:	HRRZ	A,@RPA	;GET RELATIVE PTR INTO PS SPACE
1)		CAIN	A,-1	;ERASED?
1)		ERROR	NOPROD	;THERE IS NO PROCEDURE X
1)	
LINE 2, PAGE 46
2)	SRCHL1:	HRRZ	B,@RPA	;GET RELATIVE PTR INTO PS SPACE
2)		CAIN	B,-1	;ERASED?
2)		ERROR	NOPROD	;THERE IS NO PROCEDURE X
2)	
2)		MOVEI	A,1(B)	;POINTS TO NUMBER OF DUMMIES
2)		ADD	A,@PSA	;STEP OVER THEM
2)		AOJA	A,.+2	;STEP TO FIRST LINE NO
2)	


LINE 16, PAGE 48
1)	FOR SAVBRK,<	 JRST	GO >
1)	NOTFOR SAVBRK,<	ERROR ERMSSG >
1)		SKIPE	PRODNM	;ERROR IF NOT STORED
LINE 20, PAGE 46
2)		 JRST	RETTRN
2)		SKIPE	PRODNM	;ERROR IF NOT STORED


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 31

LINE 47, PAGE 48
1)	^LSAVEUP:	HRLZ	B,LINENO	;A MUST BE LEFT ALONE
1)		HRR	B,PRODNM
1)		MOVE	C,TRUTH
1)		ANDI	C,400000
1)		ORI	B,(C)		;PRODNM .LT. 2^17 BECAUSE THERE MUST BE A
1)					; NAME FOR EACH ONE 
1)		PUSH	P,B		;LINENO,,TRUTH+PRODNM
1)		PUSH	P,DTOP
1)		HRRZ	B,CPP
1)		CAMGE	B,CDBOT
1)		JRST	.+4
1)		SUB	B,CDBOT
1)		TLO	B,400000	;NOTE THIS ONE RELATIVE TO CDBOT
1)		JRST	.+3	;INSTEAD OF RELATIVE TO BASE OF THIS LINE
1)		SUB	B,CHGNO	;LINE GENERATION NO AND LOCATION REL TO CS
1)		HRRZI	B,(B)	;MAKE SURE LH IS ZERO
1)		PUSH	P,B
1)		PUSH	P,CHGNO
1)		PUSH	P,SPP
1)	
1)		SETZM	TRUTH
1)		SETZM	LINENO
1)		SETZM	PRODNM
1)		HRRZI	B,(S)		;WHEN SAVEUP IS CALLED IS THE ONLY TIME
1)		SUB	B,SP		;THE DEPTH OF THE PUSHDOWN LISTS CHANGE
1)		HRLZM	B,SPP
1)		HRRZI	B,1(P)
1)		SUB	B,PP
1)		HRRM	B,SPP
1)		JRST	(D)
1)	
1)	RESTOR:	JSP	E,RESTOA	;RESTORE ALL BUT PRODNM
1)		HRRZM	A,PRODNM
1)		POP	P,A	;FIX UP PDL
1)		JRST	(D)
1)	
1)	RESTOA:	POP	P,SPP
1)		POP	P,CHGNO
1)		POP	P,A	;CPP
1)		JUMPGE	A,.+3	;RELATIVE TO BASE OF THIS LINE ?
1)		ADD	A,CDBOT	; NO, RELATIVE TO CDBOT
1)		JRST	.+2
1)		ADD	A,CHGNO
1)		HRRZM	A,CPP
1)		POP	P,DTOP
1)		MOVE	A,(P)	;LINENO,,TRUTH+PRODNM
1)		MOVEI	B,0
1)		TRZE	A,400000î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 321)		HRROI	B,-1	;TRUTH=FALSE
1)		MOVEM	B,TRUTH
1)		HLRZM	A,LINENO
1)		SETOM	NXLINE
1)		JRST	(E)
1)	^L
1)	FOR TURTLE,<
1)	BACK:	SKIPA	B,[[BYTE (7) 16,177,177,177,177,177,177,0]]
1)	FRONT:	MOVEI	B,[BYTE (7) 1,177,177,177,177,177,177,0]
1)		JRST	TURTEL
1)	
1)	RIGHT:	SKIPA	B,[[BYTE (7) 10,177,177,177,177,0]]
1)	LEFT:	MOVEI	B,[BYTE (7) 26,177,177,177,177,0]
1)		JRST	TURTEL
1)	
1)	HORN:	MOVEI	B,[BYTE (7) 35,177,177,0]
1)	TURTEL:	PUSHJ	P,TOSS		;DO IT
1)		JRST	COMEX
1)	
1)	TOUCH:	PUSHJ	P,GNE	;THIS IS A BOOLEAN OPERATION
1)		 ERROR	ERMSSG
1)		MOVE	G,A	;SAVE RIGHT OR LEFT IN G
1)	
1)		MOVEI	A,101	;TERMINAL OUTPUT
1)		DOBE		;WAIT FOR EMPTY BUFFER
1)	
1)		MOVEI	A,100	;TERMINAL INPUT
1)		SIBE		;INPUT BUFFER EMPTY
1)		JRST	TOUCH1	;NO
1)		MOVEI	A,200	;8*16MS GTR 1 CHAR TIME
1)		DISMS		;WAIT FOR A POSSIBLE CHAR
1)	
1)		MOVEI	A,100
1)		SIBE		;DID A CHAR COME IN?
1)		JRST	.+2	;YES
1)		JRST	ISFALSE	;DIDN'T TOUCH ANYTHING
1)	
1)	TOUCH1:	BIN
1)		CAMN	G,[XWD MPF,RIGHTL+1]
1)		JRST	TOUCHR
1)		CAME	G,[XWD MPF,LEFTL+1]
1)		ERROR		;MUST BE RIGHT OR LEFT FOR NOW
1)	
1)		CAIE	B,20	;CONTROL P
1)		JRST	ISFALSE
1)		JRST	ISTRUE
1)	
1)	TOUCHR:	CAIE	B,22	;CONTROL-R
1)		JRST	ISFALSE
1)		JRST	ISTRUE >
1)	^Lî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 331)	WAIT:	POP	S,L
1)		HRLI	L,010700+W
1)		PUSHJ	P,DNM
1)		 ERROR	ZERERR
1)	FOR TENEX,<	MOVEI	1,^D1000
1)		IMUL	1,M
1)		DISMS >
1)	FOR TEN50,<	MOVEI	A,^D3600
1)		IMULI	M,^D60
1)		CAIG	M,(A)
1)		JRST	.+4
1)		CALL	A,[SIXBIT /SLEEP/]
1)		SUBI	M,(A)
1)		JRST	.-4
1)		CALL	M,[SIXBIT /SLEEP/] >
1)		JRST	COMEX
1)	^L
1)	
1)	
LINE 50, PAGE 46
2)	^L
2)	


LINE 15, PAGE 52
1)		TLNN	F,EDITF!GETF	;DON'T TYPE WEDGE OR _ IF EDITING
1)		PUSHJ	P,TOSS	;PRINT OUT COMMENT FROM B
LINE 14, PAGE 47
2)		TLNN	F,EDITF!GETF	;DON'T TYPE > OR _ IF EDITING
2)		PUSHJ	P,TOSS	;PRINT OUT COMMENT FROM B


LINE 26, PAGE 52
1)		CAIL	C,175	;RUBOUT OR EOM?
1)		JRST	TISO	;YES
1)		AOS	CHARNO	;PRINT CHARACTER SO COUNT
1)		CAIN	C,134	;BACKSLASH
1)		JRST	TISN	;YES
1)	TISF:	IDPB	C,B
LINE 25, PAGE 47
2)		CAIN	C,134	;BACKSLASH
2)		JRST	TISN	;YES
2)		CAIL	C,175	;RUBOUT OR EOM?
2)		JRST	TISO	;YES
2)		AOS	CHARNO	;PRINT CHARACTER SO COUNT
2)	TISF:	IDPB	C,B


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 34

LINE 50, PAGE 52
1)	NOTFOR TURTLE,<
1)	FOR TEN50,<CC 0,0,TISL,TISDC3>	;TEN50 USES DC3 AS TERMINATOR IN FILES
1)	FOR TENEX,<CC 0,0,TISL,0>>	;PQRS
1)	FOR TURTLE,<
1)	FOR TEN50,<CC TISB,0,TISL,TISDC3>
1)	FOR TENEX,<CC TISB,0,TISL,0>>
1)	CC TISLIT,0,0,TISM	;TUVW
1)	NOTFOR TURTLE,<CC 0,0,0,TISZ>	;XYZ ALTMODE
1)	FOR TURTLE,<CC TISB,0,0,TISZ>
1)	FOR TEN50,<CC 0,0,0,0>
LINE 49, PAGE 47
2)	FOR TEN50,<CC 0,0,TISL,TISDC3>	;TEN50 USES DC3 AS TERMINATOR IN FILES
2)	FOR TENEX,<CC 0,0,TISL,0>	;PQRS
2)	CC TISLIT,0,0,TISM	;TUVW
2)	CC 0,0,0,TISZ	;XYZ ALTMODE
2)	FOR TEN50,<CC 0,0,0,0>


LINE 3, PAGE 53
1)		JRST	TISEOL >	;YES, OK
1)	TISD:
LINE 3, PAGE 48
2)		JRST	TISEOL	;YES, OK>
2)	TISD:


LINE 23, PAGE 53
1)	TISH:	TLNN	F,GETF
1)		PUSHJ	P,PTAB		;IF NOT IN A FILE, ECHO SPACES
1)		MOVEI	C,011
LINE 23, PAGE 48
2)	TISH:	MOVE	D,CHARNO	;CONTROL I-SIMULATE TABS
2)		ADDI	D,10
2)		ANDCMI	D,7	;FIND NEXT HIGHER MULTIPLE OF 8
2)		SUB	D,CHARNO
2)		MOVEI	C," "	;TYPE THE APPROPRIATE NUMBER OF SPACES
2)		PUSHJ	P,TYO
2)		SOJN	D,.-1
2)		MOVEI	C,011


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 35

LINE 14, PAGE 54
1)		MOVEI	B,[BYTE (7) 15,177,43,0]
1)		JRST	TISA
LINE 14, PAGE 49
2)		MOVEI	B,[BYTE (7) 15,177,43,12]
2)		JRST	TISA


LINE 27, PAGE 56
1)		CAMGE	C,CHARNO	;COUNT+CHARNO .GTR. 72.?
1)		PUSHJ	P,LINE	;YES-CRLF AND SPACE TO BCHAR
LINE 27, PAGE 51
2)		CAMGE	C,CHARNO	;COUNT+CHARNO>72.?
2)		PUSHJ	P,LINE	;YES-CRLF AND SPACE TO BCHAR


LINE 1, PAGE 57
1)	PWORDC:	MOVE	D,BCHAR	;IF BCHAR .NE. CHARNO CRLF AND SPACE
1)		CAME	D,CHARNO
LINE 1, PAGE 52
2)	PWORDC:	MOVE	D,BCHAR	;IF BCHAR<>CHARNO CRLF AND SPACE
2)		CAME	D,CHARNO


LINE 14, PAGE 57
1)	PWORDD:	MOVEI	C,110	;TYPE SPACE IF CHARNO .NE. 72.
1)		CAMN	C,CHARNO	;TYPE CRLF AND SPACES IF CHARNO=72.
LINE 14, PAGE 52
2)	PWORDD:	MOVEI	C,110	;TYPE SPACE IF CHARNO<>72.
2)		CAMN	C,CHARNO	;TYPE CRLF AND SPACES IF CHARNO=72.


LINE 33, PAGE 57
1)	PTAB:	MOVE	B,CHARNO
1)		IDIVI	B,11		;TAB STOPS ARE NINE APART
1)		SUBI	C,11
1)		MOVE	B,C
1)		PUSHJ	P,PSPACE
1)		AOJN	B,.-1
1)		POPJ	P,
LINE 33, PAGE 52
2)	PTAB:	MOVEI	B,7
2)		PUSHJ	P,PSPACE
2)		TDNE	B,CHARNO
2)		JRST	.-2
2)		POPJ	P,


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 36

LINE 34, PAGE 58
1)	
1)	FOR TENEX,<
1)	XBOUT:	PUSH	P,A
1)		EXCH	B,C
1)	FOR NFILE,<MOVEI	A,101>
1)	FOR OFILE,<MOVE	A,OUTFILE >
1)		BOUT
1)		EXCH	B,C
1)		POP	P,A
1)		POPJ	P,
1)	
1)	XBIN:	PUSH	P,A
1)		MOVE	C,B
1)	FOR NFILE,<MOVEI	A,100 >
1)	FOR OFILE,<MOVE	A,INFILE >
1)		BIN
1)		EXCH	C,B
1)		POP	P,A
1)		POPJ	P,  >
1)	^L
LINE 34, PAGE 53
2)	^L


LINE 5, PAGE 59
1)		JRST	TYO2	;YES, LET TAB AND ^B THROUGH UNTRANSLATED
1)		CAIE	C,11	;IS IT TAB
1)		JRST	TYO1	;NO
1)		PUSH	P,B
1)		PUSHJ	P,PTAB
1)		POP	P,B
1)		POPJ	P,
1)	
1)	TYO1:	CAIN	C,002
1)	TYOSPC:	MOVEI	C,40		;SUBSTITUTE SPACE FOR CONTROL-B
1)	TYO2:	CAIN	C,015	;IS THE CHAR CR
1)		XCT	CHOUT	;YES, TYPE TWICE, NOT THE BEST WAY TO GET TIMING ON CR ALONE
1)		XCT	CHOUT
1)		CAIL	C," "	;IS IT A PRINTING CHARACTER
LINE 5, PAGE 54
2)		JRST	.+3	;YES, LET ^B THROUGH UNTRANSLATED
2)		CAIN	C,002
2)	TYOSPC:	MOVEI	C,40		;SUBSTITUTE SPACE FOR CONTROL-B
2)	FOR TEN50,<	CAIN	C,015	;IS THE CHAR CR
2)		TTCALL	1,C	;YES, TYPE TWICE, NOT THE BEST WAY TO GET TIMING ON CR ALONE
2)		TTCALL	1,C>
2)	FOR TENEX,<
2)		PUSH	P,Aî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 372)		PUSH	P,B
2)		MOVE	A,OUTFIL
2)		MOVEI	B,(C)
2)		CAIN	B,015	;CR? THIS WAY OK BECAUSE CRLF APPEARS AS 37
2)		BOUT		;TYPE TWICE SO CARRIAGE CAN GET BACK TO MARGIN
2)		BOUT
2)		POP	P,B
2)		POP	P,A
2)	>
2)		CAIL	C," "	;IS IT A PRINTING CHARACTER


LINE 27, PAGE 59
1)		XCT	CHIN		;GET A CHARACTER
1)		TLZ	F,TIF
LINE 31, PAGE 54
2)	FOR TEN50,<	TTCALL	4,C>	;GET A CHAR IN LINE MODE
2)	FOR TENEX,<
2)		PUSH	P,A
2)		MOVE	C,B
2)		MOVE	A,INFILE
2)		BIN
2)		EXCH	C,B
2)		POP	P,A
2)	>
2)		TLZ	F,TIF


LINE 16, PAGE 61
1)	DECPRT:	SKIPA	B,[EXP 12]
1)	OCTPRT:	MOVEI	B,10
LINE 16, PAGE 56
2)	DECPRT:	MOVEI	B,12
2)		JRST	.+2
2)	OCTPRT:	MOVEI	B,10


LINE 7, PAGE 63
1)		HRRZ	D,@RPA	; A CONTAINS A PRODNM
1)		MOVEI	B,(D)	;B AND D HAVE REL PTR TO BEGINNING OF DIRECTORY
1)	
LINE 7, PAGE 58
2)		HRRZ	B,@RPA	; A CONTAINS A PRODNM
2)		MOVEI	D,1(B)	;POINT TO NO OF DUMMY ARGS
2)		ADD	D,@PSD	;SKIP OVER DUMMY ARGS
2)		AOJA	D,.+2
2)	


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 38

LINE 16, PAGE 63
1)		CAIL	D,(C)
1)		POPJ	P,	;ALREADY THE LAST ONE IN THE SPACE
LINE 18, PAGE 58
2)		CAIN	D,(C)
2)		POPJ	P,	;ALREADY THE LAST ONE IN THE SPACE


LINE 25, PAGE 64
1)		ADD	H,B	;OFFSET BASE OF LINE TO BE SQVED
1)	
LINE 25, PAGE 59
2)		ADDM	B,-1(P)	;MODIFY PDL, WHEN CALLED BY EDL CAUSES A PROBLEM
2)	


LINE 36, PAGE 64
1)		MOVEI	D,@PSD		;POINT TO THE DIRECTORY ABSOLUTE
1)		AOJA	D,TOLNH3	;DO THE "TO" LINE
1)	
LINE 36, PAGE 59
2)		MOVEI	D,1(D)	;POINT TO NUMBER OF DUMMIES
2)		ADD	D,PS	;MAKE IT AN ABSOLUTE POINTER,(D) FASTER THAN @PSD
2)		ADD	D,(D)	;SKIP OVER THEM
2)		MOVEI	D,1(D)	;POINT TO FIRST LINE NUMBER
2)	


LINE 42, PAGE 64
1)	TOLNH3:	HRRZ	G,(D)	;GET THE COMPIL PTR
1)		CAIL	G,(C)	;IS IT AFTER THE HOLE?
LINE 44, PAGE 59
2)		HRRZ	G,(D)	;GET THE COMPIL PTR
2)		CAIL	G,(C)	;IS IT AFTER THE HOLE?


LINE 15, PAGE 65
1)		ADD	B,DTOP
1)		SETZM	(B)	;PUT A TERMINATOR AT THE END
1)		MOVE	B,DP
1)		ADDI	B,2
1)		JSP	S,GCMARK
1)		MOVE	B,SP
1)		MOVEI	B,1(B)	;STACKS SKIP THE FIRST CELL
1)		JSP	S,GCMARK
LINE 15, PAGE 60
2)		ADDI	B,2
2)		JSP	S,GCMARK
2)		MOVE	B,SPî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 392)		JSP	S,GCMARK


LINE 26, PAGE 65
1)		HRLZI	A,GCSTAB-GCSTOP	;A TABLE OF PAIRS,LIKE UUOACS+L,LINBOT
1)		MOVE	B,GCSTAB(A)
1)		HLR	C,B
1)		MOVN	E,(B)		;LIKE MOVN E,LINBOT
1)		ADDM	E,(C)		;LIKE ADDM E,UUOACS+L , TO OFFSET AC
1)		JSP	L,MARK1		;MARK THE REAL STRING POINTER
1)		AOBJN	A,.-5		;BACK FOR THE REST OF THE FUNNIES
1)	FOR TEN50,<ADDM	E,FPTR>	;A DOUBLE CRAZY
1)	
1)		MOVN	A,CTOP	;LOOP TO MARK STUFF IN COMPILED STORAGE
1)		HRLZI	A,(A)	;USE THIS AS END TEST
1)		MOVE	B,@CSA	;FIRST ONE NEVER LAST ONE BECAUSE CTOP .GE. 1
1)		TLNN	B,VARF!LITF!COMMTF
LINE 22, PAGE 60
2)		MOVN	B,LINBOT
2)		ADDM	B,UUOACS+L	;MAKE L RELATIVE TO LINBOT
2)		MOVEI	B,LINBOT
2)		JSP	L,MARK1	;MARK LINBOT
2)		MOVN	B,SRCBOT
2)		ADDM	B,UUOACS+A
2)		MOVEI	B,SRCBOT
2)		JSP	L,MARK1
2)	
2)		MOVN	A,CTOP	;LOOP TO MARK STUFF IN COMPILED STORAGE
2)		HRLZI	A,(A)	;USE THIS AS END TEST
2)		MOVE	B,@CSA	;FIRST ONE NEVER LAST ONE BECAUSE CTOP>=1
2)		TLNN	B,VARF!LITF!COMMTF


LINE 6, PAGE 66
1)		MOVEI	A,2(A)	;POINT AT NEXT NAME
1)		JRST	GCMKP1
1)	
LINE 6, PAGE 61
2)	
2)		MOVEI	A,1(A)	;PNT TO SECOND WORD OF ENTRY IN RP
2)		MOVE	M,(A)	;LOCATION OF FIRST WORD OF PROCEDURE ENTRY
2)		CAMN	M,[EXP -1]	;IS THE PROCEDURE DEFINED?
2)		AOJA	A,GCMKP1	;NO, TRY NEXT ONE
2)		MOVEI	B,@PSM	;PTR TO PTR TO TEXT OF TO LINE
2)		JSP	L,MARK1
2)	
2)		MOVEI	M,1(M)	;POINT TO NO OF INPUTS
2)		MOVN	B,@PSM	; - NO OF INPUTS
2)		HRLI	M,(B)	; -N,ADDR-1 NOW IN M
2)		AOJGE	M,.+4	;IF NO DUMMIES, NEXT PROCEDURE
2)	î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 402)		MOVEI	B,@PSM	;PTR TO PTR TO INPUT NAME
2)		JSP	L,MARK1
2)		AOBJN	M,.-2	;NEXT INPUT
2)		AOJA	A,GCMKP1
2)	


LINE 10, PAGE 68
1)	GCPS3B:	HRLZI	A,GCSTAB-GCSTOP	;UNDO THE CRAZIES
1)		MOVE	B,GCSTAB(A)
1)		HLR	C,B
1)		MOVE	G,(B)
1)		ADDM	G,(C)
1)		AOBJN	A,.-4
1)	FOR TEN50,<ADDM G,FPTR>
1)		JRST	(P)
1)	
1)	
1)	GCSTAB:	XWD UUOACS+L,LINBOT
1)		XWD UUOACS+A,SRCBOT
1)	FOR TEN50,<
1)		XWD BUFLOC,BUFADR
1)		XWD BUFLOC+1,BUFADR+1>
1)	GCSTOP==.
1)	^L
LINE 10, PAGE 63
2)	GCPS3B:	MOVE	G,LINBOT
2)		ADDM	G,UUOACS+L
2)		MOVE	G,SRCBOT
2)		ADDM	G,UUOACS+A
2)		JRST	(P)
2)	^L


LINE 6, PAGE 69
1)		EXCH	A,JOBCNI >	;CLEAN UP
1)	
LINE 6, PAGE 64
2)		EXCH	A,JOBCNI	;CLEAN UP
2)	>
2)	


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 41

LINE 30, PAGE 69
1)		JRST	2,@JOBTPC >
1)	
LINE 31, PAGE 64
2)		JRST	2,@JOBTPC
2)	>
2)	


LINE 40, PAGE 69
1)	DATAEX:	ERROR	. >
1)	^L
LINE 42, PAGE 64
2)	DATAEX:	ERROR	.
2)	>
2)	^L


LINE 16, PAGE 70
1)		JSP	G,NEWMEM
1)		 JRST	ALLC01	;NO MORE CORE AVAILABLE, TRY TO GET IT WITH GC
1)		TLO	F,GCF
LINE 16, PAGE 65
2)	FOR TEN50,<
2)		HRRZ	C,JOBREL	;NEED MORE CORE
2)		ADDI	C,2000	;ALWAYS ASK FOR ONE AT A TIME
2)		CALL	C,[SIXBIT /CORE/]
2)		 JRST	ALLC01	;NO MORE CORE AVAILABLE, TRY TO GET IT WITH GC
2)	>
2)	FOR TENEX,<
2)		AOS	A,JOBREL
2)		CAIL	A,770000
2)		JRST	ALLC01	;TOO MUCH, CANNOT ASK FOR MORE
2)		JSP	G,NEWMEM
2)		HRRZ	A,JOBUUO
2)	>
2)		TLO	F,GCF


LINE 23, PAGE 70
1)		JSP	G,NEWMEM
1)		 ERROR	PUNT	;CAN'T GET MORE CORE AND CAN'T SAVE BY GC
1)		TLO	F,GCF	;NEW K HAS NOT YET BEEN GC'ED
LINE 34, PAGE 65
2)	FOR TEN50,<
2)		HRRZ	C,JOBREL	;YES, TRY FOR MORE CORE
2)		ADDI	C,2000
2)		CALL	C,[SIXBIT /CORE/]
2)		 ERROR	PUNT	;CAN'T GET MORE CORE AND CAN'T SAVE BY GCî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 422)	>
2)	FOR TENEX,<
2)		AOS	A,JOBREL
2)		CAIL	A,770000
2)		 ERROR	PUNT
2)		JSP	G,NEWMEM
2)	>
2)		TLO	F,GCF	;NEW K HAS NOT YET BEEN GC'ED


LINE 21, PAGE 72
1)	NEWMEM:	HRRZ	C,JOBREL
1)		ADDI	C,2000
1)		CAILE	C,<40*2000>-1
1)		JRST	(G)	;NOT AVAILABLE TO USER, R1
1)		MOVEI	A,(C)
1)		JSP	E,SETMEM	;SET NEW BOUND
1)		MOVNI	A,1777
LINE 21, PAGE 67
2)	NEWMEM:	JSP	E,SETMEM	;SET NEW BOUND
2)		MOVNI	A,1777


LINE 34, PAGE 72
1)		HRRZ	A,JOBUUO
1)		JRST	1(G) >
1)	
1)	FOR TEN50,<
1)	
1)	NEWMEM:	MOVE	A,JOBREL
1)		ADDI	A,1
1)		MOVEI	B,(A)		;FIRST ADDR OF NEW K IN A AND B
1)		CALL	A,[SIXBIT /CORE/]
1)		 JRST	(G)		;NONE AVAILABLE, IMMEDIATE R1
1)		ASH	B,-12		;DECIMAL K
1)		CAIE	A,(B)		;JUST GOT THE LAST K?
1)		 JRST	1(G)		;NO, OK
1)		HRRZ	A,THISPR
1)		CAIN	A,SAVEL+1	;ARE WE DOING A SAVE?
1)		JRST	1(G)		;YES, OK TO USE LAST K
1)		MOVE	A,JOBREL
1)		SUBI	A,2000
1)		CALL	A,[SIXBIT /CORE/]
1)		 ERROR	IOPERR
1)		JRST	(G) >		;MUST RESERVE LAST K FOR PANIC SAVE
1)	^L
1)	
1)	SHORTN:	HRRZ	B,ALOCTB(G)	;SHORTEN THIS SPACE IF IT NEEDS IT
1)		ADDI	A,(B)
1)		CAML	A,RP+1(G)	;MORE THAN MINIMUM ALLOC LEFT OVER?
1)		JRST	(L)		;NOî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 431)		HRL	A,RP+1(G)
1)		HLRZ	B,A	;EVEN IF A CHANGES
1)		SUBI	B,(A)	;THE TWO HALVES REMAIN RELATIVELY CONSTANT
1)		MOVNI	B,(B)
1)		ADD	W,B
1)		BLT	A,@WTOP
1)		MOVEI	A,RP+1(G)
1)		JSP	D,RPOINT
1)		MOVE	W,UUOACS+W	;FOR NEXT @WTOP
1)		JRST	(L)
1)	^L
LINE 29, PAGE 67
2)		JRST	(G)
2)	>
2)	^L


LINE 10, PAGE 74
1)		JSP	L,SHORTN	;YES
LINE 10, PAGE 68
2)	
2)		JSP	L,SHORTN	;YES


LINE 22, PAGE 74
1)		HRRZ	A,UUOACS+S-6(G)
1)		SUB	A,RP+1(G)
1)		MOVEI	A,1(A)
1)		HRLM	A,UUOACS+S-6(G)	;FIX PDL END TEST
1)		AOBJN	G,CMPRS3	;OTHER PDP
LINE 23, PAGE 68
2)		AOBJN	G,CMPRS3	;OTHER PDP


LINE 31, PAGE 74
1)		JRST	CMPRS4	;NO, DON'T CONTRACT
1)		MOVEI	A,@WTOP
1)	FOR TEN50,<
1)		CALL	A,[SIXBIT /CORE/]	;ONLY HAVE TO BE ENOUGH FOR WHAT WE
1)		JRST	ILLUUO >	;BIG TROUBLE
1)	FOR TENEX,<	JSP	E,SETMEM>
1)	
1)	CMPRS4:	MOVEI	A,@WTOP
1)		HRLI	A,1(A)
1)		HRRI	A,2(A)
1)		SETZM	-1(A)
1)		MOVE	B,JOBREL
1)		CAILE	B,(A)
1)		BLT	A,(B)
1)		JRST	UUORET	;HAVE NOW TO FIT IN CORE
1)	^Lî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 44LINE 28, PAGE 68
2)		JRST	UUORET	;NO, DON'T CONTRACT
2)	
2)		MOVEI	A,@WTOP
2)	FOR TEN50,<
2)		CALL	A,[SIXBIT /CORE/]	;ONLY HAVE TO BE ENOUGH FOR WHAT WE
2)		JRST	ILLUUO	;BIG TROUBLE
2)	>
2)	FOR TENEX,<	JSP	E,SETMEM>
2)		JRST	UUORET	;HAVE NOW TO FIT IN CORE
2)	
2)	SHORTN:	HRRZ	B,ALOCTB(G)	;SHORTEN THIS SPACE IF IT NEEDS IT
2)		ADDI	A,(B)
2)		CAML	A,RP+1(G)	;MORE THAN MINIMUM ALLOC LEFT OVER?
2)		JRST	(L)		;NO
2)		HRL	A,RP+1(G)
2)		BLT	A,@WTOP
2)		HLRZ	B,A	;EVEN IF A CHANGES
2)		SUBI	B,(A)	;THE TWO HALVES REMAIN RELATIVELY CONSTANT
2)		MOVNI	B,(B)
2)		MOVEI	A,RP+1(G)
2)		JSP	D,RPOINT
2)		MOVE	W,UUOACS+W	;FOR NEXT @WTOP
2)		JRST	(L)
2)	^L


LINE 5, PAGE 75
1)	<IFB <A3>,<EXP A2>
1)	IFNB <A3>,<XWD A3,A2>>
1)	ALOCTB:	TABLES
LINE 5, PAGE 69
2)	<
2)	IFB <A3>,<EXP A2>
2)	IFNB <A3>,<XWD A3,A2>
2)	>
2)	ALOCTB:	TABLES


LINE 17, PAGE 75
1)		EXP 1,1			;CBOT , DBOT INITIALIZED THE SAME AS CTOP
1)		XWD 525252,123457	;AN INITIAL RANDOM BITS, FIX LATER
1)					;SO THE STARTING POINT IS ALSO RANDOM
1)	FOR TENEX,<	Z	;BITS FOR JFNTAB
1)		XWD 377777,377777	;NO INPUT OR OUTPUT FILE FOR STRING
1)		Z		;DEFAULT DEVICE IS DSK
1)		Z
LINE 19, PAGE 69
2)		EXP 1			;CDBOT INITIALIZED THE SAME AS CTOP
2)		XWD 525252,123457	;AN INITIAL RANDOM BITS, FIX LATER
2)					;SO THE STARTING POINT IS ALSO RANDOMî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 452)	FOR TENEX,< EXP 100,101	;PRIMARY INPUT FILE, PRIMARY OUTPUT FILE
2)	
2)		Z	;BITS FOR JFNTAB
2)		XWD 377777,377777	;NO INPUT OR OUTPUT FILE FOR STRING
2)		[ASCIZ /DSK/]		;DEVICE
2)		Z


LINE 31, PAGE 75
1)		XWD 2,DATAEX	;CH 10
1)		XWD 2,DATAEX	;CH 11
1)		REPEAT 4,<Z>	;CH 12-15 UNUSED
1)		XWD 2,ALOCWS >	;CH 16 ILLEGAL MEMORY READ
1)	TERMIO:
1)	FOR TENEX,<PUSHJ P,XBIN
1)		PUSHJ P,XBOUT>
1)	FOR TEN50,<TTCALL	4,C
1)		TTCALL	1,C >
1)	FOR OFILE,<FOR TENEX,<EXP 100,101>>
1)	SPLLEN==.-SPFRST
LINE 35, PAGE 69
2)		XWD 2,EOFILE	;CH 10
2)		XWD 2,DATAEX	;CH 11
2)		REPEAT 4,<Z>	;CH 12-15 UNUSED
2)		XWD 2,ALOCWS	;CH 16 ILLEGAL MEMORY READ
2)	>
2)	SPLLEN==.-SPFRST


LINE 4, PAGE 76
1)	<
1)	NAME==.-.WBASE
1)	EXP 1,VAL
LINE 4, PAGE 70
2)	<NAME==.-.WBASE
2)	EXP 1,VAL


LINE 1, PAGE 77
1)	ABBT:
LINE 1, PAGE 71
2)	
2)	
2)	ABBT:


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 46

LINE 12, PAGE 77
1)	FOR NFILE,<EXP [ASCIZ /EE/],[ASCIZ /ERASE ENTRY/] > ;CAN'T USE PAIR
1)					;BECAUSE EE IS A MACRO NAME
1)	PAIR EI,EITHER
LINE 14, PAGE 71
2)	PAIR EI,EITHER


LINE 19, PAGE 77
1)	PAIR GB,GOODBYE
1)	PAIR GP,GREATERP
LINE 19, PAGE 71
2)	PAIR GP,GREATERP


LINE 42, PAGE 77
1)	^L
1)	;MACHINE DEFINED VARIABLE NAMES
LINE 41, PAGE 71
2)	
2)	
2)	;MACHINE DEFINED VARIABLE NAMES


LINE 16, PAGE 78
1)	^L
1)	;THE ENTRIES IN THIS TABLE NEED NOT BE IN ORDER OF DECREASING
1)	;PROBABILITY OF OCCURANCE BECAUSE IT IS SEARCHED ONLY AT COMPILE
1)	;TIME.  AT EXECUTE TIME THE ENTRIES ARE REFERENCED ONLY BY NUMBER.
1)	
1)	CMPT:
LINE 57, PAGE 71
2)	
2)	^L
2)	CMPT:


LINE 13, PAGE 79
1)	FOR TURTLE,<	MPM BACK,BACK,0	>
1)		MPM BOTH,BOTH,2
1)		MPM BUTFIRST,BUTFIRST,1
1)		MPM BUTLAST,BUTLAST,1
1)	FOR SAVBRK,<	MPM CANCEL,CANCEL,0 >
1)	CONTNL:	MPM CONTENTS,SPECWD,0
LINE 9, PAGE 72
2)		MPM BOTH,BOTH,2
2)		MPM BUTFIRST,BUTFIRST,1
2)		MPM BUTLAST,BUTLAST,1
2)		MPM CANCEL,RETTRN,0î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 472)	CONTNL:	MPM CONTENTS,SPECWD,0


LINE 29, PAGE 79
1)		MPM EXIT,EXIT,1	;THIS COMMAND IS USEFUL INSIDE HOARDED PROCEDURES
1)	FALSEL:	MPM FALSE,SPECWD,0
1)	FOR NFILE,<FILEL:	MPM FILE,SPECWD,0 >
1)		MPM FIRST,FIRST,1
1)	FOR TURTLE,<	MPM FRONT,FRONT,0 >
1)		MPM GET,GET,0
1)		MPM GO,GOTO,0
1)		MPM GOODBYE,GOODBYE,0
1)		MPM GREATERP,GRATRP,2
1)	FOR TURTLE,<	MPM HORN,HORN,0 >
1)		MPM IF,IF,0
1)		MPM IGNORE,IGNORE,1	;A COMMAND WHICH IGNORES ITS INPUT
1)		MPM IS,IS,2
1)		MPM LAST,LAST,1
1)	FOR TURTLE,<LEFTL:	MPM LEFT,LEFT,0 >
1)	LINELL:	MPM LINE,SPECWD,0
LINE 24, PAGE 72
2)		MPM EXIT,EXIT,1
2)	FALSEL:	MPM FALSE,SPECWD,0
2)		MPM FIRST,FIRST,1
2)		MPM GET,GET,0
2)		MPM GO,GOTO,0
2)		MPM GREATERP,GRATRP,2
2)		MPM IF,IF,0
2)		MPM IS,IS,2
2)		MPM LAST,LAST,1
2)	LINELL:	MPM LINE,SPECWD,0


LINE 7, PAGE 80
1)		MPM PRODUCT,PRODUCT,2
1)		MPM RANDOM,RANDOM,0
1)		MPM REQUEST,REQUEST,0
1)	FOR TURTLE,<RIGHTL:	MPM RIGHT,RIGHT,0 >
1)	SAVEL:	MPM SAVE,SAVE,0
1)		MPM SENTENCE,SENTENCE,2
LINE 7, PAGE 73
2)		MPM RANDOM,RANDOM,0
2)		MPM REQUEST,REQUEST,0
2)		MPM SAVE,SAVE,0
2)		MPM SENTENCE,SENTENCE,2


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 48

LINE 20, PAGE 80
1)	FOR TURTLE,<	MPM TOUCH,TOUCH,0 >
1)	TRACEL:	MPM TRACE,TRACE,0
LINE 18, PAGE 73
2)	TRACEL:	MPM TRACE,TRACE,0


LINE 25, PAGE 80
1)		MPM WAIT,WAIT,1
1)		MPM WORD,WORD,2
LINE 22, PAGE 73
2)		MPM WORD,WORD,2


LINE 10, PAGE 81
1)		ERROR	WHATER
1)		CAIN	A,ALLL+1
LINE 10, PAGE 74
2)		ERROR	LSTER1
2)		CAIN	A,ALLL+1


LINE 25, PAGE 81
1)	FOR NFILE,<CAIN A,FILEL+1
1)		JRST	LFILE >
1)		ERROR	WHATER		;YOU CAN'T LIST THAT.
1)	
LINE 25, PAGE 74
2)		CAIN	A,ABREVL	;"ABBREVIATION"?
2)		JRST	LST1AB		;LIST ONE ABBREVIATION
2)		ERROR	LSTER1	;YOU CAN'T LIST THAT.
2)	


LINE 8, PAGE 82
1)	LSTCT0:	MOVEI	A,LISTTO
1)		SOSA	CPP
1)	LISTAP:	MOVEI	A,LISTPR
LINE 8, PAGE 75
2)	LSTCT0:	SKIPA	A,[EXP LISTTO]
2)	LISTAP:	MOVEI	A,LISTPR


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 49

LINE 25, PAGE 82
1)	
1)	
1)	LISTTO:	MOVE	M,@RPA	;GET POINTER TO PROCEDURE DIRECTORY
1)		CAMN	M,[EXP -1]	;IS THIS PROCED DEFINED?
1)		POPJ	P,	;NO, R1 EXIT IMMEDIATELY
1)		MOVEI	A,-1(A)
1)		MOVEI	B,[ASCIZ /(TRACED) /]
1)		SKIPGE	A,@RPA		;SKIP IF NOT TRACED
1)		PUSHJ	P,TOSS		;TYPE "(TRACED) " IF IT IS
1)		AOS	0(P)
1)		JRST	LSTLN1
1)	
LINE 24, PAGE 75
2)	^L
2)	LISTTO:	MOVE	N,@RPA	;GET POINTER TO PROCEDURE DIRECTORY
2)		CAMN	N,[EXP -1]	;IS THIS PROCED DEFINED?
2)		POPJ	P,	;NO, R1 EXIT IMMEDIATELY
2)		MOVEI	A,-1(A)
2)		MOVE	B,[ASCIZ /(TRACED) /]
2)		SKIPGE	A,@RPA		;SKIP IF NOT TRACED
2)		PUSHJ	P,TOSS		;TYPE "(TRACED) " IF IT IS
2)		MOVEI	B,[ASCIZ /TO /]
2)		PUSHJ	P,TOSS
2)	
2)		PUSHJ	P,PTOSS	;TYPE PROCEDURE NAME
2)	
2)		MOVEI	E,"/"	;PREPARE FOR LISTING DUMMY ARG NAMES
2)		MOVEI	M,1(N)	;PTR TO NO. OF DUMMY ARGS TO M
2)		MOVN	A,@PSM	;GET -NO. ARGS
2)		HRLI	M,(A)	;-N,A-1 IN M
2)		ADDI	M,1	;-N,A IN M, WHERE A IS ADDR OF FIRST DUMMY ARG
2)		JUMPE	A,LISTT2	;JUMP IF NO DUMMIES AT ALL
2)	
2)	LISTT1:	PUSHJ	P,PSPACE
2)		MOVE	B,@PSM	;GET PTR TO GUMMY ARG NAME
2)		MOVEI	A,[ASCIZ /AND /]
2)		TLNE	B,ANDF	;IS THIS DUMMY PRECEDED BY "AND"?
2)		PUSHJ	P,PTOSSM	;YES, TYPE "AND "
2)		MOVE	A,@PSM	;GET DUMMY AGAIN
2)		TRO	F,PREFIX!SUFFIX	;PUT "/" MARKS AROUND IT
2)		PUSHJ	P,PTOSS
2)		AOBJN	M,LISTT1	;GET NEXT DUMMY IF MORE
2)	
2)	LISTT2:	MOVEI	A,(N)	;DONE WITH DUMMIES, SEE IF THERE'S A COMMENT
2)		MOVE	A,@PSA	;PRESERVE M FOR USE IN LISTLL
2)		JUMPE	A,LISTT3	;NO COMMENT
2)		PUSHJ	P,PSPACE
2)		MOVEI	E,";"	;PREFIX COMMENT WITH SEMICOLONî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 502)		TRO	F,PREFIX
2)		PUSHJ	P,PTOSS
2)	
2)	LISTT3:	PUSHJ	P,CRLF	;PRETTY UP
2)		JRST	CPOPJ1	;R2
2)	


LINE 40, PAGE 82
1)		JUMPE	A,[ERROR NOPERR]	;MUST HAVE A PROCEDURE OPEN
1)		PUSHJ	P,LISTTO	;LIST IT
LINE 45, PAGE 76
2)		JUMPE	A,[ERROR .]	;MUST HAVE A PROCEDURE OPEN
2)		PUSHJ	P,LISTTO	;LIST IT


LINE 7, PAGE 83
1)		MOVEI	M,1(M)
1)		PUSHJ	P,LSTPLN	;DO CURRENT LINE
LINE 7, PAGE 77
2)		PUSHJ	P,LSTPLN	;DO CURRENT LINE


LINE 12, PAGE 83
1)		CAMN	A,TOPROD	;SHOULD WE TYPE "END"? TESTING RH ONLY
1)		TLNE	F,SAVEF
1)		SKIPA
1)		POPJ	P,		;NO, PROCEDURE IS STILL OPEN
LINE 11, PAGE 77
2)		CAMN	A,TOPROD
2)	;SHOULD WE TYPE "END"? TESTING RH ONLY
2)		POPJ	P,		;NO, PROCEDURE IS STILL OPEN


LINE 29, PAGE 83
1)		ERROR	NOPERR		;MUST HAVE A PROCEDURE OPEN
1)		PUSHJ	P,NUMEVL
LINE 27, PAGE 77
2)		ERROR	.		;MUST HAVE A PROCEDURE OPEN
2)		PUSHJ	P,NUMEVL


LINE 24, PAGE 84
1)	^L
LINE 24, PAGE 78
2)	
2)	
2)	LST1AB:	PUSHJ	P,EVAL
2)		POP	S,A
2)		HRRZ	B,UA
2)		PUSHJ	P,LOOKUP	;LOOK UP THAT ABBREVIATIONî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 512)		 ERROR			;NO SUCH ABBREVIATION
2)		MOVEI	G,(N)
2)		MOVE	A,(G)
2)		JRST	LSTAAR
2)	^L


LINE 7, PAGE 85
1)	LSTLN1:	MOVEI	A,1	;ENTER HERE FOR LIST TITLE, DON'T TYPE LINE NO
1)		ADD	A,CHARNO
LINE 7, PAGE 79
2)		MOVEI	A,1
2)		ADD	A,CHARNO


LINE 17, PAGE 85
1)		SKIPE	CHARNO		;SO "TO" WON'T BE " TO"
1)		PUSHJ	P,PSPACE	;SPACE BEFORE EACH ELEMENT
LINE 17, PAGE 79
2)		PUSHJ	P,PSPACE	;SPACE BEFORE EACH ELEMENT


LINE 9, PAGE 87
1)	FOR NFILE,<POP	P,A	;THE RETURN TO LISTXT
1)		JSP	H,FILEGO
1)		 ERROR	NOFILE
1)		PUSHJ	P,SEARCH
1)		 ERROR	NOENTRY
1)		MOVEI	D,4(G)
1)		MOVE	C,@E	;==	READ	@E,1
1)		MOVEI	E,1
1)		PUSHJ	P,.READ
1)		PUSHJ	P,READC
1)		CAIE	C,176	;SKIP OVER COPY OF NAME
1)		JRST	.-2
1)		MOVE	A,[PUSHJ P,READC]
1)		MOVEM	A,CHIN >
1)	
1)	FOR OFILE,<PUSHJ	P,GENFLN
1)		MOVEI	A,LEOFIL	;WHERE TO GO ON EOF
1)		PUSHJ	P,OPENR >	;OPEN THE FILE FOR READING
1)	
1)	LNLINE:	PUSHJ	P,TIS	;READ A LINE
1)		 ERROR		;SHOULD HAVE GOTTEN AN EOF INTERRUPT
1)		POP	S,A
LINE 9, PAGE 81
2)		PUSHJ	P,GENFLN
2)		MOVEI	A,LEOFIL	;WHERE TO GO ON EOF
2)		PUSHJ	P,OPENR	;OPEN THE FILE FOR READING
2)	LNLINE:	PUSHJ	P,TIS	;READ A LINE
2)		 JRST COMEXî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 522)		POP	S,A


LINE 4, PAGE 88
1)		CAIE	C,024		;^T IS ALSO A TERMINATOR
1)		CAIN	C," "
LINE 4, PAGE 82
2)		CAIN	C," "


LINE 12, PAGE 88
1)	FOR OFILE,<FOR TENEX,<
1)	LEOFIL:	CLOSF		;COME HERE ON EOF FOR LIST
1)		 ERROR
1)		POP	P,A
1)		POP	P,A
LINE 11, PAGE 82
2)	FOR TENEX,<
2)	LEOFIL:	CLOSF		;COME HERE ON EOF FOR LIST
2)		 ERROR
2)		POP	P,A


LINE 21, PAGE 88
1)		SKIPN	INFILE
1)		TLZ	F,GETF
1)		DEBRK
1)	>>
1)	^L
LINE 19, PAGE 82
2)		MOVEI	A,100
2)		CAMN	A,INFILE
2)		TLZ	F,GETF
2)		DEBRK
2)	>
2)	^L


LINE 26, PAGE 89
1)	EDTLN1:	JSP	D,COMEXR	;DO END OF LINE CHECKING
1)		TLO	F,EDITF	;WE ARE NOW EDITING
LINE 26, PAGE 83
2)		JSP	D,COMEXR	;DO END OF LINE CHECKING
2)		TLO	F,EDITF	;WE ARE NOW EDITING


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 53

LINE 31, PAGE 89
1)	EDITTL:	SKIPN	M,TOPROD	;CURRENTLY IN A PROCEDURE?
1)		 ERROR	NOPERR
1)		PUSHJ	P,NEWSTR
LINE 31, PAGE 83
2)	^L
2)	EDITTL:	SKIPN	M,TOPROD	;CURRENTLY IN A PROCEDURE?
2)		ERROR
2)		PUSHJ	P,NEWSTR


LINE 37, PAGE 89
1)		MOVEI	A,(M)
1)		MOVE	D,@RPA
1)		MOVEI	D,1(D)
1)		MOVE	M,@PSD
1)		PUSHJ	P,LINGE0
1)		JRST	EDTLN1
1)	
LINE 8, PAGE 84
2)		PUSHJ	P,DSPACE
2)		MOVEI	D,TOL+1		;"TO"
2)		PUSHJ	P,LNGMP
2)		PUSHJ	P,DSPACE
2)		MOVEI	D,(M)		;NAME OF CURRENT PROCEDURE
2)		PUSHJ	P,LNGUP		;COPY USER PROCEDURE NAME
2)	
2)		MOVEI	A,(M)
2)		MOVE	M,@RPA
2)		MOVEI	M,1(M)
2)		MOVN	C,@PSM		;- NO OF DUMMIES
2)		JUMPE	C,EDTTL8	;NO DUMMIES, TRY FOR COMMENT
2)		MOVEI	M,1(M)		;POINT AT FIRST DUMMY
2)		HRLI	M,(C)
2)	
2)	EDTTL2:	PUSHJ	P,DSPACE
2)		MOVE	D,@PSM		;GET A DUMMY
2)		TLNN	D,ANDF		;PRECEDED BY "AND"
2)		JRST	EDTTL3		;NO
2)		MOVEI	D,ANDL+1
2)		PUSHJ	P,LNGMP
2)		PUSHJ	P,DSPACE
2)		MOVE	D,@PSM		;GET DUMMY AGAIN
2)	
2)	EDTTL3:	PUSHJ	P,LNGV		;TYPE DUMMY WITH SLASHES
2)		AOBJN	M,EDTTL2	;NEXT IF THERE IS ANOTHER
2)	
2)	EDTTL8:	MOVE	A,TOPROD
2)		MOVE	M,@RPAî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 542)		SKIPN	D,@PSM		;IS THERE A COMMENT?
2)		JRST	EDTTL9		;NO
2)		PUSHJ	P,DSPACE
2)		PUSHJ	P,LNGCMT	;STORE COMMENT
2)	
2)	EDTTL9:	PUSHJ	P,ENDSTR	;FINISH STRING
2)		TLO	F,EDITF		;DENOTE THAT TIS SHOULD WORK IN EDIT MODE
2)		JRST	COMEX
2)	


LINE 7, PAGE 91
1)		 ERROR	WHATER
1)		CAIN	A,LINELL+1	;IS IT "LINE"
LINE 7, PAGE 86
2)		 ERROR	ERSER1
2)		CAIN	A,LINELL+1	;IS IT "LINE"


LINE 12, PAGE 91
1)		CAIN	A,ABREVL+1
1)		JRST	ERSABB
1)		CAIN	A,TRACEL+1
1)		JRST	ERASTR	;ERASE TRACE
1)	FOR NFILE,<CAIN A,ENTRYL+1
1)		JRST	ERASEN >
1)		ERROR	WHATER	;NONE OF THE ABOVE
1)	
LINE 12, PAGE 86
2)		CAMN	A,ABREVL+1
2)		JRST	ERSABB
2)		CAIN	A,TRACEL+1
2)		JRST	ERASTR	;ERASE TRACE
2)		ERROR	ERSER1	;NONE OF THE ABOVE
2)	


LINE 5, PAGE 92
1)		 ERROR	WHATER
1)		CAIN	A,NAMESL+1	;IS IT "NAMES"
LINE 5, PAGE 87
2)		 ERROR
2)		CAIN	A,NAMESL+1	;IS IT "NAMES"


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 55

LINE 14, PAGE 92
1)		ERROR	WHATER
1)	
LINE 14, PAGE 87
2)		ERROR
2)	


LINE 38, PAGE 92
1)		SETZM	BSP	;CLEAR ALL SAVED BREAKS
1)		SETZM	GODEPT
1)		JRST	RESET
LINE 38, PAGE 87
2)		MOVE	S,SP	;CLEAR ARG STACK
2)		MOVE	P,PP	;CLEAR PUSHDOWN STACK
2)		SQUEZE	;COMPRESS STORAGE
2)		JRST	RESET


LINE 4, PAGE 93
1)		MOVE	A,(S)
LINE 4, PAGE 88
2)		EXP	.+1
2)		POP	P,A
2)		MOVE	A,(S)


LINE 16, PAGE 93
1)		 ERROR	WHATER
1)		PUSH	S,(S)
LINE 18, PAGE 88
2)		 ERROR
2)		PUSH	S,(S)


LINE 24, PAGE 93
1)		 ERROR	WHATER
1)		TLNN	A,UPRF	;ONLY USER DEFINED PROCEDURES ARE TRACED
1)		 ERROR	WHATER
1)		MOVEI	A,-1(A)
LINE 26, PAGE 88
2)		 ERROR
2)		TLNN	A,UPRF	;ONLY USER DEFINED PROCEDURES ARE TRACED
2)		 ERROR
2)		MOVEI	A,-1(A)


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 56

LINE 2, PAGE 94
1)	ERSLN1:	MOVEI	A,1(A)	;POINT AT POINTER TO COMPILED CODE
1)		PUSHJ	P,GCCS	;FLUSH COMPILED CODE FOR LINE
1)		MOVEI	A,-1(A)
1)		MOVEI	C,@PSA
LINE 2, PAGE 89
2)	ERSLN1:	PUSH	P,A	;@PSA POINTS TO LINE NO
2)		PUSH	P,A
2)		MOVEI	A,1(A)	;POINT AT POINTER TO COMPILED CODE
2)		PUSHJ	P,GCCS	;FLUSH COMPILED CODE FOR LINE
2)		POP	P,A	;GCCS CLOBBERS THIS ONE
2)		POP	P,A
2)		MOVEI	C,@PSA


LINE 15, PAGE 94
1)	ERASPR:	MOVEI	A,-1(A)	;CLEAR LH OF A
1)		HRLZI	B,TRACEF
1)		ANDCAM	B,@RPA	;ERASE THE TRACE ON IT IF ANY
1)		MOVEI	A,1(A)
1)	
1)		MOVNI	B,1	;ERASE PROCEDURE
1)		CAMN	B,@RPA	;IS THE PROCEDURE DEFINED?
1)		 POPJ	P,	;NO, QUIT EARLY
1)		CAMN	A,TOPROD	;IS IT THE PROCEDURE CURRENTLY BEING DEFINED
LINE 18, PAGE 89
2)	ERASPR:	MOVNI	B,1	;ERASE PROCEDURE
2)		CAMN	B,@RPA	;IS THE PROCEDURE DEFINED?
2)		 POPJ	P,	;NO, QUIT EARLY
2)		MOVEI	A,-1(A)	;CLEAR LH OF A
2)		HRLZI	B,TRACEF
2)		ANDCAM	B,@RPA	;ERASE THE TRACE ON IT IF ANY
2)		MOVEI	A,1(A)
2)		CAMN	A,TOPROD	;IS IT THE PROCEDURE CURRENTLY BEING DEFINED


LINE 30, PAGE 94
1)	
1)		PUSHJ	P,ERSLN1	;ERASE ONE LINE
1)		SKIPE	@PSA		;ANY LEFT?
1)		JRST	.-2		;YES, ERASE ONE MORE
1)	
LINE 32, PAGE 89
2)		MOVEI	A,1(A)	;PT AT NO OF DUMMIES
2)		ADD	A,@PSA	;SKIP OVER DUMMIES
2)		MOVEI	A,1(A)	;PT AT FIRST LINE NO
2)		SKIPN	@PSA	;ANY MORE LINES?
2)		JRST	.+3	;NO
2)		PUSHJ	P,ERSLN1î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 572)		AOJA	A,.-3	;GO BACK FOR NEXT LINE
2)	


LINE 1, PAGE 95
1)	FOR OFILE,<
1)	
LINE 1, PAGE 90
2)	


LINE 8, PAGE 95
1)		JSP	D,SAVEUP
1)		TLZ	F,STEPF		;FIRST LINE OF FILE MAY BE COMMENT
1)		PUSHJ	P,TIS
1)		 ERROR	IOPERR		;CANNOT GET A RUBOUT FROM THE FILE
1)		MOVE	A,(S)
1)		HRLI	A,010700+W
1)		ILDB	C,A
1)		CAIE	C,";"		;IS THE FIRST LINE COMMENT?
1)		JRST	MAINL1		;NO, TREAT THE LINE NORMALLY
1)		POP	S,A
1)		PUSHJ	P,PTOSS		;TYPE THE COMMENT
1)		PUSHJ	P,CRLF
1)		JRST	MAINL
1)	
LINE 7, PAGE 90
2)		TLO	F,ERRORF
2)		PUSH	P,[EXP EOF1]
2)		JRST	UPROD1		;CALL MAIN
2)	


LINE 28, PAGE 95
1)		MOVE	A,SPP
1)		JSP	C,SETPDL
1)		JSP	D,RESTOR
1)	
1)		POP	P,A		;PREVIOUS FILE HANDLE
1)		MOVEM	A,INFILE
1)		SKIPN	A
1)		TLZ	F,GETF		;NOT STILL GETTING
LINE 17, PAGE 90
2)		JRST	GETOUT		;RETURN TO PREVIOUS STATE
2)	
2)	EOF1:	POP	P,A		;PREVIOUS FILE HANDLE
2)		MOVEM	A,INFILE
2)		CAIN	A,100
2)		TLZ	F,GETF		;NOT STILL GETTING


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 58

LINE 46, PAGE 95
1)		 ERROR	NOFILE
1)		MOVE	B,[XWD 070000,600000]
LINE 33, PAGE 90
2)		 ERROR	.
2)		MOVE	B,[XWD 070000,600000]


LINE 55, PAGE 95
1)		JRST	(A)		;POPJ WITH AN INTERVENING PUSH  >
1)	^L
1)	FOR TEN50,<
1)	EOF1:
1)	OPENR:
1)	OPENW:
1)	LEOFIL:
1)	CLOSEF:
1)	EOFILE:	POPJ	P,     >
1)	
1)	
LINE 42, PAGE 90
2)		JRST	(A)		;POPJ WITH AN INTERVENING PUSH
2)	>
2)	^L
2)	


LINE 27, PAGE 96
1)		POPJ	P, >
1)	
1)	^L
LINE 19, PAGE 91
2)		POPJ	P,
2)	
2)	GETFLN:	PUSHJ	P,GNE	
2)		 ERROR	ERMSSG
2)		TLNN	A,UPRF	
2)		 ERROR	FILER1
2)		MOVEI	A,-1(A)
2)		PUSH	S,@RPA
2)		POPJ	P,
2)	>
2)	^L


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 59

LINE 6, PAGE 97
1)		MOVE	A,CPP		;STORE COMMENT IN FILE IF ON SAVE LINE
1)		MOVEI	A,1(A)		;POINT AT NEXT ELEMENT
1)		SKIPE	A,@CSA		;IS IT NOT THERE?
1)		TLNN	A,COMMTF	;MAKE SURE IT IS A COMMENT
1)		JRST	SAVE1		;NOT A COMMENT
1)		MOVEI	C,";"
1)		PUSHJ	P,TYO
1)		PUSHJ	P,PTOSS
1)		PUSHJ	P,CRLF
1)	
1)	SAVE1:	PUSHJ	P,LISTAP	;TYPE ALL PROCEDURES TO FILE
1)		PUSHJ	P,SAVAN		;TYPE ALL GLOBAL NAMES TO FILE
LINE 6, PAGE 92
2)		PUSHJ	P,LISTAP	;TYPE ALL PROCEDURES TO FILE
2)		PUSHJ	P,SAVAN		;TYPE ALL GLOBAL NAMES TO FILE


LINE 21, PAGE 97
1)		JRST	COMEX >
1)	
LINE 11, PAGE 92
2)		JRST	COMEX
2)	


LINE 31, PAGE 97
1)		PUSHJ	P,PSPACE
1)		JRST	LSTNR1
LINE 21, PAGE 92
2)		PUSHJ	P,DSPACE
2)		JRST	LSTNR1


LINE 47, PAGE 97
1)	
1)	
1)	GETFLN:	PUSHJ	P,GNE	
1)		 ERROR	ERMSSG
1)		TLNN	A,UPRF	
1)		 ERROR	FILER1
1)		MOVEI	A,-1(A)
1)		PUSH	S,@RPA
1)		POPJ	P,
1)	^L
LINE 37, PAGE 92
2)	^L


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 60

LINE 5, PAGE 98
1)	FOR OFILE,<FOR TENEX,<
1)	
LINE 5, PAGE 93
2)	FOR TENEX,<
2)	


LINE 49, PAGE 98
1)		JRST	(A)  >
1)	> ;CLOSE THE OFILE CONDITIONAL
1)	^L
1)	
1)	ERRORR:	MOVE	P,[IOWD ERPDLL,ERRPDL]
1)		TRZ	F,PREFIX!SUFFIX
1)		MOVE	A,TERMIO+1
1)		TLZE	F,SAVEF
1)		MOVEM	A,CHOUT
1)		SKIPE	CHARNO
1)		PUSHJ	P,CRLF
1)		HRRZ	C,JOBUUO
1)		CAIL	C,MAXERR
1)		SETZ	C,
1)		HLRZ	A,ERRORS(C)	;GET TEXT MESSAGE
LINE 49, PAGE 93
2)		JRST	(A)
2)	>
2)	^L
2)	
2)	ERRORR:	SKIPE	CHARNO
2)		PUSHJ	P,CRLF
2)		HRRZ	C,JOBUUO
2)		CAIL	C,MAXERR
2)		JRST	ERR0
2)		HLRZ	A,ERRORS(C)	;GET TEXT MESSAGE


LINE 29, PAGE 99
1)		JRST	ERROUT
1)	
1)	
1)	NONAME:	PUSHJ	P,PTOS
1)		HRRZ	A,UUOTRP
1)		SUBI	A,1
LINE 24, PAGE 94
2)	ERROUT:	TLO	F,ERRORF
2)		TLZE	F,TIF
2)		JRST	ERROT2	;WERE IN TYPEIN AT BREAK
2)	ERROT1:	MOVE	C,CBOTî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 612)		MOVEM	C,CTOP	;FLUSH THE DIRECT LINE THAT LAST LOST
2)		JRST	RESET
2)		AOS	GODEPTH	;IS ANOTHER GO ON THE STACK
2)		JRST	UPROD1
2)	
2)	ERROT2:	MOVEI	A,TISPOP
2)		TLZE	F,RQF	;WERE WE IN A REQUEST
2)		JRST	ERROT1	;YES
2)	TISPOP:	TLZ	F,ERRORF!BROKE
2)	FOR TENEX,<POP P,A>
2)		POP	P,0(P)
2)		JRST	TISR1
2)	
2)	ERR0:	MOVEI	A,[ASCIZ /ERROR AT /]
2)		PUSHJ	P,PTOSSM
2)	ERR2:	HRRZ	A,UUOTRP
2)		SUBI	A,1


LINE 1, PAGE 100
1)	ERROUT:	TDZ	F,[XWD TIF,MAKEF]
1)		MOVE	P,UUOACS+P	;SAFE TO USE REGULAR PDL NOW
1)		TLZE	F,BROKE		;WAS ERROR THE BREAK KEY
1)		SKIPN	PRODNM		;AND WAS A STORED LINE INTERRUPTED?
1)		JRST	FLUSHM
1)	
1)	
1)	
1)	FOR SAVBRK,<
1)	ERROT2:	TLZ	F,RQF		;WHICH WAY DO WE CALL MAINL
1)		TLZE	F,TOF		;IN A PRINT OR TYPE?
1)		JRST	ERROT4		;YES, GO PROCEEDS WITH THE NEXT LINE
1)		TLZN	F,GETF		;IN A GET?
1)		JRST	ERROT3	;NO, BREAK AT EXECUTE RESTARTS CURRENT LINE
1)	FOR OFILE,<FOR TENEX,<	MOVEI	A,100	;CLOSE THE FILE AND RETURN TO TERMINAL
1)		EXCH	A,INFILE
1)		MOVEI	A,(A)
1)		CLOSF
1)		 ERROR	IOPERR >>
1)	FOR NFILE,<JSP	H,CLOSUP>
1)	
1)		MOVE	A,BSP		;GETTING, CLOSE THE FILE AND
1)		JSP	C,SETPDL	;SET UP TO REDO THE GET ON A GO
1)		MOVE	A,TERMIO
1)		MOVEM	A,CHIN
1)		JSP	D,RESTOR	;RESTORE THE LINE THAT HAD THE GET
1)	
1)	ERROT3:	SOS	LINENO	;SO UPNEXT WILL FIND THIS ONE AGAIN
1)	ERROT4:	MOVE	A,SPP
1)		ADDI	A,1
1)		JSP	C,SETPDL	;GET TO BEGINNING OF THE LINEî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 621)		JSP	D,SAVEUP	;SAVEUP FOR GO
1)		AOS	GODEPTH		;ONE MORE GO ON THE STACK
1)		PUSH	P,BSP
1)		MOVE	A,SPP
1)		MOVEM	A,BSP		;NEW "TOP LEVEL"
1)	FOR TENEX,<	MOVEI	A,101		;TERMINAL OUTPUT
1)		DOBE >			;DISMISS UNTIL ERROR MESSAGE IS
1)					;COMPLETELY OUT
1)		JRST	RESET >		;CLEAR WATING BREAKS AND RESTART PSI
1)	
1)	^L
1)	FLUSHM:	TLZN	F,GETF		;NO, BUT WERE WE GETTING FROM A FILE?
1)		JRST	ERROT1		;NO
1)	FOR OFILE,<FOR TENEX,<	MOVEI	A,100
1)		EXCH	A,INFILE
1)		MOVEI	A,(A)		;LH 0
1)		CLOSF			;CLOSE THE FILE BEING GOTTEN FROM
1)		ERROR	IOPERR >>	;THIS HAS TO BE WRONG
1)	FOR NFILE,<JSP	H,CLOSUP>
1)	
1)	ERROT1:	HRRZ	G,BSP
1)		ADD	G,PP
1)	FLUSHL:	MOVE	A,SPP
1)		ADDI	A,1
1)		JSP C,SETPDL
1)		CAIL	G,(P)		;SET BACK TO BSP?
1)		JRST	FLUSHE		;YES
1)		POP	P,A		;RETURN FROM EXECUTE
1)		JSP	D,RESTOR	;ONE MORE PDL LEVEL
1)		JRST	FLUSHL
1)	
1)	FLUSHE:	POP	P,A		;MAY BE SAVED CBOT
1)		TLZN	F,STEPF
1)		SKIPA	A,CBOT		;CBOT, NOT PDL, CONTAINS CORRECT CBOT
1)		ADD	A,CDBOT
1)		MOVEM	A,CBOT
1)		MOVEM	A,CTOP
1)		GARBAG
1)		JRST	RESET
1)	^L
1)	MATCHG:	PUSHJ	P,PTOS
1)		MOVE	C,UUOACS+D	;THE OFFENDING TERMINATOR
1)		PUSHJ	P,TYO
1)	MATCG1:	MOVEI	C,"?"
1)		PUSHJ	P,TYO
LINE 1, PAGE 95
2)	NONAME:	PUSHJ	P,PTOS
2)		JRST	ERR2
2)	
2)	MATCHG:	PUSHJ	P,PTOS
2)		MOVE	C,UUOACS+D	;THE OFFENDING TERMINATORî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 632)		PUSHJ	P,TYO
2)		MOVEI	C,"?"
2)		PUSHJ	P,TYO


LINE 13, PAGE 102
1)	.INER3:	PUSHJ	P,PTOS
LINE 15, PAGE 95
2)	PUNTER:	PUSHJ	P,PTOS
2)		PUSHJ	P,CRLF
2)		JRST	RESET
2)	
2)	.INER3:	PUSHJ	P,PTOS


LINE 7, PAGE 103
1)	.COMER:	TLZN	F,UPFF
1)		JRST	.PMNAM		;A SYSTEM COMMAND
1)		SKIPA	E,UUOACS+E	;A USER DEFINED COMMAND
1)	UNDFND:	MOVE	E,UUOACS+A
LINE 7, PAGE 96
2)	UNDFND:	MOVE	E,UUOACS+A


LINE 18, PAGE 103
1)		MOVE	A,-1(S)
1)		JSP	H,ETLIT	;ARG ONE OF TWO
1)		MOVEI	A,[ASCIZ / AND /]
LINE 15, PAGE 96
2)		MOVEI	E,042	;QUOTE
2)		TRO	F,PREFIX!SUFFIX
2)		MOVE	A,-1(S)
2)		PUSHJ	P,PTOSS	;ARG1 OF TWO
2)		MOVEI	A,[ASCIZ / AND /]


LINE 24, PAGE 103
1)		JSP	H,ETLIT
1)		PUSHJ	P,PTYO
LINE 23, PAGE 96
2)		MOVEI	E,042
2)		PUSHJ	P,PTOSS
2)		MOVEI	B,"?"
2)		PUSHJ	P,PTYO


; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 64

LINE 32, PAGE 103
1)		MOVEI	A,[ASCIZ / OF /]
1)		JRST TWARG9
1)	
1)	.NOCMD:	PUSHJ	P,PTOS
1)		POP	S,A
1)		JSP	H,ETLIT
1)		JRST	MATCG1
1)	
LINE 33, PAGE 96
2)		MOVEI	A,[ASCIZ /OF /]
2)		JRST TWARG9
2)	
2)	


LINE 1, PAGE 104
1)	.XTRER:	MOVE	E,A
1)		SOS	CPP
1)		AOS	A,CPP
1)		MOVE	A,@CSA		;NEXT ELEMENT
1)		JSP	H,ETYPIT
1)		JUMPN	A,.-3		;NOT END OF LINE
1)		JRST	TYPAFT+1	;TYPE IS EXTRA
1)	
1)	LNALND:	MOVE	E,A
1)		MOVEI	A,[ASCIZ /LINE /]
1)		PUSHJ	P,PTOSSM
1)		MOVE	A,LINENO
1)		PUSHJ	P,DECPRT
1)		MOVEI	A,[ASCIZ / OF /]
1)		PUSHJ	P,PTOSSM
1)		MOVE	A,PRODNM
1)		JSP	H,ETUP		;TYPE USER PROCEDURE NAME
1)		MOVEI	A,[ASCIZ / WAS /]
1)		PUSHJ	P,PTOSSM
1)		MOVE	A,E
1)		PUSHJ	P,PTOS
1)		MOVEI	A,[ASCIZ / DURING EXECUTION./]
1)		PUSHJ	P,PTOSSM
1)		JRST	ALLERP
1)	
1)	ETYPA:	MOVE	E,UUOACS+A
1)		EXCH	A,E
1)		JSP	H,ETYPIT
1)		JRST	TYPAFT+1
1)	^L
1)	BRAKER:	PUSHJ	P,PTOS
1)		TLO	F,BROKEî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 651)		JRST	ALLERR
1)	
1)	
1)	SETPDL:	HLRZ	B,A
1)		ADD	B,SP
1)		HRRZI	S,(B)
1)		SUB	B,SP+1
1)		HRLI	S,1(B)
1)	
1)		ADD	A,PP
1)		HRRZI	P,-1(A)
1)		SUB	A,PP+1
1)		HRLI	P,1(A)
1)		JRST	(C)
1)	
LINE 1, PAGE 97
2)	BRAKER:	PUSHJ	P,PTOS
2)	FOR TEN50,<	PUSHJ	P,SETTTM >
2)	FOR TENEX,<	MOVEI	A,.+3
2)		MOVEM	A,LEVLTB
2)		DEBRK
2)	>
2)		TLO	F,BROKE
2)		JRST	ALLERR
2)	
2)	REDO:	MOVE	S,SP
2)		SUB	S,SP+1
2)		ADD	S,SSP
2)		HRLI	S,(S)
2)		HRR	S,SP
2)		ADD	S,SSP
2)	
2)		MOVE	P,PP
2)		SUB	P,PP+1
2)		ADD	P,SPP
2)		HRLI	P,(P)
2)		HRR	P,PP
2)		ADD	P,SPP
2)		JRST	MAINL	;HAD CALLED BREAKERR FROM MIDDLE OF LINE (DURING TYPEOUT)
2)	


LINE 38, PAGE 105
1)		TRO	F,PREFIX!SUFFIX
1)		PUSHJ	P,PTOSS
1)		MOVE	E,G
1)		JRST	(H)
LINE 44, PAGE 97
2)		TLO	F,PREFIX!SUFFIX
2)		PUSHJ	P,PTOSS
2)		MOVE	E,(G)î

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 662)		JRST	(H)


LINE 7, PAGE 106
1)	EE ABBER1,LOOP IN ABBREVIATION EXPANSION.
1)	EE CANER1,NOTHING TO CANCEL.
1)	EE COMERR, CAN'T BE USED AS AN INPUT. IT DOES NOT OUTPUT.,.COMER
1)	EE DIRERR, CAN ONLY BE DIRECT.,.PMNAM
1)	EE EDTER1,YOU CANNOT EDIT THAT.
1)	EE EDTER2,YOU ARE ALREADY EDITING ,.TNAME
1)	EE ERXTRA, IS EXTRA.,.XTRER
1)	EE ERMSSG,SOMETHING MISSING.,
1)	EE EVER3, NEEDS A MEANING.,UNDFND
LINE 7, PAGE 98
2)	EE COMERR, CANNOT BE USED AS AN INPUT. IT DOES NOT OUTPUT.,.PMNAM
2)	EE EDTER1,YOU CANNOT EDIT THAT.
2)	EE EDTER2,YOU ARE ALREADY EDITING ,.TNAME
2)	EE ENDERR,END WHAT? YOU ARE NOT DEFINING ANYTHING.
2)	EE ERXTRA,SOMETHING EXTRA.,
2)	EE ERMSSG,SOMETHING MISSING.,
2)	EE ERSER1,ERASE WHAT?
2)	EE EVER3, NEEDS A MEANING.,UNDFND


LINE 19, PAGE 106
1)	EE FILER9,FILE NAME TOO LONG.
1)	EE GOERR1,GO WHERE?
LINE 18, PAGE 98
2)	EE GOERR1,GO WHERE?


LINE 24, PAGE 106
1)	EE INERR1,MATCHING ,MATCHG
LINE 22, PAGE 98
2)	EE IFERR,IF WHAT?
2)	EE INERR1,MATCHING ,MATCHG


LINE 28, PAGE 106
1)	EE IOPERR,I AM IN TROUBLE. TELL YOUR TEACHER.
1)	EE LNAERR,ALTERED,LNALND
1)	EE LNDERR,DELETED,LNALND
1)	EE LSTER2,LIST ALL WHAT?
1)	EE NMERR5,DON'T USE THE EMPTY WORD FOR A NAME.,
1)	EE NOCMD,THERE IS NO COMMAND FOR ,.NOCMD
1)	EE NOENTRY,NO SUCH ENTRY.
1)	EE NOFILE,NO SUCH FILE.
1)	EE NOPERR, WHAT? YOU ARE NOT DEFINING ANYTHING.,.PMNAM
1)	EE NOPROD,THERE IS NO PROCEDURE ,.NOPRO
LINE 27, PAGE 98
2)	EE IOPERR,I AM IN TROUBLE. TELL YOUR TEACHER.,PUNTERî

; LOG308.MAC;1 & DTA2:LOGO.911  8-MAR-71 1500	PAGE 672)	EE LSTER1,LIST WHAT?
2)	EE LSTER2,LIST ALL WHAT?
2)	EE NMERR5,DON'T USE THE EMPTY WORD FOR A NAME.,
2)	EE NOCMD,THERE IS NO COMMAND ON THIS LINE.
2)	EE NOPROD,THERE IS NO PROCEDURE ,.NOPRO


LINE 42, PAGE 106
1)	EE STOERR, CAN ONLY BE USED IN A PROCEDURE.,.PMNAM
1)	EE SUMERR,INPUTS MUST BE NUMBERS.,TWOARG
1)	EE TITER2,TITLE MUST BE FOLLOWED BY "TO".
1)	EE TOERR2,YOU NEED / MARKS AROUND EACH INPUT.,
1)	EE TOERR3, IS USED BY LOGO.,.TOER3
1)	EE TOERR4,DON'T TRY TO DEFINE ANOTHER PROCEDURE INSIDE THIS ONE.,
1)	EE TOERR5, PROCEDURE NAME.,CANTBA
1)	EE TOERR6, IS ALREADY DEFINED.,ETYPA
1)	EE TOOFUL,NO ROOM FOR ANOTHER GET; SAVE AND ERASE FIRST.
1)	EE WHATER, WHAT?,.PMNAM
1)	EE WRDERR,YOU CAN'T MAKE A WORD OUT OF A SENTENCE.,TWOARG
LINE 37, PAGE 98
2)	EE SUMERR,INPUTS MUST BE NUMBERS.,TWOARG
2)	EE TOERR2,YOU NEED / MARKS AROUND EACH INPUT.,
2)	EE TOERR3, IS USED BY LOGO.,.TOER3
2)	EE TOERR4,DON'T TRY TO DEFINE ANOTHER PROCEDURE INSIDE THIS ONE.,
2)	EE WRDERR,YOU CAN'T MAKE A WORD OUT OF A SENTENCE.,TWOARG


LINE 56, PAGE 106
1)	EE PUNT,STORAGE FULL
1)	BLOCK 5	;FOR PATCHING THIS LIST
1)	MAXERR==.-ERRORS
1)	
1)	
LINE 45, PAGE 98
2)	EE PUNT,STORAGE FULL,PUNTER
2)	BLOCK 5	;FOR PATCHING THIS LIST
2)	MAXERR==.-ERRORS
2)	


LINE 64, PAGE 106
1)	
1)	
1)	LOGEND:	END LOGO
LINE 52, PAGE 98
2)	LOGEND:	END LOGO
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            