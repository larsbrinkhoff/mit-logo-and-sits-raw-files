FOR NFILE,<


;SYSTEM INDEPENDENT FILE CODE


DEFINE READ (BLOCK,BUFFER)
<	MOVE	C,BLOCK
	MOVEI	E,BUFFER
	PUSHJ	P,.READ >

DEFINE FORCE (BUFFER)
<	MOVEI	E,BUFFER
	PUSHJ	P,.FORCE >

FOR TENEX,<
DEFINE ALTERD (BUFFER,AC)
<>> ;THE SYSTEM TAKES CARE OF IT
FOR TEN50,<
DEFINE ALTERD (BUFFER,AC)
<	MOVE	AC,LBUF+BUFFER
	SETOM	CHANGE(AC) >>


;FILE PARAMETERS

FOR TENEX,<NLOGB==4
PBLKL==1000
PBKLP2==11>
FOR TEN50,<NLOGB==1
PBLKL==200
PBKLP2==7>
LBLKL==200
DRENL==12
NENTRY==<LBLKL-10>/DRENL
BUFBIT==1



;DIRECTORY FORMAT
;OVERHEAD BLOCK - 8 WORDS
;WORD  CONTENTS
; 0 - TOP OF BLOCK FREE LIST
; 1 - NUMBER OF ENTRIES IN THIS DIRECTORY BLOCK
; 2 - TOP OF ENTRY BLOCK LIST IN THIS DIRECTORY
; 3 - TOP OF ENTRY BLOCK FREE LIST
; 4 - LINK TO NEXT DIRECTORY BLOCK, OR 0
; 5 - PASSWORD NUMBER FOR THIS FILE
; 6 - NUMBER OF BLOCKS ON THE FREELIST
; 7 - LAST REWRITE NUMBER USED IN FILE
;ENTRY BLOCK - DRENL WORDS LONG
; 0 TO 3 - FIRST 20 CHARACTERS OF THE ENTRY NAME
; 4 - LINK TO FIRST TEXT BLOCK OF ENTRY
; 5 - TIME AND DATE SAVED
; 6 - TIME AND DATE GOTTEN
; 7 - LOCKED, HOARDED, AND SIZE OF FILE IN BLOCKS
; 8 - REWRITE NUMBER FOR THIS ENTRY
; 9 - POINTER TO NEXT ENTRY BLOCK , OR 0



GET:	JSP	H,FILEGO	;GENERATE FILE NAME, SAVEUP, AND OPEN
	 ERROR	NOFILE		;MAYBE FILE IN USE?
	PUSHJ	P,SEARCH	;LOOK FOR ENTRY
	 ERROR	NOENTRY		;NO SUCH ENTRY

	MOVE	A,TANDD		;TIME AND DATE OF PROGRAM STARTUP
	MOVEI	D,6(G)		;CURRENT ENTRY +6
	MOVEM	A,@E		;UPDATE D-G

	MOVEI	D,4(G)		;ENTRY+4, POINTER TO DATA BLOCK
	READ	@E,1		;READ THE FIRST DATA BLOCK INTO BUF1

	PUSHJ	P,READC		;SKIP OVER COPY OF THE ENTRY NAME
	CAIE	C,176
	JRST	.-2

	FORCE	0		;WRITE THE MODIFIED DIRECTORY
	MOVE	A,[PUSHJ P,READC]
	MOVEM	A,CHIN
	TLZ	F,STEPF		;FIRST LINE OF FILE MAY BE COMMENT
	PUSHJ	P,TIS
	 ERROR	IOPERR		;CANNOT GET A RUBOUT FROM THE FILE
	MOVE	A,(S)
	HRLI	A,010700+W
	ILDB	C,A
	CAIE	C,";"		;IS THE FIRST LINE COMMENT?
	JRST	MAINL1		;NO, TREAT THE LINE NORMALLY
	POP	S,A
	PUSHJ	P,PTOSS		;TYPE THE COMMENT
	PUSHJ	P,CRLF
	JRST	MAINL		;PROCEED AS IF INPUT WERE FROM TERMINAL


ERASEN:	JSP	H,FILEGO
	 ERROR	NOFILE
	PUSHJ	P,SEARCH
	 ERROR	NOENTRY
	PUSHJ	P,ERENRO
	JSP	H,CLOSUP
	POP	P,A		;FLUSH THE RETURN TO ERASXT
	JRST	COMEX


SAVE:	JSP	H,FILEGO
	 JRST	SAVNEW		;NO FILE, MAKE ONE
	READ	[0],0		;READ BK 0 OF FILE, DIRECTORY INTO BUF0
	MOVE	A,@FPTR
	MOVEM	A,LABS		;FREE LIST IS FIRST WORD OF DIR

SAVE1:	TLO	F,SAVEF		;DENOTE SAVE IN PROGRESS
	MOVE	A,[PUSHJ P,WRITEC]
	MOVEM	A,CHOUT		;WHAT TO XCT WHEN OUTPUTTING CHARS

	MOVEI	A,1
	MOVEM	A,FILECT
	PUSHJ	P,WRITC2	;GET A NEW BLOCK
	MOVE	A,LBLOCK+1	;FIRST BLOCK OF FILE
	MOVEM	A,FILEAD
	MOVE	H,(S)		;COPY ENTRY NAME INTO FILE
	HRLI	H,010700+W
	ILDB	C,H
	XCT	CHOUT		;WRITE A CHAR INTO FILE
	JUMPN	C,.-2

	MOVEI	C,176
	DPB	C,FPTR		;OVERWRITE THE 0 EOM

	MOVE	A,CPP		;STORE COMMENT IN FILE IF ON SAVE LINE
	MOVEI	A,1(A)		;POINT AT NEXT ELEMENT
	SKIPE	A,@CSA		;IS IT NOT THERE?
	TLNN	A,COMMTF	;MAKE SURE IT IS A COMMENT
	JRST	SAVE2		;NOT A COMMENT
	MOVEI	C,";"
	PUSHJ	P,TYO
	PUSHJ	P,PTOSS
	PUSHJ	P,CRLF

SAVE2:	PUSHJ	P,LISTAP
	PUSHJ	P,SAVAN
	PUSHJ	P,SAVAA

	SETZ	C,
	XCT	CHOUT		;INSERT AN END OF FILE
	TLZ	F,SAVEF
	MOVE	A,TERMIO+1	;TERMINAL OUTPUT INSTRUCTION
	MOVEM	A,CHOUT
	ALTERD	1,C

;MAKE DIRECTORY ENTRY

	MOVE	E,LBUF
	MOVE	E,BUFLOC(E)	;WHERE DIRECTORY IS
	SKIPE	3(E)
	JRST	SAVE4		;LIST OF AVAIL DIR ENTRIES NOT EMPTY

	PUSHJ	P,WRITC2	;NEED ANOTHER DIRECTORY BLOCK

	MOVE	E,LBUF
	MOVE	E,BUFLOC(E)	;DESTROYED E AGAIN
	HRLZI	B,(E)		;THE OLD DIRECTORY 0
	HRRZ	C,FPTR		;WHERE THE DATA IN IT WILL GO
	HRRI	B,(C)
	BLT	B,LBLKL-1(C)	;COPY THE FULL DIRECTORY 
	MOVE	B,LBLOCK+1
	MOVEM	B,4(E)		;CHAIN TO FULL DIRECTORY BLOCK
	ALTERD	1,D
	PUSHJ	P,CLRDIR

SAVE4:	MOVE	E,LBUF
	MOVE	E,BUFLOC(E)
	HRLI	E,D		;NOW FILL UP A DIRECTORY ENTRY
	MOVE	D,3(E)		;TOP OF LADES
	HRLI	D,-4		;NUMBER OF WORDS OF TEXT TO COPY MAX
	MOVEI	G,(D)		;EXTRA COPY OF PTR TO ENTRY

	MOVE	B,(S)
	MOVEI	B,1(B)		;FIRST TEXT WORD IN ENTRY NAME
	MOVE	C,@WSB
	MOVEM	C,@E
	TRNE	C,376		;END OF ENTRY NAME?
	AOBJN	D,.-4

	MOVEI	D,4(G)
	MOVE	C,FILEAD
	MOVEM	C,@E

	MOVEI	D,5(G)
	MOVE	C,TANDD
	MOVEM	C,@E

	MOVEI	D,6(G)
	SETOM	@E		;NEVER GOTTEN

	MOVEI	D,7(G)		;NO BLOCKS IN FILE
	MOVE	C,FILECT
	MOVEM	C,@E

	MOVEI	D,DRENL-1(G)
	EXCH	G,2(E)		;THIS BLOCK ONTO LUDES
	EXCH	G,@E		;OLD TOP OF LUDES INTO THIS BLOCK
	MOVEM	G,3(E)		;OLD LADES FP IN THIS BLOCK TO LADES

	AOS	1(E)		;A NEW ENTRY IS NOW COMPLETE
	ALTERD	0,C

	SETOM	LDIRNO		;SEARCH FOR ANOTHER ENTRY OF SAME NAME
	SETOM	LDIRL		;SET UP TO FALL INTO SEARCH
	MOVE	A,(S)
	ADDI	A,1(W)
	MOVE	G,2(E)		;LUDES
	PUSHJ	P,SERCH5	;ENTER AT CONTINUE WITH NEXT ENTRY
	 JRST	.+2		;NO OTHER ENTRY OF SAME NAME
	PUSHJ	P,ERENRO	;DELETE THAT OTHER ENTRY
	READ	[0],0
	MOVE	A,LBUF
	MOVE	B,LABS
	MOVEM	B,@BUFLOC(A)	;UPDATE LABS BEFORE CLOSING FILE
	ALTERD	0,C
	JSP	H,CLOSUP
	JRST	COMEX


SAVNEW:	JSP	H,OPENW		;WRITING ONLY
	 ERROR	IOPERR			;DISASTER
	SETOM	LABS
	PUSHJ	P,WRITC2	;READ A NEW BLOCK INTO BUFFER 1
	MOVE	A,LBUF+1
	MOVEM	A,LBUF		;AND SWITCH IT INTO BUFFER 0
	MOVE	A,LBLOCK+1
	MOVEM	A,LBLOCK
	PUSHJ	P,CLRDIR
FOR TEN50,<FORCE 0>
	JRST	SAVE1

READC:	SOSG	CCOUNT		;READ ONE CHARACTER
	JRST	READC1		;THIS BUFFER EMPTY
	ILDB	C,FPTR		;FETCH ONE
	JUMPN	C,CPOPJ		;END OF FILE?

REDEOF:	JSP	H,CLOSUP
	TLNN	F,GETF
	JRST	COMEX
	JRST	READC

READC1:	MOVNI	A,LBLKL-1
	ADD	A,FPTR
	SKIPN	A,@A		;FORWARD PTR IS IN FIRST WORD OF BLOCK
	JRST	REDEOF	;FILE BROKEN
	READ	A,1		;READ THE NEXT BLOCK
	JRST	READC		;POINTER AND COUNT SET UP BY READ




WRITEC:	SOSG	CCOUNT		;WRITE A CHARACTER INTO A FILE
	PUSHJ	P,WRITC1		;BUFFER FULL
	IDPB	C,FPTR		;PUT IT AWAY
	POPJ	P,

WRITC1:	PUSH	P,A
	PUSH	P,B
	PUSH	P,C		;SAVE THE CHARACTER
	PUSH	P,D
	PUSH	P,E
	AOS	FILECT		;ANOTHER BLOCK USED FOR FILE
	PUSHJ	P,WRITC2
WRTC1A:	POP	P,E
	POP	P,D
	POP	P,C
	POP	P,B
	POP	P,A
	POPJ	P,

WRITC2:	TRZ	F,TF		;WHETHER LABS=0
	SKIPLE	C,LABS		;END OF LABS?
	JRST	WRITC3		;NO
	TRO	F,TF		;GENERATING MORE SPACE

;NO MORE LABS,LABSND LENGTH OF FILE AND CALL THAT MORE LABS

FOR TENEX,<	MOVE	A,INFILE
	SIZEF			;HOW BIG IS THE FILE?
	 ERROR	IOPERR >
FOR TEN50,<MOVE	C,FILSIZ	;SET UP AT OPEN
	AOS	FILSIZ >
	IMULI	C,NLOGB		;# OF PAGES IN C, MULTIPLY BY FUDGE
	MOVEM	C,LABS		;REMEMBER FOR A WHILE
WRITC3:	MOVE	B,LBUF+1
	HRRZ	A,(P)	;WHO CALLED?
	CAIN	A,WRTC1A	;WAS IT FOR A NEW DATA BLOCK?
	MOVEM	C,@BUFLOC(B)	;YES, CHAIN NEW ONE TO LAST ONE
	TRNN	F,TF		;NEED TO LENGTHEN FILE?
	JRST	WRITC4		;NO


FOR TENEX,< READ C,1		;OLD ONE GETS WRITTEN IF CHANGED
	MOVE	A,LBUF+1 >	;AND THE NEW ONE GETS ASSOCIATED

FOR TEN50,< 	MOVE	A,LBUF
	XOR	A,LBUF+1
	MOVE	B,[BUFBIT]	;HACK!!, BUFBIT=1 AND WE ARE INTERESTED IN LBUF 1
	TDNN	B,A
	XORM	B,LBUF+1
	PUSHJ	P,WRITIF
	MOVE	C,LABS
	MOVEM	C,LBLOCK+1	;NOW ASSOCIATE NEW BLOCK WITH BUFFER
	MOVE	A,LBUF+1
	MOVEM	C,PBLOCK(A)	;AND PHYSICAL BUFFER
	MOVEI	C,5*<LBLKL-1>
	MOVEM	C,CCOUNT
	MOVE	B,BUFLOC(A)
	HRLZI	C,(B)
	HRRI	C,1(B)
	SETZM	(B)
	BLT	C,LBLKL-1(B)
	HRLI	B,010700
	MOVEM	B,FPTR >	;


	;WHICH PHYS BUFFER
	MOVE	B,FPTR
	HRLZI	A,-NLOGB	;SET UP THE LABS CHAIN IN THE BUFFER
	HRR	A,LABS		;LOG ADDR OF THE FIRST BLOCK IN BUFFER
	AOBJP	A,.+4

	HRRZM	A,(B)		;THE FORWARD POINTER
	ADDI	B,LBLKL		;WHERE THE NEXT ONE SHOULD GO
	AOBJN	A,.-2		;THE REST

	SETZM	(B)		;THE LAST ONE TERMINATES THE CHAIN
	JRST	WRITC6

WRITC4:	READ	C,1		;READ THIS ONE FOR ITS FORWARD PTR
WRITC6:	MOVE	C,@FPTR
	MOVEM	C,LABS
	SETZM	@FPTR		;THIS ONE NOW THE END OF THE DATA CHAIN
	ALTERD	1,C	;NOTE THAT THIS BLOCK CHANGED (SOON)
	POPJ	P,

;SEARCH FOR AN ENTRY
;ENTRY NAME AT 0(S)

SEARCH:	SETOM	LDIRNO
	SETOM	LDIRL		;NO OF ENTRIES IN LAST DIRECTORY BLOCK
	READ	[0],0		;READ BLOCK 0 INTO BUFFER 0
				;READ RETURNS WITH BUFF ADR IN E

SERCH1:	HRRZ	E,FPTR		;PHYSICAL ADDR OF DIR BLOCK TO E
	MOVE	A,(S)		;FETCH PTR TO ENTRY NAME
	ADDI	A,1(W)
	MOVE	G,2(E)		;TOP OF ENTRY CHAIN, THIS DIRECTORY
	HRLI	E,D

SERCH2:	MOVEI	B,(A)		;ANOTHER POINTER TO FIRST WORD OF STRING
	HRLZI	D,-4		;FOUR WORDS OF TEXT IN DIRECTORY
	HRRI	D,(G)		;WHERE THE ENTRY BLOCK STARTS
SERCH3:	MOVE	C,(B)		;A WORD OF THE ENTRY NAME
	CAME	C,@E		;SAME AS IN THE ENTRY BLOCK?
	JRST	SERCH5		;NO, TRY THE NEXT ENTRY BLOCK
	TRNN	C,376		;IS IT THE END OF THE NAME STRING?
	JRST	CPOPJ1		;YES, FOUND
	MOVEI	B,1(B)		;NEXT WORD IN STRING
	AOBJN	D,SERCH3	;NEXT WORD IN ENTRY BLOCK

	PUSH	P,A		;IN CASE .READ IS CALLED
	PUSH	P,E
	READ	@E,1		;READ FIRST DATA BLOCK INTO BUF 1

	HRLZI	H,440700	;COMPARE FULL NAME
	HRR	H,-1(P)
	PUSHJ	P,READC
	ILDB	B,H
	JUMPE	B,SERCH4	;END OF INPUT STRING
	CAIN	B,(C)
	JRST	.-4		;STILL SAME, TRY ANOTHER
	SETZ	C,		;SO THE NEXT TEST WILL LOSE

SERCH4:	POP	P,E
	POP	P,A
	CAIN	C,176		;DID THE ENTRY NAME ALSO END?
	JRST	CPOPJ1		;YES, R2

SERCH5:	MOVEI	D,DRENL-1(G)	;POINT AT DIREXTORY ENTRY CHAIN
	SKIPE	G,@E		;IS IT IN THIS DIRECTORY BLOCK
	JRST	SERCH2		;YES
	SKIPN	A,4(E)		;IS THERE ANOTHER DIRECTORY BLOCK
	POPJ	P,		;NO, DIDN'T FIND THE ENTRY
	MOVE	B,LBLOCK
	MOVEM	B,LDIRNO
	MOVE	B,1(E)		;NUMBER OF ENTRIES TDB
	MOVEM	B,LDIRL
	READ	A,0		;READ THE NEXT DIRECTORY BLOCK
	JRST	SERCH1		;YES, PROCESS IT

;ERASE ENTRY ROUTINE - USED BY ERASE ENTRY AND SAVE
;AFTER SEARCH E CONTAINS D,,BLOCKAD
; AND G CONTAINS OFFSET OF ENTRY INTO BLOCK

ERENRO:	MOVEI	D,4(G)		;POINTER TO ADDR OF FIRST DATA BLOCK
	MOVE	C,@E		;GET IT
	MOVEM	C,FILEAD	;AND SAVE IT FOR PUTTING ON LABS

	MOVEI	D,DRENL-1(G)	;POINT TO FORWARD CHAIN IN OBJECT
	MOVEI	C,(G)		;OFFSET OF OBJECT ENTRY
	EXCH	C,3(E)		;PUT IT ON TOP OF FREE CHAIN
	EXCH	C,@E		;AND TOP OF FREE CHAIN INTO IT
				;ENDING WITH REST OF USED LIST IN C
	SKIPA	D,[EXP 2]	;FIRST ENTRY IN THIS BLOCK
EREN1:	MOVEI	D,DRENL-1(A)	;POINT AT NEXT CHAIN ADDRESS
	MOVE	A,@E
	CAME	A,G		;DID THIS CELL POINT AT DELETED CELL
	JRST	EREN1		;NO

	MOVEM	C,@E		;RECHAIN LUDES
	ALTERD	0,D
	SOSG	A,1(E)		;DECREMENT NUMBER IN LUDES
	JRST	FLUSHTHISONE

	SKIPG	B,LDIRL		;PREVIOUS DIR BLOCK?
	 JRST	TRYAFTER	;NO 
	ADDI	B,(A)		;TOTAL NO,TDIRL+LDIRL
	CAILE	B,NENTRY	;WILL FIT IN ONE BLOCK?
	 JRST	TRYAFT		;NO, TRY TDIRL+'NDIRL'

;COMPACT LDIR WITH TDIR, PUTTING TDIR INTO LDIR
;THIS ORDER SO THAT IF LDIR IS NO 0 RECHAIN ALWAYS WINS

	PUSH	P,E		;THE "FROM" DIRECTORY
	MOVE	B,LBUF		;TAKE THIS DIRECTORY
	MOVEM	B,LBUF+1		;AND PUT IT IN BUF1
	MOVE	B,LBLOCK
	MOVEM	B,LBLOCK+1
	READ	LDIRNO,0

	POP	P,E
	MOVE	H,A		;SECOND BUFFER POINTED TO BY H
COMPACT:	HRLI	H,G		;AND OFFSET BY CONTENTS OF G

	MOVE	A,2(H)		;TOP OF LIST IN LDIR
	MOVEI	G,DRENL-1(A)
	SKIPE	A,@H
	JRST	.-2		;FIND END OF PREVIOUS LIST
	MOVE	A,3(H)
	MOVEM	A,@H	;END OF OLD LIST WILL NOW POINT TO LADES

	MOVE	D,2(E)		;POINT AT FIRST ENTRY TO BE COPIED

ERENLP:	MOVEI	G,(A)
	HRLZI	A,@E		;FROM
	HRRI	A,@H		;THE TO FREELIST
	MOVEI	G,DRENL-2(G)
	BLT	A,@H		;COPY AN ENTRY

	MOVEI	G,1(G)		;POINT TO POINTER TO NEXT FREE TO
	MOVE	A,@H		;NEXT TO BUFFER ADDRESS TO A
	MOVEI	D,DRENL-1(D)
	SKIPE	D,@E		;NEXT FREE FROM, IS IT END OF LIST
	JRST	ERENLP	;NO

	SETZM	@H		;END OF GOOD CHAIN
	MOVEM	A,3(H)
	ALTERD	0,D		;NOTE THAT BUF0 CHANGED

	MOVE	A,LBLOCK+1
	EXCH	A,LABS
	MOVEM	A,(E)		;PUT THE DIR BLOCK JUST FREED ON TOP OF BLOCK FREELIST
	MOVE	A,4(E)
	MOVEM	A,4(H)		;UPDATE DIRECTORY CHAIN
	MOVE	A,1(E)
	ADDM	A,1(H)		;AND COUNT OF USED ENTRIES IN DIRECTORY

	ALTERD	1,D		;NOTE THAT BUF1 CHANGED


ERENB:	MOVE	A,FILEAD	;PUT FILE BLOCKS ONTO FREELIST

ERENR:	READ	A,1
	SKIPE	A,@FPTR		;FIND THE END OF THE DATA CHAIN
	JRST	ERENR

	MOVE	B,LABS
	MOVEM	B,@FPTR
	ALTERD	1,D

	READ	[0],0

	MOVE	B,FILEAD
	MOVEM	B,@FPTR
	MOVEM	B,LABS
	ALTERD	0,D
	POPJ	P,


TRYAFT:	SKIPN	A,4(E)		;IS THERE A NEXT DIRECTORY
	JRST	ERENB		;NO, JUST DELETE THE DATA BLOCKS
	READ	A,1		;READ IT
	POP	P,H		;IN THIS CASE, THE TO DIRECTORY
	MOVE	B,1(A)
	ADD	B,LDIRL
	CAILE	B,NENTRY
	JRST	ERENB		;TWO INTO ONE WON'T GO
	HRLZI	E,D
	HRRI	E,(A)		;THE AFTER IS THE "FROM" DIRECTORY
	JRST	COMPACT

FLUSHTHISONE:
	SKIPN	A,LBLOCK	;IS THIS DIRECTORY 0
	JRST	FLUSH0		;YES
	EXCH	A,LABS		;PUT IT ON LABS
	MOVEM	A,(E)
	MOVE	H,4(E)		;CHAIN TO NEXT DIRECTORY
	READ	LDIRNO,0
	MOVEM	H,4(A)	;CHAIN THIS ONE
	ALTERD	0,D
	SKIPE	1(A)		;IS THIS ONE EMPTY TOO?
	JRST	ERENB
	MOVEI	E,(A)		;IT MUST BE DIR BLOCK 0, DELETE FILE

FLUSH0:	SKIPE	4(E)		;ARE THERE ANY OTHER DIRECTORIES?
	JRST	ERENB		;YES, LET THIS ONE BE
FOR TENEX,<MOVE A,INFILE	;DELETE THE FILE
	DELF
	 ERROR	IOPERR>
FOR TEN50,<
FOR LEVELC,<CLOSE	1,
	STATZ	1,740000
	 ERROR	IOPERR >
	SETZM	LUKDAT
	RENAME	1,LUKDAT
	 ERROR	IOPERR >
	POP	P,G		;RETURN LOC
	JSP	H,CLOSUP+1	;REMOVE OPEN FILE JUNK FROM PDL
	JRST	1(G)		;SKIP OVER CLOSING OF FILE

CLRDIR:	MOVE	E,LBUF	;ADDR OF FIRST WORD OF BUFFER?
	MOVE	E,BUFLOC(E)
	SETZM	1(E)		;NUMBER OF DIRECTORY CELLS USED
	SETZM	2(E)		;LUDES - LIST USED DIRECTRY ENTRIES
	MOVEI	D,10		;REL PTR TO FIRST AVAILABLE DIR CELL
	MOVEM	D,3(E)		;LADES - LIST AVAIL DIR ENTRY CELLS
	MOVEI	E,10(E)		;POINT TO FIRST CELL
	MOVEI	D,DRENL(D)	;REL ADDR OF NEXT CELL
	MOVEM	D,DRENL-1(E)	;SET FORWARD PTR OF THIS CELL TO NEXT
	MOVEI	E,DRENL(E)	;POINT AT NEXT CELL
	CAIE	D,LBLKL-DRENL
	JRST	.-4
	SETZM	DRENL-1(E)
	POPJ	P,

WRITIF:	MOVE	B,LBUF(B)	;WHICH PHYSICAL BUFFER?
WRITF1:	SKIPE	CHANGE(B)	;IS THE DATA CHANGED?
	JRST	WRITIT		;NEEDS WRITING
	POPJ	P,

.FORCE:	MOVE	B,LBUF(E)	;PHYS BUF

WRITIT:	SETZM	CHANGE(B)	;WILL NO LONGER NEED REWRITING
FOR TEN50,< MOVE	A,PBLOCK(B)
	ADDI	A,1	;I COUNT FROM 0, SYSTEM COUNTS FROM 1
	HRLI	A,(USETO 1,)
	XCT	A
	HRRZ	A,BUFLOC(B)
	SUB	A,[XWD PBLKL,1]	;REST OF IOWD
	SETZ	B,		;END OF DUMP MODE LIST
	OUT	1,A		;DUMP MODE, CHANNEL 1, LIST IN A
	SKIPA
	 ERROR	IOPERR >
	POPJ	P,

FOR TEN50,<
.MARK:	MOVE	E,LBUF(E)
	SETOM	CHANGE(E)
	POPJ	P, >


OPENW:
FOR TENEX,<MOVE	A,[XWD 200000,1]
	MOVEM	A,JFNTAB
	MOVEI	A,JFNTAB
	GTJFN
	 JRST	(H)
	MOVE	G,[XWD 070000,700200]
	JRST	OPNRW1 >
FOR TEN50,<SETZM	FILSIZ
	JRST	OPNRW1>

CLOSIT:
FOR TEN50,<	MOVEI	B,0
	PUSHJ	P,WRITF1
	MOVEI	B,1
	PUSHJ	P,WRITF1
	CLOSE	1,
	RELEAS	1,
	SETZM	BUFLOC
	SETZM	BUFLOC+1	;DEALLOCATE THE BUFFERS
	SETZM	BUFADR
	SETZM	BUFADR+1
>
FOR TENEX,<HRRZ	A,INFILE
	CLOSF
	 ERROR	IOPERR
	HRLZI	E,-2		;REMOVE THE PAGES OF BUFFER
	MOVE	B,BUFLOC(E)	;FROM THE MAP OF FORK
	ASH	B,-11
	HRLI	B,400000
	SETO	A,
	PMAP
	AOBJN	E,.-5 >
	POPJ	P,

;READ A BLOCK INTO A BUFFER
;CALLED WITH LOGICAL BUFFER NUMBER IN E
; AND WITH LOGICAL BLOCK NUMBER IN C

.READ:	MOVEM	C,LBLOCK(E)	;THIS LOGICAL BUFFER WILL CONTAIN THIS BLOCK
	HRLZI	A,-2		;# OF PHYSICAL BUFFERS

	MOVEI	D,(C)		;FIRST CHECK IF LOGICAL BLOCK IS
	XOR	D,PBLOCK(A)	; IN ONE OF THE PHYSICAL BUFFERS
	TRNN	D,-NLOGB	;# OF LOGICAL BUFFERS IN ONE PHYS ONE
	JRST	.READ7		;ALREADY IN A BUFFER
	AOBJN	A,.-4		;TRY THE OTHER ONE

;THE LOGICAL BLOCK IS NOT IN EITHER PHYSICAL BUFFER
;THEREFORE THE PHYSICAL BUFFER USED BY THE REQUESTED LOGICAL ONE
; IS PREFERABLE UNLESS IT IS ALSO USED BY THE OTHER LOGICAL ONE TOO

	MOVE	A,LBUF		;THE PHYS BUFFER USED BY LOGICAL BUFFER 0
	XOR	A,LBUF+1
	XOR	A,[EXP BUFBIT]	;ARE BOTH USING THE SAME PHYS BUFFER?
	SKIPE	A		;NO
	XORM	A,LBUF(E)	;YES, SWITCH THE BUF THIS ONE USES

	MOVEI	B,(E)
	PUSHJ	P,WRITIF

	MOVE	B,LBUF(E)	;NOW READ THE REQUESTED BLOCK
	MOVE	A,LBLOCK(E)	;WHAT PART OF FILE TO READ

FOR TENEX,<	MOVE	B,BUFLOC(B)	;PHYSICAL BUFFER LOCATION
	ASH	A,-2	;MUST PARAMETERIZE LOG BASE 2 OF NLOGB
	ASH	B,-11		;2^9 WORDS PER PAGE
	HRLI	B,400000
	HRL	A,INFILE
	HRLZI	C,140000	;READ AND WRITE ACCESS PERMITTED
	PMAP		>
FOR TEN50,<MOVEI	A,1(A)
	HRLI	A,(USETI 1,)
	XCT	A
	HRRZ	A,BUFLOC(B)
	SUB	A,[XWD PBLKL,1]	;REST OF IOWD
	SETZ	B,
	IN	1,A
	SKIPA
	 ERROR	IOPERR >


.READ3:	MOVEI	A,NLOGB-1	;SET UP POINTER TO THE BLOCK
	AND	A,LBLOCK(E)
	IMULI	A,LBLKL		;NUMBER OF WORDS IN A LOGICAL BLOCK
	MOVE	C,LBUF(E)
	ADD	A,BUFLOC(C)
	HRLI	A,010700

	MOVEM	A,FPTR
	MOVEI	B,5*<LBLKL-1>
	MOVEM	B,CCOUNT
	MOVE	B,LBLOCK(E)
	MOVEM	B,PBLOCK(C)
	POPJ	P,

.READ7:	HRRZM	A,LBUF(E)	;MAKE THE LOGICAL BUFFER USE THAT PBUF
	JRST	.READ3		;SET UP POINTERS AND EXIT

FOR TENEX,<
FILEGO:	PUSHJ	P,GETFLN
	PUSHJ	P,GETFLN
	MOVE	B,-1(S)
	MOVEI	A,10		;NUMBER OF WORDS FOR TENEX
	CAMGE	A,@WSB		;WILL THE NAME FIT?
	 ERROR			;NOT IMPLEMENTED
	MOVEI	B,@WSB		;COMPUTE ABS ADDR OF STRING
	MOVEI	B,1(B)		;FIRST WORD OF TEXT
	MOVEM	B,JFNTAB+4	;FILE NAME SLOT


OPENRW:	MOVE	A,[XWD 100000,1]
	MOVEM	A,JFNTAB
	MOVEI	A,JFNTAB
	MOVEI	B,0
	GTJFN
	 JRST	(H)		;NO FILE
	MOVE	G,[XWD 070000,701000]
OPNRW1:	JSP	D,SAVEUP	;SAVE CURRENT STATE OF LOGO
	PUSH	P,INFILE	;SAVE NAME OF CURRENT OPEN FILE
	MOVEM	A,INFILE
	HRLZ	A,LBLOCK+1	;LOGICAL BLOCK NUMBER OF DATA BLOCK
	HRR	A,CCOUNT	;NUMBER OF CHARS REMAINING IN THAT BLOCK
	PUSH	P,A		;A POINTER INTO THE ENTRY
	PUSH	P,BSP
	MOVE	B,SPP
	MOVEM	B,BSP
	TLO	F,GETF
	MOVE	B,G
	OPENF
	 JRST	(H)
	MOVEI	A,400000
	MOVEM	A,BUFLOC
	MOVEI	A,401000
	MOVEM	A,BUFLOC+1
	SETOM	PBLOCK
	SETOM	PBLOCK+1	;NO PAGES IN THE BUFFERS
	JRST	1(H) >


FOR TEN50,<
FILEGO:	PUSHJ	P,GETFLN
	PUSHJ	P,GETFLN
	MOVE	B,-1(S)
	HRLI	B,010700+W
	MOVE	A,[POINT 6,LUKDAT]
	SETZM	LUKDAT
	MOVEI	D,6
FILGO1:	ILDB	C,B
	JUMPE	C,FILGO2
	XORI	C,40		;7 TO 6 BIT CODE
	IDPB	C,A		;STORE IN LUKDAT
	SOJG	D,FILGO1
	ILDB	C,B
	JUMPN	C,[ERROR FILER9] ;FILE NAME TOO LONG, TEMP ERR

FILGO2:	INIT	1,17		;INIT IN DUMP MODE
	 SIXBIT	/DSK/
	 Z
	 ERROR	IOPERR

	HRLZI	C,(SIXBIT /LGO/)
	MOVEM	C,LUKDAT+1	;EXT
	SETZM	LUKDAT+2
	SETZM	LUKDAT+3

	LOOKUP	1,LUKDAT
	 JRST	(H)		;FILE BUSY OR SOMETHING
	HLRE	A,LUKDAT+3	;LENGTH OF FILE
	JUMPG	A,.+3		;ALREADY IN BLOCKS
	ASH	A,-7
	MOVNI	A,(A)		;MAKE -WORDS +BLOCKS
	HRRZM	A,FILSIZ
	SETZM	LUKDAT+3	;THIS PRJ PROG AGAIN

OPNRW1:	JSP	D,SAVEUP
	PUSH	P,INFILE
	MOVEM	A,INFILE
	HRLZ	A,LBLOCK+1
	HRR	A,CCOUNT

	PUSH	P,A
	PUSH	P,BSP
	MOVE	B,SPP
	MOVEM	B,BSP
	TLO	F,GETF

	ENTER	1,LUKDAT
	 JRST	(H)
	MOVNI	A,@WTOP		;ASSIGN TWO BUFFERS IN WS
	ADD	A,JOBREL
	CAIL	A,2*<LBLKL+1>
	 JRST	OPNRW2		;GOT ENOUGH ROOM
	GARBAGE
	MOVNI	A,@WTOP
	ADD	A,JOBREL
	CAIL	A,2*<LBLKL+1>
	 JRST	OPNRW2		;GOT ROOM BY GC
	JSP	G,NEWMEM	;TRY BY ASKINK FOR MORE
	 ERROR	TOOFUL		;NO ROOM

OPNRW2:	HRLZI	B,-2
	AOS	A,WTOP
	MOVEM	A,BUFADR(B)
	MOVEI	A,@A		;ABSOLUTE ADDR OF BUFFER
	MOVEI	A,1(A)		;PTR TO FIRST DATA WORD
	MOVEM	A,BUFLOC(B)
	MOVEI	A,LBLKL
	MOVEM	A,@BUFADR(B)	;SET UP LENGTH OF ELEMENT
	ADDM	A,WTOP
	AOBJN	B,OPNRW2+1

	SETOM	PBLOCK
	SETOM	PBLOCK+1
	JRST	1(H) >

CLOSUP:	PUSHJ	P,CLOSIT
	MOVE	A,BSP
	ADDI	A,2
	JSP	C,SETPDL

	POP	S,A
	POP	S,A		;REMOVE TWO FILE NAME ARGS
	POP	P,A
	HRRZM	A,CCOUNT
	HLRZM	A,LBLOCK+1
	POP	P,INFILE
	JSP	D,RESTOR
	SKIPE	INFILE	;IS THE POPPED FILE THE TERMINAL?
	JRST	(H)
	TLZ	F,GETF
	MOVE	A,TERMIO
	MOVEM	A,CHIN
	JRST	(H)

LFILE:	POP	P,A
	PUSHJ	P,GETFLN	;ONLY ONE INPUT
	PUSH	S,(S)		;DUMMY UP ANOTHER
	JSP	H,FILEGO+2
	 ERROR	NOFILE
	SETZ	A,
LFILE1:	READ	A,0
	HRRZ	E,FPTR
	HRLI	E,D
	MOVE	D,2(E)		;TOP OF LIST OF USED ENTRY SLOTS

LFILE2:	HRLZI	G,440700
	HRRI	G,@E		;FOR THE FIRST 20 CHARS OF ENTRY NAME
	MOVNI	H,^D20
	ILDB	C,G
	JUMPE	C,LFILE9	;EOM IS 0 IN DIRECTORY
	XCT	CHOUT
	AOJN	H,.-3
	PUSH	P,E
	PUSH	P,D		;READ FILE FOR THE REST OF THE GOODIES
	READ	1(G),1
	MOVEI	A,4
	ADDM	A,FPTR		;SKIP TYPING FIRST TWENTY CHARS AGAIN
	MOVNI	A,4*5
	ADDM	A,CCOUNT
	PUSHJ	P,READC
	CAIN	C,176
	JRST	.+3
	XCT	CHOUT
	JRST	.-4
	POP	P,D
	POP	P,E

LFILE9:	PUSHJ	P,CRLF
	MOVEI	D,DRENL-1(D)
	SKIPE	D,@E
	JRST	LFILE2	;NEXT ENTRY IN THIS DIRECTORY
	SKIPE	A,4(E)
	JRST	LFILE1	;NEXT DIRECTORY BLOCK
	JRST	REDEOF
> ;CLOSE THE NFILE CONDITIONAL
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    