
THING:	MOVE	A,(S)
THING1:	MOVE	B,DP
	ADD	B,DTOP
	PUSHJ	P,LOOKBK
	 JRST	THING2	;NOT A DUMMY
	JRST	THING4

THING2:	MOVE	A,(S)
	MOVE	B,VP
	PUSHJ	P,LOOKUP
	 JRST	THING3	;NOT A GLOBAL VARIABLE
	JRST	THING4

THING3:	MOVE	A,(S)
	MOVEI	B,MV
	PUSHJ	P,SYSLUK
	MOVEI N,[W+WORDF\EMPTYF,,0]-1
	MOVE	A,1(N)	;MACHINE VARIABLES MUST BE CHECKED
	JUMPL	A,(A)	;THIS ONE MUST BE COMPUTED, (FLAG IS SIGN BIT)
THING4:	MOVE	A,1(N)
	MOVEM	A,(S)
	POPJ	P,


CCONTE:	POP	S,A	;COMPUTE /CONTENTS/
	PUSHJ	P,NEWSTR
	TRZ	F,TF\NWF
	MOVEI	C,0
	MOVE	D,RP
	MOVNI	E,1
CCNTE1:	SKIPN	A,(D)		;ANY MORE PROCEDURE NAMES?
	JRST	ENDST1		;NO
	MOVEI	D,1(D)
	CAMN	E,(D)		;IS THIS ONE DEFINED?
	AOJA	D,CCNTE1	;NO
	MOVEI	C," 
	TRON	F,TF		;FIRST ONE?
	JRST	.+3		;YES
	TRO	F,NWF		;NOT FIRST
	DPB	C,B		;NO REPLACE EOM WITH SPACE
	PUSHJ	P,NEWSR0
	PUSHJ	P,COPYAB
	AOJA	D,CCNTE1

IFE LFLAG,[				;SENTENCE OPERATIONs---NO LISTS
FIRST:
	PUSHJ	P,NEWOPS	;CHECK EMPTY,SET UP SRCBOT+NEWBOT
	JRST	FSTSNT	;NO, SENTENCE

	ILDB	C,A	;FIRST BYTE
	IDPB	C,B	;BOMBS HERE ON FULL WORKSPACE

	MOVEI	C,0	;FILL ZEROES AND RETURN NEW ARG
	JRST	BTFCL1

FSTSNT:	ILDB	C,A	;FIRST OF SENTENCE
	JUMPE C,FSTWD
	CAIN C," 
	JRST FSTWD
	IDPB	C,B	;COPY CHARACTERS TO END OF FIRST WORD
	JRST FSTSNT

FSTWD:	CAMN B,NEWBOT	;IS IT EMPTY?
	SKIPA A,[W+WORDF\EMPTYF,,0]

	HRLZI	A,W+WORDF
	HLLM	A,0(S)
	MOVEI C,0
	JRST	BTFCL1


BUTFIRST:
	PUSHJ	P,NEWOPS
	JRST	BTFSNT	;NOT A WORD OR EMPTY, IE SENTENCE
	TRZ	F,TF
	IBP	A		;BUTFIRST OF WORD, SKIP OVER FIRST CHAR
	ILDB	C,A		;THIS IS THE SECOND CHAR
	JUMPN	C,BTFCOP	;MORE THAN ONE CHAR, COPY TO END OF STRING
BTFEMW:	SKIPA A,[W+WORDF\EMPTYF,,0]

BTFEMP:	HRLZI	A,W+SENTF\EMPTYF	;ONE OF THE MANY WAYS T
	MOVEM	A,(S)	;TO GET A POINTER TO EMPTY
	POPJ	P,

BTFSNT:	ILDB	C,A	;SKIP OVER FIRST WORD
	JUMPE	C,BTFEMP	;WAS ONLY WORD, RESULT IS EMPTY
	CAIE	C," 	;END OF WORD?
	JRST	BTFSNT	;CONTINUE SKIPPING OVER FIRST WORD

BTFCP1:	ILDB	C,A
BTFCOP:
BTFCLO:	JUMPE	C,BTFCL1
	IDPB	C,B
	JRST	BTFCP1

BTFCL1:	PUSHJ	P,ENDST1
	POP	S,A
	HRRM	A,(S)	;NEW STRING, OLD TYPE
	POPJ	P,

LAST:
	PUSHJ	P,NEWOPS
	JRST	LSTSNT

	ILDB	C,A
	IDPB	C,B	;COPY FIRST CHAR, BUMPING THE CHAR PTR IN B ONCE

	ILDB	C,A
	JUMPE	C,BTFCL1	;DONE WITH THE WORD
	DPB	C,B	;PUT THIS CHAR ON TOP OF PREVIOUS ONE
	JRST	.-3

LSTSNT:	MOVE	E,A	;SAVE POINTER TO BEGINNING OF WORD
LSTSN2:	ILDB	C,A	;CONTINUE WITH THE CURRENT WORD
	CAIN	C," 
	JRST	LSTSNT	;END OF CURRENT WORD, NOT LAST ONE
	JUMPN	C,LSTSN2	;NULL_END OF SENT, ELSE NOT END OF ANY WORD

	MOVE	A,E
	JRST	FSTSNT

BUTLAST:
	PUSHJ	P,NEWOPS
	JRST	BTLSNT

	ILDB	C,A	;BUTLAST OF WORD, COPY WORD AND CLOBBER LAST CHAR
	IDPB	C,B
	ILDB	C,A
	JUMPE	C,BTFEMP	;WAS A ONE CHAR WORD, MAKE AN EMPTY
	IDPB	C,B
	ILDB	C,A
	JUMPN	C,.-2	;COPY REST OF WORD
BTLCLO:	DPB	C,B	;CLOBBER LAST CHAR
	JRST	BTFCL1	;FILL TO END OF WORD

BTLSNT:	MOVE	E,A	;SAVE POINTER TO BEGINNING
BTLSN1:	ILDB	C,A	;STEP THRU FIRST WORD
	JUMPE	C,BTFEMW	;ALSO LAST, MAKE AN EMPTY
	CAIE	C," 
	JRST	BTLSN1	;CONTINUE WITH FIRST WORD

BTLSN2:	MOVE	A,E
BTLSN9:	ILDB	C,A		;COPY STEPPED OVER WORD
	IDPB	C,B
	CAIE	C," 
	JRST	BTLSN9

	MOVE	E,A	;SAVE POINTER TO NEXT WORD
BTLSN4:	ILDB	C,A
	JUMPE	C,BTLCLO	;THIS IS END OF LAST WORD
	CAIN	C," 
	JRST	BTLSN2	;END OF WORD, NOT LAST ONE, COPY IT
	JRST	BTLSN4	;NOT END OF WORD, FIND IT

			;END OF LFLAG=0 CONDITIONAL
]

	PUSHJ P,NRMLOP
WORD:
WORDX:
	HRLZI	A,WORDF
	TDNE	A,0(S)
	TDNN	A,-1(S)
	ERROR	WRDERR	;YOU CAN'T MAKE A WORD OUT OF A SENTENCE

CONC:	HRLZI	C,EMPTYF
	TDNN	C,-1(S)	;IS FIRST ARG EMPTY?
	JRST	WORD0	;NO
	POP	S,-1(S)	;YES, THEN SECOND ARG IS THE RESULT
	POPJ	P,

WORD0:	TDNE	C,(S)
	JRST	SPOPJ
	PUSHJ	P,NEWSTR	;SET UP B AND NEWBOT
	PUSHJ	P,NEWSR1	;SET UP A TO -1(S) AND SRCBOT

	ILDB	C,A
	JUMPE	C,WORD2	;DON'T COPY EOM FROM FIRST ARG
	IDPB	C,B
	JRST	.-3	;COPY WHOLE FIRST ARG

WORD2:	PUSHJ	P,NEWSRC	;SET UP A TO 0(S) AND SRCBOT
	ILDB	C,A
	IDPB	C,B	;COPY SECOND ARG, INCLUDING EOM
	JUMPN	C,.-2
	POP	S,A	;FLUSH SECOND ARG
	JRST	BTFCL1	;FILL ZEROES AND RETURN ONE ARG

;SENTENCE:
;	HRLZI	E,EMPTYF
;	TDNE	E,0(S)
;	TDNN	E,-1(S)
;	JRST	SENT1

SPOPJ:	POP	S,A	;BOTH EMPTY
	POPJ	P,	;RETURN EMPTY

	PUSHJ P,NRMLOP
SENTENCE:	PUSHJ	P,NEWSTR
	PUSHJ	P,NEWSR1

SENT2:	ILDB	C,A
	JUMPE	C,SENT3
	IDPB	C,B
	JRST	SENT2

SENT3:	MOVEI	C," 
	PUSHJ	P,NEWSRC
;	TDNN	E,-1(S)		;IF FIRST ARG IS EMPTY, DON'T SPACE

SENT4:	IDPB	C,B
	ILDB	C,A
	JUMPN	C,SENT4

	POP	S,A	;FLUSH SECOND ARG
	HRLZI	A,W+SENTF	;CALL NEW THING A SENTENCE
	HLLM	A,0(S)
	JRST	BTFCL1

IFE LFLAG,[			;NON-LIST OPERATIONS


COUNT:	MOVE	A,(S)	;THING TO COUNT
	MOVEI	B,0	;COUNT INITIALLY ZERO
	TLNE	A,EMPTYF	;IS IT EMPTY?
	JRST	COUNT2	;COUNT=0
	TLNN	A,WORDF	;IS IT A WORD?
	AOJA	B,COUNT1	;NO, IT IS A NON-EMPTY SENTENCE

	HRLI	A,440700+W
	MOVNI	B,1
	ADD	B,@A	;NOW NUMBER OF WORDS -1
	IMULI	B,5	;NUMBER OF CHARS IN ALL BUT LAST WORD
	ADD	A,@A	;NOW A POINTS AT LAST WORD
	ILDB	C,A	;WORD
	JUMPE	C,COUNT2
	AOJA	B,.-2

COUNT1:	HRLI	A,010700+W
COUNTL:	ILDB	C,A
	JUMPE	C,COUNT2
	CAIN	C," 
	AOJA	B,COUNTL	;COUNT WORDS OF SENT AT BEG OF WORD
	JRST	COUNTL		;MORE OF THE SAME WORD

COUNT2:
	MOVE	A,B	;ARG TO SNM IN A
	PUSHJ	P,SNM
	MOVSI	C,W+WORDF
	HLLM	C,(S)
	JRST	BTFCL1


RANDOM:	MOVE C,[EXP 1000003]
	IMULB C,RANNO
	ADD C,CRTIM1
	TLZ C,400000	;MAKE IT +
	MULI	C,12
	ADDI	C,"0
	JFCL	10,.+1
	PUSHJ	P,NEWSTR
	IDPB	C,B
	JRST	ENDSTR
]				;END OF LFLAG=0 CONDITIONAL

IFN LFLAG,[				;LIST OPERATIONS
FIRST:
	PUSHJ	P,NEWOPS	;CHECK EMPTY,SET UP SRCBOT+NEWBOT
	JRST	FSTSNT	;NO, SENTENCE

	ILDB	C,A	;FIRST BYTE
	IDPB	C,B	;BOMBS HERE ON FULL WORKSPACE

	JRST	BTFCL1

FSTSNT:	SETZ	D,
	TRZ	F,NWF\TF
FSTSN1:	ILDB	C,A
	JUMPE	C,FSTWD
	CAIN	C,"(
	AOJA	D,FSTSN4
	CAIN	C,")
	SOJA	D,FSTSN3
	CAIN	C," 
	JUMPE	D,FSTWD
	CAIN	C," 
	TRO	F,NWF
	JUMPN	C,FSTSN2
	JUMPN	D,FSTWD
	ERROR	NORP

FSTSN2:	TRON	F,TF
	CAIE	C,"(
	IDPB	C,B
	JRST	FSTSN1
FSTSN3:	TRO	F,NWF
	JUMPG	D,FSTSN2
	JUMPE	D,FSTWD
ILLIST:	ERROR	BADLST
FSTSN4:	TRNE	F,TF
	CAIE	D,1
	JRST	FSTSN2
	JRST	FSTWD
FSTWD:	CAMN B,NEWBOT	;IS IT EMPTY?
	SKIPA A,[W+WORDF\EMPTYF,,0]
	HRLZI	A,W+WORDF
	TRNN	F,NWF
	HLLM	A,0(S)
	MOVEI C,0
	JRST	BTFCL1

BUTFIRST:
	PUSHJ	P,NEWOPS
	JRST	BTFSNT	;NOT A WORD OR EMPTY, IE SENTENCE
	TRZ	F,TF
	IBP	A		;BUTFIRST OF WORD, SKIP OVER FIRST CHAR
	ILDB	C,A		;THIS IS THE SECOND CHAR
	JUMPN	C,BTFCOP	;MORE THAN ONE CHAR, COPY TO END OF STRING
BTFEMW:	SKIPA A,[W+WORDF\EMPTYF,,0]

BTFEMP:	HRLZI	A,W+SENTF\EMPTYF	;ONE OF THE MANY WAYS T
	MOVEM	A,(S)	;TO GET A POINTER TO EMPTY
	POPJ	P,

BTFSNT:	SETZ	D,
	TRZ	F,TF
BTFSN1:	ILDB	C,A
	JUMPE	C,BTFEMP
	CAIN	C,"(
	AOJA	D,BTFSN2
	TRO	F,TF
	CAIN	C,")
	SOJLE	D,BTFSN3
	CAIN	C," 
	JUMPE	D,BTFCP1
	JRST	BTFSN1
BTFSN2:	TROE	F,TF
	CAIE	D,1
	JRST	BTFSN1
	JRST	BFSN29
BTFSN3:	JUMPL	D,ILLIST
	ILDB	C,A
	JUMPE C,BTFEMP
	CAIN	C," 
	ILDB	C,A
	JUMPE	C,BTFEMP
	CAIE	C,"(
	JRST	BTFCLO
BFSN29:	HRRZI	D,1
	MOVE	E,A
BFSN30:	ILDB	C,E
	JUMPE	C,BFSN32
	CAIN	C,"(
	AOJA	D,BFSN30
	CAIE	C,")
	JRST	BFSN30
	SOJG	D,BFSN30
	ILDB	C,E
	JUMPN	C,BFSN32
	TRO	F,TF
	JRST	BTFCP1
BFSN32:	HRRZI	C,"(
	TRZ	F,TF
	JRST	BTFCLO

BTFCP1:	ILDB	C,A
BTFCOP:
BTFCLO:JUMPE C,.+3
	IDPB	C,B
	JRST	BTFCP1	;COPY THRU END OF ARG
	TRNN	F,TF
	JRST	BTFCL1
	LDB	C,B
	SETZ	D,
	CAIN	C,")
	DPB	D,B

BTFCL1:	SETZ	C,
	IDPB	C,B
	PUSHJ	P,ENDST1
	POP	S,A
	HRRM	A,(S)	;NEW STRING, OLD TYPE
	POPJ	P,

LAST:
	PUSHJ	P,NEWOPS
	JRST	LSTSNT

	ILDB	C,A
	IDPB	C,B	;COPY FIRST CHAR, BUMPING THE CHAR PTR IN B ONCE

	ILDB	C,A
	JUMPE	C,BTFCL1	;DONE WITH THE WORD
	DPB	C,B	;PUT THIS CHAR ON TOP OF PREVIOUS ONE
	JRST	.-3

LSTSNT:	SETZ	D,
	TRZ	F,TF
LSTSN1:	MOVE	E,A		;SAVE POINTER TO BEGINNING OF WORD
LSTSN2:	ILDB	C,A
	CAIE	C,"(
	JRST	LSTS21
	CAIE	D,0
	AOJA	D,LSTSN2
	AOJA	D,LSTSN1
LSTS21:	CAIE	C,")
	JRST	LSTS22
	TRO	F,TF
	SOJL	D,ILLIST
	JRST	LSTSN2
LSTS22:	JUMPE	C,LSTSN3
	TRZE	F,TF
	JUMPE	D,LSTSN1
	CAIE	C," 
	JRST	LSTSN2
	JUMPG	D,LSTSN2
	JUMPE	D,LSTSN1
	JRST	ILLIST
LSTSN3:	MOVE	A,E
	TRZ	F,TF
	LDB	C,E
	CAIN	C," 
	JRST	FSTSNT
	LDB	E,[360600,,A]
	HRRZI	E,7(E)
	DPB	E,[360600,,A]
	CAIG	E,44
	JRST	FSTSNT
	HRRI	A,-1(A)
	TLZ	A,770000
	JRST	FSTSNT

BUTLAST:
	PUSHJ	P,NEWOPS
	JRST	BTLSNT

	ILDB	C,A	;BUTLAST OF WORD, COPY WORD AND CLOBBER LAST CHAR
	IDPB	C,B
	ILDB	C,A
	JUMPE	C,BTFEMP	;WAS A ONE CHAR WORD, MAKE AN EMPTY
	IDPB	C,B
	ILDB	C,A
	JUMPN	C,.-2	;COPY REST OF WORD
BTLCLO:	DPB	C,B	;CLOBBER LAST CHAR
	JRST	BTFCL1	;FILL TO END OF WORD

BTLSNT:	MOVE	E,A
	TRZ	F,TF
	SETZ	D,
BTLSN1:	ILDB	C,A
	JUMPE	C,BTFEMW
	CAIN	C," 
	JUMPE	D,BTLSN2
	CAIN	C,"(
	AOJA	D,BTLS11
	CAIN	C,")
	SOJG	D,BTLSN1
	JUMPL	D,ILLIST
	JRST	BTLSN2
BTLS11:	TROE	F,TF
	CAIE	D,1
	JRST	BTLSN1
	JRST	BTLSN2

BTLSN2:	MOVE	A,E
	SETZ	D,
	TRZ	F,TF
BTLSN9:	ILDB	C,A
	CAIN	C,"(
	AOJA	D,BTLS90
BTLS93:	TRO	F,TF
	IDPB	C,B
	CAIN	C,")
	SOJE	D,BTLS91
	JUMPL	D,ILLIST
	CAIN	C," 
	JUMPE	D,BTLS91
	JRST	BTLSN9
BTLS90:	JUMPL	D,ILLIST
	TROE	F,TF
	CAIE	D,1
	JRST	BTLS93
	LDB	D,[360600,,A]
	HRRZI	D,7(D)
	DPB	D,[360600,,A]
	CAIG	D,44
	JRST	BTLS91
	HRRI	A,-1(A)
	TLZ	A,770000
	JRST	BTLS91

BTLS91:	MOVE	E,A
	TRZ	F,TF
BTLS92:	SETZ	D,
BTLSN4:	ILDB	C,A
	JUMPE	C,BTLCLO
	CAIN	C,"(
	AOJA	D,BTLS42
	TRO	F,TF
	CAIN	C,")
	SOJE	D,BTLS41
	JUMPL	D,ILLIST
	CAIN	C," 
	JUMPE	D,BTLSN2
	JRST	BTLSN4
BTLS41:	MOVE	D,A
	ILDB	C,D
	JUMPN	C,BTLSN2
	JRST	BTLCLO
BTLS42:	TROE	F,TF
	CAIE	D,1
	JRST	BTLSN4
	JRST	BTLSN2

	PUSHJ	P,NRMLOP		;MULTIPLE INPUT
CONS:	JRST	SENTENCE


	JRST	MLTCON		;FOR MULTIPLE INPUTS
CONCAT:	TRZ	F,TF		;NORMAL INPUT
	MOVE	A,-1(S)
	EXCH	A,(S)
	MOVEM	A,-1(S)
CNCT.0:	PUSHJ	P,NEWSTR
	HRRZI	C,"(
	IDPB	C,B
	MOVE	A,(S)
	TLNE	A,EMPTYF
	JRST	CNCT.2
	HRLI	A,010700+W
CNCT.1:	ILDB	C,A
	JUMPE	C,CNC1.5
	IDPB	C,B
	JRST	CNCT.1
CNC1.5:	POP	S,A
CNCT.2:	HRRZI	C,")
	IDPB	C,B
	HRRZI	C," 
	IDPB	C,B
	HRRZI	C,"(
	IDPB	C,B
	MOVE	A,(S)
	TLNE	A,EMPTYF
	JRST	CNCT.4
	HRLI	A,010700+W
CNCT.3:	ILDB	C,A
	JUMPE	C,CNCT.4
	IDPB	C,B
	JRST	CNCT.3
CNCT.4:	TRNE	F,TF
	JRST	MLTCN1		;MULTIPLE INPUT
CNCT.5:	HRRZI	C,")
	IDPB	C,B
	SETZ	C,
	IDPB	C,B
	POP	S,A
	TRO	F,NWF		;MAKE OUTPUT A LIST
	JRST	ENDST1
MLTCON:	PUSHJ	P,REVARG
	TRO	F,TF
	JRST	CNCT.0
MLTCN1:	POP	S,A
	MOVE	A,(S)
	CAME	A,[W+WORDF,,DUMMYV]
	JRST	CNCT.2		;MORE ARGUMENTS
	JRST	CNCT.5

LEVEL:	MOVE	A,(S)
	TLNE	A,EMPTYF
	POPJ	P,
	PUSHJ	P,NEWSTR
	SETZ	D,
	MOVE	A,(S)
	HRLI	A,010700+W
	TRZ	F,TF
LEVEL1:	ILDB	C,A
LEVEL3:	CAIN	C," 
LEVEL2:	JSP	D,LEVEL4
	CAIN	C,"(
	JRST	LEVEL5
	CAIE	C,")
	JRST	LVL3.5
LVL2.5:	ILDB	C,A
	CAIN	C,")
	JRST	LVL2.5
	JUMPE	C,LEVEL4
	CAIN	C," 
	JSP	D,LEVEL4
	HRRZI	D," 
	IDPB	D,B
	JSP	D,LEVEL3
LVL3.5:	SETZ	D,
LEVEL4:	TRON	F,TF
	CAIE	C," 
	IDPB	C,B
	JUMPN	C,LEVEL1
	PUSHJ	P,ENDST1
	POP	S,A
	HRRM	A,(S)
	POPJ	P,
LEVEL5:	ILDB	C,A
	CAIN	C,"(
	JRST	LEVEL5
	JUMPN	D,LEVEL3
	HRRZI	D," 
	TRNE	F,TF
	IDPB	D,B
	JSP	D,LEVEL3

MEMBER:	MOVE	A,-1(S)
	MOVE	B,(S)
	TLNE	A,EMPTYF
	JRST	MEMBR0
	TLNN	B,EMPTYF
	JRST	MEMBR1		;NEITHER EMPTY
	JRST	NOTM1		;A NOT EMPTY, B EMPTY
MEMBR0:	TLNE	B,EMPTYF
	JRST	ISMEM1		;BOTH EMPTY
MEMBR1:	TLNN	A,WORDF
	JRST	MBR1.1		;A NOT WORD
	TRZ	F,TF
	HRLI	A,010700+W
	SETZ	D,
	ILDB	C,A
	JUMPE	C,MEMBR2
	AOJA	D,.-2		;COUNT CHARACTERS IN A
MBR1.1:	TRO	F,TF
	HRLI	A,010700+W
	ILDB	C,A
	CAIE	C,"(
	JRST	MBR1.3
	HRRZI	D,1
MBR1.2:	ILDB	C,A
	JUMPE	C,NOTM1
	CAIN	C,"(
	AOJA	D,MBR1.2
	CAIE	C,")
	JRST	MBR1.2
	SOJG	D,MBR1.2
	JUMPL	D,ILLIST
	ILDB	C,A
	HRRZI	D,(E)
	JUMPE	C,MEMBR2
MBR1.3:	PUSHJ	P,NEWSTR
	MOVE	A,-1(S)
	HRLI	A,010700+W
	HRRZI	D,2
	HRRZI	C,"(
	IDPB	C,B
	ILDB	C,A
	CAIE	C,0
	AOJA	D,.-3
	HRRZI	C,")
	IDPB	C,B
	PUSH	P,D
	PUSHJ	P,ENDSTR
	POP	S,A
	MOVEM	A,-1(S)	
	SKIPA
;FALLS THROUGH

;FALLS IN
MEMBR2:	PUSH	P,D		;LENGTH OF A
	PUSH	P,D
	HRRZ	B,(S)
	HRLI	B,010700+W
MEMBR3:	MOVE	E,B
MEM3.0:	MOVE	D,-1(P)
	MOVEM	D,(P)
	SETZB	A,D
	MOVE	B,E
MEM3.1:	ILDB	C,B
	JUMPE	C,MEM3.2
	CAIN	C," 
	JUMPE	D,MEM3.2
	AOJA	A,.+1		;LENGTH
	CAIN	C,"(
	AOJA	D,MEM3.1
	CAIN	C,")
	SOJE	D,MEM3.2
	JUMPL	D,ILLIST
	JRST	MEM3.1
MEM3.2:	EXCH	B,E		;START IN B, END IN E
	CAME	A,(P)		;LENGTHS
	JRST	MEM3.4
	HRRZ	A,-1(S)
	HRLI	A,010700+W
MEM3.3:	SOSGE	(P)
	JRST	ISAMEM
	ILDB	C,A
	ILDB	D,B
	CAIN	C,(D)
	JRST	MEM3.3
MEM3.4:	MOVE	B,E
	ILDB	C,B
	CAIE	C," 
	MOVE	B,E
	JUMPE	C,NOTMEM
	JRST	MEMBR3
NOTMEM:	POP	P,A
	POP	P,A
NOTM1:	POP	S,A
	POP	S,B
	JRST	ISFALS
ISAMEM:	POP	P,A
	POP	P,A
ISMEM1:	POP	S,A
	POP	S,B
	JRST	ISTRUE

	PUSHJ	P,NRMLOP		;FOR MULTIPLE INPUTS
INTERS:	MOVE	A,-1(S)
	TLNE	A,EMPTYF
	JRST	INTEMP		;RESULT EMPTY
	MOVE	B,(S)
	TRZ	F,TF
	TLNE	B,EMPTYF
	JRST	INTEMP
	PUSH	P,[0]		;REL. FIRST OF A
	PUSH	P,[0]		;REL. NEXT OF A
	PUSH	P,[0]		;SIZE OF A
	PUSH	P,[0]		;COUNTER
	PUSH	P,[0]		;REL. NEXT OF B
	PUSHJ	P,NEWSTR
INTR.2:	HRLZI	A,010700+W
	HRR	A,-1(S)
	ADD	A,-3(P)		;NEXT A ELEMENT
	MOVE	C,A
	ILDB	D,C
	JUMPE	D,INTR.4		;NO MORE A ELEMENTS
	PUSHJ	P,GETELM
	MOVEM	C,-2(P)		;SIZE
	MOVEM	C,-1(P)		;COUNTER
	MOVE	A,-3(P)
	MOVEM	A,-4(P)		;NEW FIRST OF A
	HRLZI	C,010700+W
	HRR	C,-1(S)
	SUB	E,C
	MOVEM	E,-3(P)		;NEW NEXT OF A
	SETZM	(P)
INTR.1:	HRRZ	A,(S)
	HRLI	A,010700+W
	ADD	A,(P)		;REL. NEXT OF B
	MOVE	C,A
	ILDB	D,C
	JUMPE	D,INTR.2		;NO MORE IN B---ANY MORE A?
	PUSHJ	P,GETELM
	HRRZ	D,(S)
	HRLI	D,010700+W
	MOVE	A,(P)
	ADD	A,D		;BEGINNING OF B ELEMENT
	SUB	E,D		;NEXT B ELEMENT
	MOVEM	E,(P)

;FALLS IN
INTR.3:	CAME	C,-2(P)
	JRST	INTR.1		;DIFFERENT SIZES
	MOVEM	C,-1(P)		;COUNTER
	HRRZ	C,-1(S)
	HRLI	C,010700+W
	ADD	C,-4(P)		;START OF A ELEMENT
INT3.1:	SOSGE	-1(P)
	JRST	INT315		;ALL CHARACTERS SAME
	ILDB	D,A
	ILDB	E,C
	CAIE	D,(E)
	JRST	INTR.1		;NOT THE SAME
	JUMPN	D,INT3.1
INT315:	HRRZ	A,-1(S)
	HRLI	A,010700+W
	ADD	A,-4(P)
	MOVE	E,-2(P)
	TRON	F,NWF
	JRST	INT3.2
	HRRZI	C," 
	IDPB	C,B
INT3.2:	SOJL	E,INTR.2
	ILDB	C,A
	IDPB	C,B
	JRST	INT3.2
INTR.4:	POP	P,A		;NEXT B
	POP	P,A		;COUNTER
	POP	P,A		;SIZE
	POP	P,A		;NEXT A
	POP	P,A		;FIRST A
	POP	S,A		;B
	POP	S,A		;A
	TRO	F,NWF
	JRST	ENDSTR
INTEMP:	POP	S,A
	HRLZI	A,SENTF+EMPTYF
	MOVEM	A,(S)		;RETURN EMPTY
	POPJ	P,

COUNT:	MOVE	A,(S)	;THING TO COUNT
	MOVEI	B,0	;COUNT INITIALLY ZERO
	TLNE	A,EMPTYF	;IS IT EMPTY?
	JRST	COUNT2	;COUNT=0
	TLNN	A,WORDF	;IS IT A WORD?
	AOJA	B,COUNT1	;NO, IT IS A NON-EMPTY SENTENCE
	HRLI	A,440700+W
	MOVNI	B,1
	ADD	B,@A	;NOW NUMBER OF WORDS -1
	IMULI	B,5	;NUMBER OF CHARS IN ALL BUT LAST WORD
	ADD	A,@A	;NOW A POINTS AT LAST WORD
	ILDB	C,A	;WORD
	JUMPE	C,COUNT2
	AOJA	B,.-2

COUNT1:	HRLI	A,010700+W
	SETZ	D,
	TRZ	F,TF
COUNTL:	ILDB	C,A
COUNL1:	JUMPE	C,COUNT2
	CAIN	C,"(
	AOJA	D,COUN10
	CAIN	C,")
	SOJE	D,COUN12
	JUMPL	D,ILLIST
	CAIN	C," 
	JUMPE	D,COUN11
	TRO	F,TF
	JRST	COUNTL
COUN10:	TROE	F,TF
	CAIE	D,1
	JRST	COUNTL
COUN11:	TRZ	F,TF
	AOJA	B,COUNTL
COUN12:	ILDB	C,A
	JUMPE	C,COUNT2
	TRZ	F,TF
	CAIN	C," 
	AOJA	B,COUNTL
	AOJA	B,COUNL1

COUNT2:
	MOVE	A,B	;ARG TO SNM IN A
	PUSHJ	P,SNM
	MOVSI	C,W+WORDF
	HLLM	C,(S)
	JRST	BTFCL1

RANDOM:	MOVE C,[EXP 1000003]
	IMULB C,RANNO
	ADD C,CRTIM1
	TLZ C,400000	;MAKE IT +
	MULI	C,12
	ADDI	C,"0
	JFCL	10,.+1
	PUSHJ	P,NEWSTR
	IDPB	C,B
	JRST	ENDSTR

	PUSHJ	P,NRMLOP		;FOR MULTIPLE INPUT
UNION:	MOVE	A,-1(S)
	TLNE	A,EMPTYF
	JRST	UNYUNB		;RETURN B
	MOVE	B,(S)
	TLNE	B,EMPTYF
	JRST	UNYUNA		;RETURN A
	PUSHJ	P,NEWSTR
	MOVE	A,-1(S)
	HRLI	A,010700+W
	ILDB	C,A
	IDPB	C,B
	JUMPN	C,.-2
	POP	S,A
	MOVEM	A,(S)
	PUSH	P,[0]		;REL. START OF B
	PUSH	P,[0]		;REL. NEXT B
	PUSH	P,[0]		;SIZE OF B
	PUSH	P,[0]		;COUNTER
	PUSH	P,[0]		;REL. NEXT IN NEW STRING
UNYUN1:	HRRZ	A,(S)
	HRLI	A,010700+W
	ADD	A,-3(P)		;NEXT B ELEMENT
	MOVE	C,A
	ILDB	D,C
	JUMPE	D,UNYUN5		;END
	PUSHJ	P,GETELM
	MOVEM	C,-2(P)		;SIZE
	MOVEM	C,-1(P)		;COUNT
	MOVE	A,-3(P)
	MOVEM	A,-4(P)		;BEGINNING OF B ELEMENT
	HRLZI	C,010700+W
	HRR	C,(S)
	SUB	E,C
	MOVEM	E,-3(P)		;BEGINNING OF NEXT B ELEMENT
	SETZM	(P)
UNYUN2:	HRRZ	A,WTOP
	ADD	A,[010700,,1(W)]
	ADD	A,(P)		;BEGINNING OF ELEMENT
	MOVE	C,A
	ILDB	D,C
	JUMPE	D,UNYUN4		;CURRENT B ELEMENT NOT IN NEW
	PUSHJ	P,GETELM
	HRRZ	D,WTOP
	ADD	D,[010700,,1(W)]
	SUB	E,D
	MOVEM	E,(P)		;REL. BEGINNING OF NEW ELEMENT
	CAME	C,-2(P)
	JRST	UNYUN2		;DIFFERENT LENGTHS---NO MATCH
	MOVEM	C,-1(P)		;COUNTER
	HRRZ	C,(S)
	HRLI	C,010700+W
	ADD	C,-4(P)		;START OF B ELEMENT
;FALLS THROUGH

;FALLS IN
UNYUN3:	SOSGE	-1(P)
	JRST	UNYUN1		;MATCHED
	ILDB	D,A
	ILDB	E,C
	CAIE	E,(D)
	JRST	UNYUN2		;NO MATCH
	JRST	UNYUN3
UNYUN4:	HRRZ	A,(S)
	HRLI	A,010700+W
	ADD	A,-4(P)
	HRRZI	C," 
	DPB	C,B
UNY4.1:	SOSGE	-2(P)
	JRST	UNY4.2
	ILDB	C,A
	IDPB	C,B
	JRST	UNY4.1
UNY4.2:	SETZ	C,
	IDPB	C,B
	JRST	UNYUN1
UNYUN5:	POP	S,A
	POP	P,A
	POP	P,A
	POP	P,A
	POP	P,A
	POP	P,A
	TRO	F,NWF
	SETZ	C,
	JRST	ENDST1
UNYUNB:	POP	S,A
	MOVEM	A,(S)
	POPJ	P,
UNYUNA:	POP	S,A
	POPJ	P,

		;AT ENTRY, A IS BP TO CHARACTER BEFORE FIRST
		;D IS PARENTHESIS LEVEL COUNT
		;E IS CHARACTER COUNT
		;RETURN ENDING BP IN E, COUNT IN C

GETELM:	PUSH	P,[0]
	MOVEM	A,(P)
	SETZB	D,E
GTELM1:	ILDB	C,A
	JUMPE	C,GTELM4		;END OF STRING
	HRRZI	E,1(E)		;COUNT
	CAIN	C,"(
	AOJA	D,GTELM1
	CAIN	C,")
	SOJA	D,GTELM3
	CAIE	C," 
	JRST	GTELM1
	JUMPN	D,GTELM1
GTELM2:	HRRZI	C,-1(E)		;UNCOUNT TRAILING SPACE
	MOVE	E,A
	POP	P,A
	POPJ	P,
GTELM3:	JUMPG	D,GTELM1
	JUMPL	D,ILLIST
	ILDB	C,A
	CAIN	C," 
	AOJA	E,GTELM2
GTELM4:	LDB	D,[360600,,A]
	HRRZI	D,7(D)
	DPB	D,[360600,,A]
	CAIG	D,44
	AOJA	E,GTELM2
	HRRI	A,-1(A)
	TLZ	A,760000
	AOJA	E,GTELM2

PICKEL:	MOVE	A,(S)
	TLNN	A,EMPTYF
	TLNN	A,SENTF
	ERROR	PICKE1
	MOVE	A,-1(S)
	PUSHJ	P,NUMBRQ		;IS IT A NUMBER?
	ERROR PICKE2		;NO
	SETZ	D,
	TRZ	F,TF
	HRRZ	A,-1(S)
	HRLI	A,010700+W
	PUSHJ	P,MNCONL		;CONVERT TO BINARY
	JUMPG	D,.+2
	ERROR	PICKE3
	PUSH	P,D
	MOVE	A,(S)
	PUSH	S,A
	PUSHJ	P,COUNT
	POP	S,A
	SETZ	D,
	TRZ	F,TF
	HRLI	A,010700+W
	PUSHJ	P,MNCONL
	CAML	D,(P)
	JRST	PICK.1
	MOVE	B,(P)		;NUMBER WANTED
	IDIVI	B,(D)		;DIVIDE BY COUNT
	IMULI	B,(D)
	MOVE	E,(P)
	SUBI	E,(B)
	JUMPG	E,PICK.0
	MOVE	E,D
PICK.0:	MOVEM	E,(P)
PICK.1:	HRRZ	E,(S)
	HRLI	E,010700+W
PICK.2:	MOVE	A,E
	PUSHJ	P,GETELM
	SOSLE	(P)
	JRST	PICK.2
	MOVEM	C,(P)
	HRRZ	B,(S)
	HRLI	B,010700+W
	SUB	A,B
	PUSH	P,A
	PUSHJ	P,NEWSTR
	HRRZ	A,(S)
	HRLI	A,010700+W
	POP	P,C
	ADD	A,C
	POP	P,D
	TRZ	F,NWF
PICK.3:	ILDB	C,A
	CAIE	C," 
	CAIN	C,"(
	TRO	F,NWF
	IDPB	C,B
	SOJG	D,PICK.3
	POP	S,A
	POP	S,A
	JRST	ENDSTR
VECTRP:	PUSHJ	P,VEKTRP
	JRST	NVP
	HRRZI	A,[ASCIZ /TRUE/]
VP.1:	HRLI	A,440700
	PUSHJ	P,NEWSTR
	ILDB	C,A
	IDPB	C,B
	JUMPN	C,.-2
	JRST	ENDSTR
NVP:	HRRZI	A,[ASCIZ /FALSE/]
	JRST	VP.1


VEKTRP:	MOVE	A,(S)
	TLNN	A,SENTF
	JRST	NOTVEK
	PUSH	S,A
	PUSHJ	P,COUNT
	POP	S,A
	HRLI	A,010700+W
	ILDB	C,A
	CAIE	C,"2
	JRST	NOTVEK
	ILDB	C,A
	JUMPN	C,NOTVEK
	PUSH	S,(S)
	PUSHJ	P,FIRST
	PUSHJ	P,VEKNUM
	JRST	NOTVEK
	PUSH	S,(S)
	PUSHJ	P,LAST
	PUSHJ	P,VEKNUM
	JRST	NOTVEK
	AOS	(P)
NOTVEK:	POP	S,A
	POPJ	P,


VEKNUM:	POP	S,A
	TLNE	A,SENTF+EMPTYF
NOVNUM:	POPJ	P,
	HRLI	A,010700+W
	TRZ	F,TF
	ILDB	C,A
	JUMPE	C,NOVNUM
	SETZ	D,
	CAIE	C,"+
	CAIN	C,"-
VKNM.1:	ILDB	C,A
	JUMPE	C,VKNM.2
	CAIL	C,"0
	CAILE	C,"9
	JRST	.+2
	JSP	D,VKNM.1
	CAIE	C,".
	JRST	NOVNUM
	TRON	F,TF
	JRST	VKNM.1
	JRST	NOVNUM
VKNM.2:	JUMPE	D,NOVNUM
	AOS	(P)
	POPJ	P,


VSUB:	MOVE	A,(S)
	PUSH	S,A
	PUSHJ	P,VEKTRP
	ERROR	NOTVEC
	MOVE	A,(S)
	PUSH	S,A
	PUSHJ	P,FIRST
	PUSHJ	P,VNEGAT
	MOVE	A,(S)
	EXCH	A,-1(S)
	MOVEM	A,(S)
	PUSHJ	P,LAST
	PUSHJ	P,CONS
	JRST	VADD


VNEGAT:	PUSHJ	P,NEWSTR
	POP	S,A
	HRLI	A,010700+W
	HRRZI	D,"-
	ILDB	C,A
	CAIN	C,"+
	JRST	VNEG.1
	CAIE	C,"-
	JRST	VNEG.4
	HRRZI	D,"+
VNEG.1:	IDPB	D,B
VNEG.2:	ILDB	C,A
	JUMPE	C,ENDSTR
VNEG.3:	IDPB	C,B
	JRST	VNEG.2
VNEG.4:	IDPB	D,B
	JRST	VNEG.3


VECTOR:	PUSH	S,(S)
	PUSH	S,-2(S)
	PUSHJ	P,VEKNUM
	ERROR	.
	PUSHJ	P,VEKNUM
	ERROR	.
	JRST	CONS


VADD:	MOVE	A,-1(S)
	PUSH	S,A
	PUSHJ	P,VEKTRP
	ERROR	NOTVEC
	MOVE	A,(S)
	PUSH	S,A
	PUSHJ	P,VEKTRP
	ERROR	NOTVEC
	MOVE	A,(S)
	EXCH	A,-1(S)
	MOVEM	A,(S)
	PUSH	S,A
	PUSHJ	P,FIRST
	MOVE	A,(S)
	EXCH	A,-1(S)
	MOVEM	A,(S)
	PUSHJ	P,LAST
	MOVE	A,-1(S)
	EXCH	A,-2(S)
	EXCH	A,(S)
	MOVEM	A,-1(S)
	PUSH	S,(S)
	PUSHJ	P,FIRST
	MOVE	A,(S)
	EXCH	A,-1(S)
	MOVEM	A,(S)
	PUSHJ	P,LAST
	PUSHJ	P,VNCNVF
	PUSH	P,A
	PUSHJ	P,VNCNVF
	PUSH	P,A
	PUSHJ	P,VNCNVF
	PUSH	P,A
	PUSHJ	P,VNCNVF
	PUSH	P,A
	MOVE	A,-3(P)
	PUSHJ	P,SIND		;SIN(A2)
	FMPR	A,-2(P)
	PUSH	P,A
	MOVE	A,-2(P)
	PUSHJ	P,SIND
	FMPR	A,-1(P)
	FADRB	A,(P)		;VERTICAL COMPONENT
	MOVMS	A
	FSBR	A,[0.00001]
	JUMPG	A,.+2
	SETZM	(P)
	MOVE	A,-4(P)
	PUSHJ	P,COSD
	FMPR	A,-3(P)
	PUSH	P,A
	MOVE	A,-3(P)
	PUSHJ	P,COSD
	FMPR	A,-2(P)
	FADRB	A,(P)		;HORIZONTAL COMPONENT
	MOVMS	A
	FSBR	A,[0.00001]
	JUMPG	A,VADD.1
	SETZM	(P)
	SETZ	A,
	SKIPN	-1(P)
	JRST	VADD.2
	MOVE	A,[90.0]
	SKIPG	-1(P)
	MOVNS	A
	JRST	VADD.2
VADD.1:	MOVE	A,-1(P)
	FDVR	A,(P)
	PUSHJ	P,ATAN
	MOVMS	A
	MOVE	B,(P)
	XOR	B,-1(P)
	TLNE	B,400000
	MOVNS	A
	SKIPG	(P)
	FADR	A,[180.0]
	JUMPGE	A,VADD.2
	FADR	A,[360.0]
VADD.2:	PUSH	P,A
	MOVE	A,-1(P)
	FMPRM	A,-1(P)
	MOVE	A,-2(P)
	FMPR	A,-2(P)
	FADR	A,-1(P)		;R3 ** 2
	PUSHJ	P,SQRT
	POP	P,B
	POP	P,C
	POP	P,C
	POP	P,C
	POP	P,C
	POP	P,C
	POP	P,C
	PUSH	P,B
	PUSHJ	P,VNMRET
	POP	P,A
	PUSHJ	P,VNMRET
	JRST	CONS


ATAN:	PUSH	P,B
ATAN1:	MOVM	B,A
	CAMG	B,[145000,,0]
	JRST	AT5
	PUSH	P,D
	HLLO	D,A
	CAML	B,[233000,,0]
	JRST	AT4
	PUSH	P,C
	MOVSI	C,201400
	CAMG	B,C
	TRZA	D,-1
	FDVM	C,B
	TLC	D,(D)
	PUSH	P,B
	FMP	B,B
	MOVE	C,[1.448631538]
	FAD	C,B
	MOVE	A,[-0.2647686202]
	FDVM	A,C
	FAD	C,B
	FAD	C,[3.316335425]
	MOVE	A,[-7.106760045]
	FDVM	A,C
	FAD	C,B
	FAD	C,[6.762139240]
	MOVE	A,[3.709256262]
	FDV	A,C
	FAD	A,[0.1746554388]
	FMP	A,(P)
	TRNE	D,-1
	FSB	A,[1.570796]
	POP	P,C
	POP	P,C
	JRST	.+2
AT4:	MOVE	A,[1.570796]
	SKIPGE	D
	MOVNS	A
	POP	P,D
AT5:	FDVR	A,[0.017453292]
	POP	P,B
	POPJ	P,



VNCNVF:	MOVE	D,[1.0]
	MOVE	B,[0.0]
	POP	S,A
	TLNE	A,EMPTYF
	JRST	VCVF.5
	HRLI	A,010700+W
	ILDB	C,A
	CAIN	C,"+
	JRST	VCVF.2
	CAIE	C,"-
	JRST	VCVF.1
	MOVE	D,[-1.0]
	JRST	VCVF.2
VCVF.1:	JUMPE	C,VCVF.5
	CAIN	C,".
	JRST	VCVF.3
	FMPR	B,[10.0]
	FADR	B,FPDIGT-"0(C)
VCVF.2:	ILDB	C,A
	JRST	VCVF.1
VCVF.3:	MOVE	E,[10.0]
VCVF.4:	ILDB	C,A
	JUMPE	C,A
	JUMPE	C,VCVF.5
	MOVE	C,FPDIGT-"0(C)
	FDVR	C,E
	FADR	B,C
	FMPR	E,[10.0]
	JRST	VCVF.4
VCVF.5:	FMPR	B,D
	MOVE	A,B
	POPJ	P,


VNMRET:	TRZ	F,TF
	TLNN	A,400000
	JRST	VNRT.1
	TRO	F,TF
	MOVE	B,[0.0]
	FSBRB	B,A
VNRT.1:	PUSH	P,A
	PUSHJ	P,NEWSTR
	HRRZI	C,"-
	TRZE	F,TF
	IDPB	C,B
	SETZ	G,
	CAMGE	A,[1.0]
	JRST	VNRT.7
	PUSHJ	P,VFIX
	JUMPN	A,.+2
	ERROR	.
	MOVE	D,A
	TLC	A,232000
	FADR	A,A
	EXCH	A,(P)
	FSBR	A,(P)
	EXCH	A,(P)
	MOVE	A,[10000000000.]
	PUSH	P,B
VNRT.2:	IDIV	D,A
	JUMPN	D,VNRT.3
	IDIVI	A,10.
	EXCH	D,E
	JUMPG	A,VNRT.2
	ERROR	.
VNRT.3:	POP	P,B
	TRO	F,TF
	HRRZI	C,"0(D)
	IDPB	C,B
	HRRZI	G,1(G)
	MOVE	D,E
	CAIG	A,1
	JRST	VNRT.4
	PUSH	P,B
	IDIVI	A,10.
	IDIV	D,A
	JRST	VNRT.3
VNRT.4:	CAIL	G,8.
	JRST	VNRT.6
	HRRZI	C,".
	IDPB	C,B
VNRT.5:	MOVE	A,[10.0]
	FMPRB	A,(P)
	PUSHJ	P,VFIX
	HRRZI	C,"0(A)
	TLC	A,232000
	FADR	A,A
	EXCH	A,(P)
	FSBR	A,(P)
	EXCH	A,(P)
	IDPB	C,B
	CAIE	C,"0
	TROA	F,TF
	TRNE	F,TF
	HRRZI	G,1(G)
	MOVE	A,(P)
	CAIG	G,8.
	JUMPG	A,VNRT.5
VNRT.6:	POP	P,A
	JRST	ENDSTR
VNRT.7:	HRRZI	C,"0
	IDPB	C,B
	CAME	A,[0.0]
	JRST	VNRT.4
	JRST	VNRT.6


FPDIGT:	0.0
	1.0
	2.0
	3.0
	4.0
	5.0
	6.0
	7.0
	8.0
	9.0


VFIX:	CAIN	A,0
	POPJ	P,
	PUSH	P,B
	PUSH	P,A
	MULI	A,400
	TSC	A,A
	ASH	B,-243(A)
	MOVE	A,B
	SKIPG	(P)
	AOS	A
	POP	P,B
	POP	P,B
	POPJ	P,
SQRT:	MOVEM	B,SB
	MOVE	B,A
SQRT1:	JUMPLE	B,SQ2
	MOVEM	C,SC
	PUSH	P,[FSC A,0]
	ASHC	B,-33
	SUBI	B,201
	ROT	B,-1
	HRRM	B,(P)
	LSH	B,-43
	ASH	C,-10
	FSC	C,177(B)
	MOVEM	C,A
	FMP	C,SQS1(B)
	FAD	C,SQS2(B)
	MOVE	B,A
	FDV	B,C
	FAD	C,B
	FSC	C,-1
	FDV	A,C
	FADR	A,C
SQ1:	POP	P,C
	XCT	C
	SKIPA	C,SC
SQ2:	MOVEI	A,0
	MOVE	B,SB
	POPJ	P,


SCALRM:	MOVE	A,-1(S)
	PUSH	S,A
	PUSHJ	P,VEKNUM
	ERROR	BDSCLR
	MOVE	A,(S)
	PUSH	S,A
	PUSH	S,A
	PUSHJ	P,VEKTRP
	ERROR	NOTVEC
	PUSHJ	P,FIRST
	MOVE	A,(S)
	EXCH	A,-1(S)
	MOVEM	A,(S)
	MOVE	A,-2(S)
	PUSH	S,A
	PUSHJ	P,VNCNVF
	PUSH	P,A
	MOVE	A,-1(S)
	PUSH	S,A
	PUSHJ	P,VNCNVF
	FMPR	A,(P)
	PUSHJ	P,VNMRET
	POP	S,A
	POP	S,B
	MOVEM	A,-1(S)
	MOVEM	B,(S)
	POP	P,A
	PUSHJ	P,LAST
	JRST	CONS


]		;END OF LFLAG=1 CONDITIONAL
EITHER:	TROA	F,TF
BOTH:	TRZ	F,TF
	MOVE	A,(S)
	PUSHJ	P,PREDIQ
	 ERROR	PREDR2
	MOVE	A,-1(S)
	PUSHJ	P,PREDIQ
	 ERROR	PREDR2
	POP	S,B	;SECOND ARG
	MOVEI	A,1	;LENGTH OF "TRUE"
	TRZN	F,TF	;SKIP IF DOING EITHER
	MOVEI	A,2	;LENGTH OF "FALSE"
	CAMN	A,@WSB	;COMPARE AGAINST LENGTH OF SECOND ARG
	MOVEM	B,(S)	;JAM IF EITHER AND TRUE OR BOTH AND FALSE
	POPJ	P,

NOT:	MOVE A,(S)
	PUSHJ P,PREDIQ
	 ERROR PREDR1
	POP S,B
	MOVE A,@WSB
	CAIE A,1
	JRST ISTRUE
	JRST ISFALSE

EMPTYP:	HRLZI	A,EMPTYF
PREDS1:	POP	S,B
	TDNN	A,B
	JRST	ISFALSE
	JRST	ISTRUE
SENTP:	HRLZI	A,SENTF
	JRST	PREDS1
WORDP:	HRLZI	A,WORDF
	JRST	PREDS1

IS:	POP	S,A
	POP	S,B
IS1:	MOVE	C,@A
	CAME	C,@B
	JRST	ISFALSE
	ADDI	A,1
	TRNE	C,377
	AOJA	B,IS1

ISTRUE:	SKIPA	A,[XWD WORDF+W,TRUEV]	;POINTER TO "TRUE"
ISFALSE:MOVE	A,[XWD WORDF+W,FALSEV]	;WS PTR TO "FALSE"
	PUSH	S,A
	POPJ	P,

NUMBRP:	POP	S,A
	PUSHJ	P,NUMBRQ
	JRST	ISFALSE
	JRST	ISTRUE

LESSP:	MOVE A,(S)
	EXCH A,-1(S)
	MOVEM A,(S)
GRATRP:	PUSH	P,WTOP	;BOTH ARGS ARE NUMBERS, REMEMBER CURRENT TOP OF WS
	PUSHJ	P,DIFF	;GET THE DIFFERENCE
	POP	P,A	;GET THE OLD WTOP
	CAIGE	A,WTOP	;SKIP IF GC IN BETWEEN
	MOVEM	A,WTOP	;NO, FLUSH ALL GARBAGE GENERATED BY DIFF
	POP	S,A	;GET THE RESULT
	HRLI	A,010700+W
	ILDB	C,A	;GET THE SIGN OF THE RESULT
	CAIE C,"0	;IS IT ZERO?
	CAIN	C,"-	;IS IT NEGATIVE
	JRST	ISFALSE	;EITHER ZERO OF NEGATIVE, CANNOT BE GREATER
	JRST	ISTRUE

ZEROP:	MOVE	A,(S)
	PUSHJ	P,NUMBRQ
	 ERROR	ZERERR
	POP	S,A
	HRLI	A,010700+W
	ILDB	C,A		;GET THE FIRST CHAR
	CAIE	C,"+	;IF A SIGN, GET ANOTHER CHAR
	CAIN	C,"-
ZEROP1:	ILDB	C,A
	JUMPE	C,ISTRUE	;NUMBRQ WOULD FAIL ON SIGN ONLY OR EMPTY
	CAIN	C,"0
	JRST	ZEROP1
	JRST	ISFALSE


	PUSHJ P,NRMLOP
MAXIM:	PUSH	S,-1(S)
	PUSH	S,-1(S)	;COPY OF ARGS TO BE DESTROYED BY DIFF
	JRST	MINMAX
	PUSHJ P,NRMLOP
MINIM:	PUSH	S,0(S)
	PUSH	S,-2(S)	;OPPOSITE ORDER FROM MAX
MINMAX:	PUSHJ	P,DIFF
	POP	S,A	;RESULT OF SUBTRACTION
	POP	S,B	;SECOND INPUT TO MIN OR MAX
	HRLI	A,010700+W
	ILDB	C,A		;GET SIGN OF RESULT
	CAIN	C,"-	;IF POSITIVE, THEN FIRST IS RESULT
	MOVEM	B,0(S)	; ELSE SECOND ARG IS THE ANSWER
	POPJ	P,

DIFF:	TRO	F,PMF
	JRST SUM+1
	PUSHJ P,NRMLOP
SUM:	TRZ	F,PMF
	MOVE	A,(S)
	PUSHJ	P,NUMBRQ
	 ERROR	SUMERR
	MOVE	A,-1(S)
	PUSHJ	P,NUMBRQ
	 ERROR	SUMERR

	PUSHJ	P,REVERS
	CAIE	D,"-
	TRON	F,PMF	;SKIP IF SECOND ARG + AND IS SUBTRACTION
	TRON	F,PMF	;SKIP IF ARG2 - & DIFF OR ARG2 + & SUM
	PUSHJ	P,TENCOM	;CALLED WITH PMF=1_FILL 9'S

	MOVE	A,(S)
	EXCH	A,-1(S)
	MOVEM	A,(S)

	PUSHJ	P,REVERS
	CAIN	D,"-
	PUSHJ	P,TENCOM

	PUSHJ	P,SUMMER
	TRZ	F,PMF
	CAIN	G,"9	;RESULT NEG IFF HIGH ORDER DIG =9
	PUSHJ	P,TENCOM	;CALLED WITH PMF=0_PUT A "-" AT THE END

	POP	S,A	;FLUSH EXTRA LEADING ZEROES
	HRLI	A,350700+W	;SKIPPING OVER FIRST CHAR
	AOJA	A,.+2
SUM8:	CAIE	C,"0	;CONSECUTIVE 0?
	MOVE	B,A	;NO, SAVE POINTER TO HIGHEST SIGNIFICANT DIG SO FAR
	ILDB	C,A
	JUMPE	C,.+4	;END OF STRING
	CAIE	C,"-	;MINUS SIGN LIKE A TERMINATOR FOR NEG STRING
	JRST	SUM8
	IDPB	C,B	;PUT TERMINATOR (IN C) ABOVE MOST SIGNIFICANT DIGIT
	PUSHJ	P,ENDSTR

;FALL INTO REVERB - REVERSE BACK - AND EXIT FROM SUM FROM REVERB


REVERB:	TROA	F,TF	;REVERSING BACK, NO MODIFICATION TO STRING
REVERS:	TRZ	F,TF	;FIRST REVERSE OF NUMBER, FIDDLE WITH SIGNS
	PUSHJ	P,NEWSTR
	PUSHJ	P,NEWSRC
	MOVE	D,@A
	ADDI	A,(D)	;A POINTS AT LAST WORD
	MOVEI	G,2(D)
	MOVE	C,@A
	TRNE	C,77400	;IS NEXT TO LAST CHAR EOM?
	TRNN	F,TF	;SKIP IF BOTH PENULT NON-ZERO AND ADDING A CHAR
	MOVEI	G,-1(G)
	HRRZI	C,@WTOP
	ADDI	C,(G)
	MOVE G,LCORE
	LSH G,12
	SUBI G,1
	CAMLE	C,G
	 EXPAND	WS
	MOVE	C,@A
	MOVEI	G,0
	JUMPE	C,REVERE
	ROT	C,6
	ROT	C,-7
	TRNN	C,177
	AOJA	G,.-2
	ROT	G,1	;TIMES TWO
	JRST	.+4(G)
REVERL:	SUBI	A,1
	MOVE	C,@A
	ROT	C,-1	;FLUSH BIT 35
	IDPB	C,B
	ROT	C,-7
	IDPB	C,B	;D
	ROT	C,-7
	IDPB	C,B	;C
	ROT	C,-7
	IDPB	C,B	;B
	ROT	C,-7
	IDPB	C,B	;A
REVERE:	SOJG	D,REVERL	;MORE WORDS TO REVERSE
	TRNE	F,TF
	JRST	REVERO
	MOVEI	D,177
	ANDI	D,(C)	;SAVE STATE OF SIGN IN D
	MOVEI	C,"0
	CAIE	D,"+
	CAIN	D,"-
	DPB	C,B	;REPLACE THE SIGN WITH A "0"
	IDPB	C,B		;PUT A ZERO FOR UNSIGNED NUMBERS

REVERO:	SETZ C,		;SO THAT REST OF WORD WILL BE WIPED
	JRST	BTFCL1


TENCOM:
	PUSHJ	P,NEWSRC
	PUSHJ	P,NEWSTR
	TRO	F,TF	;SET CARRY INTO LOW ORDER DIGIT
	ILDB	C,A
	JUMPE	C,[ERROR]
NINECM:	SUBI	C,"0
	MOVNS	C
	ADDI	C,"9
	TRZE	F,TF	;WAS THERE A CARRY INTO THIS POSITION?
	ADDI	C,1	;YES
	CAIG	C,"9	;IS THERE A CARRY OUT OF THIS POS?
	JRST	.+3	;NO
	SUBI	C,12
	TRO	F,TF
	IDPB	C,B
	ILDB	C,A
	JUMPN	C,NINECM

	MOVEI	D,"-
	TRNN	F,PMF
	DPB	D,B
	JRST	ENDSTP

SUMMER:	MOVE	L,-1(S)
	TRZ	F,TF\PMF
	HRLI	L,010700+W
	MOVEM	L,LINBOT
	PUSHJ	P,NEWSRC
	PUSHJ	P,NEWSTR

SUMMRL:	ILDB	C,A
	JUMPE	C,SUMMR2
	SUBI	C,"0
	ILDB	E,L
	JUMPE	E,SUMMR3
	ADDI	C,(E)
	TRZE	F,TF	;CARRY?
	ADDI	C,1	;YES
	CAIG	C,"9	;CARRY OUT OF THIS POSITION?
	JRST	.+3	;NO
	SUBI	C,12
	TRO	F,TF
	IDPB	C,B
	MOVEI	G,(C)
	JRST	SUMMRL

SUMMR2:	MOVE	C,SRCBOT
	EXCH	C,LINBOT
	MOVEM	C,SRCBOT
	EXCH	A,L
	IBP	A
SUMMR3:	SUBI	L,1	;UNDEX PTR IN L
	REPEAT 3,IBP L
	ILDB	C,L	;GET PREVIOUS CHAR, (WAS 0 OR 9)
	CAIN	C,"9
	TRO	F,PMF	;NO, IT WAS TEN'S COMPLEMENT
	LDB	C,A
	JUMPE	C,SUMMR5

SUMMR4:	TRZE	F,TF
	ADDI	C,1
	TRNE	F,PMF	;WAS IT NEGATIVE?
	ADDI	C,11	;YES, LEADING NINES
	CAIG	C,"9
	JRST	.+3
	SUBI	C,12
	TRO	F,TF
	IDPB	C,B
	MOVEI	G,(C)
	ILDB	C,A
	JUMPN	C,SUMMR4

SUMMR5:	POP	S,A
	SETZM	LINBOT
	JRST	BTFCL1

;NEGATE A NUMBER
MINUS:	MOVE A,(S)
	PUSHJ P,NUMBRQ
	ERROR MINERR
	PUSHJ P,NEWSTR	;SET UP B AS DEST.
	PUSHJ P,NEWSRC	;SET UP A AS SOURCE
	ILDB C,A	;GET FIRST CHAR OF NUMBER
	MOVEI D,"-	;SET TO STORE -
	CAIN C,"-	;IS FIRST CHAR -?
	JRST COREST	;YES, DROP IT AND COPY REST
	IDPB D,B	;NO, # IS +, STORE A -
	CAIE C,"+	;IF FIRST CHAR IS +, DON'T STORE IT
	IDPB C,B	;STORE FIRST DIGIT
COREST:	ILDB C,A	;COPY REST
	JUMPN C,.-2
	JRST ENDSTP

	PUSHJ P,NRMLOP
TIMES:	TRZ F,PMF
	JFCL 10,.+1	;CLEAR OVERFLOW FLAG
	MOVE A,(S)
	PUSHJ P,NUMBRQ
	ERROR SUMERR
	PUSHJ P,MNCON
	POP S,A
	PUSH P,D
	MOVE A,(S)
	PUSHJ P,NUMBRQ
	ERROR SUMERR
	PUSHJ P,MNCON
	POP S,A
	POP P,A
	TRNE F,PMF
	POPJ	P,		;RETURN TO QUOT1 OR REM1
	IMUL D,A
	JRST QT2

QUOT:	TRO	F,PMF
	PUSHJ	P,TIMES+1
QUOT1:	JUMPE A,[ERROR DIVBY0]
	IDIV D,A
QT2:	JFCL 10,[ERROR QTOV]
	JRST LNCON

REMAIN:	TRO	F,PMF
	PUSHJ	P,TIMES+1
REM1:	JUMPE	A,[ERROR DIVBY0]
	IDIV	D,A
	MOVE	D,E		;GET REMAINDER
	JRST	QT2

	PUSHJ P,NRMLOP
STIMES:	MOVE A,(S)
	PUSHJ P,NUMBRQ
	ERROR SUMERR
	PUSH P,NUMCNT
	PUSHJ P,REVERS
	PUSH P,D
	POP S,A
	EXCH B,(S)
	PUSH S,B
	MOVE A,B
	PUSHJ P,NUMBRQ
	ERROR SUMMER
	PUSH P,NUMCNT
	PUSHJ P,REVERS
	EXCH B,(S)
	POP P,E
	ADDM E,-1(P)
	POP P,E
	TRZ F,PMF
	CAIN D,"-
	TRC F,PMF
	CAIN E,"-
	TRC F,PMF
STIME2:	MOVE E,(P)
	HRRZI C,@WTOP
	ADDI C,(E)
	MOVE G,LCORE
	LSH G,12
	SUBI G,1
	CAMGE C,G
	JRST STIME1
	TLZ F,GCF
	EXPAND WS
	JRST STIME2

STIME1:	POP P,A
	HRRZ B,WTOP
	ADDI B,1
	HRLI B,010700+W
	MOVEM A,@B
	ADDM A,WTOP
	AOS WTOP
	PUSH S,B
	MOVEI G,1(B)
	ADD G,W
	MOVE A,-1(S)
	PUSHJ P,BINIZE
	MOVE A,-2(S)
	PUSHJ P,BINIZE
	MOVE A,-1(S)
	HRLI A,010700+W
STIME3:	ILDB C,A
	CAIN C,177
	JRST STIME5
	JUMPE C,[AOJA G,STIME3]
STIME4:	MOVE B,-2(S)
	HRLI B,010700+W
	MOVE D,G
	SOJL C,[AOJA G,STIME3]
STIME6:	ILDB E,B
	CAIN E,177
	JRST STIME4
	JUMPE E,[AOJA D,STIME6]
	ADDM E,(D)
	AOJA D,STIME6
STIME5:	MOVEI A,@(S)
	MOVEI A,1(A)
	MOVE D,A
	ADD D,-1(A)
	SUBI D,1
	PUSH P,A
	PUSH P,D
STIME7:	MOVE E,(A)
	IDIVI E,10.
	MOVEM E+1,(A)
	ADDM E,1(A)
	CAIGE A,-1(D)
	AOJA A,STIME7
	JUMPN E,[ERROR]
	JUMPN E+1,[ERROR]
	POP P,D
	POP P,A
	MOVE B,-2(S)
	MOVEM B,NEWBOT
	HRLI B,010700+W
STIME9:	MOVE E,(D)
	JUMPN E,STIME8
	CAIGE A,(D)
	SOJA D,STIME9
	MOVEI C,"0
	IDPB C,B
	JRST STIM10
STIME8:	TRZN F,PMF
	JRST STIM11
	MOVEI C,"-
	IDPB C,B
STIM11:	ADDI E,60
	IDPB E,B
	SETZM (D)
	SUBI D,1
	MOVE E,(D)
	CAIG A,(D)
	JRST STIM11
STIM10:	SUB S,[3,,3]
	MOVEI A,@B
	SETZM 1(A)
	HRLI A,1(A)
	ADDI A,2
	BLT A,1(D)
	JRST ENDSTR

BINIZE:	HRLI A,010700+W
BINIZ1:	ILDB C,A
	JUMPE C,BINIZ2
	SUBI C,60
	DPB C,A
	JRST BINIZ1
BINIZ2:	MOVEI C,177
	DPB C,A
	POPJ P,

NUMRET:	MOVE D,A
LNCON:	PUSHJ P,NEWSTR
	JUMPGE D,.+2	;SIGN TO TF
	TROA F,TF
	TRZ F,TF
	MOVM D,D
	IDIVI D,10.
	MOVEI C,"0(E)	;CONVERT TO CHARACTER
	IDPB C,B
	JUMPN D,.-3
	MOVEI C,"-
	TRNE F,TF
	IDPB C,B
	PUSHJ P,ENDSTR
	JRST REVERB

NUCONV:	MOVE A,(S)	;INPUT IS STRING ON S
	PUSHJ P,NUMBRQ	;OUTPUT IS BINARY NUMBER IN E UNLESS STRING NOT NUMERIC
	ERROR ZERERR
NUMVAL:	EXCH D,E
	PUSH P,[NUMVL1]
MNCON:	PUSHJ P,NEWSRC
	MOVEI D,0
	TRZ F,TF	;SAW - SIGN
	JFCL 10,MNCONL
	JRST MNCONL

MNCON1:	CAIN C,"-	;IS IT -?
	TRO F,TF	;YES, NOTE
	CAIL C,"0	;IS IT DIGIT?
	CAILE C,"9
	JRST MNCONL	;NO, SIGN, GET NEXT
	IMULI D,10.	;YES, BUILD DEC. #
	ADDI D,-<"0>(C)
MNCONL:	ILDB C,A	;GET DIGIT
	JUMPN C,MNCON1	;DONE?
	TRNE F,TF	;SET SIGN
	MOVN D,D
	JFCL 10,[ERROR NUMBIG]
	POPJ P,	;RESULT IN D
NUMVL1:	EXCH D,E
	SUB S,[1,,1]	;GET RID OF THE ARGUMENT
	POPJ P,

WAIT:	.STATUS TYOC,A
	TRNE A,2002
	JRST SLEEP
	MOVEI A,1
	TLNE F,BREAKF
	ERROR BREAK
	.SLEEP A,
	JRST WAIT
SLEEP:	PUSHJ P,NUMVAL
SLEEP1:	MOVEI A,3
	SOJL E,COMEX
	.SLEEP A,
	TLNE F,BREAKF
	ERROR BREAK
	JRST SLEEP1

TIME:	.RTIME G,
	MOVEI C,":
PUT66:	MOVE E,[440600,,G]
	PUSHJ P,NEWSTR
PUT661:	ILDB H,E
	ADDI H,40
	IDPB H,B
	ILDB H,E
	ADDI H,40
	IDPB H,B
	TLNN E,700000
	JRST ENDSTR
	MOVE H,C
	JUMPE H,PUT661
	IDPB H,B
	JRST PUT661
CLOCK:	.RDTIM A,
	SUB A,TIMEC
	IDIVI A,3
	JRST NUMRET
.COMPU:	.SUSET [.RRUNT,,A]
	IDIVI A,250.
	JRST NUMRET
.RESET:	.RDTIME E,
	MOVEM E,TIMEC
	JRST COMEX
DATE:	.RDATE G,
	ROT G,12.
	MOVEI C,"/
	JRST PUT66

LOGN:	SKIPA G,UNAME
DIRN:	MOVE G,TBL
	MOVEI C,0
	JRST PUT66
VERSN:	MOVE G,VERS
	JRST DIRN+1

;HERE FOLLOW THE COMMANDS

LF:	MOVEI C,12
LF.1:	PUSHJ P,TYO
	JRST COMEX
CR:	MOVEI C,15
	JRST LF.1
BELL:	MOVEI C,7
	JRST LF.1
FRMFD:	MOVEI C,14
	JRST LF.1
BLNK:	MOVEI C,40
	JRST LF.1
QUOTX:	MOVEI C,42
	JRST LF.1

	PUSHJ P,MULTCM	;FOR MULTIPLE INPUTS
TYPE:	TRZ	F,CRF	;DON'T DO CRLF AFTER TOS
	JRST PRINT+1
	PUSHJ P,MULTCM
PRINT:	TRO	F,CRF
	POP	S,A	;GET THE THING TO TYPE OR PRINT
	PUSHJ	P,PTOSS
	TRZE	F,CRF	;CALLED BY TYPE OR PRINT?
LISTXT:	PUSHJ	P,CRLF	;PRINT
	JRST	COMEX

ENND:	TRZ	F,FLUSHF	;IF PROD ALREADY DEFINED THEN WE'RE DONE FLUSHING IT
	SKIPN	A,TOPROD
	ERROR	ENDERR	;END WHAT? YOU ARE NOT DEFINING ANYTHING
	TLNE	F,GETF		;IN ANY CASE, IF GETTING
	JRST	ENND1		;DO NOT TYPE "DEFINED"
	MOVEI	A,-1(A)
	MOVE	A,@RPA
	PUSHJ	P,PTOSS
	MOVEI	A,[ASCIZ / DEFINED/]
	PUSHJ	P,PTOSSM
	PUSHJ	P,CRLF
ENND1:	SETZB	A,TOPROD
	PUSHJ	P,MOVEMP
	JRST	COMEX



ABBREVIATE:
	PUSHJ	P,EVAL		;EVAL FIRST ARG
	PUSHJ	P,GNE
	 ERROR	ERMSSG		;SOMETHING MISSING, IE SECOND ARG
	SOS CPP
	CAMN	A,[XWD MPF,ASL+1]	;IS IT "AS"?
	AOS	CPP		;YES, SKIP IT
	PUSHJ	P,EVAL		;GET SECOND ARG
	MOVE	A,0(S)		;SECOND ARG, ABBREVIATION
	MOVE	B,UA		;USER ABBREVIATION TABLE
	PUSHJ	P,LOOKUP
	 JRST	ABBRV1
	POP	S,A		;FOUND IT, FLUSH ABBREVIATION
	POP	S,1(N)		;SAVE ITS NEW VALUE
	JRST	COMEX

ABBRV1:	MOVEI	A,2(N)		;NOT FOUND, INSERT AT END OF TABLE
	CAML	A,UA+1		;ROOM FOR TWO MORE WORDS AT END?
	EXPAND	UA		;NO, MAKE ROOM
	POP	S,0(N)		;ABBREVIATION FIRST
	POP	S,1(N)		;VALUE SECOND
	SETZM	2(N)		;REPLACE END CONDITION
	JRST	COMEX

LOGIN:	MOVEI D,H
	PUSHJ P,GETFLN
	MOVEM H,DFILEI+1
	MOVEM H,DFILEO+1
	MOVEM H,TBL
	MOVEM H,FILEO+1
	MOVEM H,UNAME
	SKIPE MONITX
	.VALUE VALRET
	SKIPN UNAME
	ERROR USEDNM
	HRRZS FILEO
	.SUSET [.SSNAM,,FSNAME]
	.OPEN DCHN,FILEO
	ERROR NOTHER
	.CLOSE DCHN,
	.SUSET [.SSNAM,,DSNAME]
	.OPEN DCHN,DFILEI
	JRST LOGIN2
	.OPEN DRIBC,DFILEO
	ERROR .
LOGIN1:	.IOT DCHN,C
	SKIPL C
	.IOT DRIBC,C
	JUMPG C,LOGIN1
	SETOM DRIBX
	MOVEI B,[ASCIZ \
WELCOME TO LOGO!  \]
	PUSHJ P,TOSS
	PUSHJ P,VERSN
	POP S,A
	PUSHJ P,PTOSS
	PUSHJ P,CRLF
	PUSHJ P,TIME
	POP S,A
	PUSHJ P,PTOSS
	PUSHJ P,CRLF
	PUSHJ P,DATE
	POP S,A
	PUSHJ P,PTOSS
	PUSHJ P,CRLF
	JRST COMEX
LOGIN2:	.CLOSE DRIBC,
	SETZM DRIBX
	JRST COMEX

GOODBY:	MOVEI B,[ASCIZ \
AND A PLEASANT DAY TO YOU!\]
	PUSHJ P,TOSS
	.VALUE [ASCIZ \:KILL  \]


BUG:	POP S,D	;SAVE NEW BUG MESG
	PUSHJ P,LOGN	;GET LOGIN NAME
	PUSHJ P,DATE
	PUSHJ P,TIME
	PUSHJ P,VERSN
	PUSH S,[WORDF,,SKIPV(W)]
	PUSH S,D
	PUSH S,[WORDF,,SKIPV(W)]	;CR-LF
	MOVEI N,6
	PUSHJ P,SENTENCE
	SOJG N,.-1
	.SUSET [.SSNAM,,[SIXBIT \RJL\]]
	.OPEN CSC,[SIXBIT \   DSKLOGO  BUGS\]
	JRST BUG1
	PUSHJ P,NEWSTR
	.IOT CSC,C
	JUMPLE C,.+3
	IDPB C,B
	JRST .-3
	PUSHJ P,ENDSTR
	PUSHJ P,SENTENCE
BUG1:	POP S,A
	MOVEI A,@A
	MOVN B,@A
	ADDI A,1
	HRL A,B
	.OPEN CSC,[SIXBIT \  'DSKLOGO  BUGS\]
	ERROR .
	.IOT CSC,A
	.CLOSE CSC,
	JRST COMEX

NEWS:	TRZ F,TF
	PUSHJ P,PNEWS
	JRST COMEX

PNEWS:	.SUSET [.SSNAM,,[SIXBIT \LOGO\]]
	.OPEN CSC,[SIXBIT \   DSKLOGO  NEWS\]
	POPJ P,
PNEW.1:	.IOT CSC,C
	JUMPLE C,PNEW.3	;EOF
	TRNE F,TF	;ON IF CALLED FROM LOGO
	JRST PNEW.4
PNEW.5:	CAIN C,14	;^L?
	JRST PNEW.2
	PUSHJ P,TYO
	TLNE F,BREAKF
	ERROR BREAK
	JRST PNEW.1
PNEW.2:	.IOT CSC,C	;HAVE SEEN ^L
	JUMPLE C,PNEW.3	;WAS IT EOF?
	PUSHJ P,CRLF
	MOVEI B,[ASCIZ \CONTINUE?\]
	PUSHJ P,TOSS
	PUSHJ P,TYI	;NO, SHALL WE CONTINUE?
	CAIE C,"Y
	JRST PNEW.3
	PUSHJ P,CRLF
	JRST PNEW.1
PNEW.4:	CAIE C,"%	;OUTPUT STUFF BETWEEN %'S
	JRST PNEW.6
	.IOT CSC,C
	JUMPLE C,PNEW.3
	TRC F,TISLF	;FIRST % MUST BE FIRST CHAR
PNEW.6:	TRNE F,TISLF
	JRST PNEW.5
PNEW.3:	.CLOSE CSC,
	POPJ P,

TEST:	MOVE A,(S)	;DON'T POP IN CASE ERROR PREDR1
	PUSHJ	P,PREDIQ	;IS THE INPUT A PREDICATE?
	 ERROR	PREDR1		;NO
	POP S,B	;NOW CAN POP
	MOVEI	B,0
	SKIPN	@A	;0 FOR "FALSE"; "TRUE" FOR "TRUE"
	MOVNI	B,1
	MOVEM	B,TRUTH
	JRST	COMEX

IF:	PUSHJ P,GNE		;GET NEXT ELEMENT
	ERROR ERMSSG
	CAMN	A,[XWD MPF,TRUEL+1]
	JRST	IFTRUE	;IF TRUE
	CAME	A,[XWD MPF,FALSEL+1]
	JRST IFPRED
IFFALS:	MOVE C,TRUTH
	JUMPN	C,IFX2	;IF FALSE AND TRUTH=FALSE
IFXFLS:	AOS	A,CPP	;FLUSH THIS LINE
	SKIPE	@CSA
	AOJA	A,.-1
	MOVEM	A,CPP
	JRST	SCOMEX

IFTRUE:	MOVE C,TRUTH
IFX1:	JUMPN	C,IFXFLS	;IF TRUE AND TRUTH=FALSE, FLUSH LINE
IFX2:	POP	P,0(P)	;DO REST OF LINE AS IF IF WASN'T THERE
	JRST	EXCTCM

IFPRED:	SOS CPP	;BACK UP OFF PREDICATE
	PUSHJ P,EVAL
	MOVE A,(S)	;(SEE TEST, ABOVE)
	PUSHJ P,PREDIQ
	ERROR PREDR1
	PUSH P,A	;SAVE RESULT OF PREDIQ
	POP S,A
	PUSHJ P,GNE	;LOOK AHEAD FOR "THEN"
	JRST .+2	;NO, EOL
	CAME A,[MPF,,THENL+1]	;IF YES, SKIP OVER IT
	SOS CPP	;NO, BACK UP
	POP P,A
	SKIPE @A
	JRST IFX2	;TRUE, DO REST OF LINE
	PUSHJ P,GNE	;FALSE, SCAN DOWN TO "ELSE" OR EOL
	JRST SCOMEX	;EOL, DO NOTHING
	CAME A,[MPF,,ELSEL+1]	;IS IT ELSE?
	JRST .-3	;NO, TRY AGAIN
	JRST IFX2	;YES, DO ST OF LINE

MAKE:	MOVE	A,-1(S)
	TLNE	A,EMPTYF
	ERROR	NMERR5	;NAME NOT ALLOWED TO BE EMPTY
	PUSHJ P,NUMBRQ
	 SKIPA
	ERROR NMERR6

	MOVE A,-1(S)
	HRRZI	B,MV
	PUSHJ	P,SYSLUK
	 JRST	.+2
	ERROR	TOERR3	;X IS USED BY LOGO
	MOVE	A,-1(S)
	HRRZ	B,DTOP
	ADD	B,DP
	PUSHJ	P,LOOKBK	;SEE IF A LOCAL
	 JRST	.+2	;NOT
	JRST	MAKE1
	MOVE	A,-1(S)
	HRRZ	B,VP
	PUSHJ	P,LOOKUP
	 PUSHJ	P,MAKEN	;NOTA, MAKE A NEW GLOBAL
MAKE1:	POP	S,1(N)	;PUT THE VALUE AWAY
	POP	S,A	;FLUSH THE NAME
	JRST COMEX

MAKEN:	MOVEI	B,2(N)
	CAMLE	B,VP+1
	EXPAND	VP
	MOVE	A,-1(S)
	MOVEM	A,(N)
	SETZM	2(N)
	POPJ	P,


LOCAL:	SKIPN	PRODNM
	 ERROR	LOCNIP	;LOCAL CAN ONLY BE STORED
	MOVE	E,DTOP
	MOVE	D,DP+1
	SUB	D,DP	;END RELATIVE TO BEGINNING
	CAIL	D,2(E)	;WILL ANOTHER ENTRY FIT
	EXPAND	DP	;NO
	ADD	E,DP	;MAKE ABSOLUTE
	POP	S,(E)	;NAME OF VARIABLE
	HRLZI	A,W+WORDF\EMPTYF
	MOVEM	A,1(E)	;VALUE OF NEW LOCAL IS EMPTY
	SETZM	2(E)	;NEW END
	MOVEI	A,2
	ADDM	A,DTOP	;TOP OF LIST IS HIGHER

	PUSHJ	P,GNE
	JRST	SCOMEX	;COMMENT ALSO DENOTES END
	CAME	A,[XWD MPF,ANDL+1]	;IS IT A NOISE WORD?
	SOS	CPP	;NO, CONTINUE EVALUATING FROM THIS WORD
	MOVEI	A,[EXP LOCAL]
	MOVEM	A,(P)
	JRST	EXCTCM	;I THINK (LJK)

;HERE FOLLOWS ALL THERE IS TO USER DEFINED PROCEDURES
;DEFINING THEM, EXECUTING THEM, CHANGING TITLES AND TRACING

TITLEX:	SKIPN	TOPROD	;IS THERE A PROCEDURE OPEN?
	 ERROR NOEDIT		;NO, CANNOT RETITLE NO PROCEDURE
	PUSHJ	P,GNE
	 ERROR	ERMSSG
	CAME	A,[XWD MPF,TOL+1]	;IS THE NEXT THING "TO"
	ERROR TOERR6
	TLO	F,TITLEF
	JRST	TO0
TO:	TLZ	F,TITLEF
	SKIPE	TOPROD	;IS THERE A PROCEDURE ALREADY OPEN
	ERROR	TOERR4	;YES
TO0:	MOVE H,CPP
	PUSHJ	P,GNE	;NEXT NON-COMMENT ELEMENT
	 ERROR TOERR5		;MUST HAVE A PROCEDURE NAME
	TLNN	A,UPRF
	JRST TONG	;PROC. NAME NO GOOD, FIND OUT WHY
	MOVEI	E,(A)
	MOVE	G,@RPA
	CAMN	G,[EXP -1]	;IS THE PROCEDURE ALREADY DEFINED?
	JRST	TO1		;NO, ALWAYS OK
	TLNE	F,GETF	;DOING A GET?
	JRST	TOGET	;YES
	HRRZ	B,TOPROD
	TLNE	F,TITLEF	;ARE WE DOING "TITLE"?
	CAIE	B,(A)		;YES, IS IT THIS PROCEDURE?
	ERROR	TOERR8		;NO TO EITHER
TO1:	SETZ	M,	;COUNT OF DUMMIES ENCOUNTERED
	PUSHJ	P,GNE	;NEXT NON-COMMENT ELEMENT
	 JRST	TOA	;NO DUMMIES
TO2:	TLNN	A,VARF		;IS IT A DUMMY?
	ERROR	TOERR2	;NO
	MOVEI	M,1(M)	;YES, COUNT IT
TO3:	PUSHJ	P,GNE	;CHECK FOR "AND"
	 JRST	TOA	;NOTHING, SO NO AND
	CAME	A,[XWD MPF,ANDL+1]	;IS IT "AND"?
	JRST	TO2		;NOT AND, TRY DUMMY
	PUSHJ	P,GNE
	 ERROR		;"AND" LAST, NOT WELL FORMED
	JRST	TO2		;IT MUST EXIST AND BE A VARIABLE

TONG:	TLNN A,MPF
	ERROR TOERR6
	ERROR TOERR3


TOGET:	TRO	F,FLUSHF	;LOADING AN ALREADY DEFINED PROCEDURE
	MOVEM	A,TOPROD	;SO LET IT BE OPEN
	MOVEI	A,-1(A)
	MOVE	A,@RPA		;PROCEDURE NAME
	PUSHJ	P,PTOSS
	MOVEI	A,[ASCIZ / IS ALREADY DEFINED/]
	PUSHJ	P,PTOSSM
	PUSHJ	P,CRLF
	JRST	IFXFLS

TOA:	TLNN	F,TITLEF	;TITLE LINE NOW VALID
	JRST	TOB		;TO, NOT TITLE
	MOVE	A,TOPROD
	MOVNI	G,1
	EXCH	G,@RPA		;OLD PROCEDURE OPEN NOW UNDEFINED
	HRLI	G,-1(M)		;NO OF DUMMIES-1,LOC OF DIRECTORY
	MOVEI	A,(E)
	MOVEM	A,TOPROD	;NEW PROCEDURE NAME NOW OPEN
	MOVEM	G,@RPA		;AND DEFINED


	MOVEI	A,(G)
	MOVEM	M,@PSA		;NUMBER OF DUMMIES
	MOVEI	A,1(A)
	PUSHJ	P,TOLINH
	JRST	SCOMEX

TOB:	MOVEM	E,TOPROD	;PROCEDURE NOW OPEN
	HRLZI	G,-1(M)
	HRR	G,PTOP		;NEW DIRECTORY GOES HERE
	MOVEI	A,(E)
	MOVEM	G,@RPA		;PROCEDURE DEFINED
	MOVEI	A,(M)
	PUSHJ	P,MOVEMP
	MOVEI	G,(A)		;SAVE PSA PTR TO COMPILE CODE PTR
	PUSHJ	P,MOVEMP	;MAKE A HOLE
	MOVEI	A,(G)		;GET PSA PTR BACK
	PUSHJ	P,TOLINJ
	JRST	SCOMEX

MOVEMP:	MOVE	D,PTOP
	MOVEM	A,@PSD
	AOS	A,PTOP
	MOVEI	B,@PSA
	CAML	B,PS+1
	EXPAND	PS
	SETZM	@PSA
	POPJ	P,


TOFLUS:	MOVE	A,CBOT
	MOVEM	A,CTOP
	POPJ	P,

TOLINE:	SKIPN	TOPROD	;IS THERE A PROCEDURE OPEN
	ERROR	INERR3	;LINE X OF WHAT PROCEDURE?
	TRNE	F,FLUSHF
	JRST	TOFLUS
	MOVE	A,CBOT	;POINTER TO BASE OF NEW COMPILED LINE
	MOVEI H,1(A)
	MOVE	L,@CSA
	HRLI	L,010700+W
	PUSHJ	P,DNM
	ERROR	IOPERR	;I AM IN TROOUBLE
	CAIL	M,100000.
	ERROR	INERR2	;LINE NO TOO LARGE
	JUMPE	M,[ERROR INERR4]	;LINE NO =0

;	TLO	F,TITLEF	;NOTE THAT	FIRST WORD OF COMPILED LINE TO BE FLUSHED
	HRRZ	A,TOPROD
	JSP	C,SRCHL1
	 CAIGE	B,(M)
	 JRST	TOLING

	CAIN	B,(M)		;LINE NO ALREADY EXISTS?
	AOJA	A,TOLINH	;YES

TOLING:	SETOM	NXLINE	;CANNOT SAFELY ASSUME THAT THE PROCEDURE WE'RE IN
	MOVEI	B,2	; HAS NOT MOVED
	ADD	B,PTOP
	ADD	B,PS
	CAML	B,PS+1	;ROOM IN PS FOR ANOTHER 2 WORD ENTRY?
	EXPAND	PS	;NO

	MOVE	B,PTOP
	ADD	B,PS
	MOVEI	C,@PSA

	MOVE	D,(B)	;COPY EVERYTHING DOWN 2, UP TO PLACE TO INSERT
	MOVEM	D,2(B)
	CAIE	B,(C)
	SOJA	B,.-3

	MOVEI	B,2
	ADDM	B,PTOP

	MOVEM	M,(C)	;LINE NUMBER
	AOJA	A,TOLINJ

TOLINH:	PUSHJ	P,GCCS

TOLINJ:
;	SETOM TLJF	;KLUDGE
	AOS	B,SEQNO	;PUTTING AWAY THE STEP, GIVE IT A NEW SEQUENCE NUMBER
	HRL	B,CDBOT	;WHAT IS THE POINTER TO THE NEW LINE
	MOVSM	B,@PSA	;XWD SEQNO,CBOT INTO PROCEDURE DIRECTORY

	MOVE	A,CTOP
	MOVEI	B,@CSA	;B_CTOP+CS
	MOVE	C,CBOT	;CBOT, BASE OF THIS LINE TO BE STORED
	MOVE	A,CDBOT
	SUBI	C,(A)	;C_CBOT-CDBOT, LENGTH OF OTHER DIRECT LINES
	MOVEI	A,@CSA	;A_CS+CDBOT, ABS LOC OF CDBOT
	MOVEI	E,(B)
	ADDI	E,(C)	;E_CS+CTOP+CBOT-CDBOT, END OF COPIED DIRECT LINES
	CAML	E,CS+1	;IS THAT INSIDE CURRENT CS ALLOCATION
	 EXPAND	C,CS	;NO, NEED AT LEAST ENOUGH ROOM FOR COPIED LINES

	HRLZI	D,(A)	;FROM BASE OF DIRECT LINES
	HRRI	D,(B)	;TO CURRENT END OF COMPILED CODE
	BLT	D,(E)	;ENDING WITH END OF ALL OTHER DIRECT LINES

	MOVE	D,CTOP
;	TLZE	F,TITLEF
;	SOS	D,CTOP	;IF DELETING "TITLE" OR A LINE NUMBER
;	SUBI	E,(D)	;CS+CBOT(+1)-CDBOT
;	ADD	E,CDBOT
;	HRLI	A,(E)
;	BLT	A,@CSD
;	SUB	D,CBOT
;	ADDB	D,CDBOT
	SUBI D,(H)
	ADDB D,CDBOT
	ADDI D,(C)
	MOVEM D,CTOP
	ADD H,CS
	HRLI A,(H)
	BLT A,@CSD
	MOVEM D,CBOT
	MOVEI	D,-1(D)
	MOVEM	D,CPP	;SO THAT COMEX CAN EXIT PROPERLY
	POPJ	P,	;R1 FROM COMPIL


TRACE:	PUSHJ	P,GNE	;TRACE WHAT?
	 ERROR	ERMSSG	;NOTHING
	TLNN	A,UPRF	;TRACE A USER PROCEDURE?
	 ERROR	WHTERR	;CANNOT TRACE THAT
	MOVEI	A,-1(A)	;POINT AT FIRST WORD OF RP PAIR
	HRLZI	B,TRACEF
	IORM	B,@RPA	;MARK THIS PROCEDURE AS TRACED
	JRST	COMEX

UPROD:	MOVE	A,-1(P)
	POP	P,-1(P)
	MOVNI	B,1
	CAMN	B,@RPA	;IS THE PROCEDURE DEFINED?
	 ERROR	EVER3	;NO, X NEEDS A MEANING
	MOVEI	B,(A)
	CAMN	B,TOPROD	;IS THIS THE ONE BEING DEFINED?
	 ERROR	EVER4	;YES, X HAS NOT BEEN COMPLETELY DEFINED

UPROD1:	PUSH	P,PRODNM	;PUSH THIS FIRST SO IT CAN BE LAST OFF
				; FOR COMERR IN A STORED LINE
	PUSH	P,CHGNO
	PUSH	P,LINENO
	PUSH	P,DTOP
	PUSH	P,TRUTH
	HRRZ	B,CPP
	CAMGE	B,CDBOT
	JRST	.+4
	SUB	B,CDBOT
	TLO	B,400000	;NOTE THIS ONE RELATIVE TO CDBOT
	JRST	.+3	;INSTEAD OF RELATIVE TO BASE OF THIS LINE
	SUB	B,CHGNO	;LINE GENERATION NO AND LOCATION REL TO CS
	HRRZI	B,(B)	;MAKE SURE LH IS ZERO
	PUSH	P,B
	PUSH	P,SSP
	PUSH	P,SPP

	SETZM	TRUTH
	SETZM	LINENO
	HRRZM	A,PRODNM

	TLZE	F,ERRORF	;WAS UPROD CALLED BY ERROR
	JRST	MAINL

	MOVE	B,DP	;LOC OF DUMMY ARG TABLE
	HLRE	C,A	; + NO OF ARGS AT SCAN TIME -1
	ADDI	C,1
	MOVEI	E,(C)
	ADDI	E,1(C)
	ADD	B,DTOP	;PART OF TABLE ALREADY USED
	ADDI	B,(E)	;AMT FOR DUMMY NAMES
	CAML	B,DP+1	;ALL FIT IN DP?
	EXPAND	E,DP	;EXPAND THE TABLE AT LEAST THIS MUCH

	ADDM	C,DTOP
	ADDM	C,DTOP	;UPDATE AMT USED

	HRRZ D,@RPA
	PUSH	P,BCHAR	;SAVE CURRENT STATE OF MARGIN
	MOVE	E,TRACEM	;MARGIN FOR TRACE
	ANDI	E,17		;INDENT AT MOST 14 SPACES
	MOVEM	E,BCHAR
	TRZ	F,TF	;IF SET WILL DENOTE THAT THIS PROC IS TRACED
	MOVEI	A,-1(A)
	SKIPGE	A,@RPA	;FETCH NAME OF PROCEDURE AND SKIP IF NOT TRACED
	TRO	F,TF		;TRACEF IS THE SIGN BIT
	PUSH	P,C
	TRNE	F,TF
	SKIPN	CHARNO
	SKIPA		;NOT TRACING OR AT MARGIN
	PUSHJ	P,CRLF	;NOT AT MARGIN, GET THERE
	TRNE	F,TF
	PUSHJ	P,INDENT
	POP	P,C
	TRNE	F,TF
	PUSHJ	P,CALPTS	;TRACED, TYPE OUT THE NAME


	MOVEI	D,1(D)	;POINT TO PTR. TO "TO" LINE
	MOVE D,@PSD	;FETCH PTR TO TO LINE
	MOVN	E,C	;-N
	MOVEI	C,1(S)	;STACK LOCATION
	ADD	C,E	;LOCATION IN STACK OF FIRST DUMMY
	HRL	C,E	;-COUNT OF DUMMIES
	HRRZ	G,DP
	ADD	G,-5(P)	;OLD VALUE OF DTOP
	JUMPGE	C,UPFRST	;NO DUMMIES, GET FIRST LINE

	MOVE	A,[440700,,[ASCIZ / OF /]]
UPDVCL:	TRNE	F,TF
	PUSHJ	P,CLPTS1	;IF TRACED, TYPE "OF" OF " AND "
	MOVEI	E,042		;TO QUOTE INPUTS IF TRACING

	MOVE	A,@CSD	;LOOP TO COPY INTO DP, GET DUMMY NAME
	TLNN A,VARF	;IS IT A DUMMY NAME?
	AOJA D,.-2	;NO, TRY NEXT ELEMENT
	MOVEM	A,(G)	;INTO DUMMY VAR TABLE
	MOVE	A,(C)	;VALUE OFF S STACK
	MOVEM	A,1(G)	;INTO DUMMY VAR TABLE
	TRNE	F,TF		;TRACING?
	PUSHJ	P,CLPTS0	;YES, TYPE INPUT QUOTED
	MOVEI	G,2(G)
	POP	S,0(S)	;POP 1 THING OFF S STACK WITHOUT CLOBBERING
	MOVEI	D,1(D)
	AOBJN	C,UPDVCL	;UPROD DUMMY VAR COPY LOOP

	TRNE	F,TF
	PUSHJ	P,CRLF		;NEATEN UP

	MOVEI	A,2
	TRZE	F,TF	;TRACING? ALSO, FLAG NO LONGER NEEDED
	ADDM	A,TRACEM	;NEXT TRACED CALL SHOULD BE INDENTED TWO MORE SPACES


UPFRST:	POP	P,BCHAR		;RESTORE OLD MARGIN
UPNEXT:	JSP	C,SRCHLN
	 CAMG	B,LINENO
	 JRST	OUTPTA
	MOVEM	A,NXLINE
UPNXT1:	MOVEM	B,LINENO	;FOUND A LINE NO > PREVIOUS LINE
	AOS	A,NXLINE
	MOVE	A,@PSA	;GET COMPILE PTR & CHANGE NO
	MOVEM	A,CHGNO

	MOVEM A,CPP
	PUSHJ P,EXECUTE

	AOS	A,NXLINE	;DONE WITH THE LINE, GET NEXT ONE
	JUMPE	A,UPNEXT	;DO IT THE LONG WAY IF ANY PROCEDURES CHANGED
	MOVE	B,@PSA	;FETCH THE LINE NO
	JUMPN	B,UPNXT1	;LINE NO<>0_MORE TO DO
	JRST	OUTPTA	;NO MORE LINES, DONE WITH PROCEDURE

CLPTS0:	TRO	F,PREFIX\SUFFIX
CALPTS:	HRLI	A,010700+W	;WORKSPACE ELEMENT
CLPTS1:	PUSH	P,B
	PUSH	P,C
	PUSH	P,D
	PUSHJ	P,PTOS		;FINALLY!
	POP	P,D
	POP	P,C
	POP	P,B
	POPJ	P,

OUTPTA:	TLO	F,COMF	;DENOTE THAT THERE IS NO OUTPUT
	JRST	RETA

RETTRN:	SKIPE	PRODNM
	ERROR		;"GO" ALONE CAN ONLY BE DIRECT
	SKIPG	GODEPTH
	ERROR	GOERR9	;NOPLACE TO GO
	SOS	GODEPTH	;TEST ABOVE SO IT DOESN'T GO NEGATIVE
GETOUT:	TLO	F,GOF	;GO AND GET TREATED MUCH THE SAME
	POP P,A
	POP P,A
	JRST RET0
ESTOP:	SKIPN	PRODNM
	ERROR	GOERR4		;STOP CAN ONLY BE STORED
	TLO	F,COMF
	JRST	RETURN

OUTPUT:	SKIPN	PRODNM
	ERROR	GOERR4
RETURN:	JSP D,COMEXR	;DO TH ENDOF LINE CHECKS
RET0:	POP	P,0(P)
RETA:	POP	P,SPP
	POP	P,SSP
	POP	P,A	;CPP
	POP	P,TRUTH
	POP	P,DTOP
	POP	P,LINENO
	POP	P,CHGNO
	JUMPGE	A,.+3	;RELATIVE TO BASE OF THIS LINE ?
	ADD	A,CDBOT	; NO, RELATIVE TO CDBOT
	JRST	.+2
	ADD	A,CHGNO
	HRRZM	A,CPP
	TLNE	F,GOF\GETF		;IS THIS RETURN UNTRACEABLE?
	JRST	RETD		;YES IT IS, SKIP TRACE STUFF


	MOVE	A,PRODNM
	MOVEI	A,-1(A)	;DON'T CHANGE PRODNM, COMERU MAY NEED IT
	SKIPL	A,@RPA	;ENDING A TRACED PROCEDURE?
	JRST	RETD	;NO
	MOVNI	B,2
	ADDB	B,TRACEM
	PUSH	P,BCHAR
	ANDI	B,17
	MOVEM	B,BCHAR
	PUSHJ	P,INDENT
	PUSHJ	P,PTOSS	;TYPE PROCEDURE NAME
	MOVEI	A,[ASCIZ / OUTPUTS /]
	TLNE	F,COMF	;DID IT OUTPUT?
	MOVEI	A,[ASCIZ / STOPS/]	;NO, IT STOPPED
	PUSHJ	P,PTOSSM
RETB:	TLNE	F,COMF
	JRST	RETC	;NO NEED TO TYPE WHAT IT OUTPUTTED, IT STOPPED
	TRO	F,PREFIX\SUFFIX
	MOVEI	E,042
	MOVE	A,(S)
	PUSHJ	P,PTOSS
RETC:	POP	P,BCHAR
	PUSHJ	P,CRLF

RETD:	POP P,E	;OLD PRODNM INTO E
	TLZE	F,COMF	;DID THIS PROCEDURE OUTPUT?
	JSP	D,COMEXR	;NO, TREAT IT LIKE A COMMAND
	MOVEM	E,PRODNM
	SETOM	NXLINE	;DON'T TRY TO REMEMBER WHERE WE WERE

	TLZN	F,GOF	;WAS RETURN CALLED BY GO
	SKIPN	PRODNM	;DIRECT COMMAND?
	POPJ P,
	JSP	C,SRCHLN	;SEARCH FOR THAT LINE AGAIN
	 CAME	B,LINENO	;THIS TIME FOR =
	 ERROR		;NO LONGER EXISTS, PROBABLY AN ERROR
	MOVEI	A,1(A)
	MOVE	B,CHGNO
	SUB	B,@PSA	;NEW POSITION OF SAME LINE IS ALWAYS <= OLD POS
	TLNE	B,-1	;ONLY CHECK THE SEQUENCE NUMBERS FOR EQUALITY
	 ERROR		;LINE CHANGED WHILE IN IT
	MOVN	B,B	;THE AMOUNT THE SAME LINE GOT MOVED BACK OR 0
	ADDM	B,CPP	;THAT THE RUNNING POINTER NEEDS TO BE OFFSET
	POPJ	P,	;OPERATIONS ALL EXIT WITH POPJ
			;  COMMAND DOES TOO AFTER JSP D,COMEXR


SRCHLN:	HRRZ	A,PRODNM	;THIS IS THE PROCEDURE TO SEARCH
SRCHL1:	HRRZ	A,@RPA	;GET RELATIVE PTR INTO PS SPACE
	CAIN	A,-1	;ERASED?
	ERROR	NOPROD	;THERE IS NO PROCEDURE X

SRCHLL:	MOVEI	A,2(A)	;POINT TO NEXT LINE NO
	HRRZ	B,@PSA	;GET THE LINE NO
	JUMPE	B,1(C)	;R1, FOUND END BEFORE THE LINE
	XCT	(C)	;ARG TO ROUTINE IS THE COMPARE
	JRST	SRCHLL	;CONTINUE ON NO COMPARE
	JRST	2,2(C)	;GOOD COMPARE, R2



GOTO:	PUSHJ	P,GNE
	 JRST	RETTRN
	SKIPN	PRODNM	;ERROR IF NOT STORED
	ERROR GOERR4
	CAME	A,[XWD MPF,TOL+1]
	JRST GONUM
	AOS	A,CPP
	MOVE	A,@CSA	;FETCH NEXT WORD
	CAMN	A,[XWD MPF,LINELL+1]
	AOSA A,CPP
GONUM:	MOVE A,CPP
	PUSHJ	P,NMEVL1

	JSP	C,SRCHLN	;IS THERE THAT LINE IN THIS PROCEDURE
	 CAIE	B,(M)
	 ERROR	GOERR3	;THERE IS NO LINE X
	MOVEI	A,-1(A)
	MOVEM	A,NXLINE	;SO STEP TO NEXT LINE WILL FIND THIS ONE WITHOUT SEARCHING
	JRST	COMEX

NUMEVL:	AOS	A,CPP
NMEVL1:	MOVE	L,@CSA	;FETCH LINE NUMBER
	TLNE	L,LITF	;IF THIS, DOES NOT NEED TO BE EVALED
	JRST	GOTO1	;IS A LITERAL, COULD BE A NUMBER
	PUSHJ	P,EVAL	;NOT A LITERAL, MUST EVALUATE
	POP	S,L	;VALUE RETURNED
GOTO1:	MOVEI	D,(L)	;SAVE POINTER FOR ERROR COMMENT
	TLNE	L,SENTF
	ERROR	GOERR2	;CANNOT BE A NUMBER IF IT IS A SENTENCE
	HRLI	L,010700+W
	PUSHJ	P,DNM
	ERROR	GOERR2	;IS NOT A LINE NUMBER
	POPJ	P,


;TYPE IN STRING
;CHECK FOR CONTROL CHARACTERS,EDIT CHARACTERS,ILLEGAL CHARACTERS
;CMDFLG=1_COMMAND STRING,=0_TEXT STRING
;EDITF=1_EDIT MODE, THEN A CONTAINS BYTE POINTER TO BEGINNING OF STRING
;BYTE POINTER TO OUTPUT STRING IN B
;RETURN STRING POINTER TO INPUT ON S-LIST
;R1_FAILURE, TRY AGAIN, R2_SUCCESS.
TIS:	.DISMISS [.+1]	;THIS IS JUST IN CASE
	MOVEI	C,2	;SET CONTINUATION TO SPACE TWO CHARACTERS
	MOVEM	C,BCHAR
	TRZ F,TISLF	;SET IF IN LITERAL
	TLZ	F,LDONF	;CLEAR LINE DONE FLAG FOR EDIT MODE
	TLNN	F,EDITF\GETF	;DON'T TYPE > OR _ IF EDITING
	PUSHJ	P,TOSS	;PRINT OUT COMMENT FROM B
	PUSHJ	P,NEWSTR
	TLNN	F,EDITF	;ARE WE IN EDIT MODE?
	JRST	TISB	;NO
	PUSHJ	P,NEWSRC
	MOVEM	A,LINBOT	;FOR PURPOSES OF GARBAGE COLLECTION
	PUSHJ	P,TEDIT	;AND COPY IT TO THE INPUT STRING
TISB:	PUSHJ	P,TYI	;GET NEXT CHARACTER INTO C
TISB1:	CAIL	C,175	;RUBOUT OR EOM?
	JRST	TISO	;YES
	CAIE C,""
	CAIN C,"'
	TRC F,TISLF
	TRNE F,TISLF	;IN A LITERAL?
	JRST TISFF	;YES, ACCEPT ANYTHING
	CAIGE	C,40	;CONTROL CHAR?
	JRST	TISC	;YES
TISF:	IDPB	C,B
	JRST	TISB

TISC:	ROT	C,-1
	HRRZ	D,ITAB(C)
	JUMPL	C,.+2
	HLRZ	D,ITAB(C)
	JUMPN	D,(D)	;DISPATCH IF IT IS A LEGAL CONTROL CHAR
	JRST	TISD	;NOT A LEGAL CONTROL CHAR

DEFINE CC A,B,C,D
XWD A,B
 XWD C,D
TERMIN

ITAB:
CC 0,0,TISG,0	;NUL ABC
CC 0,0,0,TISF,	;DEFG
CC TISJ,TISH,TISI,0,	;H TAB LF K
CC TISB,TISEOL,TISK,0,	;L CR NO
CC 0,0,TISL,0,	;PQRS
CC TISLIT,0,0,TISM,	;TUVW
CC 0,0,TISCZ,TISZ,	;XYZ ALTMODE
CC 0,0,0,ACCEPT


TISFF:	CAIE C,15	;IS IT CR
	JRST TISFF1	;NO
	IDPB C,B	;YES - ADD LF
	MOVEI C,12
	JRST TISF

TISFF1:	CAIN C,^W
	JRST TISC
	TLNN F,EDITF
	JRST TISF
	CAIE C,^N
	CAIN C,^R
	JRST TISC
	JRST TISF

TISD:	.RESET TYIC,
	MOVEI C,7
	PUSHJ P,TYO
	JRST TISB
TISA:	PUSHJ	P,CRLF
TISR1:	TLZE	F,EDITF
	POP	S,A	;CLEAN UP THE PUSH-DOWN LISTS
	POPJ	P,	;GIVE R1
TISG:	MOVEI	C," 	;CONTROL B
	TLNN F,GETF	;NO ECHO IF FROM FILE
	PUSHJ	P,TYO	;TYPE BACK A SPACE
	MOVEI	C,002	;AND PUT CONTROL B IN BUFFER
	JRST	TISF
TISH:	MOVE	D,CHARNO	;CONTROL I-SIMULATE TABS
	ADDI	D,10
	ANDCMI	D,7	;FIND NEXT HIGHER MULTIPLE OF 8
	SUB	D,CHARNO
	MOVEI	C," 	;TYPE THE APPROPRIATE NUMBER OF SPACES
	PUSHJ	P,TYO
	SOJN	D,.-1
	MOVEI	C,011
	JRST	TISF
TISLIT:	TLNN	F,GETF	;^T,DOING A GET?
	JRST	TISD	;NO, ^T NOT LEGAL FROM TERMINAL
	MOVEI C," 	;PUT SPACE BEFORE "
	IDPB C,B
	MOVEI	C,""	;REPLACE  WITH "
	IDPB	C,B	;COPY TEXT BETWEEN ^T'S LITERALLY, NO INTERP
	PUSHJ	P,TYI
	CAIE	C,024	;LOOKING FOR MATCHING ^T
	JRST	.-3	;NOT FOUND
	MOVEI C,""	;REPLACE  WITH "
	JRST	TISF	;BACK TO NORMAL READING

TISI:	MOVE C,CHARNO	;LINEFEED, IS IT FIRST THING ON LINE?
	CAIG C,1	;(ALLOW FOR PROMPT CHARACTER)
	JRST TISB	;YES, IGNORE IT
	MOVEI C,12	;LINEFEED
	JRST TISF	;ACCEPT IT

TISO:	CAIE	C,177	;RUBOUT?
	JRST	TISZ	;NO, EOM
	CAME B,NEWBOT	;AT BEG OF STR?
	JRST TISN	;NO, RUB OUT
	JRST TISA	;YES, R1

TISZ:	PUSHJ	P,CRLF
TISEOL:	SETZB	C,CHARNO
	IDPB C,B
	HRLZI	L,010700+W
	HRR	L,NEWBOT
	MOVEM L,LINBOT
	MOVE	B,L		;SAME SRC AND DEST FOR WELL-FORMING
	MOVEI	D,0		;TERMINATE ON EOL
	PUSHJ	P,WEFS		;REMOVE EXTRA SPACES
	TLZE	F,EDITF	;CLEAR PDL+EDIT FLAG
	POP	S,-1(S)
CPOPJ1:	AOS	0(P)
CPOPJ:	POPJ	P,

TISK:	TLNN	F,EDITF	;^N - TYPE NEXT WORD IN EDIT MODE
	JRST	TISD	;NOT IN EDIT MODE
	PUSHJ	P,TEDIT	;COPY NEXT WORD TO TT AND BUFFER
	JRST	TISB
TISL:	TLNN	F,EDITF	;^R - TYPE REST OF LINE IN EDIT MODE
	JRST	TISD	;NOT IN EDIT MODE
	PUSHJ	P,TEDIT
	TLNN	F,LDONF
	JRST	.-2
	JRST	TISB

TEDIT:	TLNE	F,LDONF	;IF LINE DONE JUST EXIT
	POPJ	P,
	PUSH	P,A	;SAVE POINTERS
	PUSH	P,B	;NO GARBAGE COLLECTION POSSIBLE
	PUSHJ	P,PWORD	;PRINT WORD
	POP	P,B
	POP	P,L
TEDITA:	CAMN	A,L	;HAVE WE CAUGHT UP?
	POPJ	P,
	ILDB	C,L	;COPY THE NEXT CHAR INTO THE INPUT STRING
	JUMPE	C,TEDITB	;IS IT A NULL
	CAIE C,""
	CAIN C,"'
	TRC F,TISLF
	IDPB	C,B
	JRST	TEDITA
TEDITB:	TLO	F,LDONF	;SET LINE DONE FLAG
	POPJ	P,	;AND EXIT

TBACK:	CAMN	B,NEWBOT	;ARE WE AT BEGINNING
	JRST	TISB	;OFF BEGINNING OF STRING
	LDB C,B	;GET LAST CHAR
	PUSHJ P,TYO
	CAIE C,""
	CAIN C,"'
	TRC F,TISLF
	ADD B,[70000,,]
	SKIPGE B
	SUB B,[430000,,1]
	JRST	2,@D

TISN:	JSP	D,TBACK	;BACK UP ONE CHARACTER
	JRST	TISB

TISMA:	JSP	D,TBACK	;REMOVE ONE MORE CHARACTER
TISM:		;^W - BACK UP ONE WORD
	CAMN	B,NEWBOT	;IS THERE A PREVIOUS CHAR
	JRST	TISB	;NO-SO QUIT
	LDB	C,B	;YES-REMOVE LEADINGS SPACES
	CAIN	C," 
	JRST	TISMA
TISMB:	CAMN	B,NEWBOT	;REMOVE NON-SPACES TIL A SPACE
	JRST	TISB	;OFF BEGINNING OF LINE SO QUIT
	LDB	C,B
	CAIN	C," 
	JRST	TISB
	JSP	D,TBACK
	JRST	TISMB

;THIS CRUD FOR LONG FORM MAKE
TISCZ:	MOVEI C," 	;STORE A SPACE SO OLD KS LOGO FORM WORKS
	IDPB C,B
	MOVEI C,^Z
	IDPB C,B
	MOVEI C," 
	JRST TISF

ACCEPT:	ROT C,1	;RESTORE C
	JRST TISF	;STORE CHARACTER
TISJ:	CAMN B,NEWBOT	;^H - BACK UP ONE CHAR W/O ECHO 
	JRST TISA
	LDB C,B
	CAIE C,""
	CAIN C,"'
	TRC F,TISLF
	ADD B,[70000,,0]
	SKIPGE B
	SUB B,[430000,,1]
	JRST TISB

;PRINT WORD
;ENTER WITH BYTE POINTER TO WORK-SPACE IN A
;PRINT WORD AND FOLLOWING SPACE IF EXISTS
;TYO UPDATES CHARNO AND TAKES INPUT IN C

PWORDH:	PUSHJ	P,TYO	;JUST THE CR, NO LF
PWORD:	MOVEI	D,0	;INITIALIZE COUNT OF PRINTING CHARACTERS
	MOVE	B,A	;COPY POINTER
	TRNE	F,PREFIX	;MUST WE PREFIX " OR / TO THIS WORD?
	MOVEI	D,1	;YES, COUNT THE EXTRA CHAR
PWORDB:	ILDB	C,B	;COUNT PRINTING CHARACTERS
	CAIE	C,002	;CONTROL-B IS A SPACING CHARACTER
	CAIL	C," 
	MOVEI	D,1(D)	;FASTER THAN ADDI D,1
	CAIE	C,015	;STOP IF CR
	CAIN	C," 	;STOP IF SPACE
	JRST	PWORDA
	JUMPN	C,PWORDB	;CONTINUE ON NOT NULL
	TRNE	F,SUFFIX	;MUST WE SUFFIX " OR / TO END OF THIS STRING?
	MOVEI	D,1(D)	;YES, COUNT THE EXTRA CHAR AT END
PWORDA:	TLNE F,SAVEF	;WHEN SAVING
	JRST PWORDS	;THE WORD ALWAYS FITS ON A LINE
	MOVE	C,LINEL
	SUBI	C,(D)
	CAMGE	C,BCHAR
	JRST	PWORDC	;YES
	CAMGE	C,CHARNO	;COUNT+CHARNO>72.?
	PUSHJ	P,LINE	;YES-CRLF AND SPACE TO BCHAR
PWORDS:	MOVEI	C,(E)	;PUT PREFIX IN C
	TRZE	F,PREFIX	;SHOULD WE TYPE A PREFIX?
PWORDE:	PUSHJ	P,TYO	;YES
	ILDB	C,A	;OTHERWISE PRINT WORD
	CAME	A,B	;HAVE WE CAUGHT UP
	JRST	PWORDE	;NO

PWORDF:	LDB	C,A	;WHAT WAS THE TERMINATING CHARACTER
	JUMPE	C,PWORDX
	CAIN	C,015
	JRST	PWORDH	;CR- HANDLE REST OF WORD JUST LIKE WORD
	CAIN	C," 
	JRST	PWORDD	;SPACE
	PUSHJ	P,LINE	;OTHER-MEANS WE ARE AT END OF LINE BUT NOT OWRD
	JRST	PWORD	;AND GO PROCESS REST AS WORD

PWORDX:	MOVEI	C,(E)	;AT EOM
	TRZE	F,SUFFIX	;MUST WE AFFIX A SUFFIX?
	PUSHJ	P,TYO	;YES, TYPE IT
	POPJ	P,

PWORDC:	MOVE	D,BCHAR	;IF BCHAR<>CHARNO CRLF AND SPACE
	CAME	D,CHARNO
	PUSHJ	P,LINE
	MOVEI	C,(E)
	TRZE	F,PREFIX
	PUSHJ	P,TYO
PWORDG:	MOVE	C,LINEL	;PRINT TILL CHARNO=LINEL
	CAMN	C,CHARNO
	JRST	PWORDF
	ILDB	C,A
	PUSHJ	P,TYO
	JRST	PWORDG

PWORDD:	MOVE	C,LINEL	;TYPE SPACE IF CHARNO<>LINEL
	CAMN	C,CHARNO	;TYPE CRLF AND SPACES IF CHARNO=LINEL
	JRST	LINE
	MOVEI	C," 
	JRST	TYO


PTYO:	MOVE	C,LINEL
	CAMN	C,CHARNO
	PUSHJ	P,LINE
	MOVEI	C,(B)
	JRST	TYO

PSPACE:	PUSH	P,B
	MOVEI	B," 
	PUSHJ	P,PTYO
	POP	P,B
	POPJ	P,

TAB==.
PTAB:	MOVEI	B,7
	PUSHJ	P,PSPACE
	TDNE	B,CHARNO
	JRST	.-2
	POPJ	P,

LINE:	SETZM CHARNO
	TLNE F,SAVEF
	POPJ P,	;MAY BE REDUNDANT
	PUSHJ	P,CRLF	;TYPE CRLF AND SPACES USING C
INDENT:	MOVE	C,BCHAR
	CAMN	C,CHARNO
	POPJ	P,
	MOVEI	C," 
	PUSHJ	P,TYO
	JRST	INDENT
CRLF:	MOVEI	C,015
	PUSHJ	P,TYO
	MOVEI	C,012
	PUSHJ P,TYO
	MOVEI C,15
	POPJ P,


REQUEST:	TLO	F,RQF
	MOVEI	B,[ASCIZ /</]
	SKIPE	CHARNO	;AT LEFT MARGIN?
	MOVEI	B,[EXP 0]	;NO, DON'T TYPE ANYTHING
	PUSHJ	P,TIS
	JRST	REQUEST
	TLZ	F,RQF
	POPJ	P,


PRETTY:	PUSHJ P,NUCONV
	CAMGE E,MINLNL
	ERROR PRTER1
	MOVEM E,LINEL
	SUBI E,5
	MOVEM E,LINRET
	JRST COMEX

TYI:	TLZE F,BREAKF
	ERROR BREAK
	TLO F,TIF
	TLNN F,GETF
	JRST TYI1
	TLZ F,TIF
	SKIPN FILOX
	JRST TYI2
	PUSHJ P,READC
	CAIN CH,ENDFIL
	JRST @EOFJMP
	POPJ P,
TYI2:	.IOT TYIC,C
	JUMPL C,@EOFJMP
	POPJ P,


TYI1:	.IOT TYIC,C
	JUMPE C,TYI1
	TLZ F,TIF
	CAIN C,^W
	POPJ P,
	CAIN C,15
	JRST TYI3
	CAIE C,33
	CAIN C,^Z
	JRST TYI1
	CAIN C,^_
	JRST TYI1
	CAIN C,177
	POPJ P,
	CAIL C,140
	SUBI C,40
	TLNN F,EDITF
	JRST TYO
	CAIE C,^N
	CAIN C,^R
	POPJ P,
	JRST TYO

TYI3:	PUSHJ P,CRLF
	MOVEI C,15
	POPJ P,

TYO:	TLZE F,BREAKF
	ERROR BREAK
	TLNE F,SAVEF
	JRST TYOF
	CAIL C,40
	JRST TYO3
	CAIN C,2	;CNTRL B
	JRST TYO7	;PRINT AS SPACE
	CAIE C,7
	CAIN C,12
	JRST TYOI
	CAIN C,^L
	JRST TYOI
	CAIN C,11
	JRST TTAB
	CAIN C,15
	JRST TYO2
	CAIN C,^H
	JRST TYO6
	CAIN C,^Z
	JRST TYO8
	CAIN C,^_
	JRST TYO9
	LSH C,10
TYOA:	XORI C,<300_10>+"^
	PUSHJ P,TYO3
	LSH C,-10
	JRST TYO3C
TYO3:	PUSH P,C
	MOVE C,CHARNO
	SUB C,LINEL
	JUMPLE C,TYO3A
	CAIL C,10.
	JRST TYO3B
	MOVE C,(P)
	CAIE C,40
	JRST TYO3A
TYO3B:	PUSHJ P,CRLF
TYO3A:	POP P,C
TYO3C:	AOSA CHARNO
TYO2:	CLEARM CHARNO
TYOI:	SKIPE DRIBX
	.IOT DRIBC,C
	.IOT TYOC,C
	TRZE C,200
	ANDCMI C,100
	POPJ P,
TYO6:	SOS CHARNO
	JRST TYOI

TYO7:	MOVEI C,40	;SUBST SPACE FOR CNTRL B
	PUSHJ P,TYO3
	MOVEI C,2	;RESTORE C
	POPJ P,

TYO8:	PUSH P,B
	MOVEI B,[ASCIZ \
   THING: \]
TYO8A:	PUSH P,C
	PUSHJ P,TOSS
	POP P,C
	POP P,B
	POPJ P,
TYO9:	PUSH P,B
	MOVEI B,[ASCIZ \
   NAME: \]
	JRST TYO8A

TYOF:	CAIL C,40
	AOS CHARNO
	CAIN C,15
	CLEARM CHARNO
	SKIPE FILOX
	JRST WRITEC
	.IOT TYOC,C
	POPJ P,

TTAB:	MOVEI C,40
	PUSHJ P,TYO3
	MOVE C,CHARNO
	TRNE C,7
	JRST TTAB
	MOVEI C,11
	POPJ P,

PTOSSM:	HRLI	A,440700	;FOR MACHINE STRINGS
	JRST	PTOS
PTOSS:	HRLI	A,010700+W	;FOR GENERATED STRINGS
PTOS:	PUSHJ	P,PWORD
	LDB	C,A
	JUMPN	C,.-2
	POPJ	P,

TOSS:	HRLI	B,440700
TOS:	ILDB	C,B	;BYTE POINTER IN B USE C
	JUMPE	C,CPOPJ
	PUSHJ	P,TYO
	JRST	TOS

NUMBRQ:	SETZM NUMCNT
	TLNE	A,EMPTYF	;IS IT EMPTY?
	JRST	CPOPJ	;YES
	TRZ	F,TF
	HRLI	A,010700+W

	ILDB	C,A
	JUMPE	C,CPOPJ	;EMPTY
	AOS NUMCNT
	CAIE	C,"+
	CAIN	C,"-
NMBRQ1:	ILDB	C,A
	JUMPE	C,NMBRQ2
	AOS NUMCNT
	TRO	F,TF	;HAVE SEEN A CHARACTER
	CAIL	C,"0
	CAILE	C,"9
	POPJ	P,	;NOT A DIGIT, FAIL
	JRST	NMBRQ1

NMBRQ2:	TRZE	F,TF	;ALL THE CHARS WE SAW WERE DIGITS, BUT WERE THERE ANY
	AOS	0(P)	;SAW SOME DIGITS
	POPJ	P,	;SAW NO CHARACTERS


PREDIQ:	MOVE	B,@A
	ADDI	A,1
	CAIE	B,1	;IS LENGTH OF TEXT 1?
	JRST	PREDQ1	;NO, CANNOT BE "TRUE"
	MOVE	B,@A	;GET TEXT OF ONE WORD ELEMENT
	CAME	B,[ASCIZ /TRUE/]
	POPJ	P,	;NOT "TRUE"
	JRST	CPOPJ1	;IS "TRUE"
PREDQ1:	CAIE	B,2	;FALSE MUST BE TWO WORDS LONG
	POPJ	P,	;NOT "FALSE"
	MOVE	B,@A
	ADDI	A,1
	CAMN	B,[ASCII /FALSE/]
	SKIPE	@A	;NEXT WORD MUST BE 0 TERMINATOR FOR "FALSE"
	POPJ	P,	;R1, IS NOT "FALSE"
	JRST	CPOPJ1	;R2

DNM:	MOVEI	M,0
	TRZ	F,NNUMF
DNM1:	ILDB	C,L
	CAIL	C,"0
	CAILE	C,"9
	JRST	DNM2
	TRO	F,NNUMF
	IMULI	M,12
	ADDI	M,-60(C)
	JRST	DNM1
DNM2:	TRNN	F,NNUMF
	POPJ	P,
	JRST	CPOPJ1


DECPRT:	SKIPA B,[12]
OCTPRT:	MOVEI	B,10
	MOVEM	B,CRADIX
ANYPRT:	IDIV	A,CRADIX
	HRLM	B,(P)
	SKIPE	A
	PUSHJ	P,ANYPRT
	HLRZ	C,(P)
	ADDI	C,"0
	JRST	TYO

SNM:	TRO	F,TF
	SETZM	SRCBOT
SNMA:	IDIVI	A,12
	HRLM	B,(P)
	SKIPE	A
	PUSHJ	P,SNMA
	TRZE	F,TF	;ONLY SET UP B ONCE
	PUSHJ	P,NEWSTR
	HLRZ	C,(P)
	ADDI	C,"0
	IDPB	C,B
	POPJ	P,

COPYAB:	ILDB	C,A
	IDPB	C,B
	JUMPN	C,.-2
	POPJ	P,


;NEWOPS IS CALLED BY FIRST,LAST,BUTFIRST, AND BUTLAST
;ALL HAPPEN TO DO THE SAME THING

;NEWSTR IS USED BY ANYONE WHO GENERATES A NEW STRING

NEWOPS:	MOVE	A,0(S)	;GET ARG OFF S STACK WITHOUT DESTROYING IT
	TLNE	A,EMPTYF	;IS IT AN EMPTY STRING
	ERROR EMPARG	;EMPTY ARGUMENTS ARE ILLEGAL(?)
	TLNE	A,WORDF
	AOS	0(P)	;SKIP JUMP TO SENT IF A WORD
	HRLI	A,010700+W	;IN ANY CASE, MAKE A STRING PTR
	MOVEM	A,SRCBOT
NEWSTR:	TLO F,GCF
	HRRZ	B,WTOP
	ADD	B,[010700,,1(W)]	;MUST BE EXACTLY THIS FOR TEST IN TBACK TO WORK
	MOVEM	B,NEWBOT
	POPJ	P,



;NEWSRC SETS UP A NEW SOURCE STRING FROM THE FIRST ARG ON THE PDL
;NEWSR1 DOES THE SAME FOR THE SECOND ARG BACK

NEWSR1:	SKIPA	A,-1(S)
NEWSRC:	MOVE	A,0(S)
NEWSR0:	HRLI	A,010700+W
	MOVEM	A,SRCBOT
	POPJ	P,


GNE:	AOS	A,CPP		;GET NEXT NON-COMMENT ELEMENT
	MOVE	A,@CSA
	JUMPE	A,CPOPJ		;END OF LINE, R1
	TLNE	A,COMMTF	;IS IT COMMENT
	JRST	GNE		;YES, SKIP IT
	JRST	CPOPJ1

ENDSTP:	POP	S,C	;FLUSH OLD INPUT FIRST BEFORE
ENDSTR:	MOVEI	C,0	;FINISH UP THE NEW STRING
	IDPB	C,B
ENDST1:	TLNE	B,760000
	JRST	.-2
	TLO F,GCF
	MOVEM	B,WTOP
	SUB	B,NEWBOT
	HRRZM	B,@NEWBOT
	HRLZI	B,W+WORDF
	HRR	B,NEWBOT
	TRZE	F,NWF
	TLC	B,WORDF\SENTF
	PUSH	S,B
	POPJ	P,

GNARG:	MOVE A,[W+WORDF,,DUMMYV]
	CAMN A,(S)
	POPJ P,
	POP S,A
	JRST CPOPJ1

MULTCM:	PUSHJ P,REVARG
NRMLCM:	MOVE A,[W+WORDF,,DUMMYV]	;NON REVERSING MULTIPLE ARG COMMAND
	CAMN A,(S)
	JRST MULCM1
	PUSH P,[NRMLCM]	;ONLY REVERSE THE ARGS ONCE
	JRST @-1(P)
MULCM1:	POP P,A	;RETURN FROM COMMAND
	POP S,A	;MARKER
	JRST COMEX

MULTOP:	PUSHJ P,REVARG
NRMLOP:	MOVE A,[W+WORDF,,DUMMYV]
	CAMN A,-1(S)
	JRST MULOP1
	CAMN A,(S)
	ERROR .
	PUSH P,[NRMLOP]
	JRST @-1(P)
MULOP1:	POP S,A
	MOVEM A,(S)
	POP P,A
	POPJ P,

REVARG:	MOVE A,[W+WORDF,,DUMMYV]
	MOVEI B,(S)
	CAME A,(B)
	SOJA B,.-1
	MOVEI A,(S)
REVAR1:	ADDI B,1
	CAIG A,(B)
	POPJ P,
	MOVE C,(A)
	EXCH C,(B)
	MOVEM C,(A)
	SOJA A,REVAR1

;STUFF TO B>HTE COPIED TO UNSHARED CORE AT START OF RUN

DEFINE TT A1,A2,A3
IFSE A3,,EXP A2
IFSN A3,,XWD A3,A2
TERMIN
ALOCTB:	TABLES

DEFINE MM A1,A2
XWD A2,0
TERMIN

SPFRST:	POINTR	;ALL THE LH'S OF THE INDEXED POINTERS
	0?1?2	;PTOP,CTOP,DTOP, IN THAT ORDER!
	XWD W,.WTOP-.WBASE-1
	EXP 1	;CDBOT INITIALIZED THE SAME AS CTOP
	1	;CBOT SAME
	XWD 525252,123456	;AN INITIAL RANDOM BITS, FIX LATER
				;SO THE STARTING POINT IS ALSO RANDOM
SPLLEN==.-SPFRST



DEFINE ELM1 NAME,VAL
NAME==.-.WBASE
1?VAL
TERMIN

.WBASE=.
ELM1 EMPTYV,0
ELM1 TRUEV,ASCIZ /TRUE/
FALSEV==.-.WBASE
EXP 2
ASCIZ /FALSE/
ELM1 LINEFV,012_29.
ELM1 CARETV,015_29.
ELM1 FORMFV,014_29.
ELM1 BLANKV,040_29.
ELM1 BELLV,007_29.
ELM1 QUOTEV,042_29.
ELM1 SKIPV,064240_18.	;BYTE (7) 15,12
ELM1 DUMMYV,0
.WTOP==.

;MACHINE DEFINED PROCEDURES

DEFINE MPM NAME,GOTO,NARG,TYPE,COND
IFN COND,[
WORDF,,[ASCIZ \NAME\]
<NARG-1>\TYPE,,GOTO]
TERMIN

DEFINE PAIR A,B
[ASCIZ "A"]?[ASCIZ "B"]
TERMIN

DEFINE MVM A,B,C
EXP [ASCIZ "A"]
IFSN C,,XWD C,B
IFSE C,,XWD W+WORDF,B
TERMIN


$R==1		;REGULAR (ALWAYS ASSEMBLE)
$D==NOVA+DFLAG	;ASSEMBLY FOR ANY DISPLAY FLAVOR
$N==NOVA	;ASSMBLE FOR NOVA ONLY
$S==SNAPFL	;ASSEMBLE SNAPS, ONLY IF NOVA
$3==DFLAG	;ASSEMBLE FOR 340 ONLY
$L==LFLAG	;LIST STUFF

%FC==3_17	;FIXED ARGS, COMMAND
%VC==1_17	;VARIABLE ARGS, COMMAND
%FO==2_17	;FIXED ARGS, OPERATION
%VO==0_17	;VARIABLE ARGS, OPERATION

ABBT:
PAIR ABB,ABBREVIATION
PAIR ABBS,ABBREVIATIONS
PAIR ABT,ABBREVIATE
PAIR BK,BACK
PAIR B,BOTH
PAIR BF,BUTFIRST
PAIR BL,BUTLAST
PAIR CONC,CONCATENATE
PAIR C,COUNT
PAIR CR,CARRIAGERETURN
PAIR DIFF,DIFFERENCE
PAIR D,DISPLAY
PAIR ED,EDIT
PAIR EDL,EDIT LINE
PAIR EDT,EDIT TITLE
PAIR EI,EITHER
PAIR EP,EMPTYP
PAIR ER,ERASE
PAIR ERL,ERASE LINE
PAIR F,FIRST
PAIR FD,FORWARD
PAIR LF,LINEFEED
PAIR GP,GREATERP
PAIR GTL,GO TO LINE
PAIR GB,GOODBYE
PAIR HD,HEADING
PAIR HT,HIDETURTLE
PAIR H,HOME
PAIR IFF,IF FALSE
PAIR IFT,IF TRUE
PAIR LA,LAST
PAIR L,LIST
PAIR LC,LIST CONTENTS
PAIR LE,LIST ENTRY
PAIR LT,LEFT
PAIR FF,FORMFEED
PAIR LL,LIST LINE

PAIR M,MAKE
PAIR MAX,MAXIMUM
PAIR MIN,MINIMUM
PAIR NP,NUMBERP
PAIR OP,OUTPUT
PAIR PICK,PICKELEMENT
PAIR PD,PENDOWN
PAIR PU,PENUP
PAIR P,PRINT
PAIR PROD,PRODUCT
PAIR PRS,PROCEDURES
PAIR QUO,QUOTIENT
PAIR RQ,REQUEST
PAIR RT,RIGHT
PAIR SHD,SETHEAD
PAIR SETT,SETTURTLE
PAIR S,SENTENCE
PAIR SP,SENTENCEP
PAIR ST,SHOWTURTLE
PAIR T,TEST
PAIR W,WORD
PAIR WP,WORDP
PAIR ZP,ZEROP
0


;MACHINE DEFINED VARIABLE NAMES
MV:
EXP [ASCIZ "EMPTY"]
XWD W+WORDF\EMPTYF,EMPTYV
[ASCIZ "EMPTYW"]
W+WORDF\EMPTYF,,EMPTYV
[ASCIZ "EMPTYS"]
W+SENTF\EMPTYF,,EMPTYV
MVM LINEFEED,LINEFV
MVM CARRIAGERETURN,CARETV
MVM FORMFEED,FORMFV
MVM BLANK,BLANKV
MVM BELL,BELLV
MVM QUOTE,QUOTEV
MVM SKIP,SKIPV
MVM CONTENTS,CCONTE,COMPUT
MVM  ,DUMMYV
0

CMPT:
	MPM ABBREVIATE,ABBREVIATE,0,%FC,$R
ABREVL:	MPM ABBREVIATION,SPECWD,0,%FC,$R
ABRVSL:	MPM ABBREVIATIONS,SPECWD,0,%FC,$R
ALLL:	MPM ALL,SPECWD,0,%FC,$R
ANDL:	MPM AND,SPECWD,0,%FC,$R
ASL:	MPM AS,SPECWD,0,%FC,$R
	MPM BACK,BACK,1,%FC,$R
	MPM BELL,BELL,0,%FC,$R
	MPM BIGTURTLE,BIGTURTLE,0,%FC,$R
	MPM BLANK,BLNK,0,%FC,$R
	MPM BOTH,BOTH,2,%FO,$R
	MPM BUG,BUG,1,%FC,$R
	MPM BUTFIRST,BUTFIRST,1,%FO,$R
	MPM BUTLAST,BUTLAST,1,%FO,$R
	MPM CANCEL,RETTRN,0,%FC,$R
	MPM CARRIAGERETURN,CR,0,%FC,$R
	MPM CLOCK,CLOCK,0,%FO,$R
	MPM COMPUTE,.COMPUTE,0,%FO,$R
	MPM CONCATENATE,CONCAT,2,%VO,$L
	MPM CONS,CONS,2,%VO,$L
CONTNL:	MPM CONTENTS,SPECWD,0,%FC,$R
	MPM COUNT,COUNT,1,%FO,$R
	MPM DATE,DATE,0,%FO,$R
	MPM DDT,CALDDT,0,%FC,$R
	MPM DELETE,FDELETE,0,%FC,$R
	MPM DIFFERENCE,DIFF,2,%FO,$R
	MPM DIRNAME,DIRN,0,%FO,$R
	MPM DISPLAY,DISPLAY,0,%FC,$N
	MPM DISPLAY,DISPLAY,1,%FC,$3
	MPM DO,CALLDO,1,%FC,$R
	MPM EDIT,EDIT,0,%FC,$R
	MPM EITHER,EITHER,2,%FO,$R
ELSEL:	MPM ELSE,SPECWD,0,%FC,$R
	MPM EMPTYP,EMPTYP,1,%FO,$R
	MPM END,ENND,0,%FC,$R
	MPM ENDSNAP,ESNAP,0,%FC,$S
ENTRYL:	MPM ENTRY,SPECWD,0,%FC,$R
	MPM ERASE,ERASE,0,%FC,$R
	MPM EXIT,EXIT,1,%FC,$R
FALSEL:	MPM FALSE,SPECWD,0,%FC,$R
FILEL:	MPM FILES,SPECWD,0,%FC,$R
	MPM FIRST,FIRST,1,%FO,$R
	MPM FORMFEED,FRMFD,0,%FC,$R
	MPM FORWARD,FORWARD,1,%FC,$R
	MPM GET,GET,0,%FC,$R
	MPM GO,GOTO,0,%FC,$R
	MPM GOODBYE,GOODBYE,0,%FC,$R

	MPM GREATERP,GRATRP,2,%FO,$R
	MPM HEADING,HEADING,0,%FC,$D
	MPM HIDETURTLE,HIDETURTLE,0,%FC,$D
	MPM HOME,HOME,0,%FC,$N
	MPM IF,IF,0,%FC,$R
	MPM IFTRUE,IFTRUE,0,%FC,$R
	MPM IFFALSE,IFFALS,0,%FC,$R
	MPM INTERSECTION,INTERS,2,%VO,$L
	MPM IS,IS,2,%FO,$R
	MPM JOIN,CONCAT,2,%VO,$L
	MPM LAST,LAST,1,%FO,$R
	MPM LEFT,LEFT,1,%FC,$R
	MPM LESSP,LESSP,2,%FO,$R
	MPM LEVEL,LEVEL,1,%FO,$L
LINELL:	MPM LINE,SPECWD,0,%FC,$R
	MPM LINEFEED,LF,0,%FC,$R
	MPM LIST,LIST,0,%FC,$R
	MPM LOCAL,LOCAL,1,%FC,$R
	MPM LOGIN,LOGIN,0,%FC,$R
	MPM LOGNAME,LOGN,0,%FO,$R
MACHIL:	MPM MACHINE,SPECWD,0,%FC,$R


	400000\WORDF,,[ASCIZ /MAKE/]	;SPECIAL TO COMPIL
	<2-1>\%FC,,MAKE
LMAKL:	400000\WORDF,,[ASCIZ /MAKE/]	;MUST FOLLOW REGULAR MAKE
	<2-1>\%FC,,MAKE
	400000\WORDF,,[ASCIZ /MAKE
   NAME: /]
	<2-1>\%FC,,MAKE
MAKL2:	MPM ,CPOPJ,1
	WORDF,,[ASCIZ /
   THING: /]
	<2-1>\%FC,,CPOPJ

	MPM MAXIMUM,MAXIM,2,%VO,$R
	MPM MEMBERP,MEMBER,2,%FO,$L
	MPM MINIMUM,MINIM,2,%VO,$R
	MPM MOD,REMAIN,2,%FO,$R
	MPM MOTOR,MOTOR,2,%FC,$R
NAMESL:	MPM NAMES,SPECWD,0,%FC,$R
	MPM NEWS,NEWS,0,%FC,$R
	MPM NOT,NOT,1,%FO,$R
	MPM NOTURTLE,NOTURT,0,%FC,$R
	MPM NUMBERP,NUMBRP,1,%FO,$R
OFL:	MPM OF,SPECWD,0,%FC,$R
	MPM OUTPUT,OUTPUT,1,%FC,$R
	MPM PEN,PEN,1,%FC,$N
	MPM PENDOWN,PENDOWN,0,%FC,$R
	MPM PENUP,PENUP,0,%FC,$R
	MPM PICK,PICKEL,2,%FO,$L
	MPM PICKELEMENT,PICKEL,2,%FO,$L
	MPM PRETTY,PRETTY,1,%FC,$R
	MPM PRINT,PRINT,1,%VC,$R
PROCDL:	MPM PROCEDURES,SPECWD,0,%FC,$R
	MPM PRODUCT,STIMES,2,%VO,$R
	MPM QUOTE,QUOTX,0,%FC,$R
	MPM QUOTIENT,QUOT,2,%FO,$R
	MPM RANDOM,RANDOM,0,%FO,$R
	MPM READ,READ,0,%FC,$R
	MPM REMAINDER,REMAIN,2,%FO,$R
	MPM REMOVESNAP,RSNAP,1,%FC,$S
	MPM RESET,.RESET,0,%FC,$R
	MPM RESTART,RESTART,0,%FC,$D
	MPM RIGHT,RIGHT,1,%FC,$R
	MPM REQUEST,REQUEST,0,%FO,$R
	MPM SAVE,SAVE,0,%FC,$R
IFN LFLAG,[
	MPM SCALARMUL,SCALRM,2,%FO,$R
	MPM SCALARMULTIPLY,SCALRM,2,%FO,$R
	MPM SCM,SCALRM,2,%FO,$R
]
	MPM SENTENCE,SENTENCE,2,%VO,$R
	MPM SENTENCEP,SENTP,1,%FO,$R
	MPM SETHEAD,SETHEAD,1,%FC,$D
	MPM SETTURTLE,SETTURTLE,0,%FC,$R
	MPM SETX,SETX,1,%FO,$D
	MPM SETXY,SETXY,2,%FC,$N
	MPM SETY,SETY,1,%FC,$D
	MPM SHOWSNAP,SSNAP,1,%FC,$S
	MPM SHOWTURTLE,SHOWTURTLE,0,%FC,$D
	MPM SMALLTURTLE,SMALLTURTLE,0,%FC,$R
	MPM SNAP,SNAP,1,%FC,$S
	MPM STOP,ESTOP,0,%FC,$R
	MPM SUM,SUM,2,%VO,$R
	MPM TEST,TEST,1,%FC,$R
THENL:	MPM THEN,SPECWD,0,%FC,$R
	MPM THING,THING,1,%FO,$R
	MPM TIME,TIME,0,%FO,$R

TITLEL:	MPM TITLE,TITLEX,0,%FC,$R
TOL:	MPM TO,TO,0,%FC,$R
	MPM TOOT,WHISTL,1,%FC,$R
TRACEL:	MPM TRACE,TRACE,0,%FC,$R
TRACSL:	MPM TRACES,SPECWD,0,%FC,$R
TRUEL:	MPM TRUE,SPECWD,0,%FC,$R
	MPM TYPE,TYPE,1,%VC,$R
	MPM UNION,UNION,2,%VO,$L
	MPM USE,USE,0,%FC,$R
IFN LFLAG,[
	MPM VADD,VADD,2,%FO,$R
	MPM VECTORADD,VADD,2,%FO,$R
	MPM VECTORSUB,VSUB,2,%FO,$R
	MPM VECTOR,VECTOR,2,%FO,$R
	MPM VSUB,VSUB,2,%FO,$R
	MPM VP,VECTRP,1,%FO,$R
	MPM VEC,VECTOR,2,%FO,$R
	MPM	VECTORP,VECTRP,1,%FO,$R
]
	MPM VERSION,VERSN,0,%FO,$R
IFN LFLAG,[
	MPM VP,VECTRP,1,%FO,$R
]
	MPM WAIT,WAIT,1,%FC,$R
	MPM WIPE,WIPE,0,%FC,$N
	MPM WORD,WORD,2,%VO,$R
	MPM WORDP,WORDP,1,%FO,$R
	MPM WRITE,WRITE,0,%FC,$R
	MPM XCOR,XCOR,0,%FC,$D
	MPM YCOR,YCOR,0,%FC,$D
	MPM ZEROP,ZEROP,1,%FO,$R
	0		;ALL TABLE SEARCHES TERMINATE ON A 0


	;THESE ARE HERE FOR EASE IN LISTING AND EDITING
LPREN:	MPM (,[[ERROR .]],0,%FO,$R
RPREN:	MPM ),[[ERROR .]],0,%FO,$R
INMNSL:	MPM -,DIFF,2,%FO,$R;NEXT 2 ENTRIES MUST BE IN ORDER (SEE GNSMNS)
PRMNSL:	MPM -,MINUS,1,%FO,$R
INPLSL:	MPM +,SUM,2;SAME,%FO,$R
PRPLSL:	MPM +,CPOPJ,1,%FO,$R
INTMSL:	MPM *,TIMES,2,%FO,$R
INDIVL:	MPM /,QUOT,2,%FO,$R
INEQL:	MPM =,IS,2,%FO,$R
INGRTL:	MPM >,GRATRP,2,%FO,$R
INLSTL:	MPM <,LESSP,2,%FO,$R
INCNKL:	MPM &,CONC,2,%FO,$R
