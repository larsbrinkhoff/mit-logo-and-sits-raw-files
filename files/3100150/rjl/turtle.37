
MOTOR:	PUSHJ P,NUMVAL
	PUSH P,E
	PUSHJ P,NUMVAL
	JUMPLE E,[ERROR .]
	CAILE E,5
	ERROR .
	SKIPE MOTORX
	JRST MOTOR1
	.SUSET [.RUNAM,,PDP6O+1]
	.OPEN CSC,PDP6O
	ERROR .
	MOVE A,[2400+CSC,,740001]
	.CBLK A,
	ERROR .
	SETOM MOTORX
	.CLOSE CSC,
MOTOR1:	MOVEI A,1
	.SLEEP A,
	SKIPE DISTAN
	ERROR .
	MOVEM E,MOTORN
	POP P,DISTAN
	JRST COMEX

MOTORN=340*2000
DISTAN=340*2000+1

FORWAR:	JSP A,TURTLE
BACK:	JSP A,TURTLE
LEFT:	JSP A,TURTLE
RIGHT:	JSP A,TURTLE
PENUP:	JSP A,TURTLE
PENDOW:	JSP A,TURTLE
WHISTL:	JSP A,TURTLE
TURTLE:	SETZM SNULLS
	HRRZS A
	SUBI A,FORWAR+1
	ADD A,TURT
	MOVE B,(A)
	PUSH P,A
	TLNE B,TUARG
	PUSHJ P,NUCONV
	POP P,A
	TLNE B,TUSARG
	PUSHJ P,TUSCAL
	TLNN B,TUNULL
	JRST TURTL1
	MOVE D,NNULLS
	MOVEM D,SNULLS
TURTL1:	TRNE B,777400
	JRST (B)
	TLNN B,TUARG
	MOVEI E,1
	HRR H,B
	MOVEI B,NULLC
TURTL4:	MOVE C,SNULLS
	JUMPLE E,COMEX
	PUSHJ P,TURIOT
	EXCH H,B
	JUMPLE C,TURTL2
TURTL3:	PUSHJ P,TURIOT
	SOJG C,TURTL3
TURTL2:	EXCH H,B
	SOJA E,TURTL4
TUSCAL:	PUSH P,B
	MOVE G,A
	MOVE A,E
	PUSHJ P,FLOAT
	FMPR A,NTUCOM(G)
	FADR A,NTUCOM+NTUCOM(G)
	MOVE D,A
	PUSHJ P,FIX
	MOVE E,A
	PUSHJ P,FLOAT
	FSBR D,A
	MOVEM D,NTUCOM+NTUCOM(G)
	MOVE A,G
	POP P,B
	POPJ P,
TURIOT:	.IOT TUOC,H
	TLNE F,BREAKF
	ERROR BREAK
	POPJ P,

SMALLT:	SKIPA A,[NTURT]
BIGTUR:	MOVEI A,OTURT
IFN NOVA,[
	SKIPE	SNAPX
	ERROR	NVSNAP
]
	MOVEM A,TURT
IFN DFLAG,[
	SKIPE DISONF
	JRST TURTO
]	JRST COMEX
SETTUR:	CAIE H,(SIXBIT \TTY\)
	JRST SETTR1
NOTURT:
IFN NOVA,[
	SKIPE	SNAPX
	ERROR	NVSNAP
]
	.CLOSE TUOC,	;CLOSES TURTLE CHANNELS
	.CLOSE TUIC,
	SKIPGE TOUCHA
	SETZM TOUCHA
	SETZM SEPTUR
	JRST COMEX

SETTR1:	MOVEI D,H
	PUSHJ P,GETFLN
	SETZM SEPTUR
	HRRI H,4
	MOVSS H
	.OPEN TUIC,H
	ERROR INVTTY
	HRLI H,5
	.OPEN TUOC,H
	ERROR INVTTY
	SETOM SEPTUR
	SETOM TOUCHA
	JRST COMEX

TOUCH:	PUSHJ P,NUCONV
	SKIPE E
	MOVEM E,TOUCHT
	MOVEI A,1
	MOVEM A,TOUCHA
	JRST COMEX
NOTOUC:	SETZM TOUCHA
	JRST COMEX
IRPS X,,FT RFT RT RBT BT LBT LT LFT
X:	JSP A,TOUCHX
TERMIN
RBRIGHT=FT
RDIM=RFT
FBRIGHT=RT
FDIM=RBT
LBRIGHT=BT
LDIM=LBT
TOUCHX:	SKIPN SEPTUR
	.STATUS TYOC,D
	SKIPE SEPTUR
	.STATUS TUOC,D
	TRNE D,2002
	JRST TOUCH1
	MOVEI D,1
	.SLEEP D,
	JRST TOUCHX
TOUCH1:	SUBI A,FT+1
	MOVE B,TURT
	MOVE B,-1(B)
	JUMPL B,(B)
	.RDTIM B,
	SUB B,TOUCHS(A)
	CAMG B,TOUCHT
	JRST ISTRUE
	JRST ISFALSE
ANYT:	.RDTIM B,
	SUB B,LTOUCH
	CAMGE B,TOUCHT
	JRST ISTRUE
	JRST ISFALSE
IFE SNAPFL,IFN DFLAG-NOVA,DTOUCH:	JRST ISFALSE

IFN DFLAG,[
DISPLA:	PUSHJ P,NUCONV
	CAILE E,320.
	ERROR 340TML
	IMULI E,6
	SKIPG E
	PUSHJ P,TURTO
	MOVEM E,.DTOP
	SKIPE MOBYLS
	PUSHJ P,CLRLI1
	MOVEI E,DTURTL
	MOVEM E,TURT
	SETZM DCUR
	SETZM DPENST
	SETOM DISONF
	SETZM ANGLE
	SETZM X0
	SETZM Y0
	JRST DINIT
RESTAR:	SETOM DISONF
	MOVEI E,DTURTL
	MOVEM E,TURT
	JRST DSET
TURTO:	SETZM DISONF
	.DCLOSE
	SKIPN MOBYLS
	JRST COMEX
	MOVEI E,<DPOS_11>+DPOS
	.CBLK E,
	ERROR PUNT
	ADDI E,1001
	.CBLK E,
	ERROR PUNT
	SETZM MOBYLS
	JRST COMEX

DPEN1:	SETOM DPENST
	SKIPE MOBYLS
	JRST COMEX
	MOVE E,[<4400,,400000+<DPOS_11>>]
	.CBLK E,
	JRST NDCOR1
	ADDI E,1000
	.CBLK E,
	JRST NDCORE
CLRLIS:	PUSH P,[COMEX]
CLRLI1:	MOVEI A,3767
	MOVE B,[3000,,3000]
	MOVEM B,DVECS(A)
	SOJGE A,.-1
	MOVE A,[117,,0]
	MOVEM A,DVECS-1
	SETOM MOBYLS
	POPJ P,

NDCORE:	MOVEI E,<DPOS_11>
	.CBLK E,
	ERROR .
NDCOR1:	SETZM	DPENST
	ERROR 	PUNT
DPEN2:	SETZM DPENST
	JRST COMEX
DSET:	.DSTOP
	.F GVEC0<X1,Y1>
	HRLM A0,DTURT+2
	TRC A0,500200
	HRLM A0,DTURT+4
	.F GVEC<X2,Y2,X1,Y1>
	IORI A0,200000
	HRRM A0,DTURT+2
	.F GVEC<X3,Y3,X2,Y2>
	IORI A0,200000
	HRLM A0,DTURT+3
	.F GVEC<X1,Y1,X3,Y3>
	IORI A0,200000
	HRRM A0,DTURT+3
.F X0+512.0,0.0,Y0+512.0
	PUSHJ P,FIX
	MOVEI D,0
	EXCH A0,A2
	PUSHJ P,FIX
	DPB A2,[221200,,D]
	DPB A0,[1200,,D]
	IOR D,[20000,,300000]
	MOVEM D,DTURT+1
	HRRZS TURTPT
	HRRZS MOBYPT
	MOVN A,.DTOP
	SUBI A,2
	MOVNI B,6
	SKIPE MOBYLS
	HRLM A,MOBYPT
	SKIPE HIDEF
	HRLM B,TURTPT
	SKIPE NODISF
	JRST NODIS
	.DSTART DLIST
	JRST DERR
NODIS:	JRST COMEX
DERR:	SETZM DISONF
	ERROR 340NDS

GVEC:	FSBR A0,A2
	FSBR A1,A3
GVEC0:	PUSHJ P,FIXBY
	SETZM A3
	DPB A0,[1000,,A3]
	MOVE A0,A1
	PUSHJ P,FIXBY
	DPB A0,[101000,,A3]
	MOVE A0,A3
	POPJ P,
FIXBY:	PUSH P,A1
	MULI A0,400
	TSC A0,A0
	ASH A1,-243(A0)
	MOVE A0,A1
	POP P,A1
FIXBY1:	JUMPGE A0,CPOPJ
	MOVNS A0
	IORI A0,200
	POPJ P,
DRIGHT:	MOVNS E
DLEFT:	TLC E,232000
	FADR E,E
	FADB E,ANGLE
DINIT:
.F Y3=SIND<ANGLE+240.0>*25.0
.F Y2=SIND<ANGLE-60.0>*25.0
.F Y1=SIND<ANGLE+90.0>*25.0
.F X3=COSD<ANGLE+240.0>*25.0
.F X2=COSD<ANGLE-60.0>*25.0
.F X1=COSD<ANGLE+90.0>*25.0
	JRST DSET
DBACK:	MOVNS E
DFORWA:	JUMPE E,COMEX
	MOVE A0,E
	PUSHJ P,FLOAT
	MOVEM A0,DFBME
	SKIPE DPENST
	JRST DPENDW
	.F X0=X0+DFBME*COSD<ANGLE+90.0>
	.F Y0=Y0+DFBME*SIND<ANGLE+90.0>
	JRST DSET


DPENDW:	.F NX0=DFBME*COSD<ANGLE+90.0>
	.F NY0=DFBME*SIND<ANGLE+90.0>
	MOVE A,DCUR
	CAMGE A,.DTOP
	JRST .+3
	SUB A,.DTOP
	JRST .-3
	MOVE D,[442200,,DVECS]
	ADD D,A
	ADDI A,6
	MOVEM A,DCUR
	MOVEI A,20000
	IDPB A,D
	HLR A,DTURT+1
	IDPB A,D
	HRR A,DTURT+1
	IDPB A,D
	MOVEI A,400000
	MOVEI B,11
	IDPB A,D
	SOJG B,.-1
	.F X0=NX0+X0,Y0=NY0+Y0
	.F FOON=FIX<MAX<MAG<NX0/128.0>,MAG<NY0/128.0>>>
	.I FX=FIX<NX0>/(FOON+1),FY=FIX<NY0>/(FOON+1)
	.I FIXBY1<FX>,FIXBY1<FY>
	MOVEI D,0
	DPB A,[1000,,D]
	DPB B,[101000,,D]
	IORI D,200000
	MOVE E,[222200,,DVECS-5]
	ADD E,DCUR
	MOVE C,FOON
	SOJL C,.+3
	IDPB D,E
	JRST .-2

	.I FIXBY1<(FIX<NX0>-FX*FOON)>,FIXBY1<(FIX<NY0>-FY*FOON)>
	MOVEI D,0
	DPB A,[1000,,D]
	DPB B,[101000,,D]
	IORI D,600000
	IDPB D,E
	JRST DSET
XCOR:	SKIPA A,X0
YCOR:	MOVE A,Y0
	SKIPN DISONF
DISER:	ERROR DISNOT
	PUSHJ P,FIX
	JRST NUMRET

SETX:	SKIPA B,[X0]
SETY:	MOVEI B,Y0
	PUSHJ P,NUCONV
	SKIPN DISONF
	ERROR DISNOT
	MOVE A,E
	PUSHJ P,FLOAT
	MOVEM A,(B)
	JRST DSET
HEADIN:	MOVE A,ANGLE
	PUSHJ	P,FIX
	IDIVI A,360.
	SKIPGE B
	ADDI B,360.
	MOVE A,B
	JRST NUMRET

SETHEA:	PUSHJ P,NUCONV
	MOVE A,E
	PUSHJ P,FLOAT
	MOVEM A,ANGLE
	JRST DINIT
HIDETU:	SETZM HIDEF
	JRST DINIT
SHOWTU:	SETOM HIDEF
	JRST DINIT
MAX:	CAMG A0,A1
	MOVE A0,A1
	POPJ P,
MAG:	MOVMS A0
	POPJ P,
REAL:	MOVE E,[350000,,SCHED]
	.REALT E,
	ERROR .
	JRST COMEX
UNREAL:	MOVSI E,400000
	.REALT E,
	JRST COMEX
]

;WINNING SIN, COS ROUTINES, LIFTED, MINUS COMMENTS, FROM LIB

IFN DFLAG-NOVA+LFLAG,[
COSD:	MOVEM	B, SB		
	MOVE	B, A		
	FADR	B, [90.0]		
	FDVR	B, [57.295779]		
	JRST	S1X		
SIND:	MOVEM	B, SB		
	MOVE	B, A		
	FDVR	B, [57.295779]		
	JRST	S1X		
S1X:	MOVEM	B, SX		
	MOVMS	B		
	CAMG	B, [170000,,0]		
	JRST	S3A		
	MOVEM	C, SC		
	FDV	B, [1.5707963]		
	CAMG	B, [1.0]		
	JRST	S2		
	MULI	B, 400		
	ASH	C, -202(B)	
	MOVEI	B, 200		
	ROT	C, 3		
	LSHC	B, 33		
	FAD	B, [0]		
	JUMPE	C, S2		
	TLCE	C, 1000		
	FSB	B, [1.0]		
	TLCE	C, 3000		
	TLNN	C, 3000		
	MOVNS	B		
S2:	SKIPGE	SX		
	MOVNS	B		
	MOVEM	B, SX		
	FMPR	B, B		
	MOVE	A, [0.00015148419]		
	FMP	A, B		
	FAD	A, [-0.00467376557]		
	FMP	A, B		
	FAD	A, [0.07968967928]		
	FMP	A, B		
	FAD	A, [-0.64596371106]		
	FMP	A, B		
	FAD	A, [1.5707963]		
S2B:	FMPR	A, SX		
	SKIPA	C, SC		
S3A:	MOVE	A, SX		
	MOVE	B, SB		
	POPJ P,
]

;NOVA DISPLAY COMMANDS
;WILL ASSEMBLE IF NOVA IS NON-ZERO
;WHICH HAPPENS IF ONE TYPES 2 AT DFLAG.

IFN NOVA,[		;COMMAND CODES TO NOVA
	NSNAP==100	;SNAP (NOVA "SHIP")
	NESNAP==120	;END SNAP (ENDSHIP)
	NSSNAP==140	;SHOW SNAP (DST)
	NRSNAP==160	;REMOVE SNAP (DREM)
	NMVTO==200
	NPTAT==220
	NPDWN==260
	NHIDE==320
	NSHOW==300
	N.RESET==360
	NWIPE==340

;DISPLAY--
;INITIALIZE VARIABLES
;.RESET VARIABLES, WIPE OUT LISTS
;SHOW POINTER AT CENTER

DISPLA:	PUSHJ	P,RESTA1	;OPEN DISPLAY
	MOVEI	A,N.RESET
	PUSHJ	P,SEND	;SEND .RESET CODE
	SETZM	PENM	;SET PEN MODE TO 0
	PUSH	P,[COMEX]
DISPL1:	MOVE	A,ORIG
	MOVEM	A,NEWX	;SET CURRRENT LOC TO CENTER OF SCREEN
	MOVEM	A,NEWY
	MOVEM	A,CURX
	MOVEM	A,CURY
	SETZM	CURA	;POINTER ANGLE TO 0
	SETZM	NEWA
	PUSHJ	P,MVTO	;SEND ALL THIS GOOK TO NOVA
	PUSHJ	P,NEWPT
	JRST	SHOWT1


;RESTART--
;SEND TURTLE COMMANDS TO DISPLAY
RESTAR:	PUSH	P,[COMEX]	;RETURN ADDRESS
RESTA1:	PUSHJ	P,DCHKR	;CHANNEL TO DISPLAY OPEN?
	SKIPE	SNAPX
	ERROR	NVSNAP	;NOT LEGAL WHILE SNAPPING
	MOVEI	E,DTURTL	;CHANGE DISPATCH
	MOVEM	E,TURT
	POPJ	P,

;HOME--
;PUT TURTLE AT STARTING POS BUT DO NOT
;CLEAR SCREEN
HOME:	PUSHJ	P,DCHKR1	;MAKE SURE WE HAVE DISPLAY
	SKIPE	SNAPX
	ERROR	NVSNAP	;NOT LEGAL WHILE SNAPPING
	SETZ	E,
	PUSHJ	P,PEN4	;PUT PENUP
	PUSHJ	P,DISPL1	;TURTLE AT CENTER AND SHOW
	MOVE	E,PENM	;RESET PEN MODE
	JRST	PEN3


;DISPLAY CHECKER--
;SEES IF CHANNEL TO TNM IS OPEN
;SEES IF USER HAS DISPLAY
DCHKR:	.STATUS	TUOC,B
	ANDI	B,77	;MASK ALL BUT DEVICE CODE
	SKIPE	B
	CAILE	B,2
	ERROR	NVNOLN
	POPJ	P,

DCHKR1:	MOVEI	B,DTURTL	;SEE IF RIGHT GOOK IN DISPATCH TABLE
	CAME	B,TURT
	ERROR	DISNOT
	POPJ	P,


CONVERT--
;CONVERTS TO (0,0) CENTER OF SCREEN
CONVER:	MOVE	B,SKLIM	;MAGNITUDE OF APPARENT SCREEN BORDER
	CAMLE	A,B	;T<= LIMIT?
	ERROR	NVNOFF
	MOVNS	B
	CAMGE	A,B	;T>= -LIMIT?
	ERROR	NVNOFF
	ADDI	A,512.	;CONVERT TO REAL SCOPE COORD
	POPJ	P,

;SETXY--
;MOVE TO NAMED X & Y COORDINATES
;IN CURRENT PEN MODE
;X IN E, Y IN A

SETXY:	PUSHJ	P,DCHKR1
	PUSHJ	P,NUCONV	;GET VALUE FOR E/Y
	PUSH	P,E
	PUSHJ	P,NUCONV
	POP	P,A	;A/Y, X/E
	EXCH	A,E
	PUSHJ	P,CONVER	;CHANGE A/X TO REAL COORD, SEE IF OFF SCREEN
	PUSHJ	P,FLOAT	;FLOAT X

SETXY1:	EXCH	A,E	;A/Y, E/X
	PUSHJ	P,CONVER	;CHANGE E/Y TO REAL COORD, SEE IF OFF SCREEN
	PUSHJ	P,FLOAT	;FLOAT Y
SETXY2:	CAMN	A,NEWY
	CAME	E,NEWX
	JRST	SETXY3
	JRST	COMEX	;IF NO CHANGE IN COORDS, DON'T DO ANYTHING

SETXY3:	MOVEM	A,NEWY	;SAVE NEW COORDS
	MOVEM	E,NEWX
SETXY4:	PUSHJ	P,MVTO	;MOVE PNTR
	SKIPE	SNAPX	;IF NOT SNAPPING, STORE NEWX AND Y AS CURRENT COORDS
	JRST	COMEX
	MOVE	A,NEWX
	MOVE	B,NEWY
	MOVEM	A,CURX
	MOVEM	B,CURY
	JRST	COMEX

;SETX--
;CHANGE ONLY X COORDINATE
SETX:	PUSHJ	P,DCHKR1	;E/X
	PUSHJ	P,NUCONV
	MOVE	A,E
	PUSHJ	P,CONVER	;CHANGE TO REAL COORD, SEE IF OFF SCREEN
	PUSHJ	P,FLOAT	;FLOAT X
	MOVE	E,A
	MOVE	A,NEWY	;GET Y
	JRST	SETXY2	;A/Y, E/X

;SETY--
;CHANGE ONLY Y
SETY:	PUSHJ	P,DCHKR1
	PUSHJ	P,NUCONV
	MOVE	A,NEWX	;GET X
	JRST	SETXY1

;FORWARD--
;GO FORWARD (AT PRESENT ANGLE) ARG (IN T)
;(BACK--BACKWARDS)

DBACK:	MOVNS	E
DFORWA:	PUSHJ	P,NEWPOS
	JRST	SETXY4
;SETHEAD--
;MAKE ANGLE = TO ARG IN E

SETHEA:	PUSHJ	P,DCHKR1
	PUSHJ	P,NUCONV
SETHE1:	PUSHJ	P,MOD360
	CAMN	E,NEWA	;SKIP IF CHANGE
	JRST	COMEX
	MOVEM	E,NEWA
	SKIPE	SNAPX
	JRST	COMEX	;IF SNAPPING, DON'T CHANGE ANYTHING
	PUSHJ	P,NEWPT
	MOVE	A,NEWA
	MOVEM	A,CURA	;SAVE CURRENT ANGLE
	JRST	COMEX

;LEFT--
;ROTATE POINTER ANTI-CLOCKWISE
;(RIGHT--CLOCKWISE)
;ARG DEGREES.  ARG IN E

DLEFT:	MOVNS	E
DRIGHT:	ADD	E,NEWA
	JRST	SETHE1

;XCOR
;OUTPUTS CURRENT X COORDINATE

XCOR:	PUSHJ	P,DCHKR1
	MOVE	A,NEWX
XCOR1:	PUSHJ	P,FIX
	SUBI	A,512.
	JRST	NUMRET

;YCOR--
;OUPUTS Y COORDINATE

YCOR:	PUSHJ	P,DCHKR1
	MOVE	A,NEWY
	JRST	XCOR1


;HEADING--
;OUTPUTS CURRENT POINTER ANGLE

HEADIN:	PUSHJ	P,DCHKR1
	MOVE	A,NEWA
	JRST	NUMRET

;HIDE--
;HIDE POINTER
HIDETU:	PUSHJ	P,DCHKR1	;SEE IF DISPLAY ON
	MOVEI	A,NHIDE
	PUSHJ	P,SHOWT2
	JRST	COMEX

;SHOW--
;SHOW POINTER
SHOWTU:	PUSH	P,[COMEX]
	PUSHJ	P,DCHKR1	;SEE IF DISPLAY ON
SHOWT1:	MOVEI	A,NSHOW
SHOWT2:	SKIPE	SNAPX
	ERROR	NVSNAP	;ILLEGAL WHILE SNAPPING
	PUSHJ	P,SEND
	POPJ	P,

;WIPE--
;CLEAR SCREEN
WIPE:	PUSHJ	P,DCHKR1	;SEE IF DISPLAY ON
	MOVEI	A,NWIPE
	PUSHJ	P,SHOWT2
	JRST	COMEX

;PEN--
;SHOW LIST FOR ARG FRAMES
;PENDOWN-- ARG=7777 SHOW FOR INFINITY
;PENUP--DON'T SHOW

;PEN--
PEN:	PUSHJ	P,DCHKR1
	PUSHJ	P,NUCONV
	SKIPL	E
	CAILE	E,4000.
	ERROR	NVWARG
PEN2:	SKIPE	SNAPX
	JRST	PEN5

	MOVEM	E,PENM	;SAVE PEN MODE
PEN3:	PUSH	P,[COMEX]
PEN4:	MOVE	A,E
	LSH	A,-8.
	ADDI	A,NPDWN
2SEND:	PUSHJ	P,SEND	;SENDS A, THEN E
	MOVE	A,E
	PUSHJ	P,SEND
	POPJ	P,

PEN5:	CAIE	E,0	;IF SNAPPING, PEN MUST BE UP OR DOWN(7777)
	CAIN	E,7777
	JRST	PEN3
	ERROR	NVSNAP

;PENDOWN--
DPEN1:	MOVEI	E,7777
	JRST	PEN2

;PENUP--
DPEN2:	SETZ	E,
	JRST	PEN2

IFN SNAPFL,[
.INSRT SHOW >
]

;MODULO 360--
;RETURN INTEGER ANGLE MOD 360
;ARG AND RETURN IN E

MOD360:	IDIVI	E,360.
	CAIGE	E+1,0
	ADDI	E+1,360.
	MOVE	E,E+1
	POPJ	P,


;MOVE POINTER--
;MOVE POINTER TO NEW LOC
;X IN E, Y IN A

MVTO:	MOVE	A,NEWX
	PUSHJ	P,FIX
	MOVEM	A,NOVX
	MOVE	A,NEWY
	PUSHJ	P,FIX
	MOVEM	A,NOVY
	MOVEI	A,1777	;MASK SO HIGH BITS WONT CLOBBER CODE WORD
	ANDM	A,NOVX
	ANDM	A,NOVY
	MOVEI	A,NMVTO	;SEND TO NOVA
	LSH	A,6
	ADD	A,NOVX
	LSH	A,2
	MOVE	B,NOVY
	LSH	B,-8.
	ADD	A,B
	PUSHJ	P,ASEND
	MOVE	A,NOVY
	ANDI	A,377
	PUSHJ	P,SEND
	POPJ	P,

;NEW POSITION--
;CALCULATES NEW X & Y COORDS FOR
;FORWARD COMMAND
;ARG IS DISTANCE FORWARD

NEWPOS:	MOVE	A,E	;DISTANCE
	PUSHJ	P,FLOAT
	MOVE	E,A
	MOVE	C,NEWX
	MOVE	D,NEWY
	MOVE	A,NEWA
	PUSHJ	P,FLOAT
	MOVE	G,A
	PUSHJ	P,SIND
	FMPR	A,E
	FADR	A,C	;X+T SIN A
	MOVE	C,A	;TEMP STORE NEWX
	PUSHJ	P,FIX
	SUBI	A,512.
	PUSHJ	P,CONVER	;SEE IF COORD IS ON SCREEN
	MOVEM	C,NEWX	;X OK, STORE
	MOVE	A,G
	PUSHJ	P,COSD
	FMPR	A,E
	FADR	A,D	;Y+ T COS A
	MOVE	C,A	;TEMP STORE Y
	PUSHJ	P,FIX
	SUBI	A,512.
	PUSHJ	P,CONVER	;SEE IF COORD IS ON SCREEN
	MOVEM	C,NEWY	;Y OK, STORE

;NEW POINTER--
;CALCULATE NEW POINTER COORDS
;BASED ON CURRENT ANGLE, AND X AND Y COORDS

NEWPT:	MOVE	A,NEWA
	PUSHJ	P,FLOAT
	MOVE	B,A
	PUSHJ	P,SIND
	EXCH	A,B	;SAVE SIN IN B, ANGLE IN A
	PUSHJ	P,COSD
	MOVE	G,A	;COS A IN G
	MOVE	A,PTL	;POINTER LENGTH
	FMPR	A,G
	PUSHJ	P,NFIX	;L COS A
	MOVEM	A,PTC
	MOVNM	A,PTC+2
	MOVE	A,PTL
	FMPR	A,B
	PUSHJ	P,NFIX	;L SIN A
	MOVEM	A,PTC+3
	MOVNM	A,PTC+1
	MOVE	A,PTH	;POINTER HEIGHT
	FMPR	A,B
	PUSHJ	P,NFIX	;H SIN A
	MOVEM	A,PTC+4
	MOVE	A,PTH
	FMPR	A,G
	PUSHJ	P,NFIX	;H COS A
	MOVEM	A,PTC+5
	MOVE	A,NEWY
	PUSHJ	P,NFIX
	MOVE	B,A
	MOVE	A,NEWX
	PUSHJ	P,NFIX
	IRPS	X,,0 2 4
	ADDM	A,PTC+X
TERMIN
	IRPS	X,,1 3 5
	ADDM	B,PTC+X
TERMIN

;FALLS THROUGH

;POINTER OUT--
;SENDS OUT POINTER COORDS CALCULATED
;BY NEWPT

PTOUT:	MOVEI	G,0
	MOVEI	A,1777
PTOUT0:	ANDM	A,PTC(G)
	AOS	G,
	CAIG	G,5
	JRST	PTOUT0
	MOVEI	A,NPTAT
	MOVEI	G,0
PTOUH:	MOVE	B,PTC(G)
	LSH	B,-6
	ADD	A,B
	PUSHJ	P,SEND
	MOVE	A,PTC(G)
	LSH	A,2
	MOVE	B,PTC+1(G)
	LSH	B,-8.
	ADD	A,B
	PUSHJ	P,SEND
	MOVE	A,PTC+1(G)
	PUSHJ	P,SEND
	CAIE	G,0
	POPJ	P,

	MOVE	A,PTC+2
	LSH	A,-2
	PUSHJ	P,SEND
	MOVE	A,PTC+2
	LSH	A,6
	MOVE	B,PTC+3
	LSH	B,-4
	ADD	A,B
	PUSHJ	P,SEND
	MOVE	A,PTC+3
	LSH	A,4
	MOVEI	G,4
	JRST	PTOUH

;SEND--
;ASSEMBLES IF OUTPUT IS TO NOVA
;TAKES 8 BITS IN A, AND SENDS OUT AS
;2 WORDS WITH PROPER FLAGS
IFN FNV,[
SEND:	ANDI	A,377
	MOVE	B,A
	LSH	A,-3
	TRO	A,1
	PUSHJ	P,NOUT
	ANDI	B,17
	LSH	B,1
	MOVE	A,B
NOUT:	TRO	A,100
	.IOT	TUOC,A
	POPJ	P,

ASEND:	PUSH	P,A
	LSH	A,-8.
	PUSHJ	P,SEND
	POP	P,A
	PUSHJ	P,SEND
	POPJ	P,

]

;SEND--
;ASSEMBLES IF OUTPUT TO TTY
;PRINTS WHAT WOULD BE SENT TO NOVA
IFN FTY,[
SEND:	ANDI	A,377
	MOVE	B,A
	PUSH	P,B
	LSH	A,-3
	TRO	A,1
	PUSHJ	P,NOUT
	POP	P,B
	ANDI	B,17
	LSH	B,1
	MOVE	A,B
NOUT:	TRO	A,100
	PUSHJ	P,NOUH
	POPJ	P,

ASEND:	PUSH	P,A
	LSH	A,-8.
	PUSHJ	P,SEND
	POP	P,A
	PUSHJ	P,SEND
	POPJ	P,
NOUH:	MOVE	B,A
	PUSHJ	P,CRR
	MOVE	A,B
	PUSHJ	P,NPNT
	POPJ	P,

;CRUMMY NUMBER PRINT OUT ROUTINES
;FOR PRINTING WORDS ORDINARILY
;SENT TO NOVA.
;SNARFED FROM RG WITHOUT COMMENT

NPNT:	MOVE	B,A
NPNH:	IDIVI	B,10
	HRLM	C,(P)
	SKIPE	B
	PUSHJ	P,NPNH
	HLRZ	A,(P)
	ADDI	A,"0
	JRST	NTYO

CRR:	MOVEI	A,15
	PUSHJ	P,NTYO
	MOVEI	A,12
NTYO:	.IOT	TYOC,A
	POPJ	P,
]
]

FLOAT:	TLC A0,232000
	FADR A0,A0
	POPJ P,
	
FIX:	FADR A0,[0.5]
NFIX:	PUSH P,A1
	MULI A0,400
	TSC A0,A0
	ASH A1,-243(A0)
	MOVE A0,A1
	SKIPG A0
	AOS A0
	POP P,A1
	POPJ P,

KWISE
;(RIGHT--CLOCKWISE)
;ARG DEGREES.  ARG IN E

DLEFT:	MOVNS	E
DRIGHT:	ADD	E,NEWA
	JRST	SETHE1

;XCOR
;OUTPUTS CURRENT X COORDINATE

XCOR:	PUSHJ	P,DCHKR1
	MOVE	A,NEWX
XCOR1:	PUSHJ	P,FIX
	SUBI	A,512.
	JRST	NUMRET

;YCOR--
;OUPUTS Y COORDINATE

YCOR:	PUSHJ	P,DCHKR1
	MOVE	A,NEWY
	JRST	XCOR1


;HEADING--
;OUTPUTS CURRENT POINTER ANGLE

HEADIN:	PUSHJ	P,DCHKR1
	MOVE	A,NEWA
	JRST	NUMRET

;HIDE--
;HIDE POINTER
HIDETU:	PUSHJ	P,DCHKR1	;SEE IF DISPLAY ON
	MOVEI	A,NHIDE
	PUSHJ	P,SHOWT2
	JRST	COMEX

;SHOW--
;SHOW POINTER
SHOWTU:	PUSH	P,[COMEX]
	PUSHJ	P,DCHKR1	;SEE IF DISPLAY ON
SHOWT1:	MOVEI	A,NSHOW
SHOWT2:	SKIPE	SNAPX
	ERROR	NVSNAP	;ILLEGAL WHILE SNAPPING
	PUSHJ	P,SEND
	POPJ	P,

;WIPE--
;CLEAR SCREEN
WIPE:	PUSHJ	P,DCHKR1	;SEE IF DISPLAY ON
	MOVEI	A,NWIPE
	PUSHJ	P,SHOWT2
	JRST	COMEX

;PEN--
;SHOW LIST FOR ARG FRAMES
;PENDOWN-- ARG=7777 SHOW FOR INFINITY
;PENUP--DON'T SHOW

;PEN--
PEN:	PUSHJ	P,DCHKR1
	PUSHJ	P,NUCONV
	SKIPL	E
	CAILE	E,4000.
	ERROR	NVWARG
PEN2:	SKIPE	SNAPX
	JRST	PEN5

	MOVEM	E,PENM	;SAVE PEN MODE
PEN3:	PUSH	P,[COMEX]
PEN4:	MOVE	A,E
	LSH	A,-8.
	ADDI	A,NPDWN
2SEND:	PUSHJ	P,SEND	;SENDS A, THEN E
	MOVE	A,E
	PUSHJ	P,SEND
	POPJ	P,

PEN5:	CAIE	E,0	;IF SNAPPING, PEN MUST BE UP OR DOWN(7777)
	CAIN	E,7777
	JRST	PEN3
	ERROR	NVSNAP

;PENDOWN--
DPEN1:	MOVEI	E,7777
	JRST	PEN2

;PENUP--
DPEN2:	SETZ	E,
	JRST	PEN2

IFN SNAPFL,[
.INSRT SHOW >
]

;MODULO 360--
;RETURN INTEGER ANGLE MOD 360
;ARG AND RETURN IN E

MOD360:	IDIVI	E,360.
	CAIGE	E+1,0
	ADDI	E+1,360.
	MOVE	E,E+1
	POPJ	P,


;MOVE POINTER--
;MOVE POINTER TO NEW LOC
;X IN E, Y IN A

MVTO:	MOVE	A,NEWX
	PUSHJ	P,FIX
	MOVEM	A,NOVX
	MOVE	A,NEWY
	PUSHJ	P,FIX
	MOVEM	A,NOVY
	MOVEI	A,1777	;MASK SO HIGH BITS WONT CLOBBER CODE WORD
	ANDM	A,NOVX
	ANDM	A,NOVY
	MOVEI	A,NMVTO	;SEND TO NOVA
	LSH	A,6
	ADD	A,NOVX
	LSH	A,2
	MOVE	B,NOVY
	LSH	B,-8.
	ADD	A,B
	PUSHJ	P,ASEND
	MOVE	A,NOVY
	ANDI	A,377
	PUSHJ	P,SEND
	POPJ	P,

;NEW POSITION--
;CALCULATES NEW X & Y COORDS FOR
;FORWARD COMMAND
;ARG IS DISTANCE FORWARD

NEWPOS:	MOVE	A,E	;DISTANCE
	PUSHJ	P,FLOAT
	MOVE	E,A
	MOVE	C,NEWX
	MOVE	D,NEWY
	MOVE	A,NEWA
	PUSHJ	P,FLOAT
	MOVE	G,A
	PUSHJ	P,SIND
	FMPR	A,E
	FADR	A,C	;X+T SIN A
	MOVEM	A,NEWX
	PUSHJ	P,FIX
	SUBI	A,512.
	PUSHJ	P,CONVER	;SEE IF COORD IS ON SCREEN
	MOVE	A,G
	PUSHJ	P,COSD
	FMPR	A,E
	FADR	A,D	;Y+ T COS A
	MOVEM	A,NEWY
	PUSHJ	P,FIX
	SUBI	A,512.
	JRST	CONVER	;SEE IF COORD IS ON SCREEN

;NEW POINTER--
;CALCULATE NEW POINTER COORDS
;BASED ON CURRENT ANGLE, AND X AND Y COORDS

NEWPT:	MOVE	A,NEWA
	PUSHJ	P,FLOAT
	MOVE	B,A
	PUSHJ	P,SIND
	EXCH	A,B	;SAVE SIN IN B, ANGLE IN A
	PUSHJ	P,COSD
	MOVE	G,A	;COS A IN G
	MOVE	A,PTL	;POINTER LENGTH
	FMPR	A,G
	PUSHJ	P,NFIX	;L COS A
	MOVEM	A,PTC
	MOVNM	A,PTC+2
	MOVE	A,PTL
	FMPR	A,B
	PUSHJ	P,NFIX	;L SIN A
	MOVEM	A,PTC+3
	MOVNM	A,PTC+1
	MOVE	A,PTH	;POINTER HEIGHT
	FMPR	A,B
	PUSHJ	P,NFIX	;H SIN A
	MOVEM	A,PTC+4
	MOVE	A,PTH
	FMPR	A,G
	PUSHJ	P,NFIX	;H COS A
	MOVEM	A,PTC+5
	MOVE	A,NEWY
	PUSHJ	P,NFIX
	MOVE	B,A
	MOVE	A,NEWX
	PUSHJ	P,NFIX
	IRPS	X,,0 2 4
	ADDM	A,PTC+X
TERMIN
	IRPS	X,,1 3 5
	ADDM	B,PTC+X
TERMIN

;FALLS THROUGH

;POINTER OUT--
;SENDS OUT POINTER COORDS CALCULATED
;BY NEWPT

PTOUT:	MOVEI	G,0
	MOVEI	A,1777
PTOUT0:	ANDM	A,PTC(G)
	AOS	G,
	CAIG	G,5
	JRST	PTOUT0
	MOVEI	A,NPTAT
	MOVEI	G,0
PTOUH:	MOVE	B,PTC(G)
	LSH	B,-6
	ADD	A,B
	PUSHJ	P,SEND
	MOVE	A,PTC(G)
	LSH	A,2
	MOVE	B,PTC+1(G)
	LSH	B,-8.
	ADD	A,B
	PUSHJ	P,SEND
	MOVE	A,PTC+1(G)
	PUSHJ	P,SEND
	CAIE	G,0
	POPJ	P,

	MOVE	A,PTC+2
	LSH	A,-2
	PUSHJ	P,SEND
	MOVE	A,PTC+2
	LSH	A,6
	MOVE	B,PTC+3
	LSH	B,-4
	ADD	A,B
	PUSHJ	P,SEND
	MOVE	A,PTC+3
	LSH	A,4
	MOVEI	G,4
	JRST	PTOUH

;SEND--
;ASSEMBLES IF OUTPUT IS TO NOVA
;TAKES 8 BITS IN A, AND SENDS OUT AS
;2 WORDS WITH PROPER FLAGS
IFN FNV,[
SEND:	ANDI	A,377
	MOVE	B,A
	LSH	A,-3
	TRO	A,1
	PUSHJ	P,NOUT
	ANDI	B,17
	LSH	B,1
	MOVE	A,B
NOUT:	TRO	A,100
	.IOT	TUOC,A
	POPJ	P,

ASEND:	PUSH	P,A
	LSH	A,-8.
	PUSHJ	P,SEND
	POP	P,A
	PUSHJ	P,SEND
	POPJ	P,

]

;SEND--
;ASSEMBLES IF OUTPUT TO TTY
;PRINTS WHAT WOULD BE SENT TO NOVA
IFN FTY,[
SEND:	ANDI	A,377
	MOVE	B,A
	PUSH	P,B
	LSH	A,-3
	TRO	A,1
	PUSHJ	P,NOUT
	POP	P,B
	ANDI	B,17
	LSH	B,1
	MOVE	A,B
NOUT:	TRO	A,100
	PUSHJ	P,NOUH
	POPJ	P,

ASEND:	PUSH	P,A
	LSH	A,-8.
	PUSHJ	P,SEND
	POP	P,A
	PUSHJ	P,SEND
	POPJ	P,
NOUH:	MOVE	B,A
	PUSHJ	P,CRR
	MOVE	A,B
	PUSHJ	P,NPNT
	POPJ	P,

;CRUMMY NUMBER PRINT OUT ROUTINES
;FOR PRINTING WORDS ORDINARILY
;SENT TO