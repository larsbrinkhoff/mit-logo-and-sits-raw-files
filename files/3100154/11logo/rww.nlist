	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 1
	SYSTEM 323	PAGE 1 	

     1						.TITLE PDP11 LOGO
     2					
     3		001736				FOO==VERNF
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 2
	SYSTEM 323	PAGE 2 	

     4		000503				VERN==%FNAM2
     5		001736				FOO==VERNF
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 3
	SYSTEM 323	PAGE 3 	CONFIGURATION PARAMTERS

     6						.STITL CONFIGURATION PARAMTERS
     7						.IF1
     8						.PRINT /0=>FULL 1=>NO DEBUG 2=>QUERY
     9					ASSSW=/
    10						.TTYMAC FLAG
    11						ASSSW=FLAG
    12						.ENDM
    13					
    14						.IFZ ASSSW
    15						DEBUG==1
    16						DISASS==1
    17						GCDBUG==1
    18						MNUSRS==10.
    19						MNSLTS==5
    20						.ENDC
    21					
    22						.IFZ <ASSSW-1>
    23						DEBUG==0
    24						DISASS==0
    25						GCDBUG==1	;ZERO LATER, BUT DOESN'T WORK YET
    26						MNUSRS==4
    27						MNSLTS==2
    28						.ENDC
    29					
    30						.IFZ <ASSSW-2>
    31						.MACR SETFLG FLG
    32						.PRINT /FLG=/
    33						.TTYMAC FLAG
    34						FLG==FLAG
    35						.ENDM
    36						.ENDM
    37					
    38						SETFLG DEBUG
    39						SETFLG DISASS
    40						SETFLG GCDBUG
    41						SETFLG MNUSRS
    42						SETFLG MNSLTS
    43						.ENDC
    44						.ENDC
    45					
    46						.MACR FOR FLG
    47						.XLIST
    48						.IFNZ FLG
    49						.LIST
    50						.ENDM
    51					
    52						.MACR ENDC FLG
    53						.XLIST
    54						.IFZ FLG
    55						.LIST
    56						.ENDC
    57						.LIST
    58						.ENDM
    59					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 4
	SYSTEM 323	PAGE 4 	SYSTEM PARAMETERS

    60						.STITL SYSTEM PARAMETERS
    61					
    62		000000			A=%0
    63		000001			B=%1
    64		000002			C=%2
    65		000003			D=%3
    66		000004			E=%4
    67		000005			F=%5
    68		000005			U=%5
    69		000006			P=%6
    70		000006			SP=%6
    71		000007			PC=%7
    72					
    73					
    74					
    75		104400			ERROR=TRAP
    76					
    77		100000			RUG=100000	;DONT CHANGE THE S.A., RADIA!!
    78		104000			SKPRET==EMT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 5
	SYSTEM 323	PAGE 5 	SYSTEM PARAMETERS

    79					
    80					;DEVICE INFORMATION
    81					
    82					;CONSOLE SWITCHES
    83		177570			SWB=177570	;CONSOLE SWITCH DATA
    84					;CONSOLE TELETYPE
    85					;BREAK LEVEL 4
    86		000060			TKBRV=60	;CONSOLE KEYBOARD BREAK VECTOR
    87		177560			TKS=177560	;CONSOLE KEYBOARD STATUS
    88		177562			TKB=177562	;CONSOLE KEYBOARD DATA
    89		000064			TPBRV=64	;CONSOLE PRINTER BREAK VECTOR
    90		177564			TPS=177564	;CONSOLE PRINTER STATUS
    91		177566			TPB=177566	;CONSOLE PRINTER DATA
    92					;DM11
    93					;BREAK LEVEL 5
    94		000310			DMRBRV=310	;DM11 RECEIVER BREAK VECTOR
    95		000314			DMTBRV=314	;DM11 TRANSMITTER BREAK VECTOR
    96		175000			DMCSR=175000	;DM11 CONTROL AND STATUS REGISTER
    97		175002			DMBAR=175002	;DM11 BUFFER ACTIVE REGISTER
    98		175004			DMBCR=175004	;DM11 BREAK CONTROL REGISTER
    99		175006			DMTBR=175006	;DM11 TABLE BASE REGISTER
   100					;PROGRAMMABLE CLOCK
   101					;BREAK LEVEL 6
   102		000104			PCBRV=104	;PROGRAMMABLE CLOCK BREAK VECTOR
   103		172540			PCS=172540	;PROGRAMMABLE CLOCK STATUS
   104		172542			PCSTBF=172542	;PROGRAMMABLE CLOCK SET BUFFER
   105		172544			PCCNT=172544	;PROGRAMMABLE CLOCK COUNTER
   106					;RF11/RS11 DISK
   107					;BREAK LEVEL 5
   108		000204			DSKBRV=204	;DISK BREAK VECTOR
   109		177460			DSKS=177460	;DISK STATUS REGISTER
   110		177472			DSKDBR=177472	;DISK DATA REGISTER
   111		177462			DSKWC=177462	;DISK WORD COUNT
   112		177464			DSKCA=177464	;DISK CURRENT ADDRESS
   113		177466			DSKA=177466	;DISK ADDRESS
   114		177470			DSKAE=177470	;DISK EXTENDED ADDRESS
   115		177474			DSKMT=177474	;DISK MAINTENCE(WELL...)
   116		177476			DSKSG=177476	;DISK SEGMENT
   117					;TK DISPLAY
   118					;BREAK LEVEL 7?
   119		000270			DISBRV=270	;DISPLAY BREAK VECTOR
   120		164040			NGCSR=164040	;DISPLAY CONTROL AND STATUS REGISTER
   121		164042			NGREL=164042	;DISPLAY RELOCATION REGISTER
   122					;DC11 HIGH SPEED LIN INTERFACE
   123					;BREAK LEVEL 5
   124		000300			DCRBRV=300	;RECIEVE BREAK VECTOR
   125		174000			DCRS=174000	;RECIEVE STATUS WORD
   126		174002			DCRB=174002	;RECIEVE BUFFER
   127		000304			DCTBRV=304	;TRANSMIT BREAK VECTOR
   128		174004			DCTS=174004	;TRANSMIT STATUS
   129		174006			DCTB=174006	;TRANSMIT BUFFER
   130					;POWER FAIL
   131		000024			PFBRV=24
   132					;BUS ERRORS
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 6
	SYSTEM 323	PAGE 5.1 	SYSTEM PARAMETERS

   133		000004			BEBRV=4
   134					;TRAPS
   135		000034			TRPBRV=34
   136		000030			EMTBRV=30
   137		000020			IOTBRV=20
   138		000014			BPTBRV=14
   139		000024			PWFBRV=24
   140					;EAE REGISTERS
   141		177300			DIVIDE=177300
   142		177302			AC=177302
   143		177304			MQ=177304
   144		177306			MULTIP=177306
   145		177310			SR=177310
   146		177311			EAESR==177311
   147		177312			NORMAL=177312
   148		177314			LGS=177314
   149		177316			ARS=177316
   150		000002			SIPRBT==2
   151		000010			MQZ==10
   152					;PSSESOR STATUS
   153		177776			PS=177776
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 7
	SYSTEM 323	PAGE 6 	ALLOCATION PARAMETERS

   154						.STITL ALLOCATION PARAMETERS
   155					
   156		000100			SYPDLL==100
   157		000020			TMPDLL==20
   158		000600			PPDLL==600
   159		000600			SPDLL==600
   160		000400			DBUFL==400
   161		000400			DDIRBL==400
   162					
   163		002000			DTIBFL==2000
   164		002000			DEDBFL==2000
   165		002000			DDIRL==2000
   166					
   167		000103			DWRTEC==103
   168		000105			DREADC==105
   169		000107			DWRTCC==107
   170					
   171		000001			FRTRCF==1
   172		000002			SWTRCF==2
   173		000004			SPTRCF==4
   174		000010			GCTRCF==10
   175					
   176		000001			FRSCED==1	;FLUSHED DUE TO SCEDULEING
   177		000003			FRDSKW==3	;HANGING ON DISK
   178		000004			FRTYIW==4	;HANGING ON TYI OF CHAR
   179		000005			FRTYOW==5	;HANGING ON FULL TYO BUFFER
   180		000006			FRRAND==6	;HANGING FOR "UNKNOWN" REASON
   181		000007			FRNEWU==7	;HANGING BECUASE HAVE NOT YET BEEN INITIALIZED
   182		000010			FRTYIH==10	;HANGING ON LINE INPUT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 8
	SYSTEM 323	PAGE 7 	MACROS

   183						.STITL MACROS
   184						.MACR PUSH AA
   185						MOV AA,-(P)
   186						JSR PC,PPUSHT
   187						.ENDM
   188					
   189						.MACR POP AA
   190						MOV (P)+,AA
   191						JSR PC,PPOPT
   192						.ENDM
   193					
   194						.MACR PUSHS AA
   195						JSR PC,SPUSHT
   196						MOV AA,@S
   197						.ENDM
   198					
   199						.MACR POPS AA
   200						MOV @S,AA
   201						JSR PC,SPOPT
   202						.ENDM
   203					
   204						.MACR SPUSH AA
   205						MOV AA,-(P)
   206						.ENDM
   207					
   208						.MACR SPOP AA
   209						MOV (P)+,AA
   210						.ENDM
   211					
   212						.MACR SPUSHS AA
   213						SUB #2,S
   214						MOV AA,@S
   215						.ENDM
   216					
   217						.MACR SPOPS AA
   218						MOV @S,AA
   219						ADD #2,S
   220						.ENDM
   221					
   222						.MACR TEXT AA
   223						.XLIST
   224						.ASCII \AA\
   225						.BYTE 0
   226						.EVEN
   227						.LIST
   228						.ENDM
   229					
   230						.MACR PRTXT AA
   231						.XLIST
   232						JSR PC,ERTAS
   233						TEXT ^\AA\
   234						.LIST
   235						.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 9
	SYSTEM 323	PAGE 8 	MACROS

   236					
   237					
   238						.MACR PRCR
   239						JSR PC,.CRLF
   240						.ENDM
   241					
   242						.MACR SPACE
   243						JSR PC,.SPACE
   244						.ENDM
   245					
   246						.MACR TIMER A
   247						JSR PC,.TIME
   248						.ENDM
   249					
   250						.MACR UNTIME A
   251						JSR E,.UTIME
   252						A
   253						.ENDM
   254					
   255						.MACR UTIMER A
   256						JSR PC,.TIME
   257						.ENDM
   258					
   259						.MACR UUNTIM A
   260						MOV #A,.+20
   261						ADD USER,.+12
   262						JSR E,.UTIME
   263						0
   264						.ENDM
   265						.MACR REPT1 A,B
   266						.XLIST
   267						.REPT A
   268						B
   269						.ENDR
   270						.LIST
   271						.ENDM
   272						.MACR REPT2 A,B,C
   273						.XLIST
   274						.REPT A
   275						B
   276						C
   277						.ENDR
   278						.LIST
   279						.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 10
	SYSTEM 323	PAGE 9 	MACROS

   280					
   281					
   282						.MACR NOP NUM
   283						.XLIST
   284						.IFG NUM
   285						BR .+<NUM*2>
   286						NOP <NUM-1>
   287						.ENDC
   288						.LIST
   289						.ENDM
   290					
   291						.MACR EXCH LOC1,LOC2
   292						MOV	LOC1,EXCH1
   293						MOV	LOC2,LOC1
   294						MOV	EXCH1,LOC2
   295						.ENDM
   296					
   297						.MACR PAD A,B
   298						.PRINT \A B\
   299						.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 11
	SYSTEM 323	PAGE 10 	TRAP VECTORS

   300					.STITL TRAP VECTORS
   301					
   302					
   303					;TRAP VECTORS
   304					;UNUSED VECTORS
   305		000000			.=0
   306						REPT2 100,.+2,IOT	;GO TO 2ND WORD OF VECTOR AND DIE
   307					
   308		000034				.=TRPBRV
   309	000034	033704				ERRBK	;TRAP IS USED FOR ERRORS
   310	000036	000000				0
   311					
   312		000060				.=TKBRV
   313	000060	001400				TKBRK	;CONSOLE TTY KEYBOARD
   314	000062	000200				200	;IS ON BR4
   315					
   316		000064				.=TPBRV
   317	000064	001434				TPBRK	;CONSOLE TTY PRINTER
   318	000066	000200				200	;IS ON BR4
   319					
   320		000104				.=PCBRV
   321	000104	011450				CLKBRK	;PROGRAMMABLE CLOCK
   322	000106	000300				300	;IS ON BR6
   323					
   324		000204				.=DSKBRV
   325	000204	007574				DSKBRK	;FIXED HEAD DISK
   326	000206	000300				300	;IS ON BR5, INT ROUTINE RUNS ON LEVEL 6
   327					
   328		000270				.=DISBRV
   329	000270	001436				DISBRK	;DISPLAY
   330	000272	000240				240	;???????????
   331					
   332		000310				.=DMRBRV
   333	000310	001440				DMRBRK	;DM11 RECEIVE
   334	000312	000240				240	;?
   335					
   336		000314				.=DMTBRV
   337	000314	001442				DMTBRK	;DM11 TRANSMIT
   338	000316	000240				240	;?
   339					
   340		000020				.=IOTBRV
   341	000020	006520				IOTBRK
   342	000022	000340				340
   343					
   344		000030				.=EMTBRV
   345	000030	033676				EMTBK
   346	000032	000340				340
   347					
   348		000300				.=DCRBRV	;DC11 RECIEVE
   349	000300	014360				DCRBRK
   350	000302	000240				240
   351					
   352		000304				.=DCTBRV	;DC11 TRANSMIT
   353	000304	015222				DCTBRK
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 12
	SYSTEM 323	PAGE 10.1 	TRAP VECTORS

   354	000306	000240				240
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 13
	SYSTEM 323	PAGE 11 	SYSTEM VARIABLES(ONE COPY)

   355						.STITL SYSTEM VARIABLES(ONE COPY)
   356					
   357					
   358		000400				.=400
   359	000400	000167	014742			JMP START
   360		000504				.=.+SYPDLL	;SYSTEM PDL
   361	000504	000504			SPDLP:	.	;SYSTEM PDL POINTER
   362					PAT:
   363		000706			PATCH:	.=.+200	;PATCH AREA
   364					PATEND:
   365		000770				.=770
   366	000770	001736			LVERNF:	VERNF
   367		001000			.=<.!377>+1
   368		000776				DMCA=.-NFDMTY
   369		001040				.=.+40	;DM11 CURRENT ADDRESS
   370		001036				DMWC=.-NFDMTY
   371		001100				.=.+40	;DM11 -BYTE COUNT
   372		001140				.=.+40	;DM11 BIT ASSEMBLY TABLE
   373		001200				.=.+40	;UNUSED
   374		001400			DMTT:	.=.+200	;DM11 TUMBLE TABLE
   375					
   376	001400	016767	176156	002172	TKBRK:	MOV TKB,CHI
   377	001406	042767	177600	002164		BIC #177600,CHI
   378	001414	026767	002160	000760		CMP CHI,BRKCHR
   379	001422	001003				BNE TKBRK1
   380	001424	052767	040000	002140		BIS #BREAKF,FLAGS2
   381	001432	000002			TKBRK1:	RTI
   382	001434	000000			TPBRK:	HALT
   383	001436	000000			DISBRK:	HALT
   384	001440	000000			DMRBRK:	HALT
   385	001442	000000			DMTBRK:	HALT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 14
	SYSTEM 323	PAGE 12 	SYSTEM VARIABLES(ONE COPY)

   386					
   387	001444	001446			TMPDLP:	TMPDL
   388		001506			TMPDL:	.=.+<TMPDLL*2>
   389	001506	000000			ELAPSE:	0
   390	001510	000000				0
   391	001512	177777			USER:	-1
   392	001514	000000			ULAST:	0	;LAST USER WHO WAS RUN
   393	001516	000000			NULTIM:	0
   394	001520	000000				0
   395	001522	000000			TIME:	0	;TIME IN 1/100 TH'S OF A SEC
   396	001524	000000				0	;FROM START OF SYSTEM RUN
   397	001526	000004			QUANT:	4	;UQUANT SET FRCM THIS
   398	001530	000000			UQUANT:	0	;TIME IN 1/100THS USER SHOULD RUN
   399	001532	000000			NRABLU:	0	;NUMBER OF USERS WITH FLSADR=0
   400	001534	000000			NSWPU:	0	;NUMBER OF USERS ASSIGNED TO SLOTS BUT NOT YET IN
   401	001536	000000			NINU:	0	;   "    "    "      "      "   "   AND ALREADY IN
   402	001540	000000			PUSPSL:	0	;PREFERED USER SLOT TO SWAP
   403	001542	000000			PUSRSP:	0	;PREFERED USER TO SWAP OUT
   404	001544	001546			SWPLEP:	SWPLST	;PLACE TOO PUT NEXT REQ
   405		001562			SWPLST:	.=.+<MNSLTS*2>+2	;LIST OF SWAP REQUESTS
   406		001776			MSWPOR:	.=.+<16*MNSLTS*2>	;MOBY SWAP IN AND OUT BLOCKS
   407		002212			SYSWPR:	.=.+<16*MNUSRS>	;10 DISK REQUEST BLOCKS FOR GENERAL USE
   408	002212	000000			DSKCRB:	0	;CURRENT DISK REQUEST
   409		002240			SLOTST:	.=.+<MNSLTS*4>	;WORD 1 = SLOT USER
   410								;WORD 2 = NEG, USER COMING IN; 1, USER JUST IN, >1 USER IN A WHILE
   411	002240	000000				0	;SO END TEST ALWAYS WORKS
   412	002242	000000				0
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 15
	SYSTEM 323	PAGE 13 	SYSTEM VARIABLES(ONE COPY)

   413					
   414	002244	000000			DKRTYS:	0	;# OF DISK RETRYS
   415	002246	000000			CORTOP:	0	;FIRST NON-EX LOCATION
   416	002250	000000			NUNODE:	0	;NUMBER OF NODES PER USER
   417	002252	000001			NUSERS:	1	;NUMBER OF USERS
   418	002254	000001			NSLOTS:	1	;NUMBER OF IN CORE SLOTS
   419	002256	000002			NUSER2:	2
   420		000000			FOO==0
   421						.MACR MSWF
   422						MSWPOR+FOO
   423					FOO==FOO+34
   424						.ENDM
   425					SLTCAD:	REPT2 MNSLTS,MSWF,0
   426	002304	000000			USWCNT:	0	;NEGATIVE LENGTH OF USER SLOT
   427	002306	000000			USLENT:	0	;LENGHT OF SLOT IN BYTES
   428	002310	000000			DUSECT:	0	;COUNT OF SYSTEM DISK USAGES MOD 256
   429	002312	020000			DSKDST:	20000	;DISK OFFSET( NO USER OR SYSTEM CRAP BEFORE HERE)
   430	002314	000002				2
   431	002316	020000			DCLRUS:	20000	;ADDRESS OF CLEAR USER IMAGE
   432	002320	000002				2
   433	002322	040000			DCRBFS:	40000	;ADDRESS OF RECIEVE BUFFERS
   434	002324	000002				2
   435	002326	042000			DCTBFS:	42000	;ADDRESS OF TRANSMIT BUFFERS
   436	002330	000002				2
   437	002332	140000			DSKRND:	140000	;START OF RANDOM USER STORAGE
   438	002334	000002				2
   439	002336	100000			SNXTDB:	100000	;NEXT BLOCK AVAILABLE
   440	002340	000002				2
   441	002342	100000			SDSKAD:	100000	;BASE OF SYSTEM DISK BLOCKS
   442	002344	000002				2
   443	002346	000001			SDBITB:	1	;SYSTEM DISK BIT TABLE
   444						REPT1 7,0
   445	002366	100000			SDBITE:	100000
   446	002370	000000			SFLAGS:	0	;RANDOM SYSTEM FLAGS
   447	002372	177777			LOCKUS:	-1	;INDEX OF USER LOCKED IN CORE
   448	002374	177777			GCLOCK:	-1	;USER USING GARBAGE COLLLECTOR IS LOCKED IN
   449	002376	   015		
   450	002377	   000			CRMES:	.BYTE 15,0	;CR FOR ERTAP
   451	002400	000000			RWWSW:	0
   452	002402	000000			BRKCHR:	0	;THE BREAK CHAR FOR TODAY!
   453	002404	000000			JDCSW:	0
   454					;DISPLAY SYSTEM VARIABLES
   455		000400			DLEN==400	;LENGTH OF EACH DISPLAY LIST (IN BYTES)
   456		000060			DPDLL==60	;LENGTH OF EACH DISPLAY PDL (IN BYTES)
   457		000020			TLEN==20	;LENGTH OF EACH TURTLE LIST (IN BYTES)
   458		000220			SDPDLL==60*3	;TOTAL LENGTH OF DISPLAY PDL AREA (IN BYTES)
   459		001400			SDLEN==400*3	;TOTAL LENGTH OF DISPLAY LIST AREA (IN BYTES)
   460		000060			STLEN==20*3	;TOTAL LENGTH OF TURTLE LIST AREA (IN BYTES)
   461					
   462					DCONS:		;USER DISPLAY CONSOLE TABLE
   463	002406	   000				.BYTE	0
   464	002407	   001				.BYTE	1
   465	002410	   002				.BYTE	2
   466						REPT1 5,.BYTE -1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 16
	SYSTEM 323	PAGE 13.1 	SYSTEM VARIABLES(ONE COPY)

   467					SDISBT:		;EACH ENTRY HAS A 1 IN THE NTH BIT OVER
   468	002416	   001		
   469	002417	   002		
   470	002420	   004				.BYTE	1,2,4
   471		002422				.EVEN
   472					
   473					SDPDLP:		;DISPLAY PDL POINTER TABLE
   474	002422	000120				<DPDL-DISREL>+<DPDLL*<0+1>>
   475	002424	000200				<DPDL-DISREL>+<DPDLL*<1+1>>
   476	002426	000260				<DPDL-DISREL>+<DPDLL*<2+1>>
   477					STLIST:		;TURTLE DISPLAY LIST  AREA TABLE
   478						REPT1	3,TLIST+<TLEN*.RPCNT>
   479					
   480					;DISPLAY TEMPORARIES
   481					;THESE MUST BE IN THIS ORDER
   482	002436	000000		
   483	002440	000000			NEWX:	.WORD 0,0	;NEWX IS A TEMPORARY STORAGE FOR ROUTINES
   484					;			LIKE SETXY. IT CONTAINS WHAT CURX WILL BE SET
   485					;			TO IF THE ROUTINE DOESN'T
   486					;			ENCOUNTER A FATAL ERROR
   487	002442	000000		
   488	002444	000000			NEWY:	.WORD 0,0	;LIKE NEWX
   489					;END OF ORDER
   490	002446	000000			TUT:	0	;TURTLE TOP.  POINTS TO TOP OF TURTLE DISPLAY LIST
   491	002450	000000			SNPTEM:	0	;USED BY GARBAGE COLLECTOR
   492					
   493					
   494	002452	000000			EXCH1:	0
   495		177601			.CSRET==-127.
   496	002454	003466			GCMKL:	TOPS
   497	002456	003470				TOPS1
   498	002460	003472				GCP1
   499	002462	003474				GCP2
   500	002464	003476				GCPREV
   501	002466	000000				0
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 17
	SYSTEM 323	PAGE 14 	SYSTEM VARIABLES (ONE COPY PER USER)

   502						.STITL SYSTEM VARIABLES (ONE COPY PER USER)
   503					
   504		002470			UBLK=.
   505	002470	000000			FLSRES:	0	;REASON USER NOT RUNNING
   506	002472	000000			FLSADR:	0	;ADDRESS TO START AT AFTER FLUSH
   507	002474	000000			UACA:	0
   508	002476	000000			UACB:	0
   509	002500	000000			UACC:	0
   510	002502	000000			UACD:	0
   511	002504	000000			UACE:	0
   512	002506	000000			TIMUSD:	0
   513	002510	000000				0
   514	002512	000000			UPC:	0	;PROGRAM COUNTER
   515	002514	000000			UTTY:	0
   516					;DO NOT CHANGE THE ORDER BELOW
   517		002522			USWPAD:	.=.+4	;BEGINNING OF SWAP AREA
   518		002526			DTYIBF:	.=.+4	;BEGINING OF TYI BUFFER ON DISK
   519		002532			DEDTBF:	.=.+4	;BEGINNG OF EDIT BUFFER
   520		002536			DHDDIR:	.=.+4	;BEGINING OF DISK DIRECTORY(OF HOME DISK)
   521		002542			UNXTDB:	.=.+4	;NEXT DISK BLOCK AWAILABLE
   522		002546			UDSKAD:	.=.+4	;RANDOM DISK STORAGE AREA
   523					
   524		000056			LUBLK==.-UBLK
   525		000056			L==LUBLK
   526					
   527		003404				.=.+<MNUSRS-1*LUBLK>
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 18
	SYSTEM 323	PAGE 15 	SYSTEM VARIABLES (ONE COPY PER USER)

   528						;NODE TYPES
   529		000000			SFUN==000000
   530		010000			INFIX==10000
   531		020000			UFUN==20000
   532		030000			UVAR==30000
   533		040000			TYP1==40000
   534					;THE FOLLOWING TYPES ARE NEEDED IN THIS ORDER BY THE CONVERT ROUTINES
   535		070000			SSTR==70000	;NOT VALID TOKEN TYPE
   536		100000			SNP==100000
   537		110000			ATOM==110000
   538		120000			SNUM==120000	;NOT A VALID TOKEN TYPE
   539		130000			LNUM==130000
   540		140000			LSTR==140000
   541		150000			RNUM==150000
   542		170000			LIST==170000
   543		170000			SENT==LIST
   544					;END OF ORDER
   545					
   546						;BINDING TYPES
   547		020000			FBIND==20000
   548		030000			VBIND==30000
   549		120000			SFBIND==120000	;SWAPPED OUT FUNCTION BINDING
   550		130000			SVBIND==130000	;SWAPPED OUT  VARIABLE BINDING
   551					
   552					
   553						;SOE FLAGS
   554		002000			VNAF==2000
   555					
   556						;READ FLAGS SEE DTBL:
   557		000400			DOTF==400	;IN LEFT HALF
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 19
	SYSTEM 323	PAGE 16 	SYSTEM VARIABLES (ONE COPY PER USER)

   558						;EVAL FLAGS - PUSHED BY PEVAL
   559		000001			PTLPF==1	;PREVIOUS TOKEN WAS LEFT PAREN
   560		000002			RTF==2	;REPEAT TOKEN
   561		000004			CRF==4	;CURRENT TOKEN IS CR
   562		000010			EDITF==10	;EDIT FLAG
   563		000020			TOF==20	;TO FLAG
   564		000040			IFF==40	;IF FLAG
   565		000400			TPTF==400	;THIS PROCEDURE TRACED FLAG	;MUST BE IN LEFT HALF
   566					
   567						;EVAL FLAGS2 - NOT PUSHED
   568		000001			TESTF==1
   569		000002			TRACEF==2
   570		000004			PQF==4	;PRINT QUOTE FLAG - FOR PRSTR
   571		000010			PBF==10	;PRINT BRACKET FLAG - FOR PRSEN PRLST
   572		000020			MMF==20	;MULTIPLE MAKE FLAG
   573		000040			ERRF==40	;ERROR FLAG
   574		001000			DSAMFL==1000	;DISK ALMOST FULL
   575		002000			PPNAIF==2000	;P PDL NOT ALL THE WAY IN
   576		004000			SPNAIF==4000	;S PDL NOT ALL THE WAY IN
   577		040000			BREAKF==40000	;BREAK TYPED
   578					
   579						;TEMP FLAGS IN TFLAGS
   580		000001			TF6==1
   581		000100			TF1==100	
   582		000200			TF2==200
   583		000400			TF3==400
   584		010000			TF4==10000
   585		020000			TF5==20000
   586					
   587						;FLAGS IN LEFT HALF OF 1ST NODE OF SWAPPED PROC LIST
   588					; TPTF==400	DEFINED ABOVE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 20
	SYSTEM 323	PAGE 17 	USER VARIABLES

   589						.STITL USER VARIABLES
   590					
   591		003404			UVBLK=.
   592					;BELOW RELATIVE TO BASE OF SLOT WHEN USER NOT RUNNING
   593	003404	004626			UAB:	NODESP-SLOT1	;BASE OF CURRENT USER'S NODE SPACE
   594	003406	002010			S:	IS-SLOT1
   595	003410	001204			UPDLP:	IP-SLOT1	;USER PDL POINTER(ONLY WHEN USER NOT RUNNING)
   596	003412	002010			SPOPL:	IS-SLOT1
   597	003414	001264			SPUSHL:	IS-SLOT1-524
   598	003416	001412			SSWPAD:	IS-SLOT1-400+4-2
   599	003420	002010			SPBASE:	IS-SLOT1
   600	003422	002010			SPRBAO:	IS-SLOT1	;SAME FOR S  :   S-SPRBAO = REL ADDR OF TOP THING ON S PDL
   601	003424	001204			PPOPL:	IP-SLOT1
   602	003426	000460			PPUSHL:	IP-SLOT1-524
   603	003430	000606			PSWPAD:	IP-SLOT1-400+4-2
   604	003432	001204			PPBASE:	IP-SLOT1
   605	003434	001204			PRBAO:	IP-SLOT1	;PDL REL BASE ADDR OFFSET
   606	003436	002014			SUHCT:	UHCT-SLOT1	;START OF USER HASH CODE TABLE
   607	003440	002222			GCBITS:	DBUF-SLOT1
   608	003442	000000			BASEUS:	0	;BASE OF USER SLOT(MUST BE LAST RELOCATED)
   609		003444			UVREND=.	;END OF VARIABLES TO BE RELOCATED
   610					;BELOW ARE NOT RELATIVE
   611	003444	000000			UAC:	0	;EAE AC
   612	003446	000000			UMQ:	0	;EAE MQ
   613	003450	000000			USR:	0	;EAE STATUS REGISTER
   614		000001			RELA==1
   615		000002			RELB==2
   616		000004			RELC==4
   617		000010			RELD==10
   618		000020			RELE==20
   619	003452	000000			ACRELF:	0
   620	003454	000000			NNGC:	0	;NUMBER OF NODES GARBAGE COLLECTED
   621	003456	177777			ERRINA:	-1	;ADDRESS OF SWAPED IN ERROE ROUTINE
   622	003460	000000			SSAVEA:	0	;PLACE S PDL SAVED WHEN MARKING SWAPED OUT PDL
   623	003462	000000				0
   624	003464	000343			FREE:	SOFN	;START OF FREE NODES
   625	003466	000000			TOPS:	0	;GC MARK FROM HERE IF NON 0
   626	003470	000000			TOPS1:	0	;   "
   627	003472	000000			GCP1:	0
   628	003474	000000			GCP2:	0
   629	003476	000000			GCPREV:	0
   630						;THE FOLLOWING ARE PUSHED BY PEVAL
   631	003500	000000			CPP:	0	;CURRENT PROCEDURE POINTER
   632	003502	000000			CPSN:	0	;C.P. SWAP NO.
   633	003504	000000			CLN:	0	;CURRENT LINE NO.
   634	003506	000000			CLP:	0	;CURRENT LINE POINTER - GOOD IF CPSN'S AGREE
   635	003510	000000			CLGN:	0	;CURRENT LINE GENERATION NO.
   636	003512	000000			CTN:	0	;CURRENT TOKEN NO.
   637	003514	000000			CTP:	0	;CURRENT TOKEN POINTER
   638	003516	000000			FUNLEV:	0	;FUNCTION LEVEL
   639	003520	000000			IFLEV:	0	;IF LEVEL
   640	003522	000000			FLAGS:	0	;FLAG WORD
   641	003524	000000			CSPDLP:	0	;CURRENT S PDL PTR AFTER LAST PEVAL PUSH
   642	003526	000000			CPDLP:	0	;CURRENT PDL PTR AFTER LAST PEVAL PUSH
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 21
	SYSTEM 323	PAGE 17.1 	USER VARIABLES

   643						;END OF PEVAL PUSHES EXCEPT REL. S, CO AND CO+2 ARE ALSO PUSHED
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 22
	SYSTEM 323	PAGE 18 	USER VARIABLES

   644					
   645						;THE FOLLOWING ARE PUSHED (SOMETIMES) BY EVAL
   646	003530	000000			CO:	0	;CURRENT OPERATOR
   647	003532	000000				0
   648	003534	000000			NOR:	0	;NO. OF OPERANDS STILL NEEDED BEFORE CO CAN BE EXECUTED
   649						;END OF EVAL PUSHES
   650	003536	000000			COF:	0	;CURRENT OPERATOR FLAGS
   651	003540	000000			LO:	0	;LAST OPERATOR
   652	003542	000000				0
   653	003544	000000			CT:	0	;CURRENT TOKEN
   654	003546	000000				0	; "
   655	003550	000000			RDFLAG:	0	;FOR READ
   656	003552	000000			LISTBD:	0	;LIST BUILD DEPTH
   657	003554	000000			PSTOPR:	0	;RETURN ADDR FOR PSTOP
   658	003556	000000			UNGRAB:	0	;FOR .GRAB. PUTTING A NODE ADDR HERE MEANS THAT IT
   659							;WILL BE THE NEXT GRABBED.  GC WILL MARK FROM "UNGRAB"
   660							;USE WITH CAUTION!!
   661	003560	000000			TEMP:	0
   662	003562	000000			TFLAGS:	0	;TEMP FLAGS (ALL TFN'S SHOULD EVENTALLY POINT HERE)
   663	003564	000000			NCHR:	0	;FOR BLST
   664	003566	000000			TOPRNM:	0	;PTR TO UOE OF PROC. BEING "TO"'ED
   665	003570	000000			FNLLP:	0	;FIRST NODE OF LIST OF LINE POINTERS (FOR "TO")
   666	003572	000000			FLAGS2:	0	;EVAL FLAGS - NOT PUSHED BY PEVAL
   667	003574	000000			ALTL:	0	;TEST LINE POINTER
   668	003576	000000			LINENO:	0	;FOR TEST MODE
   669	003600	000000			CHI:	0	;FOR TYI
   670	003602	000077			PRMTCH:	'?	;PROMPT CHAR
   671	003604	000000			GNCN:	0	;"GET NEXT CHAR" NODE
   672	003606	000000				0
   673	003610	000000			NBKTS:	0	;FOR RDSTR
   674	003612	020270			PCHR:	TYO	;PLACE WHERE OUTPUT CHARS GO (TYO, BLST, ...)
   675		003654			DBITTB:	.=.+40
   676		003652			DBITBE=.-2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 23
	SYSTEM 323	PAGE 19 	USER VARIABLES

   677					
   678					
   679					;VARIABLES AND CONSTANTS FOR DISPLAY SYSTEM
   680					
   681					;THESE MUST BE IN THIS ORDER
   682		003654			DORBEG==.	;MARKS BEGINNING OF THESE VARIABLES
   683	003654	000000		
   684	003656	000000			CURX:	.WORD 0,0	;CURX = CURRENT X POSITION
   685					;			THE FIREST WORD IS THE INTEGER PART
   686					;			THE SECOND WORD IS THE FRACTION PART
   687	003660	000000		
   688	003662	000000			CURY:	.WORD 0,0	;CURY = CURRENT Y POSITION
   689	003664	000000			CURA:	0	;CURA = THE CURRENT ANGLE
   690	003666	000000			OLDX:	0	;CONTAINS CURX AT THE TIME OF LAST NEW SNAP
   691	003670	000000			OLDY:	0	;CONTAINS CURY AT THE TIME OF LAST NEW SNAP
   692	003672	   000			OLDIR:	.BYTE 0	;CONTAINS DIREC WHEN DR.LIN LAST CALLED
   693	003673	   000			DFLAGS:	.BYTE 0
   694		003674				.EVEN
   695					
   696		003674			DOREND==.	;MARKS END OF THESE VARIABLES
   697					;END OF ORDER
   698					
   699	003674	000000			STB:	0	;STATIC AREA BOTTOM
   700	003676	000000			STT:	0	;STATIC AREA TOP.POINTS TO TOP OF STATIC DISPLAY AREA
   701	003700	000000			DYB:	0	;DYNAMIC BOTTOM.  POINTS TO BOT OF DY AREA
   702	003702	000000			DYR:	0	;ROVING POINTER USED BY DISPLAY STORAGE ALLOCATIN ROUTINES
   703	003704	000000			DYT:	0	;POINTER TO DYNAMIC AREA TOP
   704	003706	000000			TUB:	0	;POINTER TO TURTLE AREA BOTTOM
   705	003710	000000			SNLIST:	0	;POINTER TO SNAP LIST
   706	003712	000000			SNABOT:	0	;BOTTOM OF CURRENT SNAP
   707	003714	000000			SINA:	0	;CONTAINS SIN OF THE CURENT ANGLE
   708	003716	000000			COSA:	0	;CONTAINS COS OF THE CURENT ANGLE
   709	003720	000000			DIREC:	0	;CONTAINS DIRECTION CODE FRO CURRENT ANGLE
   710	003722	000000			BYCNT:	0	;KEEPS TRACK OF LAST BIT IN DISPLAY LIST
   711	003724	000000			PUSHJT:	0	;DISPLAY PUSHJ TO TURTLE
   712	003726	000000			DISBIT:	0	;HAS A BIT SET CORRESPONDING TO DISPLAY SLOT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 24
	SYSTEM 323	PAGE 20 	USER VARIABLES

   713					
   714					
   715					;THIS MUST BE AT THE END
   716		000060			MAXELN==60
   717		004010			ERRBUF:	.=.+MAXELN
   718		000404			LUVBLK==.-UVBLK
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 25
	SYSTEM 323	PAGE 21 	USER VARIABLES

   719					
   720					
   721					;DISPLAY COMMANDS
   722		150000			ADDX==150000
   723		144000			ADDY==144000
   724		154000			ADDXY==ADDX!ADDY
   725		100000			DPUSHJ==100000
   726		140200			DPOP==140200
   727		140100			DPOPJ==140100
   728		140400			DSTOP==140400
   729		143000			DRSTXY==143000	;RESET X AND Y TO 0
   730					
   731		000004			TURSIZ==4	;THE SIZE OF THE TURTLE
   732					
   733					;FLAGS USED FOR DFLAGS
   734		000001			PENUF==1
   735		000002			HOOKF==2
   736		000004			HIDETF==4
   737		000010			TURTF==10
   738		000020			TEMF==20
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 26
	SYSTEM 323	PAGE 22 	SYSTEM OBLIST

   739						.STITL SYSTEM OBLIST
   740					
   741		000004			VARIABLE==4	;FOR VARIABLE NUMBER OF ARGUMENTS
   742		177777			$==-1	;DEFAULT INDICATOR IN OLE
   743		000020			YINFIX==20	;"YES INFIX" FLAG FOR OLE
   744					;ARGUMENT TYPES
   745					; 0 ==== ANYTHING
   746		000000			ANYT==0
   747		000001			ATOMT==1
   748		000001			WORDT==ATOMT	;A WORD IS THE SAME AS AN ATOM
   749		000002			NUMT==2
   750		000004			SENTT==4
   751		000010			SNAPT==10
   752		000020			LISTT==20
   753		000027			ANSLT==ATOMT+NUMT+SENTT+LISTT	;ALL BUT SNAP
   754					
   755					;SOE FIELDS		1.==RIGHT BYTE (EVEN ADDR) 2.==LEFT BYTE
   756						;		1.1==RIGHT BIT  2.8==LEFT BIT
   757						;1.1-1.8 INPUT TYPE ACCEPTABLE BY THIS PROCEDURE
   758						;2.1-2.2 "STANDARD" NO. OF INPUT ARGS
   759						;2.3 VNAF 1==CAN TAKE "ANY" NO. OF ARGS
   760						;2.5 INFIX 1==THIS IS AN INFIX PROCEDURE
   761						;2.6-2.8 PRECEDENCE
   762					
   763						.MACR NGPTWO A
   764						.XLIST
   765						NGP2=NGP2*2
   766						FOO==A
   767						.IFLE NGP2-FOO
   768						NGPTWO A
   769						.ENDC
   770						.LIST
   771						.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 27
	SYSTEM 323	PAGE 23 	SYSTEM OBLIST

   772					
   773					
   774					
   775					
   776					;****************************************************
   777					;MACRO TO DEFINE SYSTEM OBLIST ELEMENTS
   778					;THE PARAMETERS ARE:
   779					;1)	THE PRINT NAME
   780					;2)	THE NAME OF THE POINTER TO THE OBLIST ELEMENT.
   781					;	THIS PARAMETER CAN BE $ IF YOU DON'T CARE ABOUT THE
   782					;	NAME, OR IF YOU WANT THE NAME TO BE $PNAME
   783					;3)	THE ADDRESS OF THE PROGRAM
   784					;	THIS PARAMETER CAN BE $ IF THE NAME OF THE PROGRAM
   785					;	IS THE SAME AS THE PRINT NAME
   786					;4)	THE PRECEDENCE.  A NUMBER FROM 0-7
   787					;5)	THE TYPE OF PERMISSIBLE ARGUMENTS
   788					;	IF IT CAN TAKE MORE THAN ONE KIND OF ARGUMENT
   789					;	ADD UP ALL THE KINDS.  EG NUMT+LISTT+ATOMT
   790					;6)	THE STANDARD NUMBER OF ARGUMENTS + THE SYMBOL "VARIABLE"
   791					;	IF IT CAN ALSO TAKE A VARIABLE NUMBER OF ARGUMENTS
   792					;7)	THE SYMBOL "YINFIX" IF THIS IS AN INFIX OPERATOR
   793					
   794					;
   795					;IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT IMPORTANT
   796					
   797					;ANY PARAMETER THAT YOU WANT TO BE 0 YOU CAN LEAVE OUT
   798					;ANY PARAMETER YOU DON'T CARE ABOUT YOU CAN LEAVE OUT.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 28
	SYSTEM 323	PAGE 24 	SYSTEM OBLIST

   799					
   800					
   801					
   802					.MACR OLE PNAME,OBNAME,ADDR,PRECED,ARGTYP,NUMARG,QINFIX
   803						.XLIST
   804						OBX0=OBSTRT-.	;CHECK TO SEE THAT THE OBLIST DOESN'T
   805								;OVERWRITE THE OBLIST ELEMENTS
   806						.IF2
   807						.IFNDF OBNAME
   808						OBNAME=0	;TO AVOID UNDEFINED SYMBOL ERROR
   809						.ENDC
   810						.ENDC
   811						.IFG	OBX0
   812						OBADD2	;POINTER TO OBLIST ELEMENT
   813						OBADD1=.
   814						.=OBADD2
   815						.IFL OBNAME+0	;$ HAS BEEN DEFINED TO BE -1
   816						$'PNAME=.
   817						.ENDC
   818						.IFGE OBNAME+0
   819						$'OBNAME=.
   820						.ENDC
   821					
   822					
   823						.BYTE ARGTYP+0
   824						OBX1=NUMARG+0
   825						OBX2=PRECED+0*40
   826						.BYTE QINFIX+OBX1+OBX2
   827					
   828						.IFL ADDR+0
   829						PNAME	;ADDRESS OF PROGRAM
   830						.ENDC
   831						.IFGE ADDR+0
   832						ADDR+0
   833						.ENDC
   834					
   835						TEXT ^\PNAME\
   836					
   837						OBADD2=.
   838						.=OBADD1
   839						.ENDC
   840					
   841						.IFLE	OBX0
   842						.LIST
   843						********
   844						NUMOBS IS LESS THAN THE NUMBER OF SYSTEM OBLIST ELEMENTS.
   845						THEREFORE, YOU ARE OVERWRITING THE SYSTEM OBLIST
   846						********
   847						.XLIST
   848						.ENDC
   849						.LIST
   850					.ENDM
   851						.MACR CDM A
   852					A==<.-SOBLSU>/2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 29
	SYSTEM 323	PAGE 24.1 	SYSTEM OBLIST

   853						.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 30
	SYSTEM 323	PAGE 25 	SYSTEM OBLIST

   854					;THE SYSTEM OBLIST
   855						;ADD ITEMS (EXCEPT FOR SPECIAL CHAR ITEMS) ALPHABETICALLY.
   856					
   857					
   858					;****
   859		000133			NUMOBS==91.	;THE NUMBER OF OBLIST ELEMENTS
   860					;****	WHENEVER YOU ADD AN OBLIST ELEMENT, MAKE SURE YOU INCREMENT
   861					;****	NUMOBS !!!!!!
   862	004010	004242			SOOMX:	2+SOBLSU	;2 > THAN HIGHEST ADDR USED IN SYS OBLIST
   863		000001				NGP2==1
   864						NGPTWO SOBLSU-SOBLST+2
   865	004012	000400			SOBP2:	NGP2	;( SMALLEST POWER OF 2 >= NUMOBS )*2
   866		004014			OBADD1=.
   867		004302			OBADD2=.+<2*NUMOBS>
   868		004302			OBSTRT=OBADD2	;WHERE THE SYSTEM OBLIST ELEMENTS START
   869					
   870					SOBLST:	OLE AND,$
   871						OLE BACK,$,$,2,NUMT,1
   872						OLE BUTFIRST,$,$,2,ANYT,1
   873						OLE BUTLAST,$,$,2,ANYT,1
   874						OLE COUNT,$,$,2,ANYT,1
   875						OLE CTF,$,CLRSTF,2
   876						OLE DIFFERENCE,$,DIFF,2,NUMT,2
   877						OLE DISPLAY,$,$,2,LISTT+SNAPT,1
   878						OLE DO,$,$,2,,1
   879						OLE EDIT,$,$,2
   880						OLE ELSE,$,$,2
   881						OLE EMPTYP,$,$,2,ANYT,1
   882						OLE END,$,$,2
   883						OLE EQUAL,$,$,2,NUMT,2
   884						OLE ERASETRACE,$,ETRACE,2,,1
   885						OLE FIRST,$,$,2,ANYT,1
   886						OLE FORWARD,$,$,2,NUMT,1
   887						OLE FPRINT,$,$,2,,1+VARIABLE
   888						OLE FPUT,$,$,2,,2+VARIABLE
   889						OLE GO,$,$,2,NUMT,1
   890						OLE GREATER,$,GREATR,2,NUMT,2
   891						OLE HEADING,$,$,2
   892						OLE HERE,$,$,2
   893						OLE HIDETURTLE,$,$,2
   894						OLE HOME,$,$,2
   895						OLE IF,$,$,2,WORDT,1
   896						OLE KILLDISPLAY,$,$,2
   897						OLE LAMPOFF,LPOFF,$,2
   898						OLE LAMPON,LPON,$,2
   899						OLE LAST,$,$,2,ANYT,1
   900						OLE LEFT,$,$,2,NUMT,1
   901						OLE LESS,$,$,2,NUMT,2
   902						OLE LEVEL,$,FLEV,2
   903						OLE LIST,$,LIST.P,2,,2+VARIABLE
   904						OLE LISTP,$,$,2,,1
   905						OLE LPUT,$,$,2,,2+VARIABLE
   906						OLE MAKE,$,$,2,,2
   907						OLE MOD,$,$,2,NUMT,2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 31
	SYSTEM 323	PAGE 25.1 	SYSTEM OBLIST

   908						OLE NEWSNAP,$,$,2
   909						OLE NUMBERP,$,NUMBP,2,ANYT,1
   910						OLE OF,$
   911						OLE OUTPUT,$,$,2,0,1
   912						OLE PENDOWN,$,$,2
   913						OLE PENUP,$,$,2
   914						OLE PRINT,$,$,2,ANSLT,1+VARIABLE
   915						OLE PRODUCT,$,PROD,2,NUMT,2+VARIABLE
   916						OLE QUOTIENT,$,DIVDE,2,NUMT,2
   917						OLE REQUEST,$,RQUEST,2
   918						OLE RIGHT,$,$,2,NUMT,1
   919						OLE RUG,$,RUNRUG
   920						OLE SENTENCE,$,$,2,ANYT,2+VARIABLE
   921						OLE SETHEADING,$,$,2,NUMT,1
   922						OLE SETTURTLE,$,$,2,SENTT,1
   923						OLE SETX,$,$,2,NUMT,1
   924						OLE SETXY,$,$,2,NUMT,2
   925						OLE SETY,$,$,2,NUMT,1
   926						OLE SHOW,$,$,2,,1
   927						OLE SHOWTURTLE,$,$,2
   928						OLE SNAP,$,$,2
   929						OLE STARTDISPLAY,$,$,2
   930						OLE STF,$,SETSTF,2
   931						OLE STOP,$,$,2
   932						OLE SUM,$,$,2,NUMT,2+VARIABLE
   933						OLE THEN,$,$,2
   934						OLE TO,$,$,2
   935						OLE TOOT,$,$,2,NUMT,1
   936						OLE TRACE,$,$,2,,1
   937						OLE TYPE,$,$,2,ANSLT,1+VARIABLE
   938						OLE VERSION,$,VERSN,2
   939						OLE WIPE,$,$,2,ATOMT+NUMT,1
   940						OLE WIPECLEAN,$,$,2
   941						OLE WORD,$,$,2,ANYT,2+VARIABLE
   942						OLE WORDP,$,$,2,ANYT,1
   943						OLE XCOR,$,$,2
   944					SOBLSU:	OLE YCOR,$,$,2	;MUST BE ON LAST ENTRY BEFORE SINGLE CHAR ENTRIES
   945						OLE ^\!\,LLPAR,LLPAR,1,ANYT,1
   946						CDM HAS$
   947						OLE ^\#\,PROC,PROC,6,ATOMT,1
   948						CDM LP$
   949						OLE ^\(\,LPAR,LPAR,1,,1
   950						CDM RP$
   951						OLE ^\)\,RPAR,RPAR,1
   952						CDM PRD$
   953						OLE ^\*\,STAR,PROD,5,NUMT,2+VARIABLE,YINFIX
   954						CDM PLU$
   955						OLE ^\+\,PLUS,SUM,4,NUMT,2+VARIABLE,YINFIX
   956						OLE ^\+.\,UPLUS,UPLUS,6,NUMT,1
   957						CDM MIN$
   958						OLE ^\-\,MINUS,DIFF,4,NUMT,2,YINFIX
   959						OLE ^\-.\,UMINS,UMINS,6,NUMT,1
   960						CDM DIV$
   961						OLE ^\/\,SLSH,DIVDE,5,NUMT,2,YINFIX
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 32
	SYSTEM 323	PAGE 25.2 	SYSTEM OBLIST

   962						CDM DOTS$
   963						OLE ^\:\,DOTS,DOTS,6,ATOMT,1
   964						CDM LSS$
   965						OLE ^\<\,LESS,LESS,3,NUMT,2,YINFIX
   966						CDM EQL$
   967						OLE ^\=\,EQUAL,EQUAL,3,NUMT,2,YINFIX
   968						CDM GTR$
   969						OLE ^\>\,GRTR,GREATR,3,NUMT,2,YINFIX
   970						CDM BKSL$
   971					;	OLE ^/^/,BKSL,MOD,5,NUMT,2,YINFIX
   972					
   973		006120			.=OBADD2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 33
	SYSTEM 323	PAGE 26 	SYSTEM OBLIST

   974					
   975						.STITLE	DISPATCH TABLE (ENGLISH)
   976					;FLAGS--
   977					;FSF -- SPECIAL ON INPUT
   978					;FOF -- SPECIAL ON OUTPUT
   979					;FQF -- QUOTING CHARACTER
   980					;SEPF -- SEPARATOR CHARACTER
   981					;WSF -- WORD SEPARATOR
   982					;NNUMF -- NOT A NUMBER
   983					;OPERF -- OPERATOR
   984					
   985						;FLAGS--BYTE ONE		NUMBER--BYTE TWO
   986					;	FSF FOF FQF SEPF WSF NNUMF OPERF	#
   987					;^@	.   .   .   .    .   NNUMF .    	.
   988					;^A	.   .   .   .    .   NNUMF .    	.
   989					;^B	.   FOF .   .    .   NNUMF .    	0
   990					;^C	FSF .   .   .    .   NNUMF .    	0
   991					;^D	FSF .   .   .    .   NNUMF .    	2
   992					;^E	.   .   .   .    .   NNUMF .    	.
   993					;^F	.   .   .   .    .   NNUMF .    	.
   994					;^G	FSF FOF .   .    .   NNUMF .    	4
   995					;^H	.   FOF .   .    .   NNUMF .    	2
   996					;^I	.   FOF .   SEPF WSF NNUMF .    	10
   997					;^J	.   FOF .   SEPF WSF NNUMF .    	12
   998					;^K	.   FOF .   SEPF WSF NNUMF .    	14
   999					;^L	.   FOF .   SEPF WSF NNUMF .    	16
  1000					;^M	FSF FOF .   SEPF WSF NNUMF .    	6
  1001					;^N	FSF .   .   .    .   NNUMF .    	10
  1002					;^O	.   .   .   .    .   NNUMF .    	.
  1003					;^P	.   .   .   .    .   NNUMF .    	.
  1004					;^Q	FSF .   .   .    .   NNUMF .    	12
  1005					;^R	FSF .   .   .    .   NNUMF .    	14
  1006					;^S	FSF .   .   .    .   NNUMF .    	16
  1007					;^T	.   .   .   .    .   NNUMF .    	.
  1008					;^U	.   .   .   .    .   NNUMF .    	.
  1009					;^V	.   .   .   .    .   NNUMF .    	.
  1010					;^W	FSF .   .   .    .   NNUMF .    	20
  1011					;^X	FSF .   .   .    .   NNUMF .    	22
  1012					;^Y	FSF .   .   .    .   NNUMF .    	24
  1013					;^Z	FSF .   .   .    .   NNUMF .    	26
  1014					;^[	.   .   .   .    .   NNUMF .    	.
  1015					;^\	.   .   .   .    .   NNUMF .    	.
  1016					;^]	.   .   .   .    .   NNUMF .    	.
  1017					;^^	.   .   .   .    .   NNUMF .    	.
  1018					;^_	.   .   .   .    .   NNUMF .    	.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 34
	SYSTEM 323	PAGE 27 	DISPATCH TABLE (ENGLISH)

  1019					
  1020					;SP	.   .   .   SEPF WSF NNUMF .    	.
  1021					;!	.   .   .   .    .   NNUMF .    	.
  1022					;"	.   .   .   SEPF .   NNUMF .    	.
  1023					;#	.   .   .   SEPF .   NNUMF OPERF	HAS$
  1024					;$	.   .   .   .    .   NNUMF .    	.
  1025					;%	.   .   .   .    .   NNUMF .    	.
  1026					;&	.   .   .   .    .   NNUMF .    	.
  1027					;'	.   .   .   SEPF .   NNUMF .    	.
  1028					;(	.   .   .   SEPF .   NNUMF OPERF	LP$
  1029					;)	.   .   .   SEPF .   NNUMF OPERF	RP$
  1030					;*	.   .   .   SEPF .   NNUMF OPERF	PRD$
  1031					;+	.   .   .   SEPF .   NNUMF OPERF	PLU$
  1032					;,	.   .   .   .    .   NNUMF .    	.
  1033					;-	.   .   .   SEPF .   NNUMF OPERF	MIN$
  1034					;.	.   .   .   .    .   NNUMF .    	.
  1035					;/	.   .   .   SEPF .   NNUMF OPERF	DIV$
  1036					;0	.   .   .   .    .   .     .    	.
  1037					;1	.   .   .   .    .   .     .    	.
  1038					;2	.   .   .   .    .   .     .    	.
  1039					;3	.   .   .   .    .   .     .    	.
  1040					;4	.   .   .   .    .   .     .    	.
  1041					;5	.   .   .   .    .   .     .    	.
  1042					;6	.   .   .   .    .   .     .    	.
  1043					;7	.   .   .   .    .   .     .    	.
  1044					;8.	.   .   .   .    .   .     .    	.
  1045					;9.	.   .   .   .    .   .     .    	.
  1046					;:	.   .   .   SEPF .   NNUMF OPERF	DOTS$
  1047					;;	.   .   .   SEPF .   NNUMF .    	.
  1048					;<	.   .   .   SEPF .   NNUMF OPERF	LSS$
  1049					;=	.   .   .   SEPF .   NNUMF OPERF	EQL$
  1050					;>	.   .   .   SEPF .   NNUMF OPERF	GTR$
  1051					;?	.   .   .   .    .   NNUMF .    	.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 35
	SYSTEM 323	PAGE 28 	DISPATCH TABLE (ENGLISH)

  1052					
  1053					;@	.   .   .   .    .   NNUMF .    	.
  1054					;A	.   .   .   .    .   NNUMF .    	.
  1055					;B	.   .   .   .    .   NNUMF .    	.
  1056					;C	.   .   .   .    .   NNUMF .    	.
  1057					;D	.   .   .   .    .   NNUMF .    	.
  1058					;E	.   .   .   .    .   NNUMF .    	.
  1059					;F	.   .   .   .    .   NNUMF .    	.
  1060					;G	.   .   .   .    .   NNUMF .    	.
  1061					;H	.   .   .   .    .   NNUMF .    	.
  1062					;I	.   .   .   .    .   NNUMF .    	.
  1063					;J	.   .   .   .    .   NNUMF .    	.
  1064					;K	.   .   .   .    .   NNUMF .    	.
  1065					;L	.   .   .   .    .   NNUMF .    	.
  1066					;M	.   .   .   .    .   NNUMF .    	.
  1067					;N	.   .   .   .    .   NNUMF .    	.
  1068					;O	.   .   .   .    .   NNUMF .    	.
  1069					;P	.   .   .   .    .   NNUMF .    	.
  1070					;Q	.   .   .   .    .   NNUMF .    	.
  1071					;R	.   .   .   .    .   NNUMF .    	.
  1072					;S	.   .   .   .    .   NNUMF .    	.
  1073					;T	.   .   .   .    .   NNUMF .    	.
  1074					;U	.   .   .   .    .   NNUMF .    	.
  1075					;V	.   .   .   .    .   NNUMF .    	.
  1076					;W	.   .   .   .    .   NNUMF .    	.
  1077					;X	.   .   .   .    .   NNUMF .    	.
  1078					;Y	.   .   .   .    .   NNUMF .    	.
  1079					;Z	.   .   .   .    .   NNUMF .    	.
  1080					;[	.   .   FQF SEPF WSF NNUMF .    	0
  1081					;\	.   .   .   .    .   NNUMF .    	.
  1082					;]	.   .   FQF SEPF WSF NNUMF .    	2
  1083					;^	.   .   .   SEPF .   NNUMF OPERF	BKSL$
  1084					;_	.   .   .   SEPF .   NNUMF .    	.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 36
	SYSTEM 323	PAGE 29 	DISPATCH TABLE (ENGLISH)

  1085					
  1086					;`	.   .   .   .    .   NNUMF .    	.
  1087					;a	.   .   .   .    .   NNUMF .    	.
  1088					;b	.   .   .   .    .   NNUMF .    	.
  1089					;c	.   .   .   .    .   NNUMF .    	.
  1090					;d	.   .   .   .    .   NNUMF .    	.
  1091					;e	.   .   .   .    .   NNUMF .    	.
  1092					;f	.   .   .   .    .   NNUMF .    	.
  1093					;g	.   .   .   .    .   NNUMF .    	.
  1094					;h	.   .   .   .    .   NNUMF .    	.
  1095					;i	.   .   .   .    .   NNUMF .    	.
  1096					;j	.   .   .   .    .   NNUMF .    	.
  1097					;k	.   .   .   .    .   NNUMF .    	.
  1098					;l	.   .   .   .    .   NNUMF .    	.
  1099					;m	.   .   .   .    .   NNUMF .    	.
  1100					;n	.   .   .   .    .   NNUMF .    	.
  1101					;o	.   .   .   .    .   NNUMF .    	.
  1102					;p	.   .   .   .    .   NNUMF .    	.
  1103					;q	.   .   .   .    .   NNUMF .    	.
  1104					;r	.   .   .   .    .   NNUMF .    	.
  1105					;s	.   .   .   .    .   NNUMF .    	.
  1106					;t	.   .   .   .    .   NNUMF .    	.
  1107					;u	.   .   .   .    .   NNUMF .    	.
  1108					;v	.   .   .   .    .   NNUMF .    	.
  1109					;w	.   .   .   .    .   NNUMF .    	.
  1110					;x	.   .   .   .    .   NNUMF .    	.
  1111					;y	.   .   .   .    .   NNUMF .    	.
  1112					;z	.   .   .   .    .   NNUMF .    	.
  1113					;{	.   .   .   .    .   NNUMF .    	.
  1114					;|	.   .   .   .    .   NNUMF .    	.
  1115					;}	.   .   .   .    .   NNUMF .    	.
  1116					;~	.   .   .   .    .   NNUMF .    	.
  1117					;RBO	FSF .   .   .    .   NNUMF .    	30
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 37
	SYSTEM 323	PAGE 30 	DISPATCH TABLE (ENGLISH)

  1118					
  1119						.STITLE SYSTEM DISPATCH TABLE (BYTE ONE)
  1120					
  1121					;FLAG DEFINITIONS
  1122		000200			FSF==200	;SPECIAL INPUT
  1123		000100			FOF==100	;SPECIAL OUTPUT
  1124		000020			FQF==20		;QUOTING
  1125		000004			SEPF==4		;SEPARATOR
  1126		000002			WSF==2		;WORD SEPARATOR
  1127		000040			NNUMF==40	;NOT A NUMBER
  1128		000010			OPERF==10	;OPERATOR
  1129					
  1130					DTBL:
  1131	006120	   040		
  1132	006121	   040			.BYTE	NNUMF,NNUMF		;^@	;^A
  1133	006122	   140		
  1134	006123	   240			.BYTE	FOF!NNUMF,FSF!NNUMF	;^B	ECHOES AS BLANK	;^C	COPYS NEXT CHARACTER
  1135	006124	   240		
  1136	006125	   040			.BYTE	FSF!NNUMF,NNUMF		;^D	DELETES NEXT CHARACTER	;^E
  1137	006126	   040		
  1138	006127	   340			.BYTE	NNUMF,FSF!FOF!NNUMF	;^F	;^G	BREAK
  1139	006130	   140		
  1140	006131	   146			.BYTE	FOF!NNUMF,FOF!SEPF!WSF!NNUMF	;^H	BACKSPACE	;^I	TABULATE
  1141	006132	   146		
  1142	006133	   146			.BYTE	FOF!SEPF!WSF!NNUMF,FOF!SEPF!WSF!NNUMF	;^J	LINE FEED	;^K	TABULATE VERTICALLY
  1143	006134	   146		
  1144	006135	   346			.BYTE	FOF!SEPF!WSF!NNUMF,FSF!FOF!SEPF!WSF!NNUMF	;^L	FORM FEED	;^M	CARRIAGE RETURN	ECHOES AS CARRIAGE RETURN LINE FEED
  1145	006136	   240		
  1146	006137	   040			.BYTE	FSF!NNUMF,NNUMF		;^N	GET NEXT WORD	;^O
  1147	006140	   040		
  1148	006141	   240			.BYTE	NNUMF,FSF!NNUMF		;^P	;^Q	SUPER-QUOTE
  1149	006142	   240		
  1150	006143	   240			.BYTE	FSF!NNUMF,FSF!NNUMF	;^R	COPY REST OF LINE	;^S	SKIP NEXT WORD
  1151	006144	   040		
  1152	006145	   040			.BYTE	NNUMF,NNUMF		;^T	;^U
  1153	006146	   040		
  1154	006147	   240			.BYTE	NNUMF,FSF!NNUMF		;^V	;^W	ERASE LAST WORD
  1155	006150	   240		
  1156	006151	   240			.BYTE	FSF!NNUMF,FSF!NNUMF	;^X	CLARIFY INPUT	;^Y	EDIT PREVIOUS LINE
  1157	006152	   240		
  1158	006153	   040			.BYTE	FSF!NNUMF,NNUMF		;^Z	DESTROY INPUT BUFFER	;^[	MAYBE ALTMODE
  1159	006154	   040		
  1160	006155	   040			.BYTE	NNUMF,NNUMF		;^\	;^]
  1161	006156	   040		
  1162	006157	   040			.BYTE	NNUMF,NNUMF		;^^	;^_	WELL, ANY BETTER IDEAS FOR THEM?
  1163	006160	   046		
  1164	006161	   040			.BYTE	SEPF!WSF!NNUMF,NNUMF	;SP	;!	?????
  1165	006162	   044		
  1166	006163	   054			.BYTE	SEPF!NNUMF,SEPF!NNUMF!OPERF	;"	;#	ACTION OF
  1167	006164	   040		
  1168	006165	   040			.BYTE	NNUMF,NNUMF		;$	;%
  1169	006166	   040		
  1170	006167	   050			.BYTE	NNUMF,NNUMF!OPERF	;&	;'	(MAYBE LE)
  1171	006170	   054		
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 38
	SYSTEM 323	PAGE 30.1 	SYSTEM DISPATCH TABLE (BYTE ONE)

  1172	006171	   054			.BYTE	SEPF!NNUMF!OPERF,SEPF!NNUMF!OPERF	;(	ARITHMETIC GROUPING	;)	DITTO
  1173	006172	   054		
  1174	006173	   054			.BYTE	SEPF!NNUMF!OPERF,SEPF!NNUMF!OPERF	;*	MULTIPLY	;+	ADD
  1175	006174	   040		
  1176	006175	   054			.BYTE	NNUMF,SEPF!NNUMF!OPERF	;,	;-	SUBTRACT
  1177	006176	   040		
  1178	006177	   054			.BYTE	NNUMF,SEPF!NNUMF!OPERF	;.	;/	DIVIDE
  1179	006200	   000		
  1180	006201	   000			.BYTE	0,0	;0	;1
  1181	006202	   000		
  1182	006203	   000			.BYTE	0,0	;2	;3
  1183	006204	   000		
  1184	006205	   000			.BYTE	0,0	;4	;5
  1185	006206	   000		
  1186	006207	   000			.BYTE	0,0	;6	;7
  1187	006210	   000		
  1188	006211	   000			.BYTE	0,0	;8.	;9.
  1189	006212	   054		
  1190	006213	   044			.BYTE	SEPF!NNUMF!OPERF,SEPF!NNUMF	;:	THING OF	;;	PROPERTY OF
  1191	006214	   054		
  1192	006215	   054			.BYTE	SEPF!NNUMF!OPERF,SEPF!NNUMF!OPERF	;<	;=
  1193	006216	   054		
  1194	006217	   040			.BYTE	SEPF!NNUMF!OPERF,NNUMF	;>	;?
  1195	006220	   040		
  1196	006221	   040			.BYTE	NNUMF,NNUMF		;@	;A
  1197	006222	   040		
  1198	006223	   040			.BYTE	NNUMF,NNUMF		;B	;C
  1199	006224	   040		
  1200	006225	   040			.BYTE	NNUMF,NNUMF		;D	;E
  1201	006226	   040		
  1202	006227	   040			.BYTE	NNUMF,NNUMF		;F	;G
  1203	006230	   040		
  1204	006231	   040			.BYTE	NNUMF,NNUMF		;H	;I
  1205	006232	   040		
  1206	006233	   040			.BYTE	NNUMF,NNUMF		;J	;K
  1207	006234	   040		
  1208	006235	   040			.BYTE	NNUMF,NNUMF		;L	;M
  1209	006236	   040		
  1210	006237	   040			.BYTE	NNUMF,NNUMF		;N	;O
  1211	006240	   040		
  1212	006241	   040			.BYTE	NNUMF,NNUMF		;P	;Q
  1213	006242	   040		
  1214	006243	   040			.BYTE	NNUMF,NNUMF		;R	;S
  1215	006244	   040		
  1216	006245	   040			.BYTE	NNUMF,NNUMF		;T	;U
  1217	006246	   040		
  1218	006247	   040			.BYTE	NNUMF,NNUMF		;V	;W
  1219	006250	   040		
  1220	006251	   040			.BYTE	NNUMF,NNUMF		;X	;Y
  1221	006252	   040		
  1222	006253	   066			.BYTE	NNUMF,FQF!SEPF!WSF!NNUMF	;Z	;[
  1223	006254	   040		
  1224	006255	   066			.BYTE	NNUMF,FQF!SEPF!WSF!NNUMF	;\	LOGICAL OR	;]
  1225	006256	   054		
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 39
	SYSTEM 323	PAGE 30.2 	SYSTEM DISPATCH TABLE (BYTE ONE)

  1226	006257	   044			.BYTE	SEPF!NNUMF!OPERF,SEPF!NNUMF	;^	EXPONENTIATE, MAYBE	;_	MAKE
  1227	006260	   040		
  1228	006261	   040			.BYTE	NNUMF,NNUMF		;`	GRAVE ACCENT. LOOK THAT UP ON YOUR TELTERM.	;a	LOWER CASE
  1229	006262	   040		
  1230	006263	   040			.BYTE	NNUMF,NNUMF		;b	LOWER CASE	;c	LOWER CASE
  1231	006264	   040		
  1232	006265	   040			.BYTE	NNUMF,NNUMF		;d	LOWER CASE	;e	LOWER CASE
  1233	006266	   040		
  1234	006267	   040			.BYTE	NNUMF,NNUMF		;f	LOWER CASE	;g	LOWER CASE
  1235	006270	   040		
  1236	006271	   040			.BYTE	NNUMF,NNUMF		;h	LOWER CASE	;i	LOWER CASE
  1237	006272	   040		
  1238	006273	   040			.BYTE	NNUMF,NNUMF		;j	LOWER CASE	;k	LOWER CASE
  1239	006274	   040		
  1240	006275	   040			.BYTE	NNUMF,NNUMF		;l	LOWER CASE	;m	LOWER CASE
  1241	006276	   040		
  1242	006277	   040			.BYTE	NNUMF,NNUMF		;n	LOWER CASE	;o	LOWER CASE
  1243	006300	   040		
  1244	006301	   040			.BYTE	NNUMF,NNUMF		;p	LOWER CASE	;q	LOWER CASE
  1245	006302	   040		
  1246	006303	   040			.BYTE	NNUMF,NNUMF		;r	LOWER CASE	;s	LOWER CASE
  1247	006304	   040		
  1248	006305	   040			.BYTE	NNUMF,NNUMF		;t	LOWER CASE	;u	LOWER CASE
  1249	006306	   040		
  1250	006307	   040			.BYTE	NNUMF,NNUMF		;v	LOWER CASE	;w	LOWER CASE
  1251	006310	   040		
  1252	006311	   040			.BYTE	NNUMF,NNUMF		;x	LOWER CASE	;y	LOWER CASE
  1253	006312	   040		
  1254	006313	   040			.BYTE	NNUMF,NNUMF		;Z	LOWER CASE	;LEFT BRACE
  1255	006314	   040		
  1256	006315	   040			.BYTE	NNUMF,NNUMF		;VERTICAL BAR	;RIGHT BRACE
  1257	006316	   040		
  1258	006317	   240			.BYTE	NNUMF,FSF!NNUMF		;TILDE	;RUBOUT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 40
	SYSTEM 323	PAGE 31 	SYSTEM DISPATCH TABLE (BYTE ONE)

  1259					
  1260						.STITLE SYSTEM DISPATCH TABLE (BYTE TWO)
  1261					;NUMBERS POINT TO OTHER TABLES
  1262					;$ POINTS TO SYSTEM OBLIST
  1263					
  1264					DTBL2:
  1265	006320	   000		
  1266	006321	   000			.BYTE	0,0		;^@				;^A
  1267	006322	   000		
  1268	006323	   000			.BYTE	0,0		;^B	ECHOES AS BLANK		;^C	COPYS NEXT CHARACTER
  1269	006324	   002		
  1270	006325	   000			.BYTE	2,0		;^D	DELETES NEXT CHARACTER	;^E
  1271	006326	   000		
  1272	006327	   004			.BYTE	0,4		;^F				;^G	BREAK
  1273	006330	   002		
  1274	006331	   010			.BYTE	2,10		;^H	BACKSPACE		;^I	TABULATE
  1275	006332	   012		
  1276	006333	   014			.BYTE	12,14		;^J	LINE FEED		;^K	TABULATE VERTICALLY
  1277	006334	   016		
  1278	006335	   006			.BYTE	16,6		;^L	FORM FEED		;^M	CARRIAGE RETURN	ECHOES AS CARRIAGE RETURN LINE FEED
  1279	006336	   010		
  1280	006337	   000			.BYTE	10,0		;^N	GET NEXT WORD		;^O
  1281	006340	   000		
  1282	006341	   012			.BYTE	0,12		;^P				;^Q	SUPER-QUOTE
  1283	006342	   014		
  1284	006343	   016			.BYTE	14,16		;^R				;^S	SKIP NEXT WORD
  1285	006344	   000		
  1286	006345	   000			.BYTE	0,0		;^T	;^U
  1287	006346	   000		
  1288	006347	   020			.BYTE	0,20		;^V	;^W	ERASE LAST WORD
  1289	006350	   022		
  1290	006351	   024			.BYTE	22,24		;^X	CLARIFY INPUT	;^Y
  1291	006352	   026		
  1292	006353	   000			.BYTE	26,0		;^Z	DESTROY INPUT BUFFER	;^[	MAYBE ALTMODE
  1293	006354	   000		
  1294	006355	   000			.BYTE	0,0		;^\	;^]
  1295	006356	   000		
  1296	006357	   000			.BYTE	0,0		;^^	;^_	WELL, ANY BETTER IDEAS FOR THEM?
  1297	006360	   000		
  1298	006361	   000			.BYTE	0,0		;SP	;!	?????
  1299	006362	   000		
  1300	006363	   002			.BYTE	0,HAS$		;"	;#	ACTION OF
  1301	006364	   000		
  1302	006365	   000			.BYTE	0,0		;$	;%
  1303	006366	   000		
  1304	006367	   000			.BYTE	0,0		;&	;'	(MAYBE LE)
  1305	006370	   003		
  1306	006371	   004			.BYTE	LP$,RP$		;(	ARITHMETIC GROUPING	;)	DITTO
  1307	006372	   005		
  1308	006373	   006			.BYTE	PRD$,PLU$	;*	MULTIPLY	;+	ADD
  1309	006374	   000		
  1310	006375	   010			.BYTE	0,MIN$		;,	;-	SUBTRACT
  1311	006376	   000		
  1312	006377	   012			.BYTE	0,DIV$		;.	;/	DIVIDE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 41
	SYSTEM 323	PAGE 31.1 	SYSTEM DISPATCH TABLE (BYTE TWO)

  1313	006400	   000		
  1314	006401	   000			.BYTE	0,0		;0	;1
  1315	006402	   000		
  1316	006403	   000			.BYTE	0,0		;2	;3
  1317	006404	   000		
  1318	006405	   000			.BYTE	0,0		;4	;5
  1319	006406	   000		
  1320	006407	   000			.BYTE	0,0		;6	;7
  1321	006410	   000		
  1322	006411	   000			.BYTE	0,0		;8.	;9.
  1323	006412	   013		
  1324	006413	   000			.BYTE	DOTS$,0		;:	THING OF	;;	PROPERTY OF
  1325	006414	   014		
  1326	006415	   015			.BYTE	LSS$,EQL$	;<	;=
  1327	006416	   016		
  1328	006417	   000			.BYTE	GTR$,0		;>	;?
  1329	006420	   000		
  1330	006421	   000			.BYTE	0,0		;@	;A
  1331	006422	   000		
  1332	006423	   000			.BYTE	0,0		;B	;C
  1333	006424	   000		
  1334	006425	   000			.BYTE	0,0		;D	;E
  1335	006426	   000		
  1336	006427	   000			.BYTE	0,0		;F	;G
  1337	006430	   000		
  1338	006431	   000			.BYTE	0,0		;H	;I
  1339	006432	   000		
  1340	006433	   000			.BYTE	0,0		;J	;K
  1341	006434	   000		
  1342	006435	   000			.BYTE	0,0		;L	;M
  1343	006436	   000		
  1344	006437	   000			.BYTE	0,0		;N	;O
  1345	006440	   000		
  1346	006441	   000			.BYTE	0,0		;P	;Q
  1347	006442	   000		
  1348	006443	   000			.BYTE	0,0		;R	;S
  1349	006444	   000		
  1350	006445	   000			.BYTE	0,0		;T	;U
  1351	006446	   000		
  1352	006447	   000			.BYTE	0,0		;V	;W
  1353	006450	   000		
  1354	006451	   000			.BYTE	0,0		;X	;Y
  1355	006452	   000		
  1356	006453	   000			.BYTE	0,0		;Z	;[
  1357	006454	   000		
  1358	006455	   002			.BYTE	0,2		;\	LOGICAL OR	;]
  1359	006456	   017		
  1360	006457	   000			.BYTE	BKSL$,0		;^	TEMPORARILY MODULO (MAYBE EXPONENTIATE)	;_	MAKE
  1361	006460	   000		
  1362	006461	   000			.BYTE	0,0		;`	GRAVE ACCENT. LOOK THAT UP ON YOUR TELTERM.	;a	LOWER CASE
  1363	006462	   000		
  1364	006463	   000			.BYTE	0,0		;b	LOWER CASE	;c	LOWER CASE
  1365	006464	   000		
  1366	006465	   000			.BYTE	0,0		;d	LOWER CASE	;e	LOWER CASE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 42
	SYSTEM 323	PAGE 31.2 	SYSTEM DISPATCH TABLE (BYTE TWO)

  1367	006466	   000		
  1368	006467	   000			.BYTE	0,0		;f	LOWER CASE	;g	LOWER CASE
  1369	006470	   000		
  1370	006471	   000			.BYTE	0,0		;h	LOWER CASE	;i	LOWER CASE
  1371	006472	   000		
  1372	006473	   000			.BYTE	0,0		;j	LOWER CASE	;k	LOWER CASE
  1373	006474	   000		
  1374	006475	   000			.BYTE	0,0		;l	LOWER CASE	;m	LOWER CASE
  1375	006476	   000		
  1376	006477	   000			.BYTE	0,0		;n	LOWER CASE	;o	LOWER CASE
  1377	006500	   000		
  1378	006501	   000			.BYTE	0,0		;p	LOWER CASE	;q	LOWER CASE
  1379	006502	   000		
  1380	006503	   000			.BYTE	0,0		;r	LOWER CASE	;s	LOWER CASE
  1381	006504	   000		
  1382	006505	   000			.BYTE	0,0		;t	LOWER CASE	;u	LOWER CASE
  1383	006506	   000		
  1384	006507	   000			.BYTE	0,0		;v	LOWER CASE	;w	LOWER CASE
  1385	006510	   000		
  1386	006511	   000			.BYTE	0,0		;x	LOWER CASE	;y	LOWER CASE
  1387	006512	   000		
  1388	006513	   000			.BYTE	0,0		;z	LOWER CASE	;{	OPEN BRACE
  1389	006514	   000		
  1390	006515	   000			.BYTE	0,0		;|	VERTICAL BAR, MAYBE OR, MAYBE XOR	;}	CLOSE BRACE
  1391	006516	   000		
  1392	006517	   030			.BYTE	0,30		;~	TILDE, LOGICAL NOT	;RBO	RUBOUT????
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 43
	SYSTEM 323	PAGE 32 	LOSS CHECKING ROUTINES

  1393						.STITL LOSS CHECKING ROUTINES
  1394					
  1395	006520	005227	177774		IOTBRK:	INC #-4
  1396		006522			LOSSCT=.-2
  1397	006524	003074				BGT LOSER
  1398						SPUSH A
  1399						SPUSH USER
  1400	006534	012767	177777	172750		MOV #-1,USER
  1401						PRCR
  1402						PRTXT ^/BAD TRAP--VECTOR /
  1403	006574	016600	000006			MOV 6(SP),A
  1404	006600	162700	000004			SUB #4,A	;MAKE IT REAL
  1405	006604	022700	000004			CMP #BEBRV,A	;IS IT A BUS ERROR?
  1406	006610	001431				BEQ BUSSER
  1407	006612	004767	025370			JSR PC,PRON
  1408						PRTXT ^/ TRAPPED FROM /
  1409	006642	016600	000012			MOV 12(SP),A
  1410	006646	004767	025334			JSR PC,PRON
  1411						PRCR
  1412						SPOP USER
  1413						SPOP A
  1414	006664	062706	000004			ADD #4,SP
  1415	006670	000002				RTI
  1416	006672	000000			EMTBRK:	HALT
  1417					BUSSER:	PRTXT ^/BUSS ERROR!!!/
  1418					LOSER:	PRTXT ^/I GIVE UP!!/
  1419	006736	000000				HALT
  1420	006740	000776				BR .-2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 44
	SYSTEM 323	PAGE 33 	DISK STARTER

  1421						.STITL DISK STARTER
  1422					
  1423					
  1424					
  1425	006742	012700	014010		DSKSRT:	MOV #DCRDRB,A	;CHECK FOR DC11 RECIEVE FIRST
  1426	006746	005760	000014			TST 14(A)
  1427	006752	001020				BNE DSKSGO
  1428	006754	012700	001776			MOV #SYSWPR,A	;NEXT LOOK AT SYSTEM REQUESTS
  1429	006760	105760	000014		DSKSR1:	TSTB 14(A)	;IS THE FUNCTION NON ZERO?
  1430	006764	001013				BNE DSKSGO	;FOUND A REQUEST, GO DO IT
  1431	006766	062700	000016			ADD #16,A	;LOOK AT NEXT BLOCK
  1432	006772	022700	002212			CMP #16*MNUSRS+SYSWPR,A	;LAST BLOCK?
  1433	006776	003370				BGT DSKSR1
  1434	007000	016700	172542			MOV SWPLST,A	;MOOBY SWAP OUT REQS?
  1435	007004	001003				BNE DSKSGO
  1436	007006	005067	170446			CLR DSKS
  1437	007012	000207				RTS PC	;NO DISK REQUESTS EXTANT, BETTER LUCK NEXT TIME
  1438					
  1439	007014	010067	173172		DSKSGO:	MOV A,DSKCRB	;ADDRESS OF BLOCK ABOUT TO BE SERVICED
  1440	007020	011001				MOV (A),B
  1441	007022	001401				BEQ .+4	;BRANCH IF NO
  1442	007024	004711				JSR PC,(B)	;RUN START ROUTINE
  1443	007026	005720			DSKSG1:	TST (A)+
  1444	007030	012701	177462			MOV #DSKWC,B	;START OF DISK I/O WORDS
  1445	007034	012021				MOV (A)+,(B)+	;WORD COUNT
  1446	007036	012011				MOV (A)+,(B)	;CORE ADDRESS
  1447	007040	062721	000002			ADD #2,(B)+	;GODFORSAKEN DEC!!!!!
  1448	007044	012021				MOV (A)+,(B)+	;LOW ORDER DISK ADDRESS
  1449	007046	012021				MOV (A)+,(B)+	;HIGH "      "     "
  1450	007050	005720				TST (A)+	;GO PAST UNUSED WORD
  1451	007052	111067	170402			MOVB (A),DSKS	;SET FUCTION, ENABLE INTERUPT, GO!!
  1452	007056	000207				RTS PC
  1453					
  1454					
  1455					DPROVK:	SPUSH PS
  1456	007064	012767	000340	170704		MOV #340,PS
  1457	007072	022767	000200	170360		CMP #200,DSKS	;IF THE INTERUPT IS OFF AND THE DISK IS READY
  1458	007100	001006				BNE DSKSG2	;PROVOKE IT; OTHERWISE LEAVE IT FOR SOMEONE ELSE
  1459						SPUSH A
  1460						SPUSH B
  1461	007106	004767	177630			JSR PC,DSKSRT
  1462						SPOP B
  1463						SPOP A
  1464					DSKSG2:	SPOP PS
  1465	007122	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 45
	SYSTEM 323	PAGE 34 	DISK REQUEST BLOCK GRABBER

  1466					.STITL DISK REQUEST BLOCK GRABBER
  1467					
  1468					SYDRBG:	SPUSH PS	;SAVE OLD PROSSESOR LEVEL
  1469	007130	012767	000340	170640		MOV #340,PS	;LOCK OUT INTERUPTS
  1470	007136	012700	001776			MOV #SYSWPR,A	;LOOK FOR A FREE SYSTEM DISK REQUEST BLOCK
  1471	007142	005760	000014		SDRBG1:	TST 14(A)	;IS IT FREE?
  1472	007146	001411				BEQ SDRBG2
  1473	007150	062700	000016			ADD #16,A	;LOOK AT NEXT ONE
  1474	007154	022700	002212			CMP #16*MNUSRS+SYSWPR,A	;ANY MORE?
  1475	007160	003370				BGT SDRBG1	;YES, SEE IF FREE
  1476						SPOP PS	;NO MORE, WE HAVE LOST BIG
  1477	007166	000001				WAIT	;THIS WILL PROBABLY NOT DO ANY GOOD
  1478	007170	000755				BR SYDRBG	;AND CERTAINLY WON'T UNLESS OUR PRIORITY IS <5
  1479	007172	016760	173112	000014	SDRBG2:	MOV DUSECT,14(A)	;LABEL BLOCK AS IN USE, BUT NO REQUEST
  1480	007200	105267	173105			INCB DUSECT+1	;SO PEOPLE CAN DISTINGUISH
  1481						SPOP PS	;YOU CAN INTERUPT NOW.
  1482	007210	000207				RTS PC
  1483					
  1484					
  1485					;USER ROUTINE TO FLUSH UNTIL DISK REQUEST POINTED TO BY A DONE
  1486					
  1487	007212	062700	000014		DSKWA2:	ADD #14,A
  1488	007216	016705	172270		DSKWAI:	MOV USER,U
  1489	007222	011001				MOV (A),B
  1490	007224	020110			DSKWA1:	CMP B,(A)
  1491	007226	001403				BEQ DNDONE
  1492	007230	004767	000422			JSR PC,RUNME
  1493	007234	000207				RTS PC
  1494	007236	012765	000003	002470	DNDONE:	MOV #FRDSKW,FLSRES(U)
  1495	007244	004767	001340			JSR PC,FLUSH
  1496	007250	000765				BR DSKWA1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 46
	SYSTEM 323	PAGE 35 	DISK REQUEST BLOCK GRABBER

  1497					
  1498	007252	012700	003614		UBLKGR:	MOV #DBITTB,A	;USERS BIT TABLE ADDR
  1499	007256	012701	003652			MOV #DBITBE,B
  1500	007262	012703	002536			MOV #UNXTDB,D	;POINTER TO ADDR OF NEXT AWAILABLE BLOCK
  1501	007266	066703	172220			ADD USER,D
  1502	007272	012704	003652			MOV #DBITBE,E	;END OF USERS BIT TABLE
  1503	007276	005005				CLR F	;DISK ISN'T NEARLY FULL
  1504	007300	032767	001000	174264		BIT #DSAMFL,FLAGS2	;IS THE DISK ALLMOST FULL?
  1505	007306	001401				BEQ .+4	;NO
  1506	007310	005205				INC F	;YES
  1507	007312	004767	000050			JSR PC,BLKGRB	;GO DO GOOD THINGS
  1508	007316	000207				RTS PC	;DISK REALLY FULL
  1509	007320	005705				TST F	;IS DISK NEARLY FULL?
  1510	007322	001403				BEQ UBLKG1	;NO, SKIP RETURN
  1511	007324	052767	001000	174240		BIS #DSAMFL,FLAGS2	;YES WARN THE WORLD.
  1512	007332	000167	040574		UBLKG1:	JMP SRET	;WIN ANYWAY, SKIP RETURN
  1513					
  1514	007336	012704	003614		UBLKFR:	MOV #DBITTB,E
  1515	007342	016701	172144			MOV USER,B
  1516	007346	016103	002542			MOV UDSKAD(B),D
  1517	007352	004767	000146			JSR PC,BLKFRE
  1518	007356	042767	001000	174206		BIC #DSAMFL,FLAGS2	;DISK NOW SURELY HAS A FREE BLOCK
  1519	007364	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 47
	SYSTEM 323	PAGE 36 	DISK REQUEST BLOCK GRABBER

  1520					
  1521					;GRABS A DISK BLOCK AND A REQUEST BLOCK
  1522					;REQUEST BLOCK ADDR RETURNS IN A
  1523					;DISK BLOCK ADDR RETURNS IN B AND C
  1524					;ARGS:  BEGINNING OF BIT TABLE IN A
  1525					;END OF BIT TABLE IN B
  1526					;ADDR OF NEXT BLOCK WORDS IN D
  1527					;DISK ALMOST FULL FLAG IN F
  1528	007366	005002			BLKGRB:	CLR C
  1529	007370	012704	000001		BLKGR3:	MOV #1,E
  1530	007374	030410			BLKGR2:	BIT E,(A)	;IS THIS BLOCK FREE?
  1531	007376	001413				BEQ BLKGR5	;YES, PRAISE THE LORD!
  1532	007400	005202				INC C	;NO, TRY THE NEXT BLOCK
  1533	007402	006304				ASL E
  1534	007404	103373				BCC BLKGR2	;NO OVERFLOW?
  1535	007406	005720				TST (A)+	;NEXT WORD
  1536	007410	020001				CMP A,B	;AT END OF THE TABLE
  1537	007412	003766				BLE BLKGR3	;CONTINUE
  1538	007414	005705				TST F	;NO BLOCK AVAILABLE, ARE WE REAL FULL?
  1539	007416	001401				BEQ BLKGR4	;NO, BUT CLOSE
  1540	007420	000207				RTS PC	;YES, VERY FULL
  1541	007422	005205			BLKGR4:	INC F	;DISK ALMOST FULL
  1542	007424	000402				BR BLKGR6
  1543	007426	050410			BLKGR5:	BIS E,(A)	;THAT BLOCK IS NO LONGER FREE
  1544	007430	005005				CLR F	;AND THE DISK  ISN'T NEARLY FULL
  1545	007432	004767	177466		BLKGR6:	JSR PC,SYDRBG	;GET A DISK REQUEST BLOCK
  1546	007436	012760	177600	000002		MOV #-200,2(A)	;ALL BLOCKS ARE THIS LONG
  1547	007444	011360	000006			MOV (D),6(A)	;NEXT AVAILABLE BLOCK
  1548	007450	016360	000002	000010		MOV 2(D),10(A)
  1549						SPUSH (D)
  1550						SPUSH 2(D)
  1551	007464	000302				SWAB C	;MULTIPLY BY 200
  1552	007466	006202				ASR C
  1553	007470	042702	100000			BIC #100000,C
  1554	007474	016363	000006	000002		MOV 6(D),2(D)	;LOW ORDER BASE ADDR
  1555	007502	066302	000004			ADD 4(D),C	;LOW ORDER BASE ADDR
  1556	007506	005563	000002			ADC 2(D)
  1557	007512	010213				MOV C,(D)
  1558						SPOP C
  1559						SPOP B
  1560	007520	000167	040406			JMP SRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 48
	SYSTEM 323	PAGE 37 	DISK REQUEST BLOCK GRABBER

  1561					
  1562					;FREES THE DISK BLOCK WHOSE LOW ORDER ADDR IS IN C
  1563					;BASE OF THIS DISK SPACE IS IN D
  1564					;ADDRESS OF THE APPRPRIATE BIT TABLE IS IN E
  1565	007524	160302			BLKFRE:	SUB D,C	;RELOCATE DISK ADDR RELATIVE TO ZERO
  1566	007526	012701	000001			MOV #1,B
  1567	007532	032702	000177			BIT #177,C
  1568	007536	001401				BEQ .+4
  1569	007540	000000				HALT
  1570	007542	032702	003777		BLKFR1:	BIT #3777,C	;IS ADDR DIVISABLE BY 20*200?
  1571	007546	001404				BEQ BLKFR2	;YES
  1572	007550	162702	000200			SUB #200,C	;NO, TRY TO MAKE IT BE
  1573	007554	006301				ASL B	;AND GET "REMAINDER" IN B
  1574	007556	000771				BR BLKFR1
  1575	007560	000302			BLKFR2:	SWAB C	;DIVIDE BY 400
  1576	007562	006202				ASR C	;BY 2
  1577	007564	006202				ASR C	;BY 2=>DIVIDED BY 400*2*2=2000=4000/2
  1578	007566	060204				ADD C,E	;GET POINTER INTO BIT TABLE
  1579	007570	040114				BIC B,(E)	;AND FREE THE BLOCK
  1580	007572	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 49
	SYSTEM 323	PAGE 38 	DISK INTERUPT ROUTINE

  1581						.STITL DISK INTERUPT ROUTINE
  1582					
  1583					
  1584					DSKBRK:	SPUSH A
  1585						SPUSH B
  1586	007600	032767	100000	167652		BIT #100000,DSKS	;ANY ERROR BITS SET?
  1587	007606	001015				BNE DSKLOS	;BITE   THE BAG!
  1588	007610	016700	172376			MOV DSKCRB,A	;POINTER TO FUNCTION WORD
  1589	007614	005060	000014			CLR 14(A)	;REQUEST HAS BEEN SERVICED
  1590	007620	011001				MOV (A),B
  1591	007622	001401				BEQ .+4	;NO
  1592	007624	004711				JSR PC,(B)	;YES, GO DO IT
  1593	007626	005010				CLR (A)
  1594	007630	004767	177106		DSKRTY:	JSR PC,DSKSRT	;LOOK FOR SOMETHING ELSE TO DO
  1595					DSKRET:	SPOP B
  1596						SPOP A
  1597	007640	000002				RTI
  1598					
  1599	007642	000000			DSKLOS:	HALT	;DISK LOST BIG
  1600	007644	012767	000400	167606		MOV #400,DSKS	;POWER CLEAR IT
  1601	007652	000000				HALT	;GIVE IT A CHANCE
  1602	007654	000765				BR DSKRTY	;TRY AGAIN(EVENTUALLY)
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 50
	SYSTEM 323	PAGE 39 	SCHEDUALER

  1603						.STITL SCHEDUALER
  1604					
  1605					
  1606	007656	005767	171630		RUNME:	TST USER
  1607	007662	002001				BGE RUNME1
  1608	007664	000207			RUNME2:	RTS PC	;SYSTEM CALLED RUNME
  1609	007666	005765	002472		RUNME1:	TST FLSADR(U)	;IF HE WANTS TO RUN HE SHOULD JSR HERE
  1610	007672	001774				BEQ RUNME2	;IF FLSADR IS ZERO, JUST KEEP RUNNING HIM
  1611	007674	012767	177777	171610		MOV #-1,USER	;SYSTEM IS NOW USER
  1612	007702	004767	002106			JSR PC,UACSAV	;STORE HIS ACS
  1613	007706	005065	002472			CLR FLSADR(U)	;GUY IS NOW RUNABLE
  1614	007712	005065	002470			CLR FLSRES(U)
  1615	007716	005267	171610			INC NRABLU
  1616						SPOP UPC(U)	;HE SHOULD START AFTER THE JSR PC,RUNME
  1617	007726	012700	002214		NEXTU1:	MOV #SLOTST,A	;TRY TO RUN USER IN U
  1618	007732	020520			NEXTU2:	CMP U,(A)+	;IS HE ASSIGNED A SLOT IN CORE?
  1619	007734	001056				BNE NEXTU3	;NOT THIS ONE, ANYWAY
  1620	007736	005710				TST (A)	;IS HE ALL THE WAY IN?
  1621	007740	002425				BLT NEXTUS	;NO CAN'T RUN HIM YET
  1622	007742	001453				BEQ NEXTU3
  1623	007744	022765	000007	002470		CMP #FRNEWU,FLSRES(U)
  1624	007752	001014				BNE NEXT14
  1625	007754	012765	016426	002472		MOV #UGO,FLSADR(U)
  1626	007762	005767	172412			TST RWWSW
  1627	007766	001023				BNE NEXT15
  1628	007770	016002	000042			MOV SLTCAD-SLOTST-2(A),C
  1629	007774	012703	000016			MOV #16,D
  1630	010000	000167	000356			JMP NEXT11
  1631	010004	005065	002470		NEXT14:	CLR FLSRES(U)
  1632	010010	000167	001110			JMP RUNUSR
  1633					
  1634					
  1635					
  1636					;CALL TO GET INDEX OF NEXT USER TO RUN
  1637					
  1638	010014	162767	000056	171472	NEXTUS:	SUB #LUBLK,ULAST	;COUNT BACKWARDS
  1639	010022	002003				BGE .+10	;DON'T GO NEG
  1640	010024	012767	000636	171462		MOV #<MNUSRS-1>*LUBLK,ULAST	;LAST POSSIBLE USER INDEX
  1641	010032	016705	171456			MOV ULAST,U	;SEE IF THIS IS A GOOD GUY TO RUN
  1642	010036	022765	000010	002470	NEXT15:	CMP #FRTYIH,FLSRES(U)
  1643	010044	001763				BEQ NEXTUS
  1644	010046	005765	002472			TST FLSADR(U)	;IF FLSADR IS ZERO, RUNABLE(???)
  1645	010052	001725				BEQ NEXTU1	;RUN HIM.
  1646	010054	002757				BLT NEXTUS	;NEG=>NON EX USER
  1647	010056	010567	171430			MOV U,USER	;USER IS NOW USER
  1648	010062	004767	001754			JSR PC,UACRES	;RESTORE HIS ACS
  1649	010066	000175	002472			JMP @FLSADR(U)	;SEE IF HE SHOULD REALLY RUN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 51
	SYSTEM 323	PAGE 40 	SCHEDUALER

  1650					
  1651					
  1652					
  1653	010072	005720			NEXTU3:	TST (A)+	;EXTANT CORE SLOT?
  1654	010074	001316				BNE NEXTU2	;YES, CHECK NEXT ONE
  1655	010076	016700	171436			MOV PUSPSL,A	;SEE IF THERE IS A PREFERED SLOT
  1656	010102	003031				BGT NEXTU6
  1657	010104	012700	002214			MOV #SLOTST,A
  1658	010110	005720			NEXTU4:	TST (A)+
  1659	010112	005720				TST (A)+
  1660	010114	002775				BLT NEXTU4
  1661	010116	001736				BEQ NEXTUS
  1662	010120	022760	000001	177776		CMP #1,-2(A)
  1663	010126	001770				BEQ NEXTU4	;GUY HASN'T RUN YET, DON'T SWAP HIM OUT
  1664	010130	016001	177776			MOV -2(A),B	;USER THAT MAY BE SWAPED OUT
  1665	010134	020167	172232			CMP B,LOCKUS	;IS HE LOCKED IN?
  1666	010140	001763				BEQ NEXTU4	;YES, DON'T BOTHER HIM
  1667	010142	020167	172226			CMP B,GCLOCK
  1668	010146	001760				BEQ NEXTU4
  1669	010150	005767	171360			TST NSWPU	;ARE THERE USERS BEING SWAPED?
  1670	010154	001404				BEQ NEXTU6	;NO, SWAP ONE
  1671	010156	026727	171354	000001		CMP NINU,#1	;IS THERE ONLY ONE USER IN CORE?
  1672	010164	001713				BEQ NEXTUS	;YES, RUN HIM
  1673	010166	005067	171346		NEXTU6:	CLR PUSPSL	;IF THERE WAS A PREFERED SLOT, WE ARE DOING IT
  1674	010172	005740				TST -(A)
  1675	010174	016001	177776			MOV -2(A),B	;FOUND A GOOD SLOT, USER TO SWAP OUT INTO B
  1676	010200	010560	177776			MOV U,-2(A)	;NEW OCCUPANT OF SLOT
  1677					
  1678						FOR DEBUG
  1679	010204	032767	000002	172156		BIT #SWTRCF,SFLAGS	;TRACE SWAPS?
  1680	010212	001443				BEQ NEXTU5
  1681						SPUSH A
  1682						PRTXT ^/SWAPPING: /
  1683	010236	010100				MOV B,A
  1684	010240	004767	023742			JSR PC,PRON
  1685						SPACE
  1686	010250	010500				MOV U,A	;USER WHO IS COMING IN
  1687	010252	004767	023730			JSR PC,PRON
  1688						SPACE
  1689	010262	011600				MOV (P),A
  1690	010264	162700	002216			SUB #SLOTST+2,A
  1691	010270	006200				ASR A
  1692	010272	006200				ASR A
  1693	010274	004767	023706			JSR PC,PRON	;SLOT
  1694						SPACE
  1695	010304	016700	171212			MOV TIME,A
  1696	010310	004767	023672			JSR PC,PRON
  1697						PRCR
  1698						SPOP A
  1699						.ENDC
  1700						ENDC DEBUG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 52
	SYSTEM 323	PAGE 41 	SCHEDUALER

  1701					
  1702	010322	005003			NEXTU5:	CLR D
  1703	010324	016002	000042			MOV SLTCAD-SLOTST-2(A),C	;MOBY SWAP OUT BLOCK FOR THIS SLOT
  1704	010330	012722	011654			MOV #SWPOST,(C)+	;SWAP OUT USER START ROUTINE
  1705	010334	016722	171744			MOV USWCNT,(C)+	;WORD COUNT OF A USER SLOT
  1706	010340	016022	000044			MOV SLTCAD-SLOTST(A),(C)+	;SLOT CORE ADDRESS
  1707	010344	016122	002516			MOV USWPAD(B),(C)+	;LOW ORDER SWAP OUT ADDR OF U TO SWAP OUT
  1708	010350	016122	002520			MOV USWPAD+2(B),(C)+	;HIGH OORDER
  1709	010354	005722				TST (C)+	;WASTED WORD
  1710	010356	012722	000103			MOV #DWRTEC,(C)+	;DISK WRITE COMMAND
  1711	010362	005367	171150		NEXT11:	DEC NINU	;ONE LESS IN CORE
  1712	010366	005267	171142			INC NSWPU	;ONE MORE MOVING AROUND
  1713	010372	012722	011700			MOV #SWPIST,(C)+	;SWAP IN USER START ROUTINE
  1714	010376	016722	171702			MOV USWCNT,(C)+	;SLOT WORD COUT
  1715	010402	016022	000044			MOV SLTCAD-SLOTST(A),(C)+	;SLOT CORE ADDRESS
  1716	010406	022765	000007	002470		CMP #FRNEWU,FLSRES(U)
  1717	010414	001016				BNE NEXT12
  1718	010416	016722	171674			MOV DCLRUS,(C)+
  1719	010422	016722	171672			MOV DCLRUS+2,(C)+
  1720	010426	012765	016426	002472		MOV #UGO,FLSADR(U)
  1721	010434	016565	002542	002536		MOV UDSKAD(U),UNXTDB(U)
  1722	010442	016565	002544	002540		MOV UDSKAD+2(U),UNXTDB+2(U)
  1723	010450	000404				BR NEXT13
  1724	010452	016522	002516		NEXT12:	MOV USWPAD(U),(C)+	;  "    "   
  1725	010456	016522	002520			MOV USWPAD+2(U),(C)+	;USER ADDRESS ON DISK
  1726	010462	010022			NEXT13:	MOV A,(C)+	;ADDRESS OF PLACE TO ZAP TO 1 WHEN DONE
  1727	010464	012712	000105			MOV #DREADC,(C)	;READ FROM DISK
  1728	010470	162702	000032			SUB #32,C	;BEGINING OF MOOBY SWAP REQ PAIR
  1729	010474	060302				ADD D,C
  1730						SPUSH PS
  1731	010502	012767	000340	167266		MOV #340,PS	;NO INTS!
  1732	010510	010277	171030			MOV C,@SWPLEP
  1733	010514	062767	000002	171022		ADD #2,SWPLEP
  1734						SPOP PS
  1735	010526	012710	177777			MOV #-1,(A)	;NOT IN YET
  1736	010532	000424				BR NEXT10
  1737					
  1738	010534	012767	177777	170750	NEXTU7:	MOV #-1,USER	;FLUSH ENTERS HERE, SYSTEM NOW USER
  1739	010542	012700	002214			MOV #SLOTST,A	;SEE IF THIS SUPER FLUSHED GUY IS IN CORE
  1740	010546	020520			NEXTU8:	CMP U,(A)+
  1741	010550	001013				BNE NEXTU9	;NOT HERE.
  1742	010552	005720				TST (A)+	;IS HE REALLY IN?
  1743	010554	003413				BLE NEXT10	;NO, NOT REALLY
  1744	010556	022767	000003	171704		CMP #FRDSKW,FLSRES	;IF JUST HUNG ON DISK
  1745	010564	001407				BEQ NEXT10	;FORGET HIM
  1746	010566	010067	170746			MOV A,PUSPSL	;HE IS PREFERED OUT
  1747	010572	010567	170744			MOV U,PUSRSP
  1748	010576	000402				BR NEXT10
  1749	010600	005720			NEXTU9:	TST (A)+
  1750	010602	001361				BNE NEXTU8
  1751	010604	000167	177204		NEXT10:	JMP NEXTUS
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 53
	SYSTEM 323	PAGE 42 	SCHEDUALER

  1752					
  1753	010610	005767	170676		FLUSH:	TST USER
  1754	010614	002001				BGE FLUSH4
  1755	010616	000207				RTS PC
  1756	010620	004767	001170		FLUSH4:	JSR PC,UACSAV	;STOP USER; STORE HIS ACS
  1757	010624	016767	166452	172612		MOV AC,UAC
  1758	010632	016767	166446	172606		MOV MQ,UMQ
  1759	010640	016767	166444	172602		MOV SR,USR
  1760	010646	016500	002472			MOV FLSADR(U),A
  1761						SPOP FLSADR(U)	;SAVE PC
  1762	010656	005700				TST A	;IS THIS GUY ALREADY STOPED?
  1763	010660	001325				BNE NEXTU7	;GO TRY ANOTHER GUY
  1764						UUNTIM TIMUSD
  1765	010704	012767	177777	170600		MOV #-1,USER
  1766						TIMER NULTIM
  1767	010716	005765	002470			TST FLSRES(U)
  1768	010722	001003				BNE .+10
  1769	010724	012765	000006	002470		MOV #FRRAND,FLSRES(U)
  1770	010732	005367	170574			DEC NRABLU
  1771	010736	010667	172446			MOV P,UPDLP	;SAVE USER'S POINTER
  1772	010742	016706	167536			MOV SPDLP,P	;SYSTEM PDL
  1773					
  1774						FOR DEBUG
  1775	010746	032767	000001	171414		BIT #FRTRCF,SFLAGS
  1776	010754	001425				BEQ FLUSH3
  1777						PRTXT ^/FLUSHING USER /
  1778	011002	010500				MOV U,A
  1779	011004	004767	023176			JSR PC,PRON
  1780						SPACE
  1781	011014	016700	170502			MOV TIME,A
  1782	011020	004767	023162			JSR PC,PRON
  1783						PRCR
  1784						.ENDC
  1785						ENDC DEBUG
  1786					
  1787	011030	012700	003404		FLUSH3:	MOV #UVBLK,A
  1788	011034	016701	172402			MOV BASEUS,B	;TO BLT OUT USER VARIABLES
  1789	011040	160120			FLUSH1:	SUB B,(A)+	;UNRELOCATE A POINTER
  1790	011042	022700	003444			CMP #UVREND,A	;END OF VARS TO BE UNRELOCATED?
  1791	011046	003374				BGT FLUSH1	;GO DO ANOTHER
  1792	011050	012700	003404			MOV #UVBLK,A	;SET UP FOR BLT
  1793	011054	016702	172372			MOV ACRELF,C
  1794	011060	001413				BEQ FLUSH2
  1795	011062	010503				MOV U,D
  1796	011064	062703	002472			ADD #UACA-2,D	;POINTER TO USERS ACS
  1797	011070	005723			FLUSH5:	TST (D)+	;NEXT AC TO MAYBE RELOCATE
  1798	011072	005702				TST C
  1799	011074	001405				BEQ FLUSH2	;NO MORE TO RELOCATE
  1800	011076	000241				CLC
  1801	011100	006002				ROR C
  1802	011102	103372				BCC FLUSH5	;DON'T RELOCATE THIS ONE
  1803	011104	160113				SUB B,(D)
  1804	011106	000770				BR FLUSH5
  1805	011110	012021			FLUSH2:	MOV (A)+,(B)+	;ONE AT A TIME, KIDDIES!
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 54
	SYSTEM 323	PAGE 42.1 	SCHEDUALER

  1806	011112	022700	003730			CMP #UVBLK+LUVBLK-MAXELN,A	;DONE?
  1807	011116	003374				BGT FLUSH2
  1808	011120	000167	176670			JMP NEXTUS
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 55
	SYSTEM 323	PAGE 43 	SCHEDUALER

  1809					;RUNUSR, THE "MAIN LOOP"
  1810					
  1811	011124	020567	170412		RUNUSR:	CMP U,PUSRSP	;AM I THE GUY THEY WANT OUT?
  1812	011130	001002				BNE .+6	;BRANCH IF NO
  1813	011132	005067	170402			CLR PUSPSL	;I DON'T WANT TO GO!
  1814	011136	005210				INC (A)	;INDICATE THAT THIS GUY HAS BEEN RUN
  1815	011140	016003	000044			MOV SLTCAD-SLOTST(A),D	;SLOT ADDRESS THIS GUY IS IN
  1816	011144	005723				TST (D)+	;REALLY RIGHT NOW
  1817	011146	010301				MOV D,B	;BASE OF SLOT
  1818	011150	012702	003404			MOV #UVBLK,C	;BASE OF USER VARIABLES
  1819	011154	012122			RUNUS1:	MOV (B)+,(C)+	;BLTTTTTTTTTTTT!
  1820	011156	022702	004010			CMP #UVBLK+LUVBLK,C
  1821	011162	003374				BGT RUNUS1
  1822	011164	012702	003404			MOV #UVBLK,C	;TO RELOCATE VARIABLES
  1823	011170	060322			RUNUS2:	ADD D,(C)+	;ADD BASE OF SLOT
  1824	011172	022702	003442			CMP #UVREND-2,C
  1825	011176	003374				BGT RUNUS2
  1826	011200	010367	172236			MOV D,BASEUS
  1827	011204	016700	172242			MOV ACRELF,A
  1828	011210	001413				BEQ RUNUS5
  1829	011212	010501				MOV U,B
  1830	011214	062701	002472			ADD #UACA-2,B
  1831	011220	005721			RUNUS6:	TST (B)+
  1832	011222	005700				TST A
  1833	011224	001405				BEQ RUNUS5
  1834	011226	000241				CLC
  1835	011230	006000				ROR A
  1836	011232	103372				BCC RUNUS6
  1837	011234	060311				ADD D,(B)
  1838	011236	000770				BR RUNUS6
  1839					RUNUS5:
  1840						FOR DEBUG
  1841	011240	032767	000001	171122		BIT #FRTRCF,SFLAGS
  1842	011246	001425				BEQ RUNUS4
  1843						PRTXT ^/STARTING USER /
  1844	011274	010500				MOV U,A
  1845	011276	004767	022704			JSR PC,PRON
  1846						SPACE
  1847	011306	016700	170210			MOV TIME,A
  1848	011312	004767	022670			JSR PC,PRON
  1849						PRCR
  1850						.ENDC
  1851						ENDC DEBUG
  1852					
  1853	011322	010667	167156		RUNUS4:	MOV P,SPDLP	;SAVE SYSTEM PDL POINTER
  1854	011326	016706	172056			MOV UPDLP,P	;GET USER PDL POINTER
  1855	011332	010567	170154			MOV U,USER	;NOW HE'S REALLY THE GUY
  1856						SPUSH UPC(U)	;PLACE TO START USER
  1857	011342	016767	170160	170160		MOV QUANT,UQUANT	;RUN FOR 3 1/100TH'S????
  1858						UNTIME NULTIM
  1859						UTIMER TIMUSD
  1860	011362	016767	172056	165712		MOV UAC,AC
  1861	011370	016767	172052	165706		MOV UMQ,MQ
  1862	011376	016767	172046	165704		MOV USR,SR
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 56
	SYSTEM 323	PAGE 43.1 	SCHEDUALER

  1863	011404	000167	000432			JMP UACRES	;RESTORE USER ACS AND START USER
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 57
	SYSTEM 323	PAGE 44 	SCHEDUALER

  1864					
  1865					
  1866	011410	005767	170114		SCHEDP:	TST UQUANT	;SEE IF IT'S TIME TO FLUSH
  1867	011414	003401				BLE .+4	;NOT YET
  1868	011416	000207				RTS PC
  1869						SPUSH U
  1870	011422	016705	170064			MOV USER,U
  1871	011426	012765	000001	002470		MOV #FRSCED,FLSRES(U)
  1872	011434	004767	177150			JSR PC,FLUSH
  1873	011440	004767	176212			JSR PC,RUNME
  1874						SPOP U
  1875	011446	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 58
	SYSTEM 323	PAGE 45 	CLOCK BREAK ROUTINE

  1876					.STITL CLOCK BREAK ROUTINE
  1877					
  1878					CLKBRK:	SPUSH A
  1879						SPUSH B
  1880	011454	062767	000200	170040		ADD #200,TIME
  1881	011462	005567	170036			ADC TIME+2
  1882	011466	005367	170036			DEC UQUANT
  1883	011472	105767	165762			TSTB DSKS	;IS THE DISK BUSY?
  1884	011476	002002				BGE .+6	;YES
  1885	011500	004767	175236			JSR PC,DSKSRT
  1886	011504	022767	031577	170012		CMP #13183.,TIME+2	;IS IT MIDNIGHT?
  1887	011512	003416				BLE DATEC	;YES, CHANGE THE DATE
  1888	011514	000137	011520		CLKBR1:	JMP	@#CLKBR2
  1889					CLKBR2:	SPOP B
  1890						SPOP A
  1891	011524	000002				RTI
  1892					
  1893					
  1894	011526	032767	007777	167766	CLKBDM:	BIT	#7777,TIME	;EVERY 4 BRKS (=<4*128>/10,000 SECS)
  1895	011534	001371				BNE	CLKBR2	;1/20 < T < 1/21 SECS
  1896	011536	004767	014046			JSR	PC,DMSQ
  1897	011542	004767	014230			JSR	PC,TI2Q
  1898	011546	000764				BR	CLKBR2
  1899					
  1900	011550	005067	167750		DATEC:	CLR TIME+2	;TIME IS NOW ZERO
  1901	011554	005267	000052			INC RDAY	;CHANGE THE DAY
  1902	011560	016700	000050			MOV RMONTH,A
  1903	011564	126760	000042	011640		CMPB RDAY,DMON(A)
  1904	011572	003750				BLE CLKBR1	;NOT ON A MONTH BOUNDARY
  1905	011574	005267	000034			INC RMONTH
  1906	011600	012767	000001	000024		MOV #1,RDAY
  1907	011606	022767	000012	000020		CMP #12,RMONTH
  1908	011614	003737				BLE CLKBR1
  1909	011616	005267	000014			INC RYEAR
  1910	011622	012767	000001	000004		MOV #1,RMONTH
  1911	011630	000731				BR CLKBR1
  1912					
  1913	011632	000000			RDAY:	0
  1914	011634	000000			RMONTH:	0
  1915	011636	000000			RYEAR:	0
  1916	011640	   037		
  1917	011641	   034		
  1918	011642	   037		
  1919	011643	   036		
  1920	011644	   037		
  1921	011645	   036		
  1922	011646	   037		
  1923	011647	   037		
  1924	011650	   036		
  1925	011651	   037		
  1926	011652	   036		
  1927	011653	   037			DMON:	.BYTE 31.,28.,31.,30.,31.,30.,31.,31.,30.,31.,30.,31.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 59
	SYSTEM 323	PAGE 46 	SWAP START+STOP ROUTINES

  1928						.STITL	SWAP START+STOP ROUTINES
  1929					
  1930	011654	012710	011662		SWPOST:	MOV #SWPOSP,(A)	;SWAP OUT USER START, SET UP STOP
  1931	011660	000207				RTS PC
  1932					
  1933	011662	005726			SWPOSP:	TST (P)+	;FLUSH RETURN, WE'RE NOT GOING BACK THAT WAY
  1934	011664	062700	000016			ADD #16,A	;POINT TO SWAP IN BLOCK
  1935	011670	004767	175120			JSR PC,DSKSGO	;START DISK ON THAT
  1936	011674	000167	175734			JMP DSKRET	;AND RETURN FROM INTERUPT
  1937					
  1938	011700	012710	011706		SWPIST:	MOV #SWPISP,(A)	;SWAP IN START, SET UP STOP
  1939	011704	000207				RTS PC
  1940					
  1941	011706	005067	167616		SWPISP:	CLR UQUANT	;SCHED REAL SOON
  1942	011712	016001	000012			MOV 12(A),B	;FLAG
  1943	011716	012711	000001			MOV #1,(B)	;THIS GUY IS IN AND NOT RUN YET
  1944	011722	162767	000002	167614		SUB #2,SWPLEP
  1945						SPUSH A
  1946	011732	012700	001550			MOV #SWPLST+2,A
  1947	011736	012701	001546			MOV #SWPLST,B
  1948	011742	012021				MOV (A)+,(B)+
  1949	011744	001376				BNE .-2
  1950	011746	005267	167564			INC NINU	;ONE MORE GUY IN
  1951	011752	005367	167556			DEC NSWPU	;ONE LESS GUY MOVING
  1952						SPOP A
  1953	011760	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 60
	SYSTEM 323	PAGE 47 	MISC ROUTINES

  1954						.STITL MISC ROUTINES
  1955					
  1956	011762	010446			ACSAV:	MOV E,-(P)
  1957	011764	010346				MOV D,-(P)
  1958	011766	010246				MOV C,-(P)
  1959	011770	010146				MOV B,-(P)
  1960	011772	010046				MOV A,-(P)
  1961	011774	000115				JMP (F)
  1962					
  1963	011776	005726			ACRES:	TST (P)+
  1964	012000	012600				MOV (P)+,A
  1965	012002	012601				MOV (P)+,B
  1966	012004	012602				MOV (P)+,C
  1967	012006	012603				MOV (P)+,D
  1968	012010	012604				MOV (P)+,E
  1969	012012	000205				RTS F
  1970					
  1971	012014	010065	002474		UACSAV:	MOV A,UACA(U)
  1972	012020	010165	002476			MOV B,UACB(U)
  1973	012024	010265	002500			MOV C,UACC(U)
  1974	012030	010365	002502			MOV D,UACD(U)
  1975	012034	010465	002504			MOV E,UACE(U)
  1976	012040	000207				RTS PC
  1977					
  1978	012042	016500	002474		UACRES:	MOV UACA(U),A
  1979	012046	016501	002476			MOV UACB(U),B
  1980	012052	016502	002500			MOV UACC(U),C
  1981	012056	016503	002502			MOV UACD(U),D
  1982	012062	016504	002504			MOV UACE(U),E
  1983	012066	000207				RTS PC
  1984					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 61
	SYSTEM 323	PAGE 48 	MISC ROUTINES

  1985					
  1986					
  1987	012070	020667	171332		PPUSHT:	CMP P,PPUSHL
  1988	012074	101401				BLOS .+4
  1989	012076	000207				RTS PC
  1990	012100	032706	177000			BIT #177000,P	;IS IT THE SYSYTEM PDL?
  1991	012104	001001				BNE .+4
  1992	012106	000207				RTS PC	;YES, IGNORE
  1993	012110	000167	000120			JMP PPSWPO	;PDL REALLY OVERFLOWED
  1994					
  1995	012114	020667	171304		PPOPT:	CMP P,PPOPL
  1996	012120	103001				BHIS .+4
  1997	012122	000207				RTS PC
  1998	012124	000167	000552			JMP PPSWPI
  1999					
  2000	012130	162767	000002	171250	SPUSHT:	SUB #2,S
  2001	012136	026767	171244	171250		CMP S,SPUSHL
  2002	012144	101401				BLOS .+4
  2003	012146	000207				RTS PC
  2004	012150	000167	000306			JMP SPSWPO
  2005					
  2006	012154	062767	000002	171224	SPOPT:	ADD #2,S
  2007	012162	026767	171220	171222		CMP S,SPOPL
  2008	012170	101001				BHI .+4
  2009	012172	000207				RTS PC
  2010	012174	000167	000736			JMP SPSWPI
  2011					
  2012					.SPACE:	PRTXT ^\ \
  2013	012206	000207				RTS PC
  2014					
  2015	012210	000137	012214		.CRLF:	JMP	@#.+4
  2016	012214	004767	021736			JSR PC,ERTAP
  2017	012220	002376				CRMES
  2018	012222	000207				RTS PC
  2019					
  2020	012224	012703	000015		CRLF:	MOV	#15,D
  2021	012230	000167	006034			JMP	TYO
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 62
	SYSTEM 323	PAGE 49 	P AND S PDL SWAP OUTERS

  2022						.STITL P AND S PDL SWAP OUTERS
  2023					
  2024	012234	004567	177522		PPSWPO:	JSR F,ACSAV	;TIME TO WORK!
  2025					
  2026						FOR DEBUG
  2027	012240	032767	000004	170122		BIT #SPTRCF,SFLAGS
  2028	012246	001432				BEQ PPSWP1
  2029	012250	162767	000100	171150		SUB #100,PPUSHL	;SO IT DOESN'T OVERFLOW AGAIN
  2030						PRTXT ^/SWAPPING OUT P PDL /
  2031	012306	010600				MOV P,A
  2032	012310	160067	171120			SUB A,PRBAO
  2033	012314	005400				NEG A
  2034	012316	004767	021664			JSR PC,PRON
  2035						PRCR
  2036	012326	062767	000100	171072		ADD #100,PPUSHL
  2037						.ENDC
  2038						ENDC DEBUG
  2039					
  2040	012334	004767	174712		PPSWP1:	JSR PC,UBLKGR	;GET ALL THE GOOD STUFF WE NEED
  2041	012340	000000				HALT	;WHAT, NO DISK SPACE
  2042	012342	000000				HALT	;STOP, YOU STUPID MACHINE
  2043						SPUSH B	;SAVE ADDRESS
  2044	012346	016760	171056	000004		MOV PSWPAD,4(A)	;PLACE WHERE PDL IS
  2045	012354	112760	000103	000014		MOVB #DWRTEC,14(A)	;WRITE IT ONTO THE RIGHT PLACE
  2046	012362	004767	174624			JSR PC,DSKWA2	;FLUSH UNTIL IT IS REALLY OUT
  2047	012366	016700	171050			MOV BASEUS,A
  2048	012372	062700	001210			ADD #PDLINK+4-SLOT1,A	;GIVING US THE LINK ADDRESS+4 FOR THIS GUY
  2049	012376	010240				MOV C,-(A)	;HIGH ORDER PART
  2050						SPOP -(A)	;LOW ORDER PART
  2051	012402	032767	002000	171162		BIT #PPNAIF,FLAGS2	;WAS THE PDL NOT ALL THE WAY IN ANYWAY?
  2052	012410	001003				BNE .+10	;PART ALREADY OUT
  2053	012412	162767	000054	171004		SUB #54,PPOPL	;NONE OUT BEFORE, CHANGE LIMIT
  2054	012420	052767	002000	171144		BIS #PPNAIF,FLAGS2	;CERTAINLY NOT ALL IN NOW
  2055	012426	016701	170776			MOV PSWPAD,B	;ADDRESS-2 PDL SWAPED FROM
  2056	012432	011140				MOV (B),-(A)	;MOVE WORDS UP
  2057	012434	014140				MOV -(B),-(A)
  2058	012436	020106				CMP B,P
  2059	012440	002375				BGE .-4
  2060	012442	062706	000374			ADD #374,P	;PDL HAS MOVED!
  2061	012446	062767	000374	170760		ADD #374,PRBAO
  2062	012454	004567	177316			JSR F,ACRES	;ALL DONE!
  2063	012460	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 63
	SYSTEM 323	PAGE 50 	P AND S PDL SWAP OUTERS

  2064					
  2065					
  2066	012462	004567	177274		SPSWPO:	JSR F,ACSAV	;TIME TO WORK!
  2067					
  2068						FOR DEBUG
  2069	012466	032767	000004	167674		BIT #SPTRCF,SFLAGS
  2070	012474	001425				BEQ SPSWP1
  2071						PRTXT ^/SWAPING OUT S PDL /
  2072	012526	016700	170654			MOV S,A
  2073	012532	160067	170664			SUB A,SPRBAO
  2074	012536	005400				NEG A
  2075	012540	004767	021442			JSR PC,PRON
  2076						PRCR
  2077						.ENDC
  2078						ENDC DEBUG
  2079					
  2080	012550	004767	174476		SPSWP1:	JSR PC,UBLKGR	;GET ALL THE GOOD STUFF WE NEED
  2081	012554	000000				HALT	;WHAT, NO DISK SPACE
  2082	012556	000000				HALT	;STOP, YOU STUPID MACHINE
  2083						SPUSH B	;SAVE ADDRESS
  2084	012562	016760	170630	000004		MOV SSWPAD,4(A)	;PLACE WHERE PDL IS
  2085	012570	112760	000103	000014		MOVB #DWRTEC,14(A)	;WRITE IT ONTO THE RIGHT PLACE
  2086	012576	004767	174410			JSR PC,DSKWA2	;FLUSH UNTIL IT IS REALLY OUT
  2087	012602	016700	170634			MOV BASEUS,A
  2088	012606	062700	002014			ADD #SDLINK+4-SLOT1,A	;GIVING US THE LINK ADDRESS+4 FOR THIS GUY
  2089	012612	010240				MOV C,-(A)	;HIGH ORDER PART
  2090						SPOP -(A)	;LOW ORDER PART
  2091	012616	032767	004000	170746		BIT #SPNAIF,FLAGS2	;WAS THE PDL NOT ALL THE WAY IN ANYWAY?
  2092	012624	001003				BNE .+10	;PART ALREADY OUT
  2093	012626	162767	000054	170556		SUB #54,SPOPL	;NONE OUT BEFORE, CHANGE LIMIT
  2094	012634	052767	004000	170730		BIS #SPNAIF,FLAGS2	;CERTAINLY NOT ALL IN NOW
  2095	012642	016701	170550			MOV SSWPAD,B	;ADDRESS-2 PDL SWAPED FROM
  2096	012646	011140				MOV (B),-(A)	;MOVE WORDS UP
  2097	012650	014140				MOV -(B),-(A)
  2098	012652	020167	170530			CMP B,S
  2099	012656	002374				BGE .-6
  2100	012660	062767	000374	170520		ADD #374,S	;PDL HAS MOVED!
  2101	012666	062767	000374	170526		ADD #374,SPRBAO
  2102	012674	004567	177076			JSR F,ACRES	;ALL DONE!
  2103	012700	000207				RTS PC
  2104					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 64
	SYSTEM 323	PAGE 51 	P AND S PDL SWAPER INERS

  2105						.STITL P AND S PDL SWAPER INERS
  2106	012702	032767	002000	170662	PPSWPI:	BIT #PPNAIF,FLAGS2	;IS THE PDL ALL THE WAY IN?
  2107	012710	001001				BNE .+4	;NO (PRAISE THE LORD!)
  2108	012712	000000				HALT
  2109	012714	004567	177042			JSR F,ACSAV
  2110					
  2111						FOR DEBUG
  2112	012720	032767	000004	167442		BIT #SPTRCF,SFLAGS
  2113	012726	001423				BEQ PSWPI1
  2114						PRTXT ^/SWAPING IN P PDL /
  2115	012756	010600				MOV P,A
  2116	012760	160067	170450			SUB A,PRBAO
  2117	012764	005400				NEG A
  2118	012766	004767	021214			JSR PC,PRON
  2119						PRCR
  2120						.ENDC
  2121						ENDC DEBUG
  2122					
  2123	012776	016700	170426		PSWPI1:	MOV PSWPAD,A
  2124	013002	010001				MOV A,B
  2125	013004	062700	000374			ADD #374,A
  2126	013010	011011				MOV (A),(B)
  2127	013012	014041				MOV -(A),-(B)
  2128	013014	020006				CMP A,P
  2129	013016	003375				BGT .-4
  2130	013020	162706	000374			SUB #374,P
  2131	013024	162767	000374	170402		SUB #374,PRBAO
  2132	013032	004767	174066			JSR PC,SYDRBG
  2133	013036	005720				TST (A)+
  2134	013040	012720	177600			MOV #-200,(A)+
  2135	013044	016720	170360			MOV PSWPAD,(A)+
  2136	013050	016704	170356			MOV PPBASE,E
  2137	013054	012402				MOV (E)+,C
  2138	013056	010220				MOV C,(A)+
  2139	013060	011420				MOV (E),(A)+
  2140	013062	005720				TST (A)+
  2141	013064	112710	000105			MOVB #DREADC,(A)
  2142	013070	004767	174122			JSR PC,DSKWAI
  2143	013074	016703	170332			MOV PPBASE,D
  2144	013100	005723				TST (D)+
  2145	013102	001010				BNE PSWPI2
  2146	013104	005713				TST (D)
  2147	013106	001006				BNE PSWPI2
  2148	013110	042767	002000	170454		BIC #PPNAIF,FLAGS2	;IF BOTH LINKS ARE ZERO NOW, THERE IS NO MORE PDL ON DISK
  2149	013116	062767	000054	170300		ADD #54,PPOPL
  2150	013124	004767	174206		PSWPI2:	JSR PC,UBLKFR
  2151	013130	004567	176642			JSR F,ACRES
  2152	013134	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 65
	SYSTEM 323	PAGE 52 	P AND S PDL SWAPER INERS

  2153					
  2154	013136	032767	004000	170426	SPSWPI:	BIT #SPNAIF,FLAGS2	;IS THE PDL ALL THE WAY IN?
  2155	013144	001001				BNE .+4	;NO (PRAISE THE LORD!)
  2156	013146	000000				HALT
  2157	013150	004567	176606			JSR F,ACSAV
  2158					
  2159						FOR DEBUG
  2160	013154	032767	000004	167206		BIT #SPTRCF,SFLAGS
  2161	013162	001424				BEQ SSWPI1
  2162						PRTXT ^/SWAPING IN S PDL /
  2163	013212	016700	170170			MOV S,A
  2164	013216	160067	170200			SUB A,SPRBAO
  2165	013222	005400				NEG A
  2166	013224	004767	020756			JSR PC,PRON
  2167						PRCR
  2168						.ENDC
  2169						ENDC DEBUG
  2170					
  2171	013234	016700	170156		SSWPI1:	MOV SSWPAD,A
  2172	013240	010001				MOV A,B
  2173	013242	011011				MOV (A),(B)
  2174	013244	062700	000374			ADD #374,A
  2175	013250	011011				MOV (A),(B)
  2176	013252	014041				MOV -(A),-(B)
  2177	013254	020067	170126			CMP A,S
  2178	013260	003374				BGT .-6
  2179	013262	162767	000374	170116		SUB #374,S
  2180	013270	162767	000374	170124		SUB #374,SPRBAO
  2181	013276	004767	173622			JSR PC,SYDRBG
  2182	013302	005720				TST (A)+
  2183	013304	012720	177600			MOV #-200,(A)+
  2184	013310	016720	170102			MOV SSWPAD,(A)+
  2185	013314	016704	170100			MOV SPBASE,E
  2186	013320	012402				MOV (E)+,C
  2187	013322	010220				MOV C,(A)+
  2188	013324	011420				MOV (E),(A)+
  2189	013326	005720				TST (A)+
  2190	013330	112710	000105			MOVB #DREADC,(A)
  2191	013334	004767	173656			JSR PC,DSKWAI
  2192	013340	016703	170054			MOV SPBASE,D
  2193	013344	005723				TST (D)+
  2194	013346	001010				BNE SSWPI2
  2195	013350	005713				TST (D)
  2196	013352	001006				BNE SSWPI2
  2197	013354	042767	004000	170210		BIC #SPNAIF,FLAGS2	;IF BOTH LINKS ARE ZERO NOW, THERE IS NO MORE PDL ON DISK
  2198	013362	062767	000054	170022		ADD #54,SPOPL
  2199	013370	004767	173742		SSWPI2:	JSR PC,UBLKFR
  2200	013374	004567	176376			JSR F,ACRES
  2201	013400	000207				RTS PC
  2202					
  2203					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 66
	SYSTEM 323	PAGE 53 	P AND S PDL SWAPER INERS

  2204					
  2205		000105			.IFZ 105
  2206					
  2207					SWAPER:	CLR A
  2208					SWAP1:	PUSH A
  2209						PUSHS A
  2210						INC A
  2211						CMP A,B
  2212						BGT SWAP2
  2213						BR SWAP1
  2214					SWAP2:	POP C
  2215						POPS D
  2216						DEC A
  2217						CMP A,D
  2218						BEQ .+4
  2219						HALT
  2220						CMP A,C
  2221						BEQ .+4
  2222						HALT
  2223						TST A
  2224						BEQ SWAPER
  2225						BR SWAP2
  2226					.ENDC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 67
	SYSTEM 323	PAGE 54 	TIMER ROUTINES

  2227						.STITL TIMER ROUTINES
  2228					
  2229					.TIME:	SPUSH A
  2230						SPUSH B
  2231						SPUSH C
  2232						SPUSH D
  2233						SPUSH PS
  2234	013416	012767	000340	164352		MOV #340,PS
  2235	013424	004767	000206			JSR PC,GTIME
  2236	013430	004767	000152			JSR PC,URELTM
  2237	013434	016703	166004			MOV TMPDLP,D
  2238	013440	011023				MOV (A),(D)+
  2239	013442	014023				MOV -(A),(D)+
  2240	013444	010367	165774			MOV D,TMPDLP
  2241	013450	005020				CLR (A)+
  2242	013452	005010				CLR (A)
  2243	013454	004767	000142			JSR PC,RELTIM
  2244						SPOP PS
  2245						SPOP D
  2246						SPOP C
  2247						SPOP B
  2248						SPOP A
  2249	013474	000207				RTS PC
  2250					
  2251					.UTIME:	SPUSH A
  2252						SPUSH B
  2253						SPUSH C
  2254						SPUSH D
  2255						SPUSH PS
  2256	013512	012767	000340	164256		MOV #340,PS
  2257	013520	004767	000112			JSR PC,GTIME
  2258	013524	004767	000056			JSR PC,URELTM
  2259	013530	012400				MOV (E)+,A
  2260	013532	066720	165750			ADD ELAPSE,(A)+
  2261	013536	005510				ADC (A)
  2262	013540	066710	165744			ADD ELAPSE+2,(A)
  2263	013544	016703	165674			MOV TMPDLP,D
  2264	013550	014367	165732			MOV -(D),ELAPSE
  2265	013554	014367	165730			MOV -(D),ELAPSE+2
  2266	013560	010367	165660			MOV D,TMPDLP
  2267	013564	004767	000032			JSR PC,RELTIM
  2268						SPOP PS
  2269						SPOP D
  2270						SPOP C
  2271						SPOP B
  2272						SPOP A
  2273	013604	000204				RTS E
  2274					
  2275	013606	012700	001506		URELTM:	MOV #ELAPSE,A
  2276	013612	060120				ADD B,(A)+
  2277	013614	005510				ADC (A)
  2278	013616	060210				ADD C,(A)
  2279	013620	000207				RTS PC
  2280					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 68
	SYSTEM 323	PAGE 54.1 	TIMER ROUTINES

  2281	013622	012700	001506		RELTIM:	MOV #ELAPSE,A
  2282	013626	160120				SUB B,(A)+
  2283	013630	005610				SBC (A)
  2284	013632	160210				SUB C,(A)
  2285	013634	000207				RTS PC
  2286					
  2287					
  2288	013636	016701	156702		GTIME:	MOV PCCNT,B
  2289	013642	062701	000200			ADD #200,B
  2290	013646	105767	156666			TSTB PCS
  2291	013652	002002				BGE .+6
  2292	013654	012701	000200			MOV #200,B
  2293	013660	016702	165640			MOV TIME+2,C
  2294	013664	066701	165632			ADD TIME,B
  2295	013670	005502				ADC C
  2296	013672	000207				RTS PC
  2297					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 69
	SYSTEM 323	PAGE 55 	COMMUNICATE WITH MAIN MACHINE

  2298						.STITL COMMUNICATE WITH MAIN MACHINE
  2299					
  2300	013674	000000			RJLSW:	0	;NON-ZERO=> ACTIVATE COMMUNICATE LINK
  2301	013676	000000			REDY10:	0	;NON-ZERO=>10 IS READY
  2302	013700	000000			SYSMES:	0	;NUMBER OF MESSAGES WAITING FOR THE SYSTEM
  2303						.MACR EXCHA X,Y
  2304						MOV X,A
  2305						MOV Y,X
  2306						MOV A,Y
  2307						.ENDM
  2308					
  2309					;LOGIN STRING
  2310	013702	   032		
  2311	013703	   023		
  2312	013704	   023		
  2313	013705	   037			LOGMES:	.BYTE 'Z-100,'S-100,'S-100,'_-100
  2314	013706	   122		
  2315	013707	   061		
  2316	013710	   061		
  2317	013711	   114		
  2318	013712	   117		
  2319	013713	   107		
  2320	013714	   117		
  2321						.ASCII /R11LOGO/
  2322	013715	   033				.BYTE 33
  2323	013716	   125		
  2324	013717	   061		
  2325	013720	   061		
  2326	013721	   110		
  2327	013722	   105		
  2328	013723	   122		
  2329	013724	   105		
  2330						.ASCII /U11HERE/
  2331	013725	   013		
  2332	013726	   000				.BYTE 'K-100,0
  2333		013730				.EVEN
  2334					
  2335					;RECIEVE VARIABLES
  2336	013730	000000			RBPOIN:	0
  2337	013732	014106			DCRBIP:	DCRBF1-2	;INITIAL POINTER
  2338	013734	000000			DCRACF:	0	;ACKNOWLEDGE FLAG
  2339	013736	000000			DCRCKS:	0	;CHECKSUM OF INCOMING WORDS
  2340	013740	000000			DCRMID:	0	;ID # SENT WITH MESSAGE
  2341	013742	000000			DCRWCT:	0	;WORD COUNT OF CURRENT MESSAGE
  2342	013744	000000			DCRPRB:	0	;"PARITY" BITS FOR INCOMING WORD
  2343	013746	000000			DCRWBL:	0	;BUILD RECIEVED WORD HERE
  2344					
  2345		014010			DCRLST:	.=.+40	;MESSAGES WAITNING TO BE PICKED UP
  2346					
  2347	014010	000000		
  2348	014012	177400		
  2349	014014	014206		
  2350	014016	000000		
  2351	014020	000000		
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 70
	SYSTEM 323	PAGE 55.1 	COMMUNICATE WITH MAIN MACHINE

  2352	014022	000000		
  2353	014024	000000			DCRDRB:	.WORD 0,-400,DCRBF2-2,0,0,0,0	;DISK REQUEST BLOCK
  2354					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 71
	SYSTEM 323	PAGE 56 	COMMUNICATE WITH MAIN MACHINE

  2355					
  2356					;TRANSMIT VARIABLES
  2357	014026	000000			TBPOIN:	0
  2358		014050			DCTSMS:	.=.+20	;SMALL (1 OR 2 CHAR)MESSAGES TO BE SENT
  2359		014110			DCTBST:	.=.+40	;MESSAGES WAITING TO BE SENT
  2360					;BUFFERS
  2361		014210			DCRBF1:	.=.+100	;RECIEVE BUFFER 1
  2362		014310			DCRBF2:	.=.+100	;   "      "    2
  2363					
  2364					;DC11 PDLS
  2365		014330				.=.+20
  2366	014330	014420				RLOGIN
  2367	014332	014330			RPDLP:	.-2
  2368		014354				.=.+20
  2369	014354	015262				TLOGIN
  2370	014356	014354			TPDLP:	.-2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 72
	SYSTEM 323	PAGE 57 	COMMUNICATE WITH MAIN MACHINE

  2371					
  2372					;RECIEVE INTERUPT ROUTINES
  2373					
  2374					DCRBRK:	SPUSH A
  2375						EXCHA RPDLP,P	;SET UP RECIEVE PDL
  2376	014374	016700	157402			MOV DCRB,A	;GET CHAR FROM LINE
  2377	014400	000207				RTS PC	;RESUME PROCESSING
  2378					
  2379					RFLUSH:	EXCHA RPDLP,P	;RESTORE PDL
  2380						SPOP A
  2381	014416	000002				RTI
  2382					
  2383	014420	052767	000100	157356	RLOGIN:	BIS #100,DCTS	;WAKE UP TRANSMIT ROUTINE
  2384	014426	004767	177750			JSR PC,RFLUSH	;GET NEXT CHAR
  2385	014432	022700	000140			CMP #140,A	;IS IT SYNC?
  2386	014436	001370				BNE RLOGIN	;NO, WAIT FOR THE 10 TO WAKE UP
  2387	014440	005267	177232			INC REDY10	;10 IS READY TO COMMUNICATE
  2388					
  2389	014444	004767	177732		RECLOP:	JSR PC,RFLUSH	;GET THE NEXT CHAR OFF THE LINE
  2390	014450	162700	000140			SUB #140,A	;IS IT CONTROL CHAR?
  2391	014454	002773				BLT RECLOP	;NO (THIS SHOULDN'T HAPPEN)
  2392	014456	022700	000010			CMP #10,A	;IS IT TOO BIG?
  2393	014462	003770				BLE RECLOP	;YUP (THIS SHOULD HAPPEN EVEN LESS!!)
  2394	014464	006300				ASL A
  2395	014466	000170	014472			JMP @RECTAB(A)	;DO THE CONTROL CHAR
  2396					
  2397	014472	014444			RECTAB:	RECLOP	;NULL, SYNC(WHATEVER YOU WANT TO CALL IT)
  2398	014474	014512				STPREC	;STOP!
  2399	014476	014512				ACTREC	;WELL?????
  2400	014500	014444				RECLOP	;???
  2401	014502	014444				RECLOP	;????
  2402	014504	014524				ACKREC	;ACKNOWLEDGEMENT OF TRANSMITTED MESSAGE
  2403	014506	014514				NAKREC	;NEGATIVE, PLEASE SEND AGAIN
  2404	014510	014556				DATA	;DATA BLOCK COMES NEXT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 73
	SYSTEM 323	PAGE 58 	COMMUNICATE WITH MAIN MACHINE

  2405					
  2406	014512	000754			STPREC:ACTREC:	BR RECLOP
  2407					
  2408	014514	012767	177777	177212	NAKREC:	MOV #-1,DCRACF	;FOR NAK
  2409	014522	000402				BR ACKRC1
  2410	014524	005067	177204		ACKREC:	CLR DCRACF
  2411	014530	004767	000422		ACKRC1:	JSR PC,GBITCH	;GET NUMBER OF MESSAGE BEING "ACK"ED
  2412	014534	000743				BR RECLOP	;LOSE!
  2413	014536	022700	000020			CMP #20,A	;IS IT TOO BIG?
  2414	014542	003740				BLE RECLOP
  2415	014544	006300				ASL A
  2416	014546	016760	177162	014050		MOV DCRACF,DCTBST(A)	;TELL TRANSMIT ROUTINES ACK OR NAK
  2417	014554	000733				BR RECLOP
  2418					
  2419	014556	005067	177154		DATA:	CLR DCRCKS	;CLEAR CHECKSUM
  2420	014562	004767	000242			JSR PC,GWORD	;GET A WORD OFF THE LINE
  2421	014566	000167	177652			JMP RECLOP	;BAD PARITY IN WORD, CAN'T WIN
  2422	014572	116767	177151	177140		MOVB DCRWBL+1,DCRMID	;SENDERS ID # FOR THIS DATA
  2423	014600	110067	177136			MOVB A,DCRWCT	;NUMBER OF WORDS FOLLOWING, INC. CHECKSUM
  2424	014604	016767	177122	177116		MOV DCRBIP,RBPOIN	;POINTER TO CURRENT BUFFER
  2425	014612	062767	000002	177110	DATA1:	ADD #2,RBPOIN	;POINT TO NEXT WORD
  2426	014620	004767	000204			JSR PC,GWORD
  2427	014624	000477				BR NODATA	;PARITY ERROR IN WORD
  2428	014626	010077	177076			MOV A,@RBPOIN	;SAVE WORD
  2429	014632	005367	177104			DEC DCRWCT	;IS IT THE LAST ONE(CHECKSUM)?
  2430	014636	003365				BGT DATA1	;NO
  2431	014640	005767	177072			TST DCRCKS	;SHOULD BE ZERO
  2432	014644	001067				BNE NODATA	;NO SUCH LUCK
  2433	014646	005767	177152			TST DCRDRB+14	;HAS THE LAST MESSAGE MADE IT TO THE DISK?
  2434	014652	001064				BNE NODATA	;NO, CAN'T KEEP THIS MESSAGE
  2435						SPUSH B
  2436	014656	012701	013750			MOV #DCRLST,B
  2437	014662	005721				TST (B)+	;IS THIS RECIEVE BUFFER FREE?
  2438	014664	001376				BNE .-2	;NO
  2439	014666	005741				TST -(B)	;FOUND A FREE ONE
  2440	014670	022701	014010			CMP #DCRLST+40,B	;IS IT REALLY ONE?
  2441	014674	002053				BGE NODATA	;NO PLACE TO PUT MESSAGE
  2442						EXCHA DCRBIP,DCRDRB+4	;EXCH BUFFER USAGE
  2443	014714	005720				TST (A)+
  2444	014716	011000				MOV (A),A	;THIS IS THE MESSAGE ID
  2445	014720	010011				MOV A,(B)	;SO THE USER CAN FIND IT
  2446	014722	032700	177400			BIT #177400,A	;IS THIS MESSAGE FOR THE SYSTEM?
  2447	014726	001002				BNE .+6	;NO
  2448	014730	005267	176744			INC SYSMES	;TELL THE SYSTEM IT HAS A MESSAGE
  2449	014734	162701	013750			SUB #DCRLST,B
  2450	014740	006301				ASL B
  2451	014742	006301				ASL B
  2452	014744	006301				ASL B
  2453	014746	006301				ASL B
  2454	014750	066701	165346			ADD DCRBFS,B
  2455	014754	010167	177036			MOV B,DCRDRB+6
  2456	014760	016767	165340	177032		MOV DCRBFS+2,DCRDRB+10	;DISK ADDRESS OF BUFFER
  2457	014766	012700	014030			MOV #DCTSMS,A	;FIND A SMALL MESSAGE SLOT
  2458	014772	005720				TST (A)+
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 74
	SYSTEM 323	PAGE 58.1 	COMMUNICATE WITH MAIN MACHINE

  2459	014774	001376				BNE .-2
  2460	014776	012701	062400			MOV #<145_10>,B
  2461	015002	056701	176732			BIS DCRMID,B
  2462	015006	062701	000040			ADD #40,B
  2463	015012	000301				SWAB B
  2464	015014	010140				MOV B,-(A)
  2465						SPOP B
  2466	015020	000167	177420			JMP RECLOP
  2467					
  2468	015024	000167	177414		NODATA:	JMP RECLOP
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 75
	SYSTEM 323	PAGE 59 	COMMUNICATE WITH MAIN MACHINE

  2469					
  2470					;GET 16 BIT WORD OFF THE LINE
  2471					;6 BITS, 6 BITS, 2 PARITY+4 BITS (PPBBBB)
  2472					;3 333 222 222 111 111
  2473	015030	004767	000122		GWORD:	JSR PC,GBITCH	;GET A BINARY CHAR
  2474	015034	000207				RTS PC	;BAD CHAR, LOSE
  2475	015036	010067	176704			MOV A,DCRWBL	;STATRT BUILDING WORD	0 000 000 000 BBB BBB
  2476	015042	004767	000110			JSR PC,GBITCH
  2477	015046	000207				RTS PC	;BAD CHAR
  2478	015050	000300				SWAB A				;	0 0BB BBB B00 000 000
  2479	015052	006200				ASR A				;	0 00B BBB BB0 000 000
  2480	015054	006200				ASR A				;	0 000 BBB BBB 000 000
  2481	015056	050067	176664			BIS A,DCRWBL			;	0 000 222 222 111 111
  2482	015062	004767	000070			JSR PC,GBITCH
  2483	015066	000207			DCRRTS:	RTS PC	;BAD CHAR
  2484	015070	006300				ASL A				;	0 000 000 00B BBB BB0
  2485	015072	006300				ASL A				;	0 000 000 0BB BBB B00
  2486	015074	006300				ASL A				;	0 000 000 BBB BBB 000
  2487	015076	006300				ASL A				;	0 000 00B BBB BB0 000
  2488	015100	150067	176643			BISB A,DCRWBL+1			;	BB BB0 000
  2489	015104	000300				SWAB A				;	B BBB 000 000 000 0BB
  2490	015106	110067	176632			MOVB A,DCRPRB			;	00 000 0BB
  2491						SPUSH B
  2492	015114	016700	176626			MOV DCRWBL,A
  2493	015120	004767	000054			JSR PC,BITCNT	;GET NUMBER OF BITS IN THE WORD
  2494	015124	042701	177774			BIC #177774,B	;MOD 4
  2495	015130	005101				COM B		;AND COMPLEMENTED
  2496	015132	020167	176606			CMP B,DCRPRB	;IS IT THE SAME AS WAS SENT ON THE LINE?
  2497	015136	001005				BNE GWORDB	;NO, HAVE GOT BAD WORD
  2498	015140	060067	176572			ADD A,DCRCKS	;YES, ADD TO CHECKSUM
  2499						SPOP B
  2500	015146	000167	032760			JMP SRET
  2501					GWORDB:	SPOP B
  2502	015154	000207				RTS PC
  2503					
  2504					;GET 6 BITS OFF THE LINE
  2505	015156	004767	177220		GBITCH:	JSR PC,RFLUSH
  2506	015162	162700	000040			SUB #40,A
  2507	015166	032700	177700			BIT #177700,A
  2508	015172	001335				BNE DCRRTS
  2509	015174	000167	032732			JMP SRET
  2510					
  2511					BITCNT:	SPUSH A
  2512	015202	005001				CLR B
  2513	015204	000401				BR BITCT2
  2514	015206	005201			BITCT1:	INC B
  2515	015210	006300			BITCT2:	ASL A
  2516	015212	103775				BCS BITCT1
  2517	015214	001375				BNE BITCT2
  2518						SPOP A
  2519	015220	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 76
	SYSTEM 323	PAGE 60 	COMMUNICATE WITH MAIN MACHINE

  2520					
  2521					;TRANSMIT INTERUPT ROUTINES
  2522					
  2523					DCTBRK:	SPUSH A
  2524						EXCHA TPDLP,P
  2525	015236	000207				RTS PC
  2526					
  2527	015240	010067	156542		TFLUSH:	MOV A,DCTB
  2528					T1FLSH:	EXCHA TPDLP,P
  2529						SPOP A
  2530	015260	000002				RTI
  2531					
  2532	015262	012700	000032		TLOGIN:	MOV #'Z-100,A
  2533	015266	004767	177746			JSR PC,TFLUSH
  2534	015272	012767	013702	176526		MOV #LOGMES,TBPOIN
  2535	015300	117700	176522		LOGSEN:	MOVB @TBPOIN,A
  2536	015304	001410				BEQ LOGDNE
  2537	015306	005267	176514			INC TBPOIN
  2538	015312	042767	000100	156464		BIC #100,DCTS	;DON'T CARE IF NO ECHO
  2539	015320	004767	177714			JSR PC,TFLUSH
  2540	015324	000765				BR LOGSEN
  2541	015326	042767	000100	156450	LOGDNE:	BIC #100,DCTS	;PUT IT TO SLEEP
  2542	015334	004767	177704			JSR PC,T1FLSH
  2543	015340	005767	176332			TST REDY10
  2544	015344	001770				BEQ LOGDNE
  2545					;FALL IN HERE WHEN 10 IS READY TO RECIEVE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 77
	SYSTEM 323	PAGE 61 	INITIALIZE THE WORLD!

  2546					.STITL	INITIALIZE THE WORLD!
  2547	015346	000005			START:	RESET
  2548	015350	016706	163130			MOV SPDLP,P	;SET UP SYSTEM PDL
  2549	015354	005067	164142			CLR TIME
  2550	015360	012767	000200	155154		MOV #200,PCSTBF	;EVERY 128/10000 TH'S
  2551	015366	012767	000113	155144		MOV #113,PCS
  2552	015374	005767	176274			TST RJLSW
  2553	015400	001411				BEQ NODC11
  2554	015402	012767	000121	156370		MOV #121,DCRS
  2555	015410	012767	000121	156366		MOV #121,DCTS
  2556	015416	012767	000032	156362		MOV #'Z-100,DCTB
  2557	015424	012767	015446	162352	NODC11:	MOV #CORCHK,BEBRV	;WHERE TO GO ON MEM TRAP
  2558	015432	012700	073576			MOV #LOGEND,A	;LAST LOCATION WITH CRAP IN IT
  2559	015436	062700	000200			ADD #200,A
  2560	015442	005710				TST (A)	;IS IT REALLY THERE?
  2561	015444	000774				BR .-6	;LOOP ENDED BY MEM TRAP
  2562	015446	042700	000377		CORCHK:	BIC #377,A
  2563	015452	012767	000006	162324		MOV #BEBRV+2,BEBRV
  2564	015460	010067	164562			MOV A,CORTOP
  2565	015464	162700	107134			SUB #22000+SLOT1,A	;FUDGE AREA (NOW RADIA CAN FIT DDT THERE!)
  2566	015470	005001				CLR B
  2567	015472	012702	177306			MOV #MQ+2,C
  2568	015476	010042				MOV A,-(C)	;MOVE A TO MQ
  2569	015500	005042				CLR -(C)	;CLEAR HIGH ORDER(AC)
  2570	015502	016742	164546			MOV NSLOTS,-(C)	;DIVIDE
  2571	015506	016701	161572			MOV MQ,B	;GET RESULT
  2572	015512	020127	044404			CMP B,#MSLTLN
  2573	015516	103402				BLO .+6
  2574	015520	012701	044404			MOV #MSLTLN,B
  2575	015524	042701	000037			BIC #37,B
  2576	015530	012700	065132			MOV #SLOT1-2,A	;BEGINING OF SLOT-2 (FOR DISK)
  2577	015534	012702	002262			MOV #SLTCAD+2,C	;ADDRESS OF SLOT
  2578	015540	016703	164510			MOV NSLOTS,D
  2579	015544	010367	163766			MOV D,NINU	;NUMBER OF USERS IN CORE NOW.
  2580	015550	005004				CLR E
  2581	015552	010022			SLTAL1:	MOV A,(C)+	;ADDRESS OF THIS SLOT
  2582	015554	060100				ADD B,A	;NEXT ONE
  2583	015556	010462	177730			MOV E,SLOTST-SLTCAD-4(C)	;USER OF THIS SLOT
  2584	015562	012762	000001	177732		MOV #1,SLOTST-SLTCAD-2(C)	;JUST SWAPED IN
  2585	015570	062704	000056			ADD #LUBLK,E	;NEXT USER
  2586	015574	005722				TST (C)+
  2587	015576	005303				DEC D
  2588	015600	003364				BGT SLTAL1	;DO THIS NSLOTS TIMES
  2589	015602	010167	164500			MOV B,USLENT
  2590	015606	006201				ASR B
  2591	015610	010100				MOV B,A	;SAVE A POSITIVE WORD COUNT
  2592	015612	005401				NEG B
  2593	015614	010167	164464			MOV B,USWCNT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 78
	SYSTEM 323	PAGE 62 	INITIALIZE THE WORLD!

  2594	015620	012700	000003			MOV #3,A
  2595	015624	012701	177777			MOV #-1,B	;SIE OF DISK IN A AND B
  2596	015630	166701	164476			SUB DSKRND,B	;MINUS RANDOM SYSTEM STORAGE
  2597	015634	166701	164474			SUB DSKRND+2,B
  2598	015640	012702	177306			MOV #MQ+2,C
  2599	015644	010142				MOV B,-(C)
  2600	015646	010042				MOV A,-(C)
  2601	015650	016742	164376			MOV NUSERS,-(C)	;DIVIDE AMOUNT OF DISK BY # OF USERS
  2602	015654	012700	177777			MOV #-1,A	;FULL ALOCATION
  2603	015660	005767	161416			TST AC
  2604	015664	001002				BNE .+6
  2605	015666	016700	161412			MOV MQ,A	;AMOUNT OF DISK PER USER
  2606	015672	066700	164406		DALOC2:	ADD USWCNT,A	;ADD NEGATIVE WORD COUNT TO AMOUNT OF DISK
  2607	015676	162700	006000			SUB #DTIBFL+DEDBFL+DDIRL,A	;SUBTRACT FIXED BUFFERS
  2608	015702	003002				BGT DALOC3	;RESULT <15 BITS
  2609	015704	012700	077777			MOV #77777,A	;MAKE IT 15 BITS
  2610	015710	042700	000377		DALOC3:	BIC #377,A	;TO GET # OF WORDS OF RANDOM STORAGE
  2611	015714	010004				MOV A,E	;SAVE THAT QUANT IN E FOR (MUCH) LATER
  2612	015716	000300				SWAB A
  2613	015720	010001				MOV A,B
  2614	015722	006300				ASL A	;NUMBER OF BLOCKS (200 WORDS) NOW IN A
  2615	015724	006201				ASR B
  2616	015726	006201				ASR B
  2617	015730	006201				ASR B	;NUMBER OF BLOCKS/20 NOW IN B
  2618	015732	012702	003614			MOV #DBITTB,C	;SET UP TO INIT DISK BIT TABLE
  2619	015736	005301			DALOC5:	DEC B	;20 BLOCKS (=1 WORD IN TABLE)AT A TIME
  2620	015740	002402				BLT DALOC4	;ALL DONE 
  2621	015742	005022				CLR (C)+
  2622	015744	000774				BR DALOC5
  2623	015746	005012			DALOC4:	CLR (C)	;ONLY SOME BITS ON IN THIS WORD
  2624	015750	005112				COM (C)
  2625	015752	012703	000001			MOV #1,D
  2626	015756	042700	177760			BIC #177760,A	;# OF WORDS MOD 20
  2627	015762	005300			DALOC6:	DEC A
  2628	015764	002403				BLT DALOC7
  2629	015766	040312				BIC D,(C)
  2630	015770	006303				ASL D
  2631	015772	000773				BR DALOC6
  2632	015774	005722			DALOC7:	TST (C)+
  2633	015776	020227	003652			CMP C,#DBITBE
  2634	016002	003003				BGT DALOC8
  2635	016004	012712	177777			MOV #-1,(C)
  2636	016010	000771				BR DALOC7
  2637	016012	052767	000001	165574	DALOC8:	BIS #1,DBITTB	;FIRST BLOCK TO BE USED
  2638	016020	052767	100000	165624		BIS #100000,DBITBE	;IMPOSSIBLE TO GO OFF TOP
  2639	016026	010403				MOV E,D
  2640	016030	012700	000003			MOV #3,A
  2641	016034	012701	177777			MOV #-1,B
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 79
	SYSTEM 323	PAGE 63 	INITIALIZE THE WORLD!

  2642					
  2643					
  2644	016040	012704	000012			MOV #MNUSRS,E
  2645	016044	012705	000714			MOV #LUBLK*<MNUSRS>,U
  2646	016050	162705	000056		UVINIT:	SUB #LUBLK,U	;FOR NEXT GUY DOWN
  2647	016054	012765	177777	002472		MOV #-1,FLSADR(U)	;INDICATE THAT THIS GUY ISN'T REALLY HERE
  2648	016062	005065	002470			CLR FLSRES(U)
  2649	016066	005304				DEC E
  2650	016070	020467	164156			CMP E,NUSERS	;MAYBE HE REALLY IS HERE
  2651	016074	002365				BGE UVINIT	;NOPE!
  2652	016076	005065	002472			CLR FLSADR(U)
  2653	016102	012765	000007	002470		MOV #FRNEWU,FLSRES(U)
  2654	016110	012702	002546			MOV #UDSKAD+4,C
  2655	016114	060502				ADD U,C
  2656	016116	160301				SUB D,B	;AMOUNT OF RANDOM STORAGE
  2657	016120	005600				SBC A
  2658	016122	010042				MOV A,-(C)	;HIGH ORDER RANDOM STORAGE ADDR
  2659	016124	010142				MOV B,-(C)	;LOW ORDER
  2660	016126	010042				MOV A,-(C)	;HIGH ORDER RANDOM STORAGE ADDR
  2661	016130	010142				MOV B,-(C)	;LOW ORDER
  2662	016132	162701	002000			SUB #DDIRL,B
  2663	016136	005600				SBC A
  2664	016140	010042				MOV A,-(C)	;HIGH DISK DIR
  2665	016142	010142				MOV B,-(C)	;LOW
  2666	016144	162701	002000			SUB #DEDBFL,B
  2667	016150	005600				SBC A
  2668	016152	010042				MOV A,-(C)
  2669	016154	010142				MOV B,-(C)
  2670	016156	162701	002000			SUB #DTIBFL,B
  2671	016162	005600				SBC A
  2672	016164	010042				MOV A,-(C)
  2673	016166	010142				MOV B,-(C)
  2674	016170	066701	164110			ADD USWCNT,B
  2675	016174	103401				BCS .+4
  2676	016176	005300				DEC A
  2677	016200	010042				MOV A,-(C)
  2678	016202	010142				MOV B,-(C)
  2679	016204	005704				TST E
  2680	016206	003320				BGT UVINIT
  2681	016210	012703	065134			MOV #SLOT1,D
  2682	016214	012701	000343			MOV #SOFN,B
  2683	016220	012702	006442			MOV #ASOFN-SLOT1,C
  2684	016224	060302				ADD D,C
  2685	016226	066703	164054			ADD USLENT,D	;LAST AVAILABLE WORD ADDR
  2686	016232	005067	165340			CLR LINENO
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 80
	SYSTEM 323	PAGE 64 	INITIALIZE THE WORLD!

  2687	016236	005201			INIT1:	INC B
  2688	016240	032701	010000			BIT #10000,B
  2689	016244	001004				BNE INIT2
  2690	016246	010122				MOV B,(C)+
  2691	016250	005022				CLR (C)+
  2692	016252	020302				CMP D,C
  2693	016254	101370				BHI INIT1
  2694	016256	005022			INIT2:	CLR (C)+
  2695	016260	005012				CLR @C
  2696	016262	062701	000343			ADD #SOFN,B
  2697	016266	010167	163756			MOV B,NUNODE	;NUMBER OF NODES PER USER
  2698	016272	012700	003404			MOV #UVBLK,A	;TO INITIALIZE USER VARIABLES IN SWAPPED OUT USERS
  2699	016276	012701	065134			MOV #SLOT1,B	;SET UP FOR BLT
  2700	016302	012021			SETUVS:	MOV (A)+,(B)+	;BLLLLLLLLLLLLLLLLLT
  2701	016304	022700	004010			CMP #UVBLK+LUVBLK,A
  2702	016310	003374				BGT SETUVS
  2703	016312	005767	164062			TST RWWSW
  2704	016316	001016				BNE STARTF
  2705	016320	004767	170600			JSR PC,SYDRBG	;GET A SYSTEM DISK REQUEST BLOCK
  2706	016324	005020				CLR (A)+	;NO START ROUTINE
  2707	016326	016720	163752			MOV USWCNT,(A)+	;LENGTH OF A USER SLOT
  2708	016332	012720	065132			MOV #SLOT1-2,(A)+	;SWAP OUT SLOT1
  2709	016336	016720	163754			MOV DCLRUS,(A)+	;GETS PUT INTO THE CLEAR USER PLACE
  2710	016342	016720	163752			MOV DCLRUS+2,(A)+
  2711	016346	005720				TST (A)+
  2712	016350	112710	000103			MOVB #DWRTEC,(A)
  2713	016354	016767	163672	163674	STARTF:	MOV	NUSERS,NUSER2
  2714	016362	006367	163670			ASL	NUSER2
  2715	016366	005767	164012			TST	JDCSW
  2716	016372	001013				BNE	ITINIT
  2717	016374	012767	020310	001670		MOV #UTYO,TYO+2
  2718	016402	012767	020402	001746		MOV #UTYI,TYI+2
  2719	016410	012767	000003	163764		MOV #3,BRKCHR
  2720	016416	000167	171372			JMP NEXTUS
  2721	016422	000167	006246		ITINIT:	JMP TINIT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 81
	SYSTEM 323	PAGE 65 	INITIALIZE THE WORLD!

  2722					
  2723	016426	004767	171224		UGO:	JSR PC,RUNME
  2724						PRTXT ^/11LOGO /
  2725	016446	016700	162316			MOV LVERNF,A
  2726	016452	004767	015676			JSR PC,PRDN
  2727						PRCR
  2728					RSTART:
  2729	016462	016767	046406	165104		MOV SALTL,ALTL
  2730	016470	012767	000100	161062		MOV #100,TKS	;ENABLE INTERRUPTS FOR TYI
  2731					TEST1:
  2732	016476	004767	172706		MLOOP:	JSR PC,SCHEDP
  2733	016502	032767	040000	165062		BIT #BREAKF,FLAGS2
  2734	016510	001404				BEQ MLOOP1
  2735	016512	004767	007046			JSR	PC,BRAKR
  2736	016516	000167	016704			JMP ERTLN
  2737	016522	004767	000052		MLOOP1:	JSR PC,GETSTR
  2738	016526	004767	000762			JSR PC,MREAD
  2739	016532	004767	001070			JSR PC,EVLINE
  2740	016536	104442				ERROR+WDW	;WHAT SHOULD I DOO WITH (S)
  2741	016540	000756				BR MLOOP
  2742	016542	012706	066340		WSTART:	MOV #IP,P	;USE WITH CAUTION!!
  2743	016546	000745				BR RSTART
  2744	016550	000003			RUNRUG:	3
  2745	016552	000400				BR .+2	;RUG  SHOULD RETURN HERE IF $P'ED
  2746	016554	000400				BR .+2
  2747	016556	000167	030574			JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 82
	SYSTEM 323	PAGE 66 	GET A STRING

  2748						.STITL GET A STRING
  2749					
  2750	016562	016701	164716		GSTR9:	MOV CLN,B
  2751	016566	004767	034476			JSR PC,GTLINE
  2752	016572	104416				ERROR+LDE	;LINE ..(B).. DOESN'T EXIST
  2753	016574	010200				MOV C,A
  2754	016576	000425				BR GSTR8
  2755	016600	005767	164712		GETSTR:	TST FUNLEV	;ARE WE IN A PROC
  2756	016604	001522				BEQ GSTR0	;NO
  2757	016606	032767	000040	164756		BIT #ERRF,FLAGS2	;ERROR, MAYBE
  2758	016614	001116				BNE GSTR0	;YES
  2759	016616	016701	164664			MOV CLP,B	;NO, GET THIS NODE OF LLP
  2760	016622	001757				BEQ GSTR9
  2761	016624	004767	034656			JSR PC,.LOAD
  2762	016630	032700	007777			BIT #7777,A	;IS IT LAST NODE
  2763	016634	001006				BNE GSTR8
  2764						SPUSH A	;"STOP" POPS 5 WORDS
  2765						SPUSH A
  2766						SPUSH A
  2767						SPUSH A
  2768	016646	000167	032356			JMP PSTOP
  2769	016652	010067	164630		GSTR8:	MOV A,CLP
  2770	016656	010001				MOV A,B
  2771	016660	004767	034622			JSR PC,.LOAD
  2772	016664	004767	034616			JSR PC,.LOAD	;OK, GET FIRST NODE OF LINE, = LINE #
  2773	016670	010167	164610			MOV B,CLN
  2774	016674	010067	164614			MOV A,CTP	;IN CASE THERE IS; NO GENERATION #
  2775	016700	010002				MOV A,C
  2776	016702	004767	034576			JSR PC,.LOADC	;GET SECOND NODE
  2777	016706	005067	164576			CLR CLGN	; IF TYPE = SNUM, IT IS GEN #
  2778	016712	010002				MOV A,C
  2779	016714	042702	007777			BIC #7777,C
  2780	016720	022702	120000			CMP #SNUM,C
  2781	016724	001004				BNE GSTR6
  2782	016726	010167	164556			MOV B,CLGN	;IT IS
  2783	016732	010067	164556			MOV A,CTP
  2784					;FALLS THROUGH
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 83
	SYSTEM 323	PAGE 67 	GET A STRING

  2785					
  2786					;FALLS IN
  2787	016736	052767	170000	164550	GSTR6:	BIS #LIST,CTP
  2788						SPUSHS CTP
  2789	016760	032767	000002	164604		BIT #TRACEF,FLAGS2
  2790	016766	001503				BEQ GSTRT
  2791						PRCR
  2792						PRTXT ^\ #\
  2793	017004	016701	164470			MOV CPP,B
  2794	017010	004767	015736			JSR PC,PPNAME	;PRINT PNAME
  2795						PRTXT ^\  LINE \
  2796	017030	016700	164450			MOV CLN,A
  2797	017034	004767	015314			JSR PC,PRDN
  2798						PRCR
  2799	017044	004767	017034			JSR PC,PRLN
  2800	017050	000452				BR GSTRT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 84
	SYSTEM 323	PAGE 68 	GET A STRING

  2801					
  2802					
  2803	017052	032767	000001	164512	GSTR0:	BIT #TESTF,FLAGS2
  2804	017060	001457				BEQ GSTR1
  2805	017062	016700	164506			MOV ALTL,A
  2806	017066	012001				MOV (A)+,B
  2807	017070	001456				BEQ DONE
  2808	017072	010067	164476			MOV A,ALTL
  2809						PUSHS B
  2810						PRCR
  2811						PRTXT ^/TEST LINE /
  2812	017132	005267	164440			INC LINENO
  2813	017136	016700	164434			MOV LINENO,A
  2814	017142	004767	015206			JSR PC,PRDN
  2815						PRCR
  2816	017152	004767	016726			JSR PC,PRLN
  2817	017156	005067	164340			CLR FLAGS
  2818	017162	005067	164342			CLR CO
  2819	017166	005067	164340			CLR CO+2
  2820	017172	005067	164336			CLR NOR
  2821	017176	000207			GSTRT:	RTS PC
  2822						POP A	;GET RETURN ADDR
  2823						PUSH #1
  2824	017216	000110				JMP @A
  2825	017220	004767	000036		GSTR1:	JSR PC,RDSTR
  2826	017224	000764				BR GSTRT
  2827					DONE:	PRTXT ^/ALL DONE!/
  2828						PRCR
  2829						SPOP A	;CROCK!!!
  2830	017252	000167	177204			JMP RSTART	;BLECTCH?
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 85
	SYSTEM 323	PAGE 69 	READ A STRING - PTR ON S

  2831						.STITL READ A STRING - PTR ON S
  2832					RDSTR1:	PRCR
  2833	017262	005067	164322		RDSTR:	CLR NBKTS
  2834	017266	042767	040000	164276		BIC #BREAKF,FLAGS2
  2835	017274	016703	164302			MOV PRMTCH,D
  2836	017300	001402				BEQ RDSTR9
  2837	017302	004767	000762			JSR PC,TYO
  2838	017306	004767	000240		RDSTR9:	JSR	PC,RLINE
  2839	017312	004767	014046			JSR PC,BLSTI
  2840	017316	004767	001032		RDSTR2:	JSR PC,TYI
  2841	017322	032767	040000	164242		BIT	#BREAKF,FLAGS2
  2842	017330	001403				BEQ	.+10
  2843	017332	004767	006226			JSR	PC,BRAKR
  2844	017336	000441				BR	RDSTR7
  2845	017340	026703	163036			CMP BRKCHR,D	;BREAK TYPED?
  2846	017344	001436				BEQ RDSTR7	;YES
  2847	017346	005767	164236			TST NBKTS	;IN A LIST?
  2848	017352	003003				BGT RDSTR3	;YES
  2849	017354	022703	000015			CMP #15,D	;CR?
  2850	017360	001415				BEQ RDSTR4
  2851	017362	022703	000133		RDSTR3:	CMP #'[,D
  2852	017366	001002				BNE RDSTR6
  2853	017370	005267	164214			INC NBKTS
  2854	017374	022703	000135		RDSTR6:	CMP #'],D
  2855	017400	001002				BNE RDSTR5
  2856	017402	005367	164202			DEC NBKTS
  2857	017406	004767	013772		RDSTR5:	JSR PC,BLST
  2858	017412	000741				BR RDSTR2
  2859	017414	004767	014056		RDSTR4:	JSR PC,BLSTF
  2860	017420	000720				BR RDSTR	;NO CHARS TYPED
  2861						PUSHS TOPS
  2862	017434	005067	164026			CLR TOPS
  2863	017440	000207				RTS PC
  2864	017442	004767	014030		RDSTR7:	JSR PC,BLSTF
  2865	017446	000703				BR RDSTR1
  2866	017450	004767	035726			JSR PC,FRELST
  2867	017454	000700				BR RDSTR1
  2868					RQUEST:	PUSH PRMTCH
  2869	017466	012767	000074	164106		MOV #'<,PRMTCH
  2870	017474	004767	177562			JSR PC,RDSTR
  2871						POP PRMTCH
  2872	017510	000167	030342			JMP ORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 86
	SYSTEM 323	PAGE 70 	MORE READ ROUTINES!!!

  2873						.STITL MORE READ ROUTINES!!!
  2874	017514	005767	163776		MREAD:	TST FUNLEV	;ARE WE IN PROC?
  2875	017520	001405				BEQ MRD1	;NO
  2876	017522	032767	000040	164042		BIT #ERRF,FLAGS2	;YES, BUT ERROR?
  2877	017530	001001				BNE MRD1	;YES
  2878	017532	000207				RTS PC	;NO
  2879	017534	032767	000001	164030	MRD1:	BIT #TESTF,FLAGS2
  2880	017542	001002				BNE MRD2
  2881	017544	000167	012466			JMP READ	;CONVERT CHAR STRING TO TOKEN LIST
  2882	017550	000207			MRD2:	RTS PC
  2883					
  2884					
  2885	017552	005767	161734		RLINE:	TST USER
  2886	017556	002422				BLT RLINE1
  2887	017560	005767	162620			TST	JDCSW
  2888	017564	001417				BEQ	RLINE1
  2889						PUSH	U
  2890	017574	016705	161712			MOV	USER,U
  2891	017600	012765	000010	002470		MOV	#FRTYIH,FLSRES(U)
  2892	017606	004767	170776			JSR	PC,FLUSH	;RETURNS WHEN LINE DONE
  2893	017612	004767	170040			JSR	PC,RUNME
  2894						POP	U
  2895	017624	000207			RLINE1:	RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 87
	SYSTEM 323	PAGE 71 	EVAL 1 LINES

  2896						.STITL EVAL 1 LINES
  2897	017626	005767	163734		EVLINE:	TST TOPRNM
  2898	017632	001024				BNE EVLI4
  2899	017634	004767	000334		EVLI6:	JSR PC,IGNT	;EVALUATES 1 LINES ON S
  2900	017640	032767	000004	163654	EVLI1:	BIT #CRF,FLAGS
  2901	017646	001055				BNE EVLI2
  2902	017650	004767	027026			JSR PC,EVAL
  2903	017654	000401				BR EVLI3	;NO OUTPUT, OK
  2904	017656	000207				RTS PC
  2905	017660	032767	000004	163634	EVLI3:	BIT #CRF,FLAGS
  2906	017666	001045				BNE EVLI2
  2907	017670	004767	000112			JSR PC,GNT
  2908	017674	052767	000002	163620		BIS #RTF,FLAGS
  2909	017702	000756				BR EVLI1
  2910	017704	017701	163476		EVLI4:	MOV @S,B
  2911	017710	004767	033572			JSR PC,.LOAD
  2912	017714	010003				MOV A,D
  2913	017716	042700	007777			BIC #7777,A
  2914	017722	022700	120000			CMP #SNUM,A
  2915	017726	001417				BEQ EVLI5	;AN SNUM
  2916	017730	022700	130000			CMP #LNUM,A
  2917	017734	001337				BNE EVLI6	;NOT EVEN A NUMBER
  2918	017736	004767	033544			JSR PC,.LOAD	;AN LNUM, SEE IF TOO BIG
  2919	017742	032700	007777			BIT #7777,A
  2920	017746	001016				BNE EVLI7	;TOO BIG
  2921	017750	042703	170000			BIC #170000,D	;MAKE IT INTO AN SNUM
  2922	017754	060300				ADD D,A
  2923	017756	004767	035246			JSR PC,GRBAD
  2924	017762	010277	163420			MOV C,@S
  2925	017766	004767	033056		EVLI5:	JSR PC,ADLN
  2926						POPS A
  2927	020002	104000			EVLI2:	SKPRET
  2928	020004	104417			EVLI7:	ERROR+LNTB	;LINE # TOO BIG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 88
	SYSTEM 323	PAGE 72 	GET NEXT TOKEN

  2929						.STITL GET NEXT TOKEN
  2930					
  2931	020006	032767	000002	163506	GNT:	BIT #RTF,FLAGS	;IS REPEAT TOKEN FLAG SET?
  2932	020014	001417				BEQ GNT1
  2933	020016	042767	000002	163476		BIC #RTF,FLAGS	;YES
  2934	020024	016700	163514			MOV CT,A
  2935	020030	016701	163512			MOV CT+2,B
  2936	020034	001006				BNE GNT6
  2937	020036	022700	000000			CMP #SFUN,A
  2938	020042	001003				BNE GNT6
  2939	020044	052767	000004	163450		BIS #CRF,FLAGS
  2940	020052	000207			GNT6:	RTS PC
  2941	020054	042767	000001	163440	GNT1:	BIC #PTLPF,FLAGS
  2942	020062	022767	005770	163456		CMP #$LLPAR,CT+2	;IS CT "("
  2943	020070	001404				BEQ GNT3
  2944	020072	022767	006004	163446		CMP #$LPAR,CT+2
  2945	020100	001003				BNE .+8.
  2946	020102	052767	000001	163412	GNT3:	BIS #PTLPF,FLAGS	;YES, SET PTLPF
  2947	020110	016701	163430			MOV CT,B	;GET LINK TO NEXT TOKEN
  2948	020114	010167	163374			MOV B,CTP
  2949	020120	032701	007777			BIT #7777,B
  2950	020124	001407				BEQ GNT2	;ANY TOKENS LEFT
  2951	020126	004767	033354			JSR PC,.LOAD	;YES
  2952	020132	010067	163406		GNT4:	MOV A,CT
  2953	020136	010167	163404			MOV B,CT+2
  2954	020142	000207				RTS PC
  2955	020144	032767	000004	163350	GNT2:	BIT #CRF,FLAGS
  2956	020152	001007				BNE GNT5
  2957	020154	052767	000004	163340		BIS #CRF,FLAGS
  2958	020162	012700	000000			MOV #SFUN,A
  2959	020166	005001				CLR B
  2960	020170	000760				BR GNT4
  2961	020172	104432			GNT5:	ERROR+OOT	;OUT OF TOKENS
  2962					IGNT:	POPS B
  2963	020204	032701	007777			BIT #7777,B
  2964	020210	001420				BEQ IGNT1
  2965	020212	042767	000004	163302		BIC #CRF,FLAGS
  2966	020220	004767	033262			JSR PC,.LOAD
  2967	020224	010067	163314		IGNT2:	MOV A,CT
  2968	020230	010167	163312			MOV B,CT+2
  2969	020234	052767	000002	163260		BIS #RTF,FLAGS
  2970	020242	012767	000001	163242		MOV #1,CTN
  2971	020250	000207				RTS PC
  2972	020252	052767	000004	163242	IGNT1:	BIS #CRF,FLAGS
  2973	020260	012700	000000			MOV #SFUN,A
  2974	020264	005001				CLR B
  2975	020266	000756				BR IGNT2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 89
	SYSTEM 323	PAGE 73 	GET NEXT TOKEN

  2976	020270	000137	020274		TYO:	JMP @#STYO
  2977	020274	105767	157264		STYO:	TSTB TPS
  2978	020300	100375				BPL .-4
  2979	020302	010367	157260			MOV D,TPB
  2980	020306	000207				RTS PC
  2981	020310	105767	157250		UTYO:	TSTB TPS
  2982	020314	100375				BPL .-4
  2983	020316	110367	157244			MOVB D,TPB
  2984	020322	022703	000015			CMP #15,D
  2985	020326	001006				BNE UTYOR
  2986	020330	012703	000012			MOV #12,D
  2987	020334	004767	177730			JSR PC,TYO
  2988	020340	012703	000015			MOV #15,D
  2989	020344	000207			UTYOR:	RTS PC
  2990	020346	000000			TYOT:	0
  2991	020350	000000				0
  2992	020352	000000			CH:	0
  2993	020354	000137	020360		TYI:	JMP @#STYI
  2994	020360	000001			STYI:	WAIT
  2995	020362	105767	157172			TSTB TKS
  2996	020366	100374				BPL STYI
  2997	020370	116703	157166			MOVB TKB,D
  2998	020374	042703	177200			BIC #177200,D
  2999	020400	000735				BR STYO
  3000	020402	000001			UTYI:	WAIT
  3001	020404	005767	163170			TST CHI
  3002	020410	001774				BEQ UTYI
  3003	020412	116703	163162			MOVB CHI,D
  3004	020416	005067	163156			CLR	CHI
  3005	020422	042703	177600			BIC #177600,D
  3006	020426	000720				BR TYO
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 90
	SYSTEM 323	PAGE 76 	GARBAGE COLLECTOR

  3007						.STITL	GARBAGE COLLECTOR
  3008		010000			NNODES==4096.
  3009		001002			GCBTL== NNODES/8./2.*2.+2.	;GARBAGE COLLECT BIT TABLE LENGTH
  3010					
  3011					MARKN:	SPUSH A	;MARK NODE(B)
  3012						SPUSH B
  3013	020434	010100				MOV B,A
  3014	020436	042700	170000			BIC #170000,A
  3015	020442	042701	177770			BIC #177770,B
  3016	020446	116101	020474			MOVB BMT(B),B
  3017	020452	006200				ASR A
  3018	020454	006200				ASR A
  3019	020456	006200				ASR A
  3020	020460	066700	162754			ADD GCBITS,A
  3021	020464	150110				BISB B,(A)
  3022						SPOP B
  3023						SPOP A
  3024	020472	000207				RTS PC
  3025					
  3026	020474	   001		
  3027	020475	   002		
  3028	020476	   004		
  3029	020477	   010		
  3030	020500	   020		
  3031	020501	   040		
  3032	020502	   100		
  3033	020503	   200			BMT:	.BYTE 1,2,4,10,20,40,100,200
  3034		000001				.IFNZ GCDBUG
  3035	020504	020642			LMT:	DMK	;SYSTEM FUNCTION
  3036	020506	020642				DMK	;INFIX (SYSTEM FUNCTION)
  3037	020510	020642				DMK	;USER FUNCTION
  3038	020512	020642				DMK	;VARIABLE BINDING
  3039	020514	020644				GCDIE	;UNUSED
  3040	020516	020644				GCDIE	;UNUSED
  3041	020520	020644				GCDIE	;UNUSED
  3042	020522	020642				DMK	;SHORT STRING
  3043	020524	020704				MKSNP	;SNAP
  3044	020526	020642				DMK	;ATOM
  3045	020530	020642				DMK	;SHORT NUMBER
  3046	020532	020646				GCMARK	;LONG NUMBEB
  3047	020534	020646				GCMARK	;LONG STRING
  3048	020536	020644				GCDIE	;TBA
  3049	020540	020646				GCMARK	;SENTENCE
  3050	020542	020646				GCMARK	;LIST
  3051						.ENDC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 91
	SYSTEM 323	PAGE 77 	GARBAGE COLLECTOR

  3052					
  3053					
  3054	020544	020127	100000		MARKL:	CMP	B,#SNP	;IS LIST A SNAP?
  3055	020550	101403				BLOS	MKL0	;NO
  3056	020552	020127	110000			CMP	B,#<SNP+10000>
  3057	020556	103436				BLO	MKSNPL	;YES
  3058					MKL0:	PUSH A	;MARK LIST
  3059						SPUSH B	;NODE ADDS IN B
  3060						SPUSH C
  3061		000001				.IFNZ GCDBUG
  3062						SPUSH D
  3063						.ENDC
  3064	020574	010100				MOV B,A
  3065	020576	010002			MKL1:	MOV A,C
  3066	020600	032702	007777			BIT #7777,C	;IS THERE ANOTHER NODE
  3067	020604	001444				BEQ MKL3
  3068	020606	010201				MOV C,B	;YES, MARK IT
  3069	020610	004767	177614			JSR PC, MARKN
  3070	020614	004767	032664			JSR PC,.LOADC	;GET IT
  3071					
  3072		000001				.IFNZ GCDBUG
  3073	020620	010003				MOV A,D
  3074	020622	000303				SWAB D
  3075	020624	042703	177417			BIC #177417,D
  3076	020630	006203				ASR D
  3077	020632	006203				ASR D
  3078	020634	006203				ASR D	;ALL THIS GIVES YOU THE TYPE*2
  3079	020636	000173	020504			JMP @LMT(D)	;WHICH YOU MIGHT MARK ON
  3080					
  3081	020642	000755			DMK:	BR MKL1
  3082	020644	000000			GCDIE:	HALT
  3083	020646	004767	177672		GCMARK:	JSR PC,MARKL
  3084	020652	000751				BR MKL1
  3085						.ENDC
  3086					MKSNPL:	EXCH	SNPTEM,C	;B POINTS TO SNAP
  3087	020672	004767	041302			JSR	PC,MKDC
  3088	020676	016702	161546			MOV	SNPTEM,C	;RESTORE C
  3089	020702	000726				BR	MKL0
  3090	020704	004767	041270		MKSNP:	JSR	PC,MKDC	;ONLY MARKS THE DISPLAY CODE
  3091	020710	004767	177644			JSR	PC,MKL0	;ALSO NEED TO MARK THE NODES
  3092	020714	000730				BR	MKL1
  3093					
  3094		000001				.IFZ GCDBUG
  3095						BIC #7777,A
  3096						CMP #100000,A
  3097						BLO MKL1
  3098						BEQ MKSNP
  3099						CMP #120000,A
  3100						BLOS MKL1
  3101						JSR PC,MARKL
  3102						BR MKL1
  3103						.ENDC
  3104					
  3105		000001			MKL3:	.IFNZ GCDBUG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 92
	SYSTEM 323	PAGE 77.1 	GARBAGE COLLECTOR

  3106						SPOP D
  3107						.ENDC
  3108						SPOP C
  3109						SPOP B
  3110						POP A
  3111	020732	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 93
	SYSTEM 323	PAGE 78 	GARBAGE COLLECTOR

  3112					
  3113	020734	004567	171022		.GCOLL:	JSR F,ACSAV
  3114						PUSH ACRELF
  3115	020750	016705	160536			MOV USER,U
  3116	020754	005767	161414		.GCOL2:	TST GCLOCK	;IS SOMEONE ELSE GC'ING?
  3117	020760	002403				BLT .GCOL3	;NO, GO AHEAD
  3118	020762	004767	167622			JSR PC,FLUSH	;WAIT
  3119	020766	000772				BR .GCOL2
  3120	020770	010567	161400		.GCOL3:	MOV U,GCLOCK
  3121	020774	004767	166656			JSR PC,RUNME
  3122	021000	016700	162434			MOV GCBITS,A	;GARBAGE COLLECT
  3123	021004	012701	000400			MOV #GCBTL/2-1,B	;CLEAR BIT TABLE
  3124	021010	012720	000001			MOV #1,(A)+	;ALWAYS PROTECT NODE ZERO
  3125	021014	005020			.GCOL1:	CLR (A)+
  3126	021016	005301				DEC B
  3127	021020	003375				BGT .GCOL1
  3128						PUSHS	SNLIST	;PROTECT THESE LOSERS
  3129						SPUSHS	#TRUE
  3130						SPUSHS	#FALSE
  3131					
  3132	021064	012767	000020	162360		MOV #RELE,ACRELF
  3133	021072	012705	000103			MOV #HCC,F	;NUMBER OF HASH CODE ELEMENTS
  3134	021076	016704	162334			MOV SUHCT,E	;ADDRESS OF HASH TABLE
  3135	021102	005305			MKUOBL:	DEC F
  3136	021104	002465				BLT MKTPS
  3137	021106	012403				MOV (E)+,D	;GET A HASH CODE ELEMENT
  3138	021110	010302			MKUOBI:	MOV D,C
  3139	021112	001773				BEQ MKUOBL	;NO MORE
  3140	021114	010301				MOV D,B	;MARK THE NODE
  3141	021116	004767	177306			JSR PC,MARKN
  3142	021122	004767	032356			JSR PC,.LOADC
  3143	021126	010003				MOV A,D
  3144	021130	010102				MOV B,C
  3145	021132	004767	177272			JSR PC,MARKN	;MARK NODE POINTED TO BY THIS ONE
  3146	021136	004767	032342			JSR PC,.LOADC	;THEN GET IT
  3147	021142	004767	177376			JSR PC,MARKL	;SHOULD BE PNAME POINTER NODE
  3148	021146	010002				MOV A,C
  3149	021150	032702	007777		MKUOE:	BIT #7777,C	;ONE OTHER NODE?
  3150	021154	001755				BEQ MKUOBI	;NO
  3151	021156	010201				MOV C,B	;YES
  3152	021160	004767	177244			JSR PC,MARKN	;MARK IT
  3153	021164	004767	032314			JSR PC,.LOADC
  3154	021170	010267	161254			MOV	C,SNPTEM	;SAVE IN CASE VBIND IS SNAP
  3155	021174	010002				MOV A,C
  3156	021176	042700	007777			BIC #7777,A
  3157	021202	022700	020000			CMP #FBIND,A
  3158	021206	001415				BEQ MKFB	;FUNCTION BINDING
  3159	021210	022700	030000			CMP #VBIND,A
  3160	021214	001407				BEQ MKVB	;VARIABLE BINDING
  3161	021216	022700	120000			CMP #SFBIND,A
  3162	021222	001413				BEQ MKSFB	;SWAPPED FB
  3163	021224	022700	130000			CMP #SVBIND,A
  3164	021230	001407				BEQ MKSVB	;SWAPPED VB
  3165	021232	000000				HALT	;BUG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 94
	SYSTEM 323	PAGE 78.1 	GARBAGE COLLECTOR

  3166	021234	004767	177304		MKVB:	JSR PC,MARKL
  3167	021240	000743				BR MKUOE
  3168	021242	004767	177276		MKFB:	JSR PC,MARKL
  3169	021246	000740				BR MKUOE
  3170	021250	000737			MKSVB:	BR MKUOE
  3171	021252	004767	177266		MKSFB:	JSR PC,MARKL
  3172	021256	000734				BR MKUOE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 95
	SYSTEM 323	PAGE 79 	GARBAGE COLLECTOR

  3173					
  3174					
  3175	021260	012705	002454		MKTPS:	MOV #GCMKL,F
  3176	021264	012501			MKRNDM:	MOV (F)+,B	;POINTER TO POINTER
  3177	021266	001405				BEQ MKSPDL	;LAST ONE
  3178	021270	011101				MOV (B),B	;REAL NODE ADDRESS
  3179	021272	001774				BEQ MKRNDM	;NOTHING THERE
  3180	021274	004767	177244			JSR PC,MARKL
  3181	021300	000771				BR MKRNDM
  3182	021302	016704	162112		MKSPDL:	MOV SPBASE,E
  3183	021306	014401			MKSP1:	MOV -(E),B	;GET A S PDL WORD
  3184	021310	020467	162072			CMP E,S	;END OF S PDL?
  3185	021314	002403				BLT MKSP2	;YES
  3186	021316	004767	177222			JSR PC,MARKL	;MARK S PDL WORD
  3187	021322	000771				BR MKSP1
  3188	021324	016700	162070		MKSP2:	MOV SPBASE,A
  3189	021330	005720				TST (A)+
  3190	021332	001002				BNE MKSP3	;THERE I S PDL ON DISK, GO MARK IT
  3191	021334	005710				TST (A)
  3192	021336	001504				BEQ MKSP4
  3193	021340	004767	165706		MKSP3:	JSR PC,UBLKGR
  3194	021344	000000				HALT
  3195	021346	000000				HALT
  3196	021350	010167	162104			MOV B,SSAVEA
  3197	021354	010267	162102			MOV C,SSAVEA+2	;PLACE TO SAVE S PDL
  3198	021360	016760	162032	000004		MOV SSWPAD,4(A)
  3199	021366	112760	000103	000014		MOVB #DWRTEC,14(A)	;WRITE OUT CURRENT S PDL
  3200	021374	004767	165612			JSR PC,DSKWA2
  3201	021400	016701	162014		MKSP8:	MOV SPBASE,B
  3202	021404	005721				TST (B)+	;IS @HERE ANODHER BLOCK ON DHSK?
  3203	021406	001002				BNE MKSP5	;YES
  3204	021410	005711				TST (B)
  3205	021412	001432				BEQ MKSP6	;NO
  3206	021414	004767	165504		MKSP5:	JSR PC,SYDRBG	;PREPARE TO SWAP IN BLOCK
  3207	021420	005020				CLR (A)+
  3208	021422	012720	177600			MOV #-200,(A)+
  3209	021426	016720	161764			MOV SSWPAD,(A)+
  3210	021432	016701	161762			MOV SPBASE,B
  3211	021436	012120				MOV (B)+,(A)+
  3212	021440	012120				MOV (B)+,(A)+
  3213	021442	005720				TST (A)+
  3214	021444	112710	000105			MOVB #DREADC,(A)
  3215	021450	004767	165542			JSR PC,DSKWAI
  3216	021454	012705	000200			MOV #200,F
  3217	021460	016704	161734			MOV SPBASE,E
  3218	021464	014401			MKSP7:	MOV -(E),B	;MRK THIS PIECE OF S PDL
  3219	021466	004767	177052			JSR PC,MARKL
  3220	021472	005305				DEC F
  3221	021474	003373				BGT MKSP7
  3222	021476	000740				BR MKSP8
  3223	021500	004767	165420		MKSP6:	JSR PC,SYDRBG	;PREPARE TO SWAP CURBENT PDL
BACK
  3224	021504	005020				CLR (A)+
  3225	021506	012720	177600			MOV #-200,(A)+
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 96
	SYSTEM 323	PAGE 79.1 	GARBAGE COLLECTOR

  3226	021512	016720	161700			MOV SSWPAD,(A)+
  3227	021516	016720	161736			MOV SSAVEA,(A)+
  3228	021522	016720	161734			MOV SSAVEA+2,(A)+
  3229	021526	005720				TST (A)+
  3230	021530	112710	000105			MOVB #DREADC,(A)
  3231	021534	004767	165456			JSR PC,DSKWAI
  3232	021540	016702	161714			MOV SSAVEA,C
  3233	021544	004767	165566			JSR PC,UBLKFR
  3234					MKSP4:
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 97
	SYSTEM 323	PAGE 80 	GARBAGE COLLECTOR

  3235					
  3236					
  3237	021550	004767	040320			JSR PC,DSGCF
  3238	021554	062767	000006	161624		ADD	#6,S	;GET RID OF 3 GUYS PUSHED BEFORE
  3239					
  3240							;OK NOW RETURN ALL IN MARKED NODES
  3241							;RA ADDS OF LIT MAP
  3242							;RB NODE ADDS
  3243							;RC ACTUAL ADDER OF NODE
  3244							;RD BIT MAP
  3245						;RE POINT TO LIST OF FREE STORAGE RECYCLES NODES
  3246							;START COLLECTING AT LUNN(LOWEST UNPROTECTED NODE #)
  3247	021562	005004				CLR E
  3248	021564	005067	161664			CLR NNGC
  3249	021570	005001				CLR B	;NODE ZERO
  3250	021572	016702	161606			MOV UAB,C	;NODE ZERO ADDRESS
  3251	021576	016705	160446			MOV NUNODE,F	;NUMBER OF NODES
  3252	021602	016700	161632			MOV GCBITS,A	;BIT TABLE ADDR
  3253	021606	012003				MOV (A)+,D
  3254	021610	000261				SEC
  3255	021612	006003				ROR D
  3256					
  3257	021614	103406			GCRT2:	BCS GCRT3
  3258	021616	010422				MOV E,(C)+	;WE HAVE A NODE, LINK IN 1ST WORD
  3259	021620	005022				CLR (C)+	;CLEAR SECOND
  3260	021622	010104				MOV B,E	;NEW FREE STORAGE HEAD NODE
  3261	021624	005267	161624			INC NNGC
  3262	021630	000402				BR GCRT4
  3263	021632	062702	000004		GCRT3:	ADD #4,C
  3264	021636	005201			GCRT4:	INC B
  3265	021640	005305				DEC F
  3266	021642	003407				BLE GCRT5
  3267	021644	000241				CLC
  3268	021646	006003				ROR D
  3269	021650	001361				BNE GCRT2
  3270	021652	012003				MOV (A)+,D	;GET NEXT WORD OF BIT MAP
  3271	021654	000261				SEC
  3272	021656	006003				ROR D
  3273	021660	000755				BR GCRT2
  3274	021662	010467	161576		GCRT5:	MOV E,FREE	;YES
  3275					
  3276	021666	012767	177777	160500		MOV #-1,GCLOCK
  3277						POP ACRELF
  3278	021704	004567	170066			JSR F,ACRES
  3279	021710	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 98
	TYI 151	PAGE 1 	GARBAGE COLLECTOR

  3280					
  3281					
  3282						.STITL TELETYPE AND TYI
  3283					;THINGS TO DO --
  3284					;DIFFERENT TTY TYPES
  3285					
  3286		000732				VERN==VERN+%FNAM2
  3287					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 99
	TYI 151	PAGE 2 	TELETYPE AND TYI

  3288					
  3289					
  3290					.MACR	IFL	FLG,EXPR	;ONE LINE COND IF FLG .NE. 0
  3291					.XLIST
  3292						.IFNZ	FLG
  3293						.LIST
  3294						EXPR
  3295						.XLIST
  3296						.ENDC
  3297					.LIST
  3298					.ENDM
  3299					
  3300					.MACR	IFN	FLG,EXPR	;ONE LINE COND IF FLG=0
  3301					.XLIST
  3302						.IFZ	FLG
  3303						.LIST
  3304						EXPR
  3305						.XLIST
  3306						.ENDC
  3307					.LIST
  3308					.ENDM
  3309					
  3310					.MACR	TIPNTR	TOP,SZ,TMS	;MAKES MNUSRS+TMS  PNTRS
  3311					.XLIST
  3312						.ZZZ==0
  3313						.REPT	MNUSRS+TMS
  3314							TOP+<SZ*.ZZZ>
  3315							.ZZZ==.ZZZ+1
  3316						.ENDR
  3317					.LIST
  3318					.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 100
	TYI 151	PAGE 3 	TELETYPE AND TYI

  3319					
  3320					
  3321					;VARIOUS FLAGS AND TELETYPE VARIABLES
  3322					
  3323						;FLAGS TTY STATUS
  3324		100000			TYIDR==100000
  3325		040000			TIDW==40000	;TYI DISK WRITE IN PROCESS
  3326		020000			TIDR==20000	;TYI DISK READ IN PROCESS
  3327		010000			TIEDR==10000	;EDIT DSK READ
  3328		004000			TIEDW==4000
  3329		174000			TIDTRA==TYIDR!TIDW!TIDR!TIEDR!TIEDW	;DISK TRANSFER
  3330		002000			TIBR==2000	;^G (BREAK) TYPED
  3331		001000			TIED==1000		;IN EDIT MODE
  3332		000200			FCQF==200	;CNTRL Q
  3333					
  3334		000001			NTY==1
  3335		000000			NFTY==0
  3336		000000			NKLTY==0
  3337		000002			NFKLTY==2*NTY
  3338		000000			NDCTY==0
  3339		000002			NFDCTY==2*<NTY+NKLTY>
  3340		000000			NDPTY==0
  3341		000002			NFDPTY==2*<NTY+NKLTY+NDCTY>
  3342		000007			NDMTY==7
  3343		000002			NFDMTY==2*<NTY+NKLTY+NDCTY+NDPTY>
  3344		000010			NTTY==NTY+NKLTY+NDCTY+NDCTY+NDPTY+NDMTY
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 101
	TYI 151	PAGE 4 	TELETYPE AND TYI

  3345					
  3346						.STITLE	TELETYPE BUFFERS AND VARIABLES
  3347						;BUFFERS
  3348		021712			.EVEN
  3349		000006				TITQSZ==6	;SIZE OF TEMP TELETYPE INPUT BUFFER,
  3350		021772			TITQ:	.=.+<TITQSZ*NTTY>	;TEMP TYI INT BUFFERS
  3351		000100				TIBFSZ==100	;TYPE IN BUFFER+EDIT BUF SIZE
  3352		022772			TIBF:	.=.+<TIBFSZ*NTTY>	;TYPE IN AND EDIT BUFFERS
  3353		000040				TOBFSZ==40	;TYPE OUT BUFFER SIZE
  3354		023372			TOBF:	.=.+<TOBFSZ*NTTY>	;TYPE OUT BUFFERS
  3355					;TYPE OUT INFO
  3356		023412			CHARNO:	.=.+<NTTY*2>
  3357					LINEL:
  3358					
  3359					;BUFFER PNTRS
  3360						;TEMP TYPE IN QUEUE
  3361					TITQT:	TIPNTR	TITQ,TITQSZ,1	;TEMP Q TOP AND BOTTOM
  3362		023500			TITQP:	.=.+<2*NTTY>	;NXT TO BE PROCESSED
  3363		023520			TITQL:	.=.+<2*NTTY>	;TEMP Q LAST IN
  3364		023540			TITQN:	.=.+<2*NTTY>
  3365						;TYPE IN BUFFERS
  3366					TIBT:	TIPNTR	TIBF,TIBFSZ,1	;TYI BUFFER TOP (DOUBLE AS EDIT BUF BOTTOM)
  3367		023606			TIBP:	.=.+<2*NTTY>
  3368		023626			TYIBP:	.=.+<2*NTTY>	;SAME AS ABOVE,USED BY TYI
  3369		023646			TITN:	.=.+<NTTY*2>
  3370		023666			TYITN:	.=.+<NTTY*2>
  3371		023706			TIBL:	.=.+<2*NTTY>	;LAST+1 THESE PNTRS CHANGE IN EDIT MODE
  3372		023726			TIPC:	.=.+<2*NTTY>
  3373		023746			TISVD:	.=.+<2*NTTY>
  3374						;EDIT BUFFERS
  3375		000040				EDBFSZ==40	;EDIT BUFFER SIZE
  3376					TIEBT:	TIPNTR	TIBF+EDBFSZ,TIBFSZ,0	;EDIT BUF TOP
  3377		024012			TIEBP:	.=.+<2*NTTY>	;PNTR INITIALLY PAST BOTTOM
  3378						;TYPE OUT BUFFERS
  3379					TOBT:	TIPNTR	TOBF,TOBFSZ,1	;TOP & BOTTOM
  3380		024060			TOBFF:	.=.+<2*NTTY>
  3381		024100			TOBP:	.=.+<2*NTTY>	;NEXT CHAR
  3382		024120			TOTN:	.=.+<NTTY*2>
  3383		024140			TOPC:	.=.+<NTTY*2>
  3384		024160			TOSVC:	.=.+<NTTY*2>
  3385		024200			TOSVD:	.=.+<NTTY*2>
  3386		024220			TODING:	.=.+<NTTY*2>
  3387		000001			TOSND:	.REPT	NTY
  3388	024220	031230				CNSND
  3389					.ENDR
  3390		000007			.REPT	NDMTY
  3391						DMSND
  3392					.ENDR
  3393						;DISK BUFFER POINTERS
  3394		024260			TILD:	.=.+<NTTY*2>
  3395		024300			TIHD:	.=.+<NTTY*2>
  3396		024320			TIDP:	.=.+<NTTY*2>	;# OF WDS IN TYI DSK BUFFER USED BY INT ROUTINES
  3397		024340			TYIDP:	.=.+<NTTY*2>	;DITTO USED BY TYI
  3398		024360			TYIFDP:	.=.+<NTTY*2>	;# OF WDS TRANSFERREDFROM DSK
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 102
	TYI 151	PAGE 4.1 	TELETYPE BUFFERS AND VARIABLES

  3399						;EDIT BUFFER
  3400		024400			TIELD:	.=.+<NTTY*2>
  3401		024420			TIEHD:	.=.+<NTTY*2>
  3402		024440			TIEDP:	.=.+<NTTY*2>	;# OF WDS TRANSFERRED TO DSK
  3403		024460			TIEFDP:	.=.+<NTTY*2>	;# OF WDS TRANSFERRED FROM
  3404					
  3405		024500			TTYBR:	.=.+<NTTY*2>
  3406		024520			TTYEBR:	.=.+<NTTY*2>
  3407						;TTY STATUS
  3408		024540			TTYST:	.=.+<NTTY*2>
  3409					
  3410						;USER INDEX
  3411		024560			TTYU:	.=.+<2*NTTY>
  3412					
  3413		024556				DMBIT=.-NFDMTY
  3414							;BAR BIT FOR TTY
  3415		000001				.ZZZ==1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 103
	TYI 151	PAGE 5 	TELETYPE BUFFERS AND VARIABLES

  3416					
  3417						.STITLE	CHAR DISPATCH TABLES
  3418					
  3419						;TYI DISPATCH TABLES
  3420					CTIS:		;SPECIAL CHARACTERS -- DTBL (CHAR) HAS FSF ON
  3421	024614	026236				TICC	;^C COPIES NEXT CHAR
  3422	024616	026260				TICD	;^D DELETES NEXT CHAR
  3423	024620	026746				TICZ	;^G BREAK
  3424	024622	026306				TICM	;^M CARRIAGE RETURN -- POSSIBLE END OF LINE
  3425	024624	026432				TICN	;^N COPIES NEXT WORD
  3426	024626	026504				TICQ	;^Q QUOTES NEXT CHARACTER
  3427	024630	026514				TICR	;^R COPIES REST OF EDIT BUFFER
  3428	024632	026546				TICS	;^S SKIPS (DELETES) NEXT WORD
  3429	024634	026630				TICW	;^W DELETES PREVIOUS WORD
  3430	024636	026220				TGTC2	;^X CLARIFY INPUT
  3431	024640	026656				TICY	;^Y RECOVER PREVIOUS LINE
  3432	024642	026746				TICZ	;^Z EMPTIES TYPE IN BUFFER
  3433	024644	027156				TIDEL	;RBO RUBOUT
  3434					
  3435					CTIQ:	;QUOTING CHARS
  3436	024646	027124				TIOBR	;[
  3437	024650	027132			CTIUQ:	TICBR	;]
  3438	024652	027124				TIOBR
  3439					
  3440							;TYO DISPATCH TABLE FOR CHARS WITH FOF
  3441	024654	032142			CTOS:	TOCB	;^B ECHOES AS SPACE
  3442	024656	032164				TOCH	;^H BACKSPACE
  3443	024660	031702				UTYO4	;^G BELL
  3444	024662	031716				TOCM	;^M CARRIAGE RETURN
  3445	024664	032202				TOCI	;^I TAB
  3446	024666	031702				UTYO4	;^J LINEFEED
  3447	024670	031702				UTYO4	;^K VERT TAB
  3448	024672	031702				UTYO4	;^L FORMFEED
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 104
	TYI 151	PAGE 6 	CHAR DISPATCH TABLES

  3449					
  3450					
  3451	024674	005005			TINIT:	CLR	U
  3452	024676	012704	024720			MOV	#SIMTST,E
  3453	024702	020424				CMP	E,(E)+
  3454	024704	001004				BNE	.+12
  3455	024706	012767	000077	164614		MOV	#77,CLKBDM+2	;USING SIMULATOR
  3456	024714	005205				INC	U
  3457	024716	010527				MOV	U,(PC)+
  3458	024720	024720			SIMTST:	SIMTST
  3459	024722	005005				CLR	U
  3460	024724	005004				CLR	E
  3461	024726	004767	000176		TINIT1:	JSR	PC,TTYRST
  3462	024732	010465	002514			MOV	E,UTTY(U)
  3463	024736	010564	024540			MOV	U,TTYU(E)
  3464	024742	016564	002522	024240		MOV	DTYIBF(U),TILD(E)
  3465	024750	016564	002524	024260		MOV	DTYIBF+2(U),TIHD(E)
  3466	024756	016564	002526	024360		MOV	DEDTBF(U),TIELD(E)
  3467	024764	016564	002530	024400		MOV	DEDTBF+2(U),TIEHD(E)
  3468	024772	005724				TST	(E)+
  3469	024774	062705	000056			ADD	#LUBLK,U
  3470	025000	020467	155252			CMP	E,NUSER2
  3471	025004	002750				BLT	TINIT1
  3472					
  3473	025006	012767	027464	173342		MOV	#JTYI,TYI+2
  3474	025014	012767	031314	173250		MOV	#JTYO,TYO+2
  3475	025022	012767	000007	155352		MOV	#7,BRKCHR
  3476	025030	012767	012224	165154		MOV	#CRLF,.CRLF+2
  3477		000001			.IFNZ NTY
  3478	025036	012767	025736	153014		MOV	#CNSQ,TKBRV
  3479	025044	012767	031214	153012		MOV	#CNINT,TPBRV
  3480	025052	012767	000100	152500		MOV	#100,TKS
  3481	025060	012767	000100	152476		MOV	#100,TPS
  3482					.ENDC
  3483	025066	012767	001000	147712		MOV	#DMCA+NFDMTY,DMTBR
  3484	025074	012767	001200	000606		MOV	#DMTT,TTP
  3485	025102	012767	030754	153204		MOV	#DMINT,DMTBRV
  3486	025110	012767	011526	164400		MOV	#CLKBDM,CLKBR1+2	;TYPE IN AT CLOCK LEVEL
  3487	025116	012767	010001	147654		MOV	#10001,DMCSR	;TRANSMIT INTS ONLY
  3488	025124	000167	162664			JMP	NEXTUS
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 105
	TYI 151	PAGE 7 	CHAR DISPATCH TABLES

  3489					
  3490					
  3491					;ACS (IN GENERAL)
  3492					;E -- TTY*2
  3493					;D-- CHARACTER
  3494					;C -- CHARACTER DISPATCHING
  3495					;B&A -- VARIOUS HACKS, USUALLY NOT USED
  3496					;U -- NOT USED, HOPEFULLY WILL CONTAIN USER
  3497					
  3498					;TTYRST --
  3499					;CALL THIS WITH TTY IN E TO RESET INDVIDUAL TTY
  3500	025130	016464	023432	023460	TTYRST:	MOV	TITQT(E),TITQP(E)	;TEMP Q PNTRS
  3501	025136	016464	023432	023500		MOV	TITQT(E),TITQL(E)
  3502	025144	016464	023500	023460	TTYRS1:	MOV	TITQL(E),TITQP(E)
  3503	025152	005064	023520			CLR	TITQN(E)
  3504	025156	052764	002000	024520	TTYRS2:	BIS	#TIBR,TTYST(E)
  3505	025164	026427	024220	031102		CMP	TOSND(E),#DMSND
  3506	025172	001013				BNE	TTYRS4
  3507	025174	046467	024556	003774		BIC	DMBIT(E),DMTRAN
  3508	025202	046467	024556	147572		BIC	DMBIT(E),DMBAR
  3509	025210	005064	001036			CLR	DMWC(E)		;TYPE OUT STUFF
  3510	025214	016464	024012	000776		MOV	TOBT(E),DMCA(E)
  3511	025222	016464	024012	024060	TTYRS4:	MOV	TOBT(E),TOBP(E)
  3512	025230	016464	024012	024040		MOV	TOBT(E),TOBFF(E)
  3513	025236	005064	023372			CLR	CHARNO(E)
  3514	025242	005064	024120			CLR	TOPC(E)
  3515	025246	005064	024100			CLR	TOTN(E)
  3516	025252	005064	024200			CLR	TODING(E)
  3517	025256	032764	174000	024520		BIT	#TIDTRA,TTYST(E)
  3518	025264	001005				BNE	TTYRS3
  3519	025266	042764	002000	024520		BIC	#TIBR,TTYST(E)
  3520	025274	005064	024320			CLR	TYIDP(E)
  3521	025300	042764	001277	024520	TTYRS3:	BIC	#TIED!277,TTYST(E)	;INPUT STUFF
  3522	025306	016464	023542	023666		MOV	TIBT+2(E),TIBL(E)
  3523	025314	016464	023540	023566		MOV	TIBT(E),TIBP(E)	;TYI BUF
  3524	025322	016464	023540	023606		MOV	TIBT(E),TYIBP(E)
  3525	025330	016464	023542	023772		MOV	TIBT+2(E),TIEBP(E)	;EDIT BUFFER
  3526	025336	005064	024300			CLR	TIDP(E)		;DSK WD CNT
  3527	025342	005064	024420			CLR	TIEDP(E)
  3528	025346	005064	024340			CLR	TYIFDP(E)
  3529	025352	005064	024440			CLR	TIEFDP(E)
  3530	025356	005064	023626			CLR	TITN(E)
  3531	025362	005064	024460			CLR	TTYBR(E)
  3532	025366	005064	024500			CLR	TTYEBR(E)
  3533	025372	000207				RTS	PC
  3534					
  3535					;EDITA--
  3536					;CALL TO START EDIT
  3537	025374	052764	001000	024520	EDITA:	BIS	#TIED,TTYST(E)
  3538	025402	016464	023746	023666		MOV	TIEBT(E),TIBL(E)	;USE 1/2 TYI BUFFER FOR EDIT BUF
  3539	025410	016464	023746	023772		MOV	TIEBT(E),TIEBP(E)
  3540	025416	000207				RTS	PC
  3541					
  3542					;EDITZ--
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 106
	TYI 151	PAGE 7.1 	CHAR DISPATCH TABLES

  3543					;CALL TO END EDIT
  3544	025420	042764	001000	024520	EDITZ:	BIC	#TIED,TTYST(E)
  3545	025426	016464	023542	023666		MOV	TIBT+2(E),TIBL(E)	;USE EDIT BUF FOR TYI AGAIN
  3546	025434	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 107
	TYI 151	PAGE 8 	CHAR DISPATCH TABLES

  3547					
  3548						.STITLE TYPE IN
  3549					;TISQ --
  3550					;MOVE CHARS FROM TUMBLE TABLE TO TEMPORARY TYPE IN QUEUES
  3551	025436	042703	177600		TISQ:	BIC	#177600,D
  3552	025442	016405	024540		TISQ1:	MOV	TTYU(E),U
  3553	025446	020367	154730			CMP	D,BRKCHR
  3554	025452	001426				BEQ	BREAK
  3555	025454	026527	002470	000010		CMP	FLSRES(U),#FRTYIH
  3556	025462	001021				BNE	TISQ3
  3557	025464	026427	023520	000006		CMP	TITQN(E),#TITQSZ
  3558	025472	002043				BGE	DING
  3559	025474	110374	023500		TISQ2:	MOVB	D,@TITQL(E)
  3560	025500	005264	023520			INC	TITQN(E)
  3561	025504	005264	023500			INC	TITQL(E)
  3562	025510	026464	023500	023434		CMP	TITQL(E),TITQT+2(E)
  3563	025516	002403				BLT	TISQ3
  3564	025520	016464	023432	023500		MOV	TITQT(E),TITQL(E)
  3565	025526	000207			TISQ3:	RTS	PC
  3566					
  3567					;BREAK
  3568	025530	026527	002470	000010	BREAK:	CMP	FLSRES(U),#FRTYIH
  3569	025536	001407				BEQ	BREAK1
  3570	025540	052764	002000	024520		BIS	#TIBR,TTYST(E)
  3571	025546	052765	040000	003572		BIS	#BREAKF,FLAGS2(U)
  3572	025554	000207				RTS	PC
  3573	025556	004767	177374		BREAK1:	JSR	PC,TTYRS2
  3574	025562	000744				BR	TISQ2
  3575					
  3576					
  3577					;BRAKR -- TO EXECUTE BREAK WHEN NOT IN TYIH
  3578	025564	005767	154614		BRAKR:	TST	JDCSW
  3579	025570	001756				BEQ	TISQ3
  3580	025572	016504	002514			MOV	UTTY(U),E
  3581	025576	000167	177354			JMP	TTYRS2
  3582					
  3583					;DING --
  3584	025602	005264	024200		DING:	INC	TODING(E)
  3585	025606	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 108
	TYI 151	PAGE 9 	TYPE IN

  3586					
  3587					;DMSQ -- DM11 TYPE IN
  3588	025610	032767	060000	147162	DMSQ:	BIT	#60000,DMCSR
  3589	025616	001042				BNE	DMSQ4	;NXM OR SYS OVERRUN
  3590						SPUSH	C
  3591						SPUSH	D
  3592						SPUSH	E
  3593						SPUSH	U
  3594	025630	016702	000054			MOV	TTP,C
  3595	025634	000422				BR	DMSQ3
  3596					
  3597	025636	042712	120200		DMSQ1:	BIC	#120200,(C)
  3598	025642	032712	040000			BIT	#40000,(C)
  3599	025646	001007				BNE	DMSQ2	;BR IF NO STOP RCVD
  3600	025650	116204	000001			MOVB	1(C),E	;TTY*2
  3601	025654	111203				MOVB	(C),D	;CHAR
  3602	025656	062704	000002			ADD	#NFDMTY,E
  3603	025662	004767	177554			JSR	PC,TISQ1
  3604	025666	005722			DMSQ2:	TST	(C)+	;INC TTP
  3605	025670	020227	001400			CMP	C,#DMTT+200
  3606	025674	002402				BLT	DMSQ3
  3607	025676	012702	001200			MOV	#DMTT,C	;IF TTP AT END OF TT, RESET
  3608	025702	005712			DMSQ3:	TST	(C)
  3609	025704	002754				BLT	DMSQ1
  3610					
  3611	025706	010227				MOV	C,(PC)+	;SAVE PNTR
  3612	025710	001200			TTP:	DMTT
  3613						SPOP	U
  3614						SPOP	E
  3615						SPOP	D
  3616						SPOP	C
  3617	025722	000207				RTS	PC
  3618					
  3619	025724	000000			DMSQ4:	HALT		;NXM OR SYS OVERRUN
  3620	025726	042767	060000	147044		BIC	#60000,DMCSR
  3621	025734	000207				RTS	PC
  3622					
  3623					
  3624					
  3625	025736	004067	000004		CNSQ:	JSR	A,GENSQ
  3626	025742	177562				TKB
  3627	025744	000000				NFTY
  3628					
  3629					GENSQ:	SPUSH	D
  3630						SPUSH	E
  3631						SPUSH	U
  3632	025754	013003				MOV	@(A)+,D
  3633	025756	011004				MOV	(A),E
  3634	025760	004767	177452			JSR	PC,TISQ
  3635						SPOP	U
  3636						SPOP	E
  3637						SPOP	D
  3638						SPOP	A
  3639	025774	000002				RTI
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 109
	TYI 151	PAGE 10 	TYPE IN

  3640					
  3641					;TI2Q--
  3642					;FOR ALL USERS, EMPTY TEMP TYI BUFFER TO TYI BUF
  3643					TI2Q:	SPUSH	C
  3644						SPUSH	D
  3645						SPUSH	E
  3646	026004	005004				CLR	E
  3647					
  3648	026006	016402	023706		TI2Q1:	MOV	TIPC(E),C	;TRY TO PROCESS ALL CHARS
  3649	026012	032764	174000	024520		BIT	#TIDTRA,TTYST(E)
  3650	026020	001030				BNE	TI2Q3	;BR IF DSK TRA OR TYO BUF FULL
  3651	026022	005764	024120			TST	TOPC(E)
  3652	026026	001025				BNE	TI2Q3
  3653	026030	005702				TST	C
  3654	026032	001033				BNE	TI2Q2
  3655	026034	005764	023520			TST	TITQN(E)
  3656	026040	003420				BLE	TI2Q3
  3657	026042	117403	023460			MOVB	@TITQP(E),D	;CHAR
  3658	026046	004767	000064			JSR	PC,TGTC	;PROCESS
  3659	026052	005364	023520			DEC	TITQN(E)
  3660	026056	005264	023460			INC	TITQP(E)
  3661	026062	026464	023460	023434		CMP	TITQP(E),TITQT+2(E)
  3662	026070	002746				BLT	TI2Q1
  3663	026072	016464	023432	023460		MOV	TITQT(E),TITQP(E)
  3664	026100	000742				BR	TI2Q1
  3665					
  3666	026102	005724			TI2Q3:	TST	(E)+
  3667	026104	020467	154146			CMP	E,NUSER2	;THROUGH WITH ALL TTYS?
  3668	026110	002736				BLT	TI2Q1	;BR IF NO
  3669						SPOP	E
  3670						SPOP 	D
  3671						SPOP	C
  3672	026120	000207				RTS	PC
  3673					
  3674	026122	016403	023726		TI2Q2:	MOV	TISVD(E),D
  3675	026126	005064	023706			CLR	TIPC(E)
  3676	026132	004712				JSR	PC,(C)
  3677	026134	000724				BR	TI2Q1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 110
	TYI 151	PAGE 11 	TYPE IN

  3678					
  3679					
  3680					;TGTC --
  3681					;GET CHAR FROM 5 WD BUFFER & PROCESS INTO WD ASSEMBLY BUFFER
  3682	026136	032764	000200	024520	TGTC:	BIT	#FCQF,TTYST(E)
  3683	026144	001402				BEQ	TGTC5
  3684	026146	000167	000676			JMP	TICPY	;YES, COPY CHAR
  3685	026152	032703	000200		TGTC5:	BIT	#200,D	;QUOTED?
  3686	026156	001020				BNE	TGTC2	;BR IF YES
  3687	026160	132763	000200	006120		BITB	#FSF,DTBL(D)	;SPECIAL CHAR?
  3688	026166	001404				BEQ	TGTC1
  3689	026170	116302	006320			MOVB	DTBL2(D),C	;YES
  3690	026174	000172	024614			JMP	@CTIS(C)	;DISPATCH
  3691					
  3692	026200	132763	000020	006120	TGTC1:	BITB	#FQF,DTBL(D)	;QUOTING CHAR?
  3693	026206	001404				BEQ	TGTC2
  3694	026210	116302	006320			MOVB	DTBL2(D),C	;YES
  3695	026214	004772	024646			JSR	PC,@CTIQ(C)	;DISPATCH
  3696					
  3697	026220	004767	001044		TGTC2:	JSR	PC,TIINB	;PUT CHAR IN BUFFER
  3698	026224	004767	003314		TGTC3:	JSR	PC,UTYO1
  3699	026230	004774	024220			JSR	PC,@TOSND(E)
  3700	026234	000207			TGTC4:	RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 111
	TYI 151	PAGE 12 	TYPE IN

  3701					
  3702					
  3703					;SPECIAL CHAR ROUTINES
  3704					
  3705					;^C -- COPY NEXT CHAR
  3706	026236	032764	001000	024520	TICC:	BIT	#TIED,TTYST(E)
  3707	026244	001002				BNE	TICC1
  3708	026246	000167	000674			JMP	TIQM	;IF NOT EDITING JUST ECHO ^C
  3709	026252	004767	001060		TICC1:	JSR	PC,GEDC	;GET EDIT CHAR
  3710	026256	000735				BR	TGTC5
  3711					
  3712					;^C -- DELETES NEXT CHAR
  3713	026260	032764	001000	024520	TICD:	BIT	#TIED,TTYST(E)
  3714	026266	001002				BNE	TICD1
  3715	026270	000167	000652			JMP	TIQM	;IGNORE IF NOT EDITING
  3716	026274	004767	001036		TICD1:	JSR	PC,GEDC	;REMOVE CHAR
  3717	026300	012703	000004			MOV	#4,D
  3718	026304	000747				BR	TGTC3	;SUCCEED, ECHO ^C
  3719					
  3720					;^M (C.R.) -- MAYBE END OF LINE
  3721	026306	005764	024460		TICM:	TST	TTYBR(E)
  3722	026312	003342				BGT	TGTC2	;IF NOT EOL
  3723	026314	004767	177700		TICM1:	JSR	PC,TGTC2	;ECHO C.R.
  3724	026320	004767	000474			JSR	PC,TIDTSC
  3725	026324	016464	023626	023646		MOV	TITN(E),TYITN(E)
  3726	026332	005764	024300			TST	TIDP(E)
  3727	026336	003430				BLE	TICM4
  3728	026340	026464	023566	023540		CMP	TIBP(E),TIBT(E)
  3729	026346	003405				BLE	TICM2
  3730	026350	012764	026362	023706		MOV	#TICM2,TIPC(E)
  3731	026356	000167	001464			JMP	TIDKO
  3732	026362	016464	024300	024320	TICM2:	MOV	TIDP(E),TYIDP(E)
  3733	026370	004767	176704			JSR	PC,TTYRS3
  3734	026374	004767	000426			JSR	PC,TIDTS1
  3735	026400	004767	002236			JSR	PC,TYIDKI
  3736	026404	016403	024540		TICM3:	MOV	TTYU(E),D
  3737	026410	012763	000004	002470		MOV	#FRTYIW,FLSRES(D)
  3738	026416	000207				RTS	PC
  3739	026420	004767	176654		TICM4:	JSR	PC,TTYRS3
  3740	026424	004767	002110			JSR	PC,TEDKO
  3741	026430	000765				BR	TICM3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 112
	TYI 151	PAGE 13 	TYPE IN

  3742					
  3743					;^N -- COPY NEXT WORD
  3744	026432	032764	001000	024520	TICN:	BIT	#TIED,TTYST(E)
  3745	026440	001006				BNE	TICN1
  3746	026442	000167	000500			JMP	TIQM
  3747					
  3748	026446	004767	177500		TICN2:	JSR	PC,TGTC5
  3749	026452	004767	000342			JSR	PC,TIDTSC
  3750	026456	004767	000654		TICN1:	JSR	PC,GEDC	;GET NEXT CHAR IN ED BUF
  3751	026462	032703	000200			BIT	#200,D
  3752	026466	001367				BNE	TICN2
  3753	026470	132763	000002	006120		BITB	#WSF,DTBL(D)
  3754	026476	001763				BEQ	TICN2
  3755	026500	000167	177446			JMP	TGTC5
  3756					
  3757					;^Q -- QUOTE NEXT CHAR
  3758	026504	052764	000200	024520	TICQ:	BIS	#FCQF,TTYST(E)	;^Q FLAG ON
  3759	026512	000644				BR	TGTC3	;ECHO BUT NOT IN BUFFER
  3760					
  3761					;^R -- COPY REST OF EDIT BUFFER
  3762	026514	032764	001000	024520	TICR:	BIT	#TIED,TTYST(E)
  3763	026522	001002				BNE	TICR1
  3764	026524	000167	000416			JMP	TIQM	;IF NOT EDITING, IGNORE
  3765	026530	004767	000602		TICR1:	JSR	PC,GEDC
  3766	026534	004767	177412			JSR	PC,TGTC5	;SUCCEED, ECHO
  3767	026540	004767	000254			JSR	PC,TIDTSC
  3768	026544	000771				BR	TICR1
  3769					
  3770					;^S -- SKIP (DELETE) NEXT WORD
  3771	026546	032764	001000	024520	TICS:	BIT	#TIED,TTYST(E)
  3772	026554	001002				BNE	.+6
  3773	026556	000167	000364			JMP	TIQM
  3774	026562	004767	177436			JSR	PC,TGTC3
  3775	026566	004767	000226		TICS1:	JSR	PC,TIDTSC
  3776	026572	004767	000540			JSR	PC,GEDC
  3777	026576	032703	000200			BIT	#200,D
  3778	026602	001371				BNE	TICS1
  3779	026604	132763	000002	006120		BITB	#WSF,DTBL(D)
  3780	026612	001765				BEQ	TICS1
  3781	026614	000167	177414			JMP	TGTC4
  3782					
  3783					;TICW -- ^W RUBOUT TILL PREVIOUS SPACE
  3784	026620	004767	177400		TICW1:	JSR	PC,TGTC3	;ECHO CHAR
  3785	026624	004767	000170			JSR	PC,TIDTSC
  3786	026630	004767	000332		TICW:	JSR	PC,TIDEL1
  3787	026634	032703	000200			BIT	#200,D
  3788	026640	001367				BNE	TICW1
  3789	026642	132763	000002	006120		BITB	#WSF,DTBL(D)
  3790	026650	001763				BEQ	TICW1
  3791	026652	000167	177346			JMP	TGTC3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 113
	TYI 151	PAGE 14 	TYPE IN

  3792					
  3793					;TICY	-- ^Y RECOVER PREVIOUS LINE
  3794	026656	032764	001000	024520	TICY:	BIT	#TIED,TTYST(E)
  3795	026664	001130				BNE	TIQM
  3796	026666	004767	000116			JSR	PC,TICZ1
  3797	026672	004767	000122			JSR	PC,TIDTSC
  3798	026676	012703	000137			MOV	#137,D
  3799	026702	004767	177316			JSR	PC,TGTC3
  3800	026706	005764	024420			TST	TIEDP(E)
  3801	026712	003402				BLE	.+6
  3802	026714	004767	001442			JSR	PC,TEDKI
  3803	026720	005064	024460			CLR	TTYBR(E)
  3804	026724	016464	023540	023566		MOV	TIBT(E),TIBP(E)
  3805	026732	005064	024300			CLR	TIDP(E)
  3806	026736	005064	023626			CLR	TITN(E)
  3807	026742	000167	176426			JMP	EDITA
  3808					
  3809					;^Z -- EMPTY TYI BUFFER
  3810	026746	016402	024540		TICZ:	MOV	TTYU(E),C
  3811	026752	012762	000004	002470		MOV	#FRTYIW,FLSRES(C)
  3812	026760	004767	000024			JSR	PC,TICZ1
  3813	026764	005064	024460			CLR	TTYBR(E)
  3814	026770	012774	000015	023540		MOV	#15,@TIBT(E)
  3815	026776	012764	000001	023646		MOV	#1,TYITN(E)
  3816	027004	000167	176270			JMP	TTYRS3
  3817					
  3818	027010	010664	023372		TICZ1:	MOV	P,CHARNO(E)
  3819	027014	000167	177204			JMP	TGTC3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 114
	TYI 151	PAGE 15 	TYPE IN

  3820					
  3821					
  3822					;TIDTSC -- DID SPEC CHAR CAUSE DSK TRANS OR TYO BUF FULL?
  3823	027020	005764	024120		TIDTSC:	TST	TOPC(E)
  3824	027024	001004				BNE	TIDTS2
  3825	027026	032764	174000	024520	TIDTS1:	BIT	#TIDTRA,TTYST(E)
  3826	027034	001404				BEQ	TIDTS3
  3827	027036	010364	023726		TIDTS2:	MOV	D,TISVD(E)
  3828	027042	012664	023706			MOV	(P)+,TIPC(E)
  3829	027046	000207			TIDTS3:	RTS	PC
  3830					
  3831					;TICPY -- QUOTE CHAR IN D
  3832	027050	042764	000200	024520	TICPY:	BIC	#FCQF,TTYST(E)	;^Q FLAG OFF
  3833	027056	132763	000222	006120		BITB	#FSF!FQF!WSF,DTBL(D)
  3834	027064	001413				BEQ	TICPY1
  3835	027066	020327	000003			CMP	D,#3
  3836	027072	001412				BEQ	TICPY2
  3837	027074	020327	000032			CMP	D,#32
  3838	027100	001407				BEQ	TICPY2
  3839	027102	020327	000177			CMP	D,#177
  3840	027106	001402				BEQ	TICPY1
  3841	027110	052703	000200			BIS	#200,D	;TURN ON HIGH BYTE BIT
  3842	027114	000167	177100		TICPY1:	JMP	TGTC2
  3843	027120	000167	177100		TICPY2:	JMP	TGTC3
  3844					
  3845					;TIOBR -- [
  3846	027124	005264	024460		TIOBR:	INC	TTYBR(E)
  3847	027130	000207				RTS	PC
  3848					
  3849					;TICBR -- ]
  3850	027132	005764	024460		TICBR:	TST	TTYBR(E)
  3851	027136	003403				BLE	TIQM
  3852	027140	005364	024460			DEC	TTYBR(E)
  3853	027144	000207				RTS	PC
  3854					
  3855					;TIQM -- PRINTS ?
  3856	027146	012703	000077		TIQM:	MOV	#'?,D
  3857	027152	000167	177046			JMP	TGTC3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 115
	TYI 151	PAGE 16 	TYPE IN

  3858					
  3859					
  3860					;REGULAR CHAR ROUTINES
  3861					;TINB MOVES INTO BUFFER, TIDEL1 MOVES OUT
  3862					
  3863	027156	004767	000004		TIDEL:	JSR	PC,TIDEL1	;THIS ALSO WANTS TO BE SUBR
  3864	027162	000167	177036			JMP	TGTC3	;SUCCEED, ECHO CHAR
  3865					
  3866	027166	026464	023566	023540	TIDEL1:	CMP	TIBP(E),TIBT(E)
  3867	027174	003420				BLE	TIDEL5	;BR IF NO CHARS IN BUF
  3868	027176	005364	023566			DEC	TIBP(E)
  3869	027202	117403	023566			MOVB	@TIBP(E),D	;CHAR
  3870	027206	032703	000200			BIT	#200,D
  3871	027212	001004				BNE	TIDEL3	;BR IF QUOTED
  3872	027214	132763	000020	006120		BITB	#FQF,DTBL(D)
  3873	027222	001001				BNE	.+4
  3874	027224	000207			TIDEL3:	RTS 	PC
  3875	027226	116302	006320			MOVB	DTBL2(D),C	;UNDO QUOTING ACTION
  3876	027232	000172	024650			JMP	@CTIUQ(C)
  3877					
  3878	027236	005764	024300		TIDEL5:	TST	TIDP(E)
  3879	027242	003410				BLE	TIDEL6
  3880	027244	010364	023726			MOV	D,TISVD(E)
  3881	027250	162716	000004			SUB	#4,(P)
  3882	027254	012664	023706			MOV	(P)+,TIPC(E)
  3883	027260	000167	000722			JMP	TIDKI
  3884	027264	005726			TIDEL6:	TST	(P)+
  3885	027266	000207				RTS	PC
  3886					
  3887	027270	026464	023566	023666	TIINB:	CMP	TIBP(E),TIBL(E)
  3888	027276	002015				BGE	TIINB2
  3889	027300	110374	023566			MOVB	D,@TIBP(E)	;CHAR IN BUF
  3890	027304	005264	023626			INC	TITN(E)
  3891	027310	005264	023566			INC	TIBP(E)
  3892	027314	026464	023566	023666		CMP	TIBP(E),TIBL(E)
  3893	027322	002001				BGE	TIINB1
  3894	027324	000207				RTS	PC
  3895					
  3896	027326	000167	000514		TIINB1:	JMP	TIDKO
  3897					
  3898	027332	000000			TIINB2:	HALT	;TIBP ZONKED
  3899	027334	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 116
	TYI 151	PAGE 17 	TYPE IN

  3900					
  3901					
  3902					;GEDC -- GET EDIT CHAR (FROM EDIT BUF)
  3903	027336	026464	023772	023542	GEDC:	CMP	TIEBP(E),TIBT+2(E)	;ANYTHING IN BUFFER?
  3904	027344	002347				BGE	TIDEL6
  3905	027346	127427	023772	000015		CMPB	@TIEBP(E),#15	;IS NEXT CHAR C.R.?
  3906	027354	001432				BEQ	GEDCA	;BR IF YES
  3907	027356	117403	023772		GEDC1:	MOVB	@TIEBP(E),D	;CHAR IN D
  3908	027362	005264	023772			INC	TIEBP(E)
  3909	027366	032703	000200			BIT	#200,D
  3910	027372	001011				BNE	GEDC2
  3911	027374	132763	000020	006120		BITB	#FQF,DTBL(D)	;IS IT QUOTING?
  3912	027402	001405				BEQ	GEDC2
  3913	027404	116302	006320		 	MOVB	DTBL2(D),C
  3914	027410	066264	027460	024500		ADD	EDQF(C),TTYEBR(E)
  3915	027416	026464	023772	023542	GEDC2:	CMP	TIEBP(E),TIBT+2(E)	;OUT OF BUF?
  3916	027424	002403				BLT	GEDC3	;BR IF STILL STUFF IN BUF
  3917	027426	005764	024420			TST	TIEDP(E)	;IS THERE STUFF ON DSK?
  3918	027432	001001				BNE	GEDC4	;BR IF YES
  3919	027434	000207			GEDC3:	RTS	PC
  3920					
  3921	027436	000167	000720		GEDC4:	JMP	TEDKI
  3922					
  3923							;NEXT CHAR C.R.
  3924	027442	005764	024500		GEDCA:	TST	TTYEBR(E)
  3925	027446	003343				BGT	GEDC1	;BR IF IN QUOTES
  3926	027450	016464	023542	023772		MOV	TIBT+2(E),TIEBP(E)	;END OF EDIT LINE, PUT PNTR TO END OF EDIT BUFFER
  3927	027456	000702				BR	TIDEL6
  3928					
  3929					
  3930	027460	000001			EDQF:	1	;[
  3931	027462	177777				-1	;]
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 117
	TYI 151	PAGE 18 	TYPE IN

  3932					
  3933					
  3934					;UTYI -- USER TYI
  3935					;RETURNS CHAR IN CH
  3936	027464	005767	152022		JTYI:	TST USER
  3937	027470	002002				BGE .+6
  3938	027472	000167	170662			JMP STYI
  3939						PUSH	E
  3940						PUSH	U
  3941	027512	016705	151774			MOV	USER,U
  3942	027516	016504	002514			MOV	UTTY(U),E
  3943	027522	032764	174000	024520		BIT	#TIDTRA,TTYST(E)
  3944	027530	001413				BEQ	UTYI2
  3945	027532	012765	000004	002470		MOV	#FRTYIW,FLSRES(U)
  3946	027540	004767	161044		UTYI1:	JSR	PC,FLUSH	;IF DSKING,FLUSH USER
  3947	027544	032764	174000	024520		BIT	#TIDTRA,TTYST(E)
  3948	027552	001372				BNE	UTYI1
  3949	027554	004767	160076			JSR	PC,RUNME
  3950	027560	032764	002000	024520	UTYI2:	BIT	#TIBR,TTYST(E)
  3951	027566	001023				BNE	UTYI3
  3952	027570	005364	023646			DEC	TYITN(E)
  3953	027574	002427				BLT	UTYI4
  3954	027576	026464	024420	024340		CMP	TIEDP(E),TYIFDP(E)
  3955	027604	002002				BGE	.+6
  3956	027606	004767	000726			JSR	PC,TEDKO
  3957	027612	117403	023606			MOVB	@TYIBP(E),D
  3958	027616	005264	023606			INC	TYIBP(E)
  3959	027622	026464	023606	023666		CMP	TYIBP(E),TIBL(E)	;USED UP BUFFER?
  3960	027630	002402				BLT	UTYI3
  3961	027632	004767	001004			JSR	PC,TYIDKI
  3962					UTYI3:	POP	U
  3963						POP	E
  3964	027652	000207				RTS	PC
  3965					
  3966	027654	000000			UTYI4:	HALT	;TYI ASKED FOR TOO MANY CHARS
  3967	027656	000776				BR	.-2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 118
	TYI 151	PAGE 19 	TYPE IN

  3968					
  3969					.STITLE 	TYI DSK TRANSFER, START, & STOP ROUTINES
  3970					
  3971					;DISK TRANSFER ROUTINES
  3972					;LOCS MUST BE FILLED AS FOLLOWS
  3973					;(A) START ROUTINE ADDRESS
  3974					;2(A) -WORD COUNT (NOT BYTE COUNT)
  3975					;4(A) CORE ADDRESS-2
  3976					;6(A) LOW ORDER OF DSK ADDR
  3977					;10(A) HIGH ORDER
  3978					;12(A) FREE WD STORE TTY HERE
  3979					;14(A) READ OR WRITE CODE (IN LOW BYTE)
  3980					
  3981					;TIDCM -- COMMON CODE
  3982					;CALLED WITH JSR D,
  3983	027660	012367	000002		TIDCM:	MOV	(D)+,.+6	;ZOT NXT INSTR
  3984	027664	016460	000002	000004		MOV	2(E),4(A)
  3985	027672	162760	000002	000004		SUB	#2,4(A)		;CORE ADDR-2
  3986	027700	010460	000012			MOV	E,12(A)		;USER
  3987	027704	052364	024520			BIS	(D)+,TTYST(E)
  3988	027710	005723				TST	(D)+
  3989	027712	010310				MOV	D,(A)
  3990	027714	014360	000014			MOV	-(D),14(A)
  3991						SPOP	D
  3992					TIDCM1:	SPOP	A
  3993	027724	000207				RTS	PC
  3994					
  3995					;TSTAB
  3996					;TEST FOR ABORT (CALLED WITH JSR D,) AT BEGIN OF START ROUTINE
  3997					TSTAB:	SPUSH	E
  3998	027730	016004	000012			MOV	12(A),E
  3999	027734	032764	002000	024520		BIT	#TIBR,TTYST(E)
  4000	027742	001422				BEQ	TSTAB1
  4001	027744	005060	000014			CLR	14(A)	;IF BREAK FLAG, ABORT TRANS
  4002	027750	046364	177770	024520		BIC	-10(D),TTYST(E)
  4003	027756	032764	174000	024520	TSTAB4:	BIT	#TIDTRA,TTYST(E)
  4004	027764	001011				BNE	TSTAB1
  4005	027766	016403	024540			MOV	TTYU(E),D
  4006	027772	022763	000010	002470		CMP	#FRTYIH,FLSRES(D)
  4007	030000	001004				BNE	TSTAB3
  4008	030002	042764	002000	024520		BIC	#TIBR,TTYST(E)
  4009	030010	010310			TSTAB1:	MOV	D,(A)	;STOP ROUTINE
  4010					TSTAB3:	SPOP	E
  4011						SPOP	D
  4012	030016	000207				RTS	PC
  4013					
  4014					;TSTAB2
  4015					;CALLED AT START OF STOP ROUTINE
  4016					TSTAB2:	SPUSH	E
  4017	030022	016004	000012			MOV	12(A),E	;TTY
  4018	030026	046364	177764	024520		BIC	-14(D),TTYST(E)
  4019	030034	032764	002000	024520		BIT	#TIBR,TTYST(E)
  4020	030042	001345				BNE	TSTAB4
  4021	030044	000113				JMP	(D)
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 119
	TYI 151	PAGE 20 	TYI DSK TRANSFER, START, & STOP ROUTINES

  4022					
  4023					;TIDKO -- TTY
  4024					;FROM TYI BUFFER 
  4025					;TO END OF DSK TYI BUFFER
  4026					TIDKO:	SPUSH	A
  4027	030050	004767	157050			JSR	PC,SYDRBG
  4028	030054	016460	023540	000002		MOV	TIBT(E),2(A)
  4029	030062	166460	023566	000002		SUB	TIBP(E),2(A)
  4030	030070	002403				BLT	.+10
  4031	030072	000000				HALT
  4032	030074	000167	177622			JMP	TIDCM1
  4033	030100	006260	000002			ASR	2(A)
  4034	030104	005660	000002			SBC	2(A)		;-WD CNT
  4035	030110	016460	024240	000006		MOV	TILD(E),6(A)
  4036	030116	016460	024260	000010		MOV	TIHD(E),10(A)
  4037	030124	066460	024300	000006		ADD	TIDP(E),6(A)	;LOW ORDER DSK
  4038	030132	005560	000010			ADC	10(A)		;HIGH ORDER
  4039	030136	004367	177516			JSR	D,TIDCM
  4040	030142	023540				TIBT
  4041	030144	040000				TIDW
  4042	030146	000103				DWRTEC
  4043	030150	004367	177552			JSR	D,TSTAB		;START ROUTINE
  4044	030154	004367	177640			JSR	D,TSTAB2	;STOP ROUTINE
  4045	030160	166064	000002	024300		SUB	2(A),TIDP(E)	;UPDATE # OF WDS (NOT BYTES) ON DSK
  4046	030166	166064	000002	024320		SUB	2(A),TYIDP(E)
  4047	030174	016464	023540	023566		MOV	TIBT(E),TIBP(E)
  4048	030202	000167	177604			JMP	TSTAB3
  4049					
  4050					;TIDKI --
  4051					;FROM END OF DISK TYI
  4052					;TO CORE TYI
  4053					TIDKI:	SPUSH	A
  4054	030210	004767	156710			JSR	PC,SYDRBG
  4055	030214	016460	023666	000002		MOV	TIBL(E),2(A)
  4056	030222	166460	023540	000002		SUB	TIBT(E),2(A)
  4057	030230	026064	000002	024300		CMP	2(A),TIDP(E)
  4058	030236	003403				BLE	TIDKI1
  4059	030240	016460	024300	000002		MOV	TIDP(E),2(A)
  4060	030246	005460	000002		TIDKI1:	NEG	2(A)		;- WD CNT
  4061	030252	016460	024240	000006		MOV	TILD(E),6(A)
  4062	030260	016460	024260	000010		MOV	TIHD(E),10(A)
  4063	030266	066060	000002	000006		ADD	2(A),6(A)	;DSK ADDR=DSK TOP+# OF WDS ON DSK-
  4064	030274	066460	024300	000006		ADD	TIDP(E),6(A)	;# BEING TRANSFERRED
  4065	030302	005560	000010			ADC	10(A)
  4066	030306	004367	177346			JSR	D,TIDCM
  4067	030312	023540				TIBT
  4068	030314	020000				TIDR
  4069	030316	000105				DREADC
  4070	030320	004367	177402			JSR	D,TSTAB		;START ROUTINE
  4071	030324	004367	177470			JSR	D,TSTAB2	;STOP ROUTINE
  4072	030330	066064	000002	024300		ADD	2(A),TIDP(E)
  4073	030336	002002				BGE	.+6
  4074	030340	000000				HALT		;NEG WD CNT
  4075	030342	000776				BR	.-2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 120
	TYI 151	PAGE 20.1 	TYI DSK TRANSFER, START, & STOP ROUTINES

  4076	030344	006360	000002			ASL	2(A)
  4077	030350	166064	000002	023566		SUB	2(A),TIBP(E)	;CORE PNTR
  4078	030356	000167	177430			JMP	TSTAB3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 121
	TYI 151	PAGE 21 	TYI DSK TRANSFER, START, & STOP ROUTINES

  4079					
  4080					
  4081					;TIEDKI --
  4082					;FROM FRONT OF DSK EDIT BUF
  4083					;TO CORE EDIT BUFFER
  4084					TEDKI:	SPUSH	A
  4085	030364	004767	156534			JSR	PC,SYDRBG
  4086	030370	012760	000020	000002		MOV	#<EDBFSZ/2>,2(A)
  4087	030376	026064	000002	024420		CMP	2(A),TIEDP(E)
  4088	030404	003411				BLE	TEDK1
  4089	030406	005764	024420			TST	TIEDP(E)
  4090	030412	003003				BGT	.+10
  4091	030414	000000				HALT
  4092	030416	000167	177300			JMP	TIDCM1
  4093	030422	016460	024420	000002		MOV	TIEDP(E),2(A)
  4094	030430	005460	000002		TEDK1:	NEG	2(A)		;NEG WD CNT
  4095	030434	016460	024360	000006		MOV	TIELD(E),6(A)
  4096	030442	016460	024400	000010		MOV	TIEHD(E),10(A)
  4097	030450	066460	024440	000006		ADD	TIEFDP(E),6(A)	;LOW ORDER DSK
  4098	030456	005560	000010			ADC	10(A)
  4099	030462	004367	177172			JSR	D,TIDCM
  4100	030466	023746				TIEBT
  4101	030470	010000				TIEDR
  4102	030472	000105				DREADC
  4103	030474	004367	177226			JSR	D,TSTAB		;START ROUTINE
  4104	030500	004367	177314			JSR	D,TSTAB2	;STOP ROUTINE
  4105	030504	066064	000002	024420		ADD	2(A),TIEDP(E)	;# OF WDS ON DSK
  4106	030512	002002				BGE	.+6
  4107	030514	000000				HALT
  4108	030516	000776				BR	.-2
  4109	030520	166064	000002	024440		SUB	2(A),TIEFDP(E)	;# OF WDS OFF DSK
  4110	030526	016464	023746	023772		MOV	TIEBT(E),TIEBP(E)
  4111	030534	000167	177252			JMP	TSTAB3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 122
	TYI 151	PAGE 22 	TYI DSK TRANSFER, START, & STOP ROUTINES

  4112					
  4113					
  4114					;TIEDKO --
  4115					;FROM CORE TYI
  4116					;TOEND OF DSK EDIT BUFFER
  4117					TEDKO:	SPUSH	A
  4118	030542	004767	156356			JSR	PC,SYDRBG
  4119	030546	012760	177740	000002		MOV	#-<TIBFSZ/2>,2(A)	;NEG WD CNT
  4120	030554	016460	024360	000006		MOV	TIELD(E),6(A)
  4121	030562	016460	024400	000010		MOV	TIEHD(E),10(A)
  4122	030570	066460	024420	000006		ADD	TIEDP(E),6(A)
  4123	030576	005560	000010			ADC	10(A)
  4124	030602	004367	177052			JSR	D,TIDCM
  4125	030606	023540				TIBT
  4126	030610	004000				TIEDW
  4127	030612	000103				DWRTEC
  4128	030614	004367	177106			JSR	D,TSTAB		;START ROUTINE
  4129	030620	004367	177174			JSR	D,TSTAB2	;STOP ROUTINE
  4130	030624	166064	000002	024420		SUB	2(A),TIEDP(E)
  4131	030632	002001				BGE	.+4
  4132	030634	000000				HALT
  4133	030636	000167	177150			JMP	TSTAB3
  4134					
  4135					;TYIDKI
  4136					;FROM FRONT OF DSK TYI BUFFER
  4137					;TO CORE TYI BUFFER
  4138					TYIDKI:	SPUSH	A
  4139	030644	004767	156254			JSR	PC,SYDRBG
  4140	030650	012760	177740	000002		MOV	#-<TIBFSZ/2>,2(A)	;NEG WD CNT
  4141	030656	016460	024240	000006		MOV	TILD(E),6(A)
  4142	030664	016460	024260	000010		MOV	TIHD(E),10(A)
  4143	030672	066460	024340	000006		ADD	TYIFDP(E),6(A)	;LOW ORDER DKS
  4144	030700	005560	000010			ADC	10(A)		;HIGH ORDER
  4145	030704	004367	176750			JSR	D,TIDCM
  4146	030710	023540				TIBT
  4147	030712	100000				TYIDR
  4148	030714	000105				DREADC
  4149	030716	004367	177004			JSR	D,TSTAB		;START ROUTINE
  4150	030722	004367	177072			JSR	D,TSTAB2	;STOP ROUTINE
  4151	030726	166064	000002	024340		SUB	2(A),TYIFDP(E)
  4152	030734	066064	000002	024320		ADD	2(A),TYIDP(E)
  4153	030742	016464	023540	023606		MOV	TIBT(E),TYIBP(E)
  4154	030750	000167	177036			JMP	TSTAB3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 123
	TYI 151	PAGE 23 	TYI DSK TRANSFER, START, & STOP ROUTINES

  4155					
  4156					.STITLE	TYPE OUT
  4157					
  4158					;DMINT --
  4159					;DM11 TRANSMIT INTERRUPT
  4160					DMINT:	SPUSH	E
  4161	030756	012704	000002			MOV	#NFDMTY,E
  4162	030762	036467	024556	000206	DMINT1:	BIT	DMBIT(E),DMTRAN
  4163	030770	001425				BEQ	DMINT5		;LINE WASN'T TRANSMITTING
  4164	030772	005764	001036			TST	DMWC(E)
  4165	030776	002422				BLT	DMINT5	;TRANSMITTING
  4166	031000	046467	024556	000170		BIC	DMBIT(E),DMTRAN
  4167	031006	026464	000776	024014		CMP	DMCA(E),TOBT+2(E)
  4168	031014	002403				BLT	DMINT2
  4169	031016	016464	024012	000776		MOV	TOBT(E),DMCA(E)
  4170	031024	005764	024120		DMINT2:	TST	TOPC(E)
  4171	031030	001021				BNE	DMINT4
  4172	031032	005764	024100			TST	TOTN(E)
  4173	031036	001402				BEQ	DMINT5
  4174	031040	004767	000062		DMINT3:	JSR	PC,DMSND4
  4175	031044	005724			DMINT5:	TST	(E)+
  4176	031046	020427	000020			CMP	E,#NFDMTY+<2*NDMTY>
  4177	031052	002743				BLT	DMINT1	;MORE TTYS TO SERVICE
  4178						SPOP	E
  4179	031056	026727	151322	000001		CMP	JDCSW,#1
  4180	031064	003002				BGT	.+6
  4181	031066	004767	174704			JSR	PC,TI2Q
  4182	031072	000002				RTI
  4183					
  4184	031074	004767	000410		DMINT4:	JSR	PC,TOENT
  4185	031100	000757				BR	DMINT3
  4186					
  4187					;DMSND --
  4188					;TRANSMIT CHARS FROM TOBE(E) TO TOBP(E) IN CIRC BUF
  4189	031102	005764	001036		DMSND:	TST	DMWC(E)
  4190	031106	002437				BLT	DMSND5
  4191	031110	026464	000776	024014		CMP	DMCA(E),TOBT+2(E)
  4192	031116	002403				BLT	DMSND4
  4193	031120	016464	024012	000776		MOV	TOBT(E),DMCA(E)
  4194	031126	016464	000776	001036	DMSND4:	MOV	DMCA(E),DMWC(E)
  4195	031134	026464	001036	024060		CMP	DMWC(E),TOBP(E)
  4196	031142	002404				BLT	DMSND1
  4197	031144	166464	024014	001036		SUB	TOBT+2(E),DMWC(E)	;MESSAGE WRAPS AROUND
  4198	031152	000403				BR	DMSND2
  4199	031154	166464	024060	001036	DMSND1:	SUB	TOBP(E),DMWC(E)
  4200	031162	002012			DMSND2:	BGE	DMSND3
  4201	031164	066464	001036	024100		ADD	DMWC(E),TOTN(E)
  4202	031172	056427	024556			BIS	DMBIT(E),(PC)+
  4203	031176	000000			DMTRAN:	0
  4204	031200	056467	024556	143574		BIS	DMBIT(E),DMBAR
  4205	031206	000207			DMSND5:	RTS	PC
  4206	031210	000000			DMSND3:	HALT		;WC>=0, SND SHOULD NOT HAVE BEEN CALLED
  4207	031212	000774				BR	.-6
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 124
	TYI 151	PAGE 24 	TYPE OUT

  4208					
  4209					CNINT:	SPUSH	E
  4210	031216	005004				CLR	E
  4211	031220	004767	000004			JSR	PC,CNSND
  4212						SPOP	E
  4213	031226	000002				RTI
  4214					
  4215	031230	004067	000004		CNSND:	JSR	A,GNSND
  4216	031234	177564				TPS
  4217	031236	177566				TPB
  4218						
  4219	031240	032730	000200		GNSND:	BIT	#200,@(A)+
  4220	031244	001421				BEQ	GNSND1
  4221	031246	005764	024100			TST	TOTN(E)
  4222	031252	003416				BLE	GNSND1
  4223	031254	117470	024040	000000		MOVB	@TOBFF(E),@(A)
  4224	031262	005364	024100			DEC	TOTN(E)
  4225	031266	005264	024040			INC	TOBFF(E)
  4226	031272	026464	024040	024014		CMP	TOBFF(E),TOBT+2(E)
  4227	031300	002403				BLT	GNSND1
  4228	031302	016464	024012	024040		MOV	TOBT(E),TOBFF(E)
  4229					GNSND1:	SPOP	A
  4230	031312	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 125
	TYI 151	PAGE 25 	TYPE OUT

  4231					
  4232					
  4233					;UTYO -- USER TYO
  4234					;PUTS CHARS IN CIRC TYO BUFFER
  4235	031314	005767	150172		JTYO:	TST USER
  4236	031320	002002				BGE .+6
  4237	031322	000167	166746			JMP STYO
  4238						PUSH	C
  4239						PUSH	D
  4240						PUSH	E
  4241						PUSH	U
  4242	031356	016705	150130			MOV	USER,U
  4243	031362	016504	002514			MOV	UTTY(U),E
  4244	031366	032764	002000	024520		BIT	#TIBR,TTYST(E)
  4245	031374	001403				BEQ	.+10
  4246	031376	004767	173554		UTYO11:	JSR	PC,TTYRS2
  4247	031402	000425				BR	UTYO10
  4248	031404	005764	024120			TST	TOPC(E)
  4249	031410	001412				BEQ	UTYO9
  4250	031412	012765	000005	002470		MOV	#FRTYOW,FLSRES(U)
  4251	031420	004767	157164		UTYO8:	JSR	PC,FLUSH	;FLUSH USER WITH FULL TYPE OUT BUFFER
  4252	031424	005764	024120			TST	TOPC(E)
  4253	031430	001373				BNE	UTYO8
  4254	031432	004767	156220			JSR	PC,RUNME
  4255	031436	032764	002000	024520	UTYO9:	BIT	#TIBR,TTYST(E)
  4256	031444	001354				BNE	UTYO11
  4257	031446	004767	000072			JSR	PC,UTYO1
  4258	031452	004774	024220			JSR	PC,@TOSND(E)
  4259					UTYO10:	POP	U
  4260						POP	E
  4261						POP	D
  4262						POP	C
  4263	031506	000207				RTS	PC
  4264					
  4265					
  4266					TOENT:	SPUSH	C
  4267						SPUSH	D
  4268						SPUSH	TOPC(E)
  4269	031520	005064	024120			CLR	TOPC(E)
  4270	031524	016402	024140			MOV	TOSVC(E),C
  4271	031530	016403	024160			MOV	TOSVD(E),D
  4272	031534	004736				JSR	PC,@(P)+
  4273						SPOP	D
  4274						SPOP	C
  4275	031542	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 126
	TYI 151	PAGE 26 	TYPE OUT

  4276					
  4277					
  4278	031544	005764	024120		UTYO1:	TST	TOPC(E)
  4279	031550	001402				BEQ	.+6
  4280	031552	000000				HALT		;TYO BUFFER FULL
  4281	031554	000776				BR	.-2
  4282	031556	005764	024200			TST	TODING(E)
  4283	031562	003411				BLE	UTYO1B
  4284	031564	010302				MOV	D,C
  4285	031566	012703	000007			MOV	#7,D
  4286	031572	004764	031774		UTYO1A:	JSR	PC,TOINB(E)
  4287	031576	005364	024200			DEC	TODING(E)
  4288	031602	003373				BGT	UTYO1A
  4289	031604	010203				MOV	C,D
  4290	031606	042703	177600		UTYO1B:	BIC	#177600,D
  4291	031612	132763	000100	006120		BITB	#FOF,DTBL(D)
  4292	031620	001404				BEQ	UTYO2
  4293	031622	116302	006320			MOVB	DTBL2(D),C
  4294	031626	000172	024654			JMP	@CTOS(C)
  4295					
  4296	031632	020327	000040		UTYO2:	CMP	D,#40
  4297	031636	002017				BGE	UTYO3
  4298	031640	010302				MOV	D,C	;PRINT ^ AND CHAR + 100
  4299	031642	012703	000136			MOV	#'^,D
  4300	031646	004767	000122			JSR	PC,TOINB
  4301	031652	010203				MOV	C,D
  4302	031654	062703	000100			ADD	#100,D
  4303	031660	004767	000110			JSR	PC,TOINB
  4304	031664	010203				MOV	C,D
  4305	031666	062764	000002	023372		ADD	#2,CHARNO(E)
  4306	031674	000404				BR	UTYO5
  4307					
  4308	031676	005264	023372		UTYO3:	INC	CHARNO(E)
  4309	031702	004767	000066		UTYO4:	JSR	PC,TOINB
  4310	031706	026464	023372	023412	UTYO5:	CMP	CHARNO(E),LINEL(E)
  4311	031714	002426				BLT	UTYO6
  4312	031716	005064	023372		TOCM:	CLR	CHARNO(E)
  4313	031722	010302				MOV	D,C
  4314	031724	012703	000015			MOV	#15,D
  4315	031730	004767	000040			JSR	PC,TOINB
  4316	031734	012703	000012			MOV	#12,D
  4317	031740	004767	000030			JSR	PC,TOINB
  4318	031744	005767	172750			TST	SIMTST
  4319	031750	001007				BNE	UTYO7
  4320	031752	005003				CLR	D
  4321	031754	004767	000014			JSR	PC,TOINB
  4322	031760	004767	000010			JSR	PC,TOINB
  4323	031764	004767	000004			JSR	PC,TOINB
  4324	031770	010203			UTYO7:	MOV	C,D
  4325	031772	000207			UTYO6:	RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 127
	TYI 151	PAGE 27 	TYPE OUT

  4326					
  4327					
  4328					;TOINB -- PUT CHAR IN TYO BUFFER
  4329	031774	026464	024060	024014	TOINB:	CMP	TOBP(E),TOBT+2(E)
  4330	032002	002403				BLT	TOINB1
  4331	032004	016464	024012	024060		MOV	TOBT(E),TOBP(E)
  4332	032012	110374	024060		TOINB1:	MOVB	D,@TOBP(E)
  4333	032016	005264	024100			INC	TOTN(E)
  4334	032022	005264	024060			INC	TOBP(E)
  4335	032026	026427	024220	031102		CMP	TOSND(E),#DMSND
  4336	032034	001414				BEQ	TOINB4
  4337	032036	026427	024100	000040		CMP	TOTN(E),#TOBFSZ
  4338	032044	002027				BGE	TOINB2
  4339	032046	026464	024060	024014		CMP	TOBP(E),TOBT+2(E)
  4340	032054	002431				BLT	TOINB3
  4341	032056	016464	024012	024060		MOV	TOBT(E),TOBP(E)
  4342	032064	000207				RTS	PC
  4343					
  4344	032066	026464	024060	000776	TOINB4:	CMP	TOBP(E),DMCA(E)
  4345	032074	001413				BEQ	TOINB2
  4346	032076	026464	024060	024014		CMP	TOBP(E),TOBT+2(E)
  4347	032104	002415				BLT	TOINB3
  4348	032106	016464	024012	024060		MOV	TOBT(E),TOBP(E)
  4349	032114	026464	024060	000776		CMP	TOBP(E),DMCA(E)
  4350	032122	001006				BNE	TOINB3
  4351	032124	012664	024120		TOINB2:	MOV	(P)+,TOPC(E)
  4352	032130	010264	024140			MOV	C,TOSVC(E)
  4353	032134	010364	024160			MOV	D,TOSVD(E)
  4354	032140	000207			TOINB3:	RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 128
	TYI 151	PAGE 28 	TYPE OUT

  4355					
  4356					;CHAR ROUTINES
  4357					
  4358					;^B -- ECHOES AS SPACE
  4359	032142	012703	000040		TOCB:	MOV	#40,D
  4360	032146	005264	023372			INC	CHARNO(E)
  4361	032152	004767	177616			JSR	PC,TOINB
  4362	032156	012703	000002			MOV	#2,D
  4363	032162	000651				BR	UTYO5
  4364					
  4365					;^H -- BACKSPACE
  4366	032164	005764	023372		TOCH:	TST	CHARNO(E)
  4367	032170	001700				BEQ	UTYO6
  4368	032172	005364	023372			DEC	CHARNO(E)
  4369	032176	000167	177500			JMP	UTYO4
  4370					
  4371					;^I -- TAB
  4372	032202	012703	000040		TOCI:	MOV	#40,D
  4373	032206	005264	023372		TOCI1:	INC	CHARNO(E)
  4374	032212	004767	177556			JSR	PC,TOINB
  4375	032216	032764	000007	023372		BIT	#7,CHARNO(E)
  4376	032224	001370				BNE	TOCI1
  4377	032226	012703	000011			MOV	#11,D
  4378	032232	000167	177450			JMP	UTYO5
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 129
	READ 56	PAGE 1 	READ -

  4379						.STITLE  READ -
  4380		001022			VERN==VERN+%FNAM2
  4381					
  4382					READ:	PUSH A
  4383						SPUSH B
  4384						SPUSH C
  4385						SPUSH D
  4386						SPUSH E
  4387						SPUSH F
  4388	032256	005067	151266			CLR RDFLAG
  4389	032262	017767	151120	151314		MOV @S,GNCN
  4390	032270	042767	170000	151306		BIC #170000,GNCN
  4391	032276	005005				CLR F
  4392	032300	004767	000240		READA:	JSR PC,RDWRD
  4393	032304	000413				BR READB
  4394	032306	052767	000004	151234		BIS #SEPF,RDFLAG
  4395	032314	004767	000662			JSR PC,CKDOTF
  4396	032320	004767	000724		READC:	JSR PC,LISTB
  4397	032324	032767	000004	151216		BIT #SEPF,RDFLAG
  4398	032332	001762				BEQ READA
  4399	032334	042767	000004	151206	READB:	BIC #SEPF,RDFLAG	;CHECK SPECIAL CHAR IN D
  4400	032342	004767	000634			JSR PC,CKDOTF	;FIRST CHECK FOR PENDING ":"
  4401	032346	022703	000015			CMP #15,D
  4402	032352	001432				BEQ READR	;C-R
  4403	032354	022703	000042			CMP #'",D
  4404	032360	001441				BEQ READS	;STRING
  4405	032362	022703	000133			CMP #'[,D
  4406	032366	001447				BEQ READL	;LIST
  4407	032370	022703	000135			CMP #'],D
  4408	032374	001001				BNE .+4
  4409	032376	104402				ERROR+COP	;CHAR (]) OUT OF PLACE
  4410	032400	022703	000072			CMP #':,D
  4411	032404	001453				BEQ READD	;DOTS
  4412	032406	132763	000010	006120		BITB #OPERF,DTBL(D)	;IS CHAR AN OPERATOR
  4413	032414	001731				BEQ READA	;NO
  4414	032416	116300	006320			MOVB DTBL2(D),A
  4415	032422	006300				ASL A
  4416	032424	016001	004240			MOV SOBLSU(A),B
  4417							;SET TYPE TO SFUN OR INFIX
  4418	032430	011100				MOV @B,A	;THIS HACK WORKS BECAUSE #SFUN=0
  4419	032432	042700	167777			BIC #-INFIX-1,A	; AND #INFIX=10000
  4420	032436	000730				BR READC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 130
	READ 56	PAGE 2 	READ -

  4421					READR:	POPS A
  4422	032450	010077	150732			MOV A,@S
  4423	032454	005067	151006			CLR	TOPS
  4424	032460	000167	012724			JMP RETF
  4425	032464	004767	001106		READS:	JSR PC,GNC
  4426	032470	004767	000212			JSR PC,RDST
  4427	032474	000400				BR .+2	;RDST ALWAYS SKIPS
  4428	032476	052767	000004	151044		BIS #SEPF,RDFLAG
  4429	032504	000705				BR READC
  4430	032506	004767	000354		READL:	JSR PC,RDLST
  4431						POPS TOPS
  4432	032524	042767	000004	151016		BIC #SEPF,RDFLAG
  4433	032532	000672				BR READC
  4434	032534	052767	000400	151006	READD:	BIS #DOTF,RDFLAG
  4435	032542	000656				BR READA
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 131
	READ 56	PAGE 3 	READ - READ WORD

  4436						.STITLE READ - READ WORD
  4437						;READ CHARS UP THRU NEXT SEPARATOR CHAR.  IF JUST A SEP,
  4438						;RETURN WITH IT IN D.  OTHERWISE NUMBERIFY OR INTERN CHAR STRING,
  4439						;SKIP RETURN WITH TOKEN IN A,,B
  4440	032544	105067	151000		RDWRD:	CLRB RDFLAG
  4441	032550	004767	000610			JSR PC,BLSTI
  4442	032554	004767	001016		RDWA:	JSR PC,GNC
  4443	032560	116300	006120			MOVB DTBL(D),A	;GET FLAGS IN A
  4444	032564	032700	000004			BIT #SEPF,A	;IS THIS CHAR A SEPARATOR?
  4445	032570	001005				BNE RDWB	;YES
  4446	032572	150067	150752			BISB A,RDFLAG
  4447	032576	004767	000602			JSR PC,BLST
  4448	032602	000764				BR RDWA
  4449	032604	004767	000666		RDWB:	JSR PC,BLSTF	;FINISH OFF STRING
  4450	032610	000207				RTS PC	;NO CHARS SEEN BEFORE SEP
  4451	032612	032767	000040	150730		BIT #NNUMF,RDFLAG
  4452	032620	001010				BNE RDWC	;NOT A POSSIBLE NUMBER
  4453	032622	016701	150640			MOV TOPS,B
  4454	032626	012700	130000			MOV #LNUM,A
  4455	032632	004767	012732			JSR PC,CONVER	;TRY MAKING A #
  4456	032636	104000				SKPRET	;LOST SO LEAVE AS LSTR
  4457	032640	104000				SKPRET	;OK
  4458	032642	012700	020000		RDWC:	MOV #UFUN,A	;TRY TO INTERN STRING IN TOPS AS A SYSTEM OR USER FUNCTION
  4459	032646	032767	000400	150674		BIT #DOTF,RDFLAG	; UNLESS DOTF ON, THEN AS USER VARIABLE
  4460	032654	001405				BEQ RDWD
  4461	032656	012700	030000			MOV #UVAR,A
  4462	032662	042767	000400	150660		BIC #DOTF,RDFLAG
  4463	032670	004767	021352		RDWD:	JSR PC,.INTRN	;RDSTR COMES HERE ALSO
  4464	032674	000402				BR RDWE
  4465	032676	004767	022500			JSR PC,FRELST
  4466	032702	050001			RDWE:	BIS A,B
  4467	032704	104000				SKPRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 132
	READ 56	PAGE 4 	READ - READ STRING

  4468						.STITLE READ - READ STRING
  4469						;READ CHAR UP TO NEXT SPACE OR ] IF INSIDE
  4470						;A LIST.  DONT ALLOW ] OR [.
  4471						;ALWAYS SKIPS
  4472	032706	105067	150636		RDST:	CLRB RDFLAG
  4473	032712	004767	000446			JSR PC,BLSTI
  4474	032716	000402				BR RDSB
  4475	032720	004767	000652		RDSA:	JSR PC,GNC
  4476	032724	116300	006120		RDSB:	MOVB DTBL(D),A
  4477	032730	032700	000004			BIT #SEPF,A
  4478	032734	001414				BEQ RDSE
  4479	032736	022703	000040			CMP #' ,D
  4480	032742	001422				BEQ RDSX
  4481	032744	022703	000135			CMP #'],D
  4482	032750	001413				BEQ RDSC
  4483	032752	022703	000133			CMP #'[,D
  4484	032756	001414				BEQ RDSX
  4485	032760	022703	000015			CMP #15,D
  4486	032764	001411				BEQ RDSX
  4487	032766	050067	150556		RDSE:	BIS A,RDFLAG
  4488	032772	004767	000406			JSR PC,BLST
  4489	032776	000750				BR RDSA
  4490	033000	005767	150546		RDSC:	TST LISTBD	;ARE WE IN LIST
  4491	033004	001001				BNE RDSX	;YES
  4492	033006	104402			RDSD:	ERROR+COP	;CHAR (D) OUT OF PLACE
  4493	033010	012700	140000		RDSX:	MOV #LSTR,A
  4494	033014	012701	140000			MOV #LSTR, B
  4495	033020	004767	000452			JSR PC,BLSTF
  4496	033024	000207			RDSR:	RTS PC	;EMPTY STRING
  4497	033026	012700	140000			MOV #LSTR,A
  4498	033032	016701	150430			MOV TOPS,B
  4499	033036	032767	000040	150504		BIT #NNUMF,RDFLAG
  4500	033044	001767				BEQ RDSR	;IT IS A POSSIBLE NUMBER
  4501	033046	032767	000004	150474		BIT #SEPF,RDFLAG
  4502	033054	001363				BNE RDSR	;IT HAS A SEP CHAR IN IT
  4503	033056	012700	110000			MOV #ATOM,A
  4504	033062	000167	177602			JMP RDWD	; INTERN IT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 133
	READ 56	PAGE 5 	READ - READ LIST

  4505						.STITL READ - READ LIST
  4506						;READ THRU MATCHING ] MAKING A LIST AS U GO
  4507	033066	105067	150456		RDLST:	CLRB RDFLAG
  4508	033072	004767	000206			JSR PC,SLISTB
  4509	033076	004767	000474		RDLA:	JSR PC,GNC
  4510	033102	022703	000040			CMP #' ,D
  4511	033106	001773				BEQ RDLA	;SKIP OVER SPACES
  4512	033110	022703	000133			CMP #'[,D
  4513	033114	001421				BEQ RDLB	;READ A LIST
  4514	033116	022703	000135			CMP #'],D
  4515	033122	001413				BEQ RDLY	;DONE
  4516	033124	004767	177556			JSR PC,RDST	;READ A STRING
  4517	033130	000400				BR .+2	;RDST ALWAYS SKIPS
  4518	033132	004767	000112		RDLX:	JSR PC,LISTB	;ADD THIS NODE TO LIST
  4519	033136	022703	000133			CMP #'[,D
  4520	033142	001406				BEQ RDLB
  4521	033144	022703	000135			CMP #'],D	;AT END?
  4522	033150	001352				BNE RDLA	;NO, GET NEXT ELEMENT
  4523	033152	004767	000142		RDLY:	JSR PC,FLISTB
  4524	033156	000207				RTS PC
  4525	033160	004767	177702		RDLB:	JSR PC,RDLST
  4526						POPS TOPS
  4527	033176	005003				CLR D
  4528	033200	000754				BR RDLX
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 134
	READ 56	PAGE 6 	READ - MISC

  4529						.STITLE READ - MISC
  4530	033202	032767	000400	150340	CKDOTF:	BIT #DOTF,RDFLAG
  4531	033210	001434				BEQ LISTBR
  4532	033212	042767	000400	150330		BIC #DOTF,RDFLAG
  4533						PUSH A
  4534						SPUSH B
  4535	033230	012700	000000			MOV #SFUN,A
  4536	033234	012701	006070			MOV #$DOTS,B
  4537	033240	004767	000004			JSR PC,LISTB
  4538	033244	000167	012170			JMP RETB
  4539	033250	010502			LISTB:	MOV F,C	;BUILD A LIST, ADD NODE IN A,,B TO
  4540	033252	004767	021754			JSR PC,GRBAD1	;LIST WHOSE LAST NODE PTR IS IN F
  4541	033256	005705				TST F
  4542	033260	001007				BNE LISTB1
  4543						PUSHS	C
  4544	033272	052777	170000	150106		BIS #LIST,@S
  4545	033300	010205			LISTB1:	MOV C,F
  4546	033302	000207			LISTBR:	RTS PC
  4547	033304	011600			SLISTB:	MOV @P,A	;START LISTB   SAVE RETURN
  4548	033306	010516				MOV F,@P	;SAVE CURRENT LAST NODE PTR
  4549	033310	005005				CLR F
  4550	033312	005267	150234			INC LISTBD
  4551	033316	000110				JMP @A
  4552					FLISTB:	POP C	;SAVE RETURN
  4553	033326	005705				TST F
  4554	033330	001005				BNE FLSB1
  4555						PUSHS #LIST
  4556					FLSB1:	POP F	;RESTORE OLD CURRENT NODE PTR
  4557	033352	012700	170000			MOV #LIST,A
  4558	033356	017701	150024			MOV @S,B
  4559	033362	000112				JMP @C
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 135
	READ 56	PAGE 7 	READ - MISC

  4560	033364	005067	150174		BLSTI:	CLR NCHR
  4561	033370	005004				CLR E
  4562	033372	005067	150070			CLR TOPS
  4563	033376	052704	100000		BLSTI1:	BIS #100000,E
  4564	033402	000207				RTS PC
  4565					BLST:		;BUILD STRING - CHAR IN D, USES E
  4566									;DESTROYS A,B,C
  4567						PUSH A
  4568						SPUSH B
  4569						SPUSH C
  4570	033416	032703	000200			BIT #200,D	;CHECK IF IGNORE BIT ON
  4571	033422	001012				BNE BLSTRT
  4572	033424	032703	000177			BIT #177,D	;CHECK IF NULL
  4573	033430	001407				BEQ BLSTRT
  4574	033432	005267	150126			INC NCHR	;WE HAVE A CHAR
  4575	033436	062704	040000			ADD #40000,E
  4576	033442	002004				BGE BLST2	;IS IT  THE SECOND
  4577	033444	110367	150110			MOVB D,TEMP	;NO, 1ST
  4578	033450	000167	011756		BLSTRT:	JMP RETC
  4579	033454	110367	150101		BLST2:	MOVB D,TEMP+1	;IT IS THE SECOND CHAR
  4580	033460	016701	150074			MOV TEMP,B
  4581						;STORE THE CHARACTERS
  4582	033464	004767	000052		BLST3:	JSR PC,BSAN
  4583	033470	052704	100000			BIS #100000,E
  4584	033474	000765				BR BLSTRT
  4585					BLSTF:	;FINISH BUILDING STRING, PUT PTR IN TOPS.
  4586							; DONT SKIP IF EMPTY STRING (TOPS=0)
  4587	033476	005767	150062			TST NCHR
  4588	033502	001434				BEQ BSANR	;EMPTY STRING
  4589	033504	062704	040000			ADD #40000,E
  4590	033510	002001				BGE .+4	;IS LAST NODE USED
  4591	033512	104000				SKPRET
  4592						PUSH A
  4593						SPUSH B
  4594						SPUSH C
  4595	033526	116701	150026			MOVB TEMP,B	;YES
  4596	033532	004767	000004			JSR PC,BSAN
  4597	033536	000167	014346		BLSTF1:	JMP SRETC
  4598	033542	010402			BSAN:	MOV E,C
  4599	033544	012700	070000			MOV #SSTR,A
  4600	033550	004767	021456			JSR PC,GRBAD1
  4601	033554	005704				TST E
  4602	033556	001005				BNE BSAN1
  4603	033560	010267	147702			MOV C,TOPS	;SAVE NEW STRING PTR ON S
  4604	033564	052767	140000	147674		BIS #LSTR,TOPS
  4605	033572	010204			BSAN1:	MOV C,E
  4606	033574	000207			BSANR:	RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 136
	READ 56	PAGE 8 	GNC - GET NEXT CHAR

  4607						.STITL GNC - GET NEXT CHAR
  4608					GNC:	PUSH A		;GET NEXT CHAR INTO D
  4609						SPUSH B		;INITIALIZE BY MOVING LSTR PTR INTO GNCN
  4610	033606	116703	147774		GNC4:	MOVB GNCN+2,D	;    AND CLEARING TYPE FIELD (#170000)
  4611	033612	016701	147766			MOV GNCN,B	;SKIPS UNLESS NO MORE CHAR
  4612	033616	002423				BLT GNC1	;JUST GOT 2ND CHAR
  4613	033620	001004				BNE GNC3
  4614	033622	012703	000015			MOV #15,D
  4615	033626	000167	011606			JMP RETB	;NONE LEFT
  4616	033632	004767	017650		GNC3:	JSR PC,.LOAD	;GET NEXT NODE
  4617	033636	052700	100000			BIS #100000,A	;SET "STILL ANOTHER CHAR" BIT
  4618	033642	010067	147736			MOV A,GNCN
  4619	033646	110103				MOVB B,D	;FOR OUTPUT
  4620	033650	000301				SWAB B
  4621	033652	110167	147730			MOVB B,GNCN+2
  4622	033656	005703			GNC2:	TST D
  4623	033660	001752				BEQ GNC4	;IGNORE NULL CHARS
  4624	033662	000167	011552			JMP RETB
  4625	033666	042767	170000	147710	GNC1:	BIC #170000,GNCN	;CLEAR "STILL ..." BIT
  4626	033674	000770				BR GNC2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 137
	READ 56	PAGE 9 	ERRORS AND HANDLER

  4627						.STITL ERRORS AND HANDLER
  4628	033676	012716	050132		EMTBK:	MOV #SRET,@P	;FAKE IT OUT
  4629	033702	000002				RTI
  4630					ERRBK:	PUSH A
  4631	033712	016600	000002			MOV 2(P),A	;GET LOC OF ERROR
  4632	033716	012767	020270	147666		MOV #TYO,PCHR
  4633	033724	004767	000266			JSR PC,PRONL	;PRINT ADDR WHERE ERROR OCCURED
  4634						SPACE
  4635	033734	016000	177776			MOV -2(A),A	;GET ERROR #
  4636	033740	042700	177400			BIC #177400,A
  4637	033744	006300				ASL A
  4638	033746	016000	036430			MOV ERTAB(A),A	;POINTS TO LIST FOR THIS ERROR
  4639	033752	000110				JMP @A	;XFER TO LIST
  4640					ERRRT:	POP A
  4641	033762	000002				RTI
  4642					
  4643					ERTAS:	SPUSH A
  4644	033766	016600	000002			MOV 2(P),A	;TYPE ASCIZ STRING, STRING FOLLOWS CALL
  4645	033772	004767	000170			JSR PC,PRAS
  4646	033776	030027	000001			BIT A,#1	;IF STRING STOPPED ON ODD ADDR
  4647	034002	001401				BEQ .+4
  4648	034004	005200				INC A	;MAKE IT EVEN
  4649	034006	010066	000002			MOV A,2(P)
  4650						SPOP A
  4651	034014	000207				RTS PC
  4652					PRLO:	PUSH A	;PRINT LAST OPERATOR
  4653						SPUSH B
  4654	034026	016700	147506			MOV LO,A
  4655	034032	001441				BEQ EMPTY
  4656	034034	016701	147502			MOV LO+2,B
  4657	034040	000411				BR PRCO1
  4658					PRCO:	PUSH A,	;PRINT CURRENT OPERATOR
  4659						SPUSH B
  4660	034052	016700	147452			MOV CO,A
  4661	034056	016701	147450			MOV CO+2,B
  4662	034062	001425				BEQ EMPTY
  4663					PRCO1:	SPUSH D
  4664	034066	004767	000006			JSR PC,PROAB
  4665						SPOP D
  4666	034074	000167	011340			JMP RETB
  4667	034100	020027	020000		PROAB:	CMP A,#UFUN	;PRINT OPERATOR IN A,B
  4668	034104	103407				BLO PRCO2
  4669	034106	004767	017374			JSR PC,.LOAD	;GET HEAD OF UOE
  4670	034112	042767	000014	147452		BIC #PQF+PBF,FLAGS2
  4671	034120	000167	000742			JMP PRLSTR	;PRINT PNAME
  4672	034124	010100			PRCO2:	MOV B,A	;SYSTEM FUNCTION
  4673	034126	062700	000004			ADD #4,A
  4674	034132	000167	000030			JMP PRAS	;PRINT ASCIZ PNAME
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 138
	READ 56	PAGE 10 	ERRORS AND HANDLER

  4675					EMPTY:	PRTXT ^\ EMPTY \
  4676	034152	000167	011262			JMP RETB
  4677	034156	017600	000000		ERTAP:	MOV @(P),A	;TYPE ASCIZ STRING, POINTER FOLLOWS CALL
  4678	034162	005216				INC @P
  4679	034164	005216				INC @P
  4680					PRAS:	SPUSH D	;PRINT ASCIZ STRING POINTED TO BY A
  4681	034170	112003			PRAS1:	MOVB (A)+,D
  4682	034172	001403				BEQ PRASR
  4683	034174	004777	147412			JSR PC,@PCHR
  4684	034200	000773				BR PRAS1
  4685					PRASR:	SPOP D
  4686	034204	000207				RTS PC
  4687	034206	042767	000200	147346	PRON:	BIC #TF2,TFLAGS	;PRINT OCTAL NO., NO. IN A
  4688	034214	000403				BR PRON1	;CALL-	JSR PC,PRON
  4689	034216	052767	000200	147336	PRONL:	BIS #TF2,TFLAGS
  4690					PRON1:	PUSH A		;PRON DOESN'T PRINT LEADING ZEROS, PRONL DOES
  4691						SPUSH D
  4692	034234	005003				CLR D
  4693	034236	000261				SEC
  4694	034240	006100				ROL A	;TO TELL WHEN WE ARE DONE
  4695	034242	000407				BR PRON2
  4696	034244	005003			PRON3:	CLR D
  4697	034246	006300				ASL A
  4698	034250	001422				BEQ PRON5
  4699	034252	006103				ROL D
  4700	034254	006300				ASL A
  4701	034256	006103				ROL D
  4702	034260	006300				ASL A
  4703	034262	006103			PRON2:	ROL D
  4704	034264	001004				BNE PRON4
  4705	034266	032767	000200	147266		BIT #TF2,TFLAGS
  4706	034274	001763				BEQ PRON3
  4707	034276	052767	000200	147256	PRON4:	BIS #TF2,TFLAGS
  4708	034304	052703	000060			BIS #60,D
  4709	034310	004777	147276			JSR PC,@PCHR
  4710					  4711	034314	000753				BR PRON3
  4712	034316	052703	000060		PRON5:	BIS #60,D
  4713	034322	032767	000200	147232		BIT #TF2,TFLAGS
  4714	034330	001002				BNE .+6	;IF NOTHING HAS BEEN TYPED, TYPE A ZERO
  4715	034332	004777	147254			JSR PC,@PCHR
  4716						SPOP D
  4717						SPOP A
  4718	034342	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 139
	READ 56	PAGE 11 	ERRORS AND HANDLER

  4719	034344	052767	000100	147210	PRDNL:	BIS #TF1,TFLAGS
  4720	034352	000403				BR .+10
  4721	034354	042767	000100	147200	PRDN:	BIC #TF1,TFLAGS	;PRINT DECIMAL NO. IN A
  4722						PUSH B
  4723						SPUSH D
  4724	034372	012701	000010			MOV #10,B
  4725	034376	010067	142702			MOV A,MQ
  4726	034402	002006				BGE PRDN1
  4727	034404	005467	142674			NEG MQ	;ITS NEGATIVE
  4728	034410	012703	000055			MOV #'-,D
  4729	034414	004777	147172			JSR PC,@PCHR
  4730	034420	016167	034532	142652	PRDN1:	MOV DTOTB(B),DIVIDE
  4731	034426	032767	000100	147126		BIT #TF1,TFLAGS
  4732	034434	001007				BNE PRDN2
  4733	034436	132767	000010	142645		BITB #MQZ,EAESR	;> ZERO?
  4734	034444	001011				BNE PRDN3	;NO
  4735	034446	052767	000100	147106		BIS #TF1,TFLAGS
  4736	034454	016703	142624		PRDN2:	MOV MQ,D
  4737	034460	062703	000060			ADD #'0,D
  4738	034464	004777	147122			JSR PC,@PCHR
  4739	034470	016767	142606	142606	PRDN3:	MOV AC,MQ
  4740	034476	162701	000002			SUB #2,B
  4741	034502	001346				BNE PRDN1
  4742	034504	016703	142574			MOV MQ,D
  4743	034510	062703	000060			ADD #'0,D
  4744	034514	004777	147072			JSR PC,@PCHR
  4745						POP D
  4746						SPOP B
  4747	034530	000207				RTS PC
  4748	034532	000001			DTOTB:	1.
  4749	034534	000012				10.
  4750	034536	000144				100.
  4751	034540	001750				1000.
  4752	034542	023420				10000.
  4753	034544	000167	177366		EMPTY1:	JMP EMPTY
  4754					PRS1:	PUSH A	;PRINT TOP ELEMENT OF SS
  4755						SPUSH B
  4756	034560	016700	146740			MOV CSPDLP,A
  4757	034564	066700	146632			ADD SPRBAO,A
  4758	034570	020067	146612			CMP A,S
  4759	034574	101763				BLOS EMPTY1
  4760	034576	017701	146604			MOV @S,B
  4761						SPUSH D
  4762	034604	004767	000006			JSR PC,PNODAB
  4763						SPOP D
  4764	034612	000167	010622			JMP RETB
  4765	034616	010100			PNODAB:	MOV B,A
  4766	034620	042700	007777			BIC #7777,A
  4767	034624	022700	070000			CMP #SSTR,A
  4768	034630	001404				BEQ PRS11
  4769	034632	022700	110000			CMP #ATOM,A
  4770	034636	101401				BLOS PRS11
  4771	034640	104413				ERROR+INVN	;INVALID NODE
  4772	034642	004767	000130		PRS11:	JSR PC,PRDATA
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 140
	READ 56	PAGE 11.1 	ERRORS AND HANDLER

  4773	034646	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 141
	READ 56	PAGE 12 	ERRORS AND HANDLER

  4774					PRCT:	PUSH A	;PRINT CURRENT TOKEN
  4775						SPUSH B
  4776						SPUSH D
  4777	034662	016700	146656			MOV CT,A
  4778	034666	016701	146654			MOV CT+2,B
  4779	034672	004767	000006			JSR PC,PRTAB
  4780						SPOP D
  4781	034700	000167	010534			JMP RETB
  4782	034704	042700	007777		PRTAB:	BIC #7777,A	;PRINT TOKEN IN A,B
  4783	034710	020027	030000			CMP A,#UVAR
  4784	034714	103002				BHIS .+6
  4785	034716	000167	177156			JMP PROAB
  4786	034722	020027	030000			CMP A,#UVAR
  4787	034726	001405				BEQ PRUV
  4788	034730	000422				BR PRDATA
  4789	034732	052767	000004	146632	PRATM:	BIS #PQF,FLAGS2	;PRINT ATOM IN A,B
  4790	034740	000407				BR PRUV1
  4791	034742	112703	000072		PRUV:	MOVB #':,D	;PRINT USER VARIABLE IN A,B
  4792	034746	004777	146640			JSR PC,@PCHR
  4793	034752	042767	000004	146612	PPNAME:	BIC #PQF,FLAGS2	;PRINT PNAME - UOE PTR IN B
  4794	034760	042767	000010	146604	PRUV1:	BIC #PBF,FLAGS2
  4795	034766	004767	016514			JSR PC,.LOAD
  4796	034772	000167	000070			JMP PRLSTR	;PRINT PNAME
  4797	034776	022700	130000		PRDATA:	CMP #LNUM,A	;PRINT DATA IN A,B. 7777 FIELD OF A IS 0000
  4798	035002	001460				BEQ PRNUM	;NUMBER
  4799	035004	022700	120000			CMP #SNUM,A
  4800	035010	001455				BEQ PRNUM
  4801	035012	042767	000004	146552		BIC #PQF,FLAGS2	;SET PRINT QUOTE FLAG
  4802	035020	022700	110000			CMP #ATOM,A
  4803	035024	001755				BEQ PRUV1
  4804	035026	022700	140000			CMP #LSTR,A
  4805	035032	001415				BEQ PRLSTR	;LONG STRING
  4806	035034	022700	070000			CMP #SSTR,A
  4807					  4808	035040	001414				BEQ PRSSTR	;SHORT STRING
  4809	035042	042767	000004	146522		BIC #PQF,FLAGS2
  4810	035050	052767	000010	146514		BIS #PBF,FLAGS2	;SET PRINT BRACKET FLAG
  4811	035056	022700	170000			CMP #LIST,A
  4812	035062	001451				BEQ PRLST
  4813	035064	104403				ERROR+CPS	;CANT PRINT A SNAP
  4814	035066	004767	016414		PRLSTR:	JSR PC,.LOAD	;PRINT LONG STRING
  4815	035072	004767	000230		PRSSTR:	JSR PC,PRQQ	;PRINT SHORT STRING
  4816	035076	110103			PRSTR2:	MOVB B,D
  4817	035100	003402				BLE	PRSTR3	;NULL CHAR
  4818	035102	004777	146504			JSR PC,@PCHR
  4819	035106	000301			PRSTR3:	SWAB B
  4820	035110	110103				MOVB B,D
  4821	035112	003402				BLE	PRSTR4	;NULL CHARACTER
  4822	035114	004777	146472			JSR PC,@PCHR
  4823	035120	010001			PRSTR4:	MOV A,B
  4824	035122	042701	170000			BIC #170000,B
  4825	035126	001403				BEQ PRSTR1
  4826	035130	004767	016352			JSR PC,.LOAD
  4827	035134	000760				BR PRSTR2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 142
	READ 56	PAGE 12.1 	ERRORS AND HANDLER

  4828	035136	004767	000164		PRSTR1:	JSR PC,PRQQ
  4829	035142	000207			RET1:	RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 143
	READ 56	PAGE 13 	ERRORS AND HANDLER

  4830	035144	005067	146410		PRNUM:	CLR TEMP
  4831	035150	042700	007777			BIC #7777,A
  4832	035154	022700	120000			CMP #SNUM,A
  4833	035160	001406				BEQ PRNUM2
  4834	035162	004767	016320		PRNUM1:	JSR PC,.LOAD	;GET FIRST NODE
  4835	035166	032700	007777			BIT #7777,A	;ONLY PRINT SNUM S FOR NOW
  4836	035172	001401				BEQ PRNUM2
  4837	035174	104423				ERROR+NTB	;# TOO BIG
  4838	035176	010100			PRNUM2:	MOV B,A
  4839	035200	004767	177150			JSR PC,PRDN
  4840	035204	000207				RTS PC
  4841					PRLST:	PUSH A
  4842						SPUSH B
  4843						SPUSH C
  4844	035220	005767	146364			TST NBKTS
  4845	035224	001404				BEQ PRL4
  4846	035226	012703	000133			MOV #'[,D
  4847	035232	004777	146354			JSR PC,@PCHR
  4848	035236	005267	146346		PRL4:	INC NBKTS
  4849	035242	010102				MOV B,C
  4850	035244	032702	007777		PRL1:	BIT #7777,C
  4851	035250	001415				BEQ PRL2	;DONE
  4852	035252	000402				BR PRL3
  4853					PRL6:	SPACE
  4854	035260	004767	016220		PRL3:	JSR PC,.LOADC
  4855	035264	010002				MOV A,C
  4856	035266	042700	007777			BIC #7777,A
  4857	035272	004767	177406			JSR PC,PRTAB
  4858	035276	032702	007777			BIT #7777,C
  4859	035302	001364				BNE PRL6
  4860	035304	005367	146300		PRL2:	DEC NBKTS
  4861	035310	001404				BEQ PRL5
  4862	035312	012703	000135			MOV #'],D
  4863	035316	004777	146270			JSR PC,@PCHR
  4864	035322	000167	010104		PRL5:	JMP RETC
  4865	035326	032767	000004	146236	PRQQ:	BIT #PQF,FLAGS2	;PRINT ' " ' IF PQF=1
  4866	035334	001702				BEQ RET1
  4867	035336	112703	000042			MOVB #'",D
  4868	035342	000177	146244			JMP @PCHR
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 144
	READ 56	PAGE 14 	ERRORS AND HANDLER

  4869					PRNODE:	PUSH A	;PRINT NODE POINTED TO BY B
  4870						SPUSH B
  4871						SPUSH D
  4872	035360	004767	016122			JSR PC,.LOAD
  4873	035364	004767	176616			JSR PC,PRON
  4874						SPACE
  4875	035374	010100				MOV B,A
  4876	035376	004767	176604			JSR PC,PRON
  4877						SPOP D
  4878	035404	000167	010030			JMP RETB
  4879	035410	004767	177732		SEX1:	JSR PC,PRNODE	;FOR FOO$X COMMAND IN 11SIM
  4880	035414	000000				HALT
  4881	035416	004767	177724		SEX:	JSR PC,PRNODE	;FOR RUG
  4882	035422	000167	042352			JMP RUG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 145
	READ 56	PAGE 15 	ERRORS AND HANDLER

  4883					ERTLN:			;ERR RETURN TO LEVEL N
  4884					ERTL0:			;ERR RETURN TO LEVEL 0
  4885	035426	016700	146064			MOV FUNLEV,A
  4886	035432	001435				BEQ ERTL1
  4887						PRTXT ^\LEVEL \
  4888	035450	004767	176700			JSR PC,PRDN
  4889						PRTXT ^\  LINE \
  4890	035470	016700	146010			MOV CLN,A
  4891	035474	004767	176654			JSR PC,PRDN
  4892						PRTXT ^\  IN \
  4893	035512	016701	145762			MOV CPP,B
  4894	035516	004767	177230			JSR PC,PPNAME
  4895						PRCR
  4896	035526	016705	143760		ERTL1:	MOV USER,U
  4897	035532	012700	003614			MOV #DBITTB,A
  4898	035536	060500				ADD U,A
  4899	035540	012720	000001			MOV #1,(A)+
  4900	035544	005020				CLR (A)+
  4901	035546	005020				CLR (A)+
  4902	035550	005020				CLR (A)+
  4903	035552	005020				CLR (A)+	;THAT SHOULD BE ENOUGH
  4904	035554	016565	002542	002536		MOV UDSKAD(U),UNXTDB(U)
  4905	035562	012700	001204			MOV #PDLINK-SLOT1,A
  4906	035566	066700	145650			ADD BASEUS,A
  4907	035572	005010				CLR @A
  4908	035574	005060	000002			CLR 2(A)
  4909	035600	010006				MOV A,P
  4910	035602	010067	145626			MOV A,PRBAO
  4911	035606	010067	145612			MOV A,PPOPL
  4912	035612	162700	000524			SUB #524,A
  4913	035616	010067	145604			MOV A,PPUSHL
  4914	035622	012700	002010			MOV #SDLINK-SLOT1,A
  4915	035626	066700	145610			ADD BASEUS,A
  4916	035632	005060	000002			CLR 2(A)
  4917	035636	005010				CLR @A
  4918	035640	010067	145542			MOV A,S
  4919	035644	010067	145552			MOV A,SPRBAO
  4920	035650	010067	145536			MOV A,SPOPL
  4921	035654	162700	000524			SUB #524,A
  4922	035660	010067	145530			MOV A,SPUSHL
  4923	035664	012700	003466			MOV #TOPS,A
  4924	035670	012701	000037			MOV #<NCHR-TOPS>/2,B
  4925	035674	005020				CLR (A)+
  4926	035676	005301				DEC B
  4927	035700	002375				BGE .-4
  4928	035702	042767	040000	145662		BIC #BREAKF,FLAGS2
  4929	035710	000167	160562			JMP MLOOP
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 146
	READ 56	PAGE 16 	ERRORS AND HANDLER

  4930	035714	004767	005444		SHOW:	JSR PC,GUOEB	;SHOW "FOO"
  4931	035720	000403				BR SHOW5
  4932	035722	010104				MOV B,E
  4933	035724	004767	016142			JSR PC,.BINDF
  4934	035730	104434			SHOW5:	ERROR+PNH	;PROCEDURE NOT HERE
  4935	035732	010105				MOV B,F
  4936						PRCR
  4937						PRTXT ^\TO \
  4938	035750	010401				MOV E,B
  4939	035752	004767	176774			JSR PC,PPNAME
  4940	035756	010502				MOV F,C
  4941	035760	004767	015520			JSR PC,.LOADC
  4942	035764	010005				MOV A,F	;SAVE PTR TO NEXT NODE
  4943	035766	004767	015514			JSR PC,.LOAD	;#ARGS IN B
  4944	035772	005701				TST B
  4945	035774	001413				BEQ SHOW2
  4946	035776	010002				MOV A,C
  4947					SHOW1:	SPACE
  4948	036004	004767	015474			JSR PC,.LOADC	;NEXT ARG
  4949	036010	010002				MOV A,C
  4950	036012	004767	176724			JSR PC,PRUV	;PRINT ITS PNAME
  4951	036016	032702	007777			BIT #7777,C
  4952	036022	001366				BNE SHOW1
  4953					SHOW2:	PRCR
  4954	036030	032705	007777			BIT #7777,F
  4955	036034	001413				BEQ SHOW4
  4956	036036	010502				MOV F,C
  4957	036040	004767	015440		SHOW3:	JSR PC,.LOADC
  4958	036044	010002				MOV A,C
  4959	036046	010177	145334			MOV B,@S
  4960	036052	004767	000026			JSR PC,PRLN
  4961	036056	032702	007777			BIT #7777,C
  4962	036062	001366				BNE SHOW3
  4963					SHOW4:	PRTXT ^\END\
  4964						PRCR
  4965	036100	000167	011252			JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 147
	READ 56	PAGE 17 	ERRORS AND HANDLER

  4966					PRLN:	PUSH A	;PRINT TOKENS IN LIST ON S
  4967						SPUSH B
  4968						SPUSH C
  4969						SPUSH D
  4970	036120	017702	145262			MOV @S,C
  4971	036124	000402				BR PRLN2
  4972					PRLN1:	SPACE
  4973	036132	004767	015346		PRLN2:	JSR PC,.LOADC
  4974	036136	010002				MOV A,C
  4975	036140	004767	176540			JSR PC,PRTAB
  4976	036144	032702	007777			BIT #7777,C	;DONE?
  4977	036150	001366				BNE PRLN1	;NO
  4978						PRCR
  4979	036156	000167	007242			JMP RETD
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 148
	READ 56	PAGE 18 	ERRORS AND HANDLER

  4980	036162	032767	000002	145402	STRACE:	BIT #TRACEF,FLAGS2	;SYSTEM TRACE
  4981	036170	001001				BNE .+4
  4982	036172	000207				RTS PC
  4983	036174	005267	145410			INC NBKTS
  4984						PUSH A
  4985						PRTXT ^/CT=/
  4986	036216	004767	176426			JSR PC,PRCT
  4987						PRTXT ^/ CO=/
  4988	036234	004767	175602			JSR PC,PRCO
  4989						PRTXT ^/ S=/
  4990	036250	004767	176274			JSR PC,PRS1
  4991						PRCR
  4992	036260	005067	145324			CLR NBKTS
  4993						POP A
  4994	036272	000207				RTS PC
  4995	036274	042767	000001	145260	ETRACE:	BIC #TF6,TFLAGS
  4996	036302	000403				BR TRA1
  4997	036304	052767	000001	145250	TRACE:	BIS #TF6,TFLAGS
  4998	036312	004767	005046		TRA1:	JSR PC,GUOEB
  4999	036316	000402				BR TRA5
  5000	036320	004767	015674			JSR PC,.BNDFS
  5001	036324	104434			TRA5:	ERROR+PNH	;PROC NOT HERE
  5002	036326	010102				MOV B,C	;B POINTS TO LIST OF GOODIES. FIRST IS FLAGS,,#ARGS
  5003	036330	004767	015254			JSR PC,.LDP2
  5004	036334	042700	000400			BIC #TPTF,A
  5005	036340	032767	000001	145214		BIT #TF6,TFLAGS
  5006	036346	001402				BEQ TRA2
  5007	036350	052700	000400			BIS #TPTF,A
  5008	036354	004767	015176		TRA2:	JSR PC,.STP2
  5009	036360	000167	010772			JMP NORT
  5010	036364	052767	000002	145200	SETSTF:	BIS #TRACEF,FLAGS2	;SET SYSTEM TRACE FLAG
  5011	036372	000167	010760			JMP NORT
  5012	036376	042767	000002	145166	CLRSTF:	BIC #TRACEF,FLAGS2
  5013	036404	000167	010746			JMP NORT
  5014	036410	016701	145102		FLEV:	MOV FUNLEV,B	;RETURN USER PROC CALL DEPTH
  5015	036414	000167	010114			JMP R1NARG
  5016	036420	016701	142344		VERSN:	MOV LVERNF,B
  5017	036424	000167	010104			JMP R1NARG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 149
	READ 56	PAGE 19 	ERRORS AND HANDLER

  5018						.MACR ERMM AA
  5019						.XLIST
  5020					AA==ERMNO
  5021					ERMNO==ERMNO+1
  5022						AA'.E
  5023						.LIST
  5024						.ENDM
  5025					
  5026						.MACR BEGER A
  5027					A'.E:	.OFFSE 0	;(THIS WILL BE NON-ZERO LATER)
  5028						.ENDM
  5029					
  5030						.MACR ENDER
  5031						.XLIST
  5032						PRCR
  5033						JMP ERTLN
  5034						.OFFSE 0
  5035						.LIST
  5036						.ENDM
  5037					
  5038		000000			ERMNO==0
  5039					ERTAB:	ERMM BSS	;BAD SS
  5040						ERMM CFL	;CANT FIND LINE #
  5041						ERMM COP	;CHAR (D) OUT OF PALCE
  5042						ERMM CPS	;CANT PRINT SNAP
  5043						ERMM CTIP	;CANT "TO" IN PROCEDURE
  5044						ERMM CTIT	;CANT "TO" IN "TO"
  5045						ERMM ERP	;EXTRA RIGHT PAREN
  5046						ERMM HNM	;... HAS NO MEANING
  5047						ERMM HNV	;... HAS NO VALUE
  5048						ERMM ILN	;..(CT).. IS AN INVALID LOGO NAME.
  5049						ERMM INF1	;INFIX IN THE WRONG PLACE
  5050						ERMM INVN	;INVALID NODE
  5051						ERMM ITB	;INPUT TOO BIG
  5052						ERMM LCE	;LINE ... CHANGED BY EDIT
  5053						ERMM LDE	;LINE ..(B).. DOESN'T EXIST
  5054						ERMM LNTB	;LINE # TOO BIG
  5055						ERMM NDU	;NOT A DISPLAY USER
  5056						ERMM NOU	;NO OUTPUT
  5057						ERMM NSL	;NO STORAGE LEFT
  5058						ERMM NTB	;# TOO BIG
  5059						ERMM NTF	;(S) NOT "TRUE" OR "FALSE"
  5060						ERMM NTL	;NUMBER TOO LONG
  5061						ERMM NY		;NOT YET!!
  5062						ERMM OIP	;ONLY IN PROCEDURE
  5063						ERMM OOB	;OUT OF BOUNDS
  5064						ERMM OOP	;(CO) OUT OF PLACE
  5065						ERMM OOT	;OUT OF TOKENS
  5066						ERMM PAE	;PROCEDURE ..(CT).. ALREADY EXISTS
  5067						ERMM PNH	;PROCEDURE ... NOT HERE
  5068						ERMM RTB	;RESULT TOO BIG
  5069						ERMM TIP	;TOO MUCH INSIDE PARENS
  5070						ERMM TML	;TOO MANY LINES
  5071						ERMM TMS	;TOO AMNY SNAPS
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 150
	READ 56	PAGE 19.1 	ERRORS AND HANDLER

  5072						ERMM UEL	;UNEXPECTED END OF LINE
  5073						ERMM WDW	;WHAT SHOULD I DO WITH ...
  5074						ERMM WIC	;YOU CAN'T WIPE WHILE IN CAMERA
  5075						ERMM WIT	;(CT) IS WRONG INPUT TO "TO"
  5076						ERMM WTA	;..(CO)..DOESN'T LIKE..(CT)..AS INPUT
  5077						ERMM WTAA	;..(CO)..DOESN'T LIKE..(A)...AS INPUT
  5078						ERMM WTAB	;..(CO)..DOESN'T LIKE..(B)...AS INPUT
  5079						ERMM YND	;YOU DON'T HAVE THE DISPLAY
  5080						ERMM YNT	;YOU DON'T HAVE THE TURTLE
  5081	036554	000052			ERTEND:	ERMNO	;NEXT AVAILABLE ERR NO.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 151
	READ 56	PAGE 20 	ERRORS AND HANDLER

  5082						BEGER WTAA
  5083						PUSHS A
  5084	036566	004767	175250			JSR PC,PRCO
  5085						PRTXT ^/ DOESN'T LIKE /
  5086	036616	004767	175726			JSR PC,PRS1
  5087						PRTXT ^/ AS INPUT./
  5088						ENDER
  5089					
  5090						BEGER WTAB
  5091						PUSHS B
  5092	036662	004767	175154			JSR PC,PRCO
  5093						PRTXT ^/ DOESN'T LIKE /
  5094	036712	004767	175632			JSR PC,PRS1
  5095						PRTXT ^/ AS INPUT./
  5096						ENDER
  5097					
  5098						BEGER WTA
  5099	036746	004767	175070			JSR PC,PRCO
  5100						PRTXT ^/ DOESN'T LIKE /
  5101	036776	004767	175546			JSR PC,PRS1
  5102						PRTXT ^/ AS INPUT./
  5103						ENDER
  5104					
  5105						BEGER INF1
  5106	037032	004767	175004			JSR PC,PRCO
  5107						PRTXT ^/ IS IN THE WRONG PLACE./
  5108						ENDER
  5109					
  5110						BEGER NOU
  5111	037102	004767	174710			JSR PC,PRLO
  5112						PRTXT ^/ DIDN'T OUTPUT!/
  5113						ENDER
  5114					
  5115						BEGER OOT
  5116						PRTXT ^/OUT OF TOKENS./
  5117						ENDER
  5118					
  5119						BEGER BSS
  5120						PRTXT ^/BAD SS./
  5121						ENDER
  5122					
  5123						BEGER NY
  5124						PRTXT ^/NOT YET!!/
  5125						ENDER
  5126					
  5127						BEGER WDW
  5128						PRTXT ^/WHAT SHOULD I DO WITH /
  5129	037304	004767	175240			JSR PC,PRS1
  5130						ENDER
  5131					
  5132						BEGER HNV
  5133	037320	004767	175324			JSR PC,PRCT
  5134						PRTXT ^/ HAS NO VALUE./
  5135						ENDER
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 152
	READ 56	PAGE 20.1 	ERRORS AND HANDLER

  5136					
  5137						BEGER ERP
  5138						PRTXT ^/EXTRA RIGHT PAREN./
  5139						ENDER
  5140					
  5141						BEGER TIP
  5142						PRTXT ^/TOO MUCH INSIDE PARENS./
  5143						ENDER
  5144					
  5145						BEGER OOP
  5146	037464	004767	174352			JSR PC,PRCO
  5147						PRTXT ^/ OUT OF PLACE./
  5148						ENDER
  5149					
  5150						BEGER UEL
  5151						PRTXT ^/UNEXPECTED END OF LINE./
  5152						ENDER
  5153					
  5154						BEGER NSL
  5155						PRTXT ^/NO STORAGE LEFT./
  5156						ENDER
  5157					
  5158						BEGER NTF
  5159	037626	004767	174716			JSR PC,PRS1
  5160						PRTXT ^/ NOT "TRUE" OF "FALSE"./
  5161						ENDER
  5162					
  5163						BEGER LDE
  5164						PRTXT ^\LINE \
  5165	037710	004767	174440			JSR PC,PRDN	;LINE # SHOULD BE IN B
  5166						PRTXT ^\ DOESN'T EXIST.\
  5167						ENDER
  5168					
  5169						BEGER LNTB
  5170						PRTXT ^\LINE NUMBER TOO BIG.\
  5171						ENDER
  5172					
  5173						BEGER COP
  5174						PRTXT ^\CHAR \
  5175	040024	004767	160240			JSR PC,TYO
  5176						PRTXT ^\ OUT OF PLACE.\
  5177						ENDER
  5178					
  5179						BEGER CPS
  5180						PRTXT ^\CANT PRINT A SNAP\
  5181						ENDER
  5182					
  5183						BEGER NTB
  5184						PRTXT ^\# TOO BIG\
  5185						ENDER
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 153
	READ 56	PAGE 21 	ERRORS AND HANDLER

  5186					;MORE ERROR MESSAGES:
  5187					
  5188						BEGER NDU
  5189						PRTXT ^/YOU DON'T HAVE A DISPLAY CONSOLE/
  5190						ENDER
  5191					
  5192						BEGER NTL
  5193						PRTXT ^/NUMBER TOO LONG/
  5194						ENDER
  5195					
  5196						BEGER OOB
  5197						PRTXT ^/OUT OF BOUNDS/
  5198						ENDER
  5199					
  5200						BEGER TML
  5201						PRTXT ^/TOO MANY LINES/
  5202						ENDER
  5203					
  5204						BEGER TMS
  5205						PRTXT ^/TOO MANY SNAPS/
  5206						ENDER
  5207					
  5208						BEGER WIC
  5209						PRTXT ^/YOU CANT WIPE WHILE IN CAMERA/
  5210						ENDER
  5211					
  5212						BEGER YND
  5213						PRTXT ^/YOU DONT HAVE THE DISPLAY/
  5214						ENDER
  5215					
  5216						BEGER YNT
  5217						PRTXT ^/YOU DONT HAVE THE TURTLE/
  5218						ENDER
  5219						BEGER 	CFL
  5220						PRTXT ^/CANT FIND LINE NO. /
  5221						ENDER
  5222					
  5223						BEGER HNM
  5224						PRTXT ^/... HAS NO MEANING./
  5225						ENDER
  5226					
  5227						BEGER LCE
  5228						PRTXT ^\LINE ... CHANGED BY EDIT.\
  5229						ENDER
  5230					
  5231						BEGER PNH
  5232						PRTXT ^/PROCEDURE ... NOT HERE/
  5233						ENDER
  5234					
  5235						BEGER PAE
  5236	041004	005067	142556			CLR TOPRNM
  5237						PRTXT ^/PROCEDURE /
  5238	041030	004767	173614			JSR PC,PRCT
  5239						PRTXT ^/ ALREADY EXISTS./
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 154
	READ 56	PAGE 21.1 	ERRORS AND HANDLER

  5240						ENDER
  5241					
  5242						BEGER ILN
  5243	041072	004767	173552			JSR PC,PRCT
  5244						PRTXT ^/ IS AN INVALID LOGO NAME./
  5245						ENDER
  5246					
  5247						BEGER WIT
  5248	041144	005067	142416			CLR TOPRNM
  5249	041150	004767	173474			JSR PC,PRCT
  5250						PRTXT ^/ CAN'T BE A DUMMY INPUT TO "TO"./
  5251						ENDER
  5252					
  5253						BEGER RTB
  5254						PRTXT ^\ARITHMETIC RESULT TOO BIG.\
  5255						ENDER
  5256					
  5257						BEGER ITB
  5258						PRTXT ^\ARITHMETIC INPUT TOO BIG.\
  5259						ENDER
  5260						BEGER CTIP
  5261						PRTXT ^\CANT "TO" IN A PROCEDURE.\
  5262						ENDER
  5263						BEGER CTIT
  5264						PRTXT ^\CANT "TO" IN "TO".\
  5265						ENDER
  5266						BEGER INVN
  5267						PRTXT ^\INVALID NODE.\
  5268						ENDER
  5269						BEGER OIP
  5270						PRTXT ^\ ONLY WHEN IN A PROCEDURE.\
  5271						ENDER
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 155
	EVAL 334	PAGE 1 	SYSTEM PRIMITIVES

  5272					.STITL SYSTEM PRIMITIVES
  5273					
  5274		001540				VERN==VERN+%FNAM2
  5275					
  5276					
  5277					SENTENCE:
  5278	041560	011603				MOV	(SP),D	;NUMBER OF ARGS (DON'T CHANGE THE REGISTER FROM D WITHOUT CHANGING SNAP, TOO)
  5279					
  5280	041562	012716	170000			MOV	#SENT,(SP)	;WHAT TYPE THIS LIST IS
  5281	041566	005002			SNPSEN:	CLR	C
  5282	041570	005703				TST	D
  5283	041572	003447			SENT.1:	BLE	SENT.R	;RETURN
  5284	041574	017701	141606			MOV	@S,B	;ARGUMENT.  LEAVE ON S-PDL FOR GARBGE COLLECTOR
  5285	041600	010100				MOV	B,A
  5286	041602	042700	007777			BIC	#7777,A	;LEAVE ONLY DATA TYPE
  5287	041606	022700	170000			CMP	#SENT,A
  5288	041612	001420				BEQ	SENT.S	;ARG IS SENTENCE
  5289	041614	022700	110000			CMP	#ATOM,A
  5290	041620	001004				BNE	SENT.2
  5291					
  5292					;ARG IS AN ATOM
  5293	041622	004767	011660		SENT.A:	JSR	PC,.LOAD	;CONVERT ATOM TO LSTR
  5294	041626	012700	140000			MOV	#LSTR,A
  5295					
  5296	041632	050200			SENT.2:	BIS	C,A	;C POINTS TO PREVIOUS STUFF OF SENTENCE
  5297	041634	004767	013370			JSR	PC,GRBAD
  5298					
  5299	041640	010267	141632		SENT.3:	MOV	C,GCPREV	;POINTER TO PREVIOUS STUFF OF SENTENCE
  5300	041644	004767	150304		SENT.4:	JSR	PC,SPOPT	;POP S
  5301	041650	005303				DEC	D	;COUNTER
  5302	041652	000747				BR	SENT.1
  5303					
  5304	041654	032701	007777		SENT.S:	BIT	#7777,B	;ARGUMENT IS A SENTENCE
  5305	041660	001771				BEQ	SENT.4	;EMPTY
  5306	041662	005702				TST	C	;0 IF FIRST TIME CALLED
  5307	041664	001406				BEQ	SENS.1
  5308					;SECOND OR LATER TIME THROUGH
  5309	041666	004767	001012		SENS.2:	JSR	PC,COPYL	;COPY LIST. RETURN POINTER IN B
  5310	041672	056700	141600			BIS	GCPREV,A	;POINTER TO PREVIOUS STUFF
  5311	041676	004767	011660			JSR	PC,.STP1	;C STILL POINTS TO LAST NODE COPIED
  5312	041702	042701	170000		SENS.1:	BIC	#170000,B	;LEAVE POINTER ONLY
  5313	041706	010102				MOV	B,C
  5314	041710	000753				BR	SENT.3
  5315					
  5316					;RETURN.  POINTER TO SENTENCE IN C
  5317	041712	052602			SENT.R:	BIS	(SP)+,C	;THE TYPE
  5318	041714	005067	141556		S.ORT:	CLR	GCPREV
  5319	041720	000167	006104			JMP	ORTC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 156
	EVAL 334	PAGE 2 	SYSTEM PRIMITIVES

  5320					
  5321					
  5322					LIST.P:
  5323	041724	011603				MOV	(SP),D	;COUNT
  5324	041726	012716	050030			MOV	#ORTC,(SP)	;RETURN ADDRESS
  5325	041732	005002			LIST1:	CLR	C
  5326	041734	005303			LIST.1:	DEC	D	;COUNT
  5327	041736	002415				BLT	LIST.9	;DONE
  5328	041740	017701	141442			MOV	@S,B
  5329	041744	010100				MOV	B,A
  5330	041746	042700	007777			BIC	#7777,A	;LEAVE DATA TYPE ONLY
  5331	041752	050200			LIST.2:	BIS	C,A	;POINTER TO REST OF LIST
  5332	041754	004767	013250			JSR	PC,GRBAD
  5333	041760	010267	141512			MOV	C,GCPREV	;PROTECT FROM GARBAGE COLLECTOR
  5334	041764	004767	150164			JSR	PC,SPOPT
  5335	041770	000761				BR	LIST.1	;GET NEXT ARG
  5336					
  5337	041772	005067	141500		LIST.9:	CLR	GCPREV
  5338	041776	052702	170000			BIS	#LIST,C
  5339	042002	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 157
	EVAL 334	PAGE 3 	SYSTEM PRIMITIVES

  5340					
  5341					
  5342					FPUT:
  5343	042004	005005				CLR	F
  5344	042006	000402				BR	.+6
  5345					LPUT:
  5346	042010	012705	000030			MOV	#<LPUT1-FPUT1>,F
  5347	042014	011603				MOV	(SP),D	;NUMBER OF ARGS
  5348	042016	012716	050030			MOV	#ORTC,(SP)	;RETURN ADDRESS
  5349	042022	005303				DEC	D
  5350	042024	003001				BGT	.+4
  5351	042026	104441				ERROR+UEL	;NEED AT LEAST 2 ARGS
  5352	042030	004767	004430			JSR	PC,GLWARG
  5353	042034	000401				BR	.+4	;LIST
  5354	042036	104445				ERROR+WTA	;FIRST ARG MUST BE LIST
  5355	042040	060507				ADD	F,PC	;CHOOSE BETWEEN LPUT AND FPUT
  5356					
  5357	042042	010100			FPUT1:	MOV	B,A	;POINTS TO ARG
  5358	042044	042700	170000			BIC	#170000,A	;CLEAR DATA TYPE
  5359	042050	004767	150100			JSR	PC,SPOPT
  5360	042054	017701	141326			MOV	@S,B	;FIRST ELEMENT TO BE PUT
  5361	042060	010102				MOV	B,C
  5362	042062	042702	007777			BIC	#7777,C	;THIS DATA TYPE WILL BE SET INTO A
  5363	042066	005303				DEC	D
  5364	042070	000730				BR	LIST.2
  5365					
  5366	042072	004767	000606		LPUT1:	JSR	PC,COPYL	;COPY LIST. RETURN PTR IN B
  5367	042076	010167	141370			MOV	B,GCP1
  5368	042102	004767	150046			JSR	PC,SPOPT	;POP 1ST ARG
  5369	042106	004767	177620			JSR	PC,LIST1	;LIST REST OF ARGS
  5370	042112	042702	170000			BIC	#170000,C	;POINTER TO THAT LIST
  5371	042116	010203				MOV	C,D	;SAVE IT
  5372	042120	010502				MOV	F,C	;POINTER TO LAST NODE OF COPIED LIST
  5373	042122	004767	011466			JSR	PC,.LDP1
  5374	042126	050300				BIS	D,A	;JOIN COPIED LIST TO LIST OF ARGS
  5375	042130	004767	011426			JSR	PC,.STP1
  5376	042134	016702	141332			MOV	GCP1,C
  5377	042140	005067	141326			CLR	GCP1
  5378	042144	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 158
	EVAL 334	PAGE 4 	SYSTEM PRIMITIVES

  5379					
  5380					
  5381					WORD:
  5382	042146	005002				CLR	C
  5383	042150	012603				MOV	(SP)+,D	;NUMBER OF ARGS
  5384	042152	003450			WORD.1:	BLE	WORDR
  5385	042154	017701	141226			MOV	@S,B	;GET ARG,  BUT LEAVE ON STACK
  5386	042160	020127	130000			CMP	B,#LNUM	;IS ARG NUMBER?
  5387	042164	103403				BLO	WORD.2
  5388	042166	020127	140000			CMP	B,#<LNUM+10000>
  5389	042172	103431				BLO	WORD.N	;NUMBER
  5390	042174	012700	140000		WORD.2:	MOV	#LSTR,A
  5391	042200	004767	003364			JSR	PC,CONVERT
  5392	042204	104447				ERROR+WTAB
  5393	042206	032701	007777			BIT	#7777,B	;IS ARG THE EMPTY WORD
  5394	042212	001415				BEQ	WORD.4	;YES
  5395					
  5396	042214	005767	141256			TST	GCPREV	;IS 0 FIRST TIME THROUGH
  5397	042220	001410				BEQ	WORD.3
  5398					
  5399					;SECOND OR LATER ARG
  5400	042222	004767	000520		WORD.5:	JSR	PC,CPYSTR	;COPY STRING
  5401	042226	004767	011362		WORD.6:	JSR	PC,.LDP1	;LAST NODE OF COPIED STRING
  5402	042232	056700	141240			BIS	GCPREV,A	;BIS POINTER TO PREVIOUS STUFF
  5403	042236	004767	011320			JSR	PC,.STP1	;STORE BACK
  5404					
  5405	042242	010167	141230		WORD.3:	MOV	B,GCPREV	;POINTER TO PREVIOUS STUFF
  5406	042246	004767	147702		WORD.4:	JSR	PC,SPOPT	;POP S
  5407	042252	005303				DEC	D
  5408	042254	000736				BR	WORD.1
  5409					
  5410					;ARGUMENT IS NUMBER. CONVERT TO STRING
  5411	042256	004767	003654		WORD.N:	JSR	PC,.CLNLS
  5412	042262	104447				ERROR+WTAB	;PROBABLY MORE THAN 16 BITS
  5413	042264	005767	141206			TST	GCPREV	;IS 0 FIRST TIME THROUGH
  5414	042270	001764				BEQ	WORD.3	;IS FIRST ARG
  5415	042272	000755				BR	WORD.6	;SECOND OR LATER, BUT DON'T RECOPY!!
  5416					
  5417					;RETURN
  5418	042274	016702	141176		WORDR:	MOV	GCPREV,C
  5419	042300	052702	140000			BIS	#LSTR,C
  5420	042304	000603				BR	S.ORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 159
	EVAL 334	PAGE 5 	SYSTEM PRIMITIVES

  5421					
  5422					
  5423					FIRST:
  5424	042306	004767	004202			JSR	PC,GLWANE
  5425	042312	000415				BR	F.SENT	;ARG IS SENTENCE
  5426					
  5427					;ARG IS WORD
  5428	042314	004767	000552			JSR	PC,INSTR	;RETURN ONE CHAR IN D
  5429	042320	001001				BNE	.+4	;FOUND A CHAR
  5430	042322	104445			F.WTA:	ERROR+WTA	;NO CHARS IN STRING
  5431	042324	005726				TST	(SP)+	;POP OFF CO-ROUTINE LINK
  5432	042326	010301				MOV	D,B
  5433	042330	005005			F.STOR:	CLR	F
  5434	042332	004767	000524			JSR	PC,ACTSTO	;STORE THE CHAR.
  5435	042336	052702	140000			BIS	#LSTR,C	;POINTER TO THE NODE OF THE CHAR
  5436	042342	000167	005426			JMP	ORTNC
  5437					
  5438	042346	010102			F.SENT:	MOV	B,C
  5439	042350	004767	011234			JSR	PC,.LDP2
  5440	042354	000167	005404			JMP	ORTNA
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 160
	EVAL 334	PAGE 6 	SYSTEM PRIMITIVES

  5441					
  5442					
  5443					BUTFIRST:
  5444	042360	004767	004130			JSR	PC,GLWANE
  5445	042364	000422				BR	BF.SEN
  5446					
  5447					;ARG IS WORD
  5448	042366	004767	000500		BF.W:	JSR	PC,INSTR	;RETURN ONE CHAR
  5449	042372	001753				BEQ	F.WTA	;NO CHARS IN STRING
  5450	042374	005726				TST	(SP)+
  5451					;A CONTAINS FIRST 2 CHARS OF THE STRING
  5452					;BUT IT MAY ONLY HAVE ONE.
  5453	042376	020027	000177			CMP	A,#177	;IS TOP CHAR OF A 0?
  5454	042402	101405				BLOS	BF.W1	;YES. ONLY ONE CHAR IN A
  5455	042404	105000				CLRB	A	;KILL THE FIRST CHAR
  5456	042406	010001				MOV	A,B
  5457	042410	010200				MOV	C,A	;POINTER TO REST
  5458	042412	004767	012612			JSR	PC,GRBAD
  5459	042416	042702	170000		BF.W1:	BIC	#170000,C
  5460	042422	052702	140000			BIS	#LSTR,C
  5461	042426	000167	005342			JMP	ORTNC
  5462					
  5463					;ARG IS SENTENCE
  5464	042432	010102			BF.SEN:	MOV	B,C
  5465	042434	004767	011154			JSR	PC,.LDP1	;POINTER TO REST OF SENTENCE
  5466	042440	042700	170000			BIC	#170000,A	;LEAVE ONLY POINTER
  5467	042444	052700	170000			BIS	#SENT,A
  5468	042450	000167	005310			JMP	ORTNA
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 161
	EVAL 334	PAGE 7 	SYSTEM PRIMITIVES

  5469					
  5470					
  5471					LAST:
  5472	042454	004767	004034			JSR	PC,GLWANE
  5473	042460	000413				BR	L.SENT	;ARG IS SENTENCE
  5474					
  5475					;ARG IS WORD
  5476	042462	010102				MOV	B,C
  5477						SPUSH	#INSTR1	;ADDRESS OF CO-ROUTINE
  5478	042470	005003				CLR	D
  5479	042472	010301			L.W1:	MOV	D,B	;SAVE LAST CHAR
  5480	042474	004736				JSR	PC,@(SP)+	;RETURNS CHAR IN D
  5481	042476	001375				BNE	L.W1	;FOUND ONE
  5482	042500	005701				TST	B	;STRING DONE
  5483	042502	001312				BNE	F.STOR	;STORE THE CHAR AND RETURN
  5484	042504	104445				ERROR+WTA	;NO CHARS FOUND
  5485					
  5486	042506	010001			L.SEN1:	MOV	A,B
  5487					;ARG IS SENTENCE
  5488	042510	004767	010772		L.SENT:	JSR	PC,.LOAD
  5489	042514	032700	007777			BIT	#7777,A	;LAST NODE OF SENTENCE YET?
  5490	042520	001372				BNE	L.SEN1
  5491					
  5492	042522	000167	005242		L.SRET:	JMP	ORTNB
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 162
	EVAL 334	PAGE 8 	SYSTEM PRIMITIVES

  5493					
  5494					
  5495					BUTLAST:
  5496	042526	004767	003762			JSR	PC,GLWANE
  5497	042532	000422				BR	BL.SEN	;ARG IS A SENTENCE
  5498					
  5499					;ARG IS A WORD
  5500	042534	004767	000206			JSR	PC,CPYSTR	;COPY STRING.
  5501	042540	004767	011044			JSR	PC,.LDP2	;LAST NODE OF NEW STRING
  5502	042544	000300				SWAB	A
  5503	042546	001005				BNE	BL.W2	;THE LAST CHARACTER IS REALLY THERE
  5504	042550	005000				CLR	A	;(WE KNOW THE FIST CHAR IS REALLY THERE)
  5505	042552	020102				CMP	B,C	;IS THERE ONLY ONE NODE
  5506	042554	001003				BNE	BL.W1	;MORE TAN ONE NODE
  5507	042556	005001				CLR	B	;ANSWER IS EMPTY WORD
  5508	042560	000403				BR	BL.W3
  5509					
  5510	042562	105000			BL.W2:	CLRB	A	;CLEAR LAST CHAR
  5511	042564	004767	010766		BL.W1:	JSR	PC,.STP2	;STORE NODE BACK
  5512	042570	052701	140000		BL.W3:	BIS	#LSTR,B	;POINTER TO THE WORD
  5513	042574	000167	005170		BL.ORT:	JMP	ORTNB
  5514					
  5515					;ARG IS A SENTENCE
  5516	042600	004767	000100		BL.SEN:	JSR	PC,COPYL	;COPY LIST
  5517	042604	010402				MOV	E,C	;POINTS TO NEXT TO LAST NODE
  5518	042606	001407				BEQ	BL.SR	;ANSWER IS EMPTY
  5519	042610	004767	011000			JSR	PC,.LDP1
  5520	042614	042700	007777			BIC	#7777,A
  5521	042620	004767	010736			JSR	PC,.STP1
  5522	042624	010102				MOV	B,C
  5523	042626	052702	170000		BL.SR:	BIS	#LIST,C
  5524	042632	000167	005136			JMP	ORTNC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 163
	EVAL 334	PAGE 9 	SYSTEM PRIMITIVES

  5525					
  5526					
  5527					COUNT:
  5528	042636	004767	003622			JSR	PC,GLWARG
  5529	042642	000414				BR	CT.SEN
  5530					
  5531					;ARG IS WORD
  5532	042644	010102				MOV	B,C
  5533	042646	005001				CLR	B
  5534	042650	012746	043074			MOV	#INSTR1,-(SP)	;ADDRESS OF A CO-ROUTINE
  5535	042654	005201			CT.W1:	INC	B	;INCREMENT COUNTER
  5536	042656	004736				JSR	PC,@(SP)+	;RETURNS CHAR IN B
  5537	042660	001375				BNE	CT.W1
  5538	042662	005301				DEC	B	;WHEN RETURNS HERE, NO MORE CHARS
  5539	042664	004767	003650		CT.ORT:	JSR	PC,P1NARG
  5540	042670	000167	005074			JMP	ORTNB
  5541					
  5542					;ARG WAS A SENTENCE
  5543	042674	010102			CT.SEN:	MOV	B,C
  5544	042676	004767	010100			JSR	PC,CLE	;RETURNS NUMBER OF LIST ELEMENTS IN B
  5545	042702	000770				BR	CT.ORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 164
	EVAL 334	PAGE 10 	SYSTEM PRIMITIVES

  5546					
  5547					
  5548					;COPY LIST.
  5549					;	CALL WITH B POINTING TO LIST
  5550					;	RETURNS B POIOTING TO NEW LIST, C POINTING TO LAST NODE
  5551	042704	005004			COPYL:	CLR	E	;WILL POINT TO 2ND NODE FROM LAST
  5552	042706	005005				CLR	F
  5553	042710	032701	007777		COPYL1:	BIT	#7777,B
  5554	042714	001407				BEQ	COPYLR	;DONE
  5555	042716	004767	010564			JSR	PC,.LOAD
  5556	042722	010504				MOV	F,E	;LISTB PLACES  LAST NODE PTR INTO F
  5557	042724	004767	170320			JSR	PC,LISTB
  5558	042730	010001				MOV	A,B
  5559	042732	000766				BR	COPYL1
  5560					
  5561					COPYLR:	POPS	B	;LISTB KEEPS POINTER TO NEW LIST ON S.
  5562	042744	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 165
	EVAL 334	PAGE 11 	SYSTEM PRIMITIVES

  5563					
  5564					
  5565					;COPY STRING
  5566					;CALL WITH B POINTING TO STRING TO BE COPIED,
  5567					;ASSUMES THAT INPUT STRING HAS BEEN GARBAGE COLLECT PROTECTED ALREAEDY
  5568					;B POINTS TO FIRST NODE OF NEW STRING,  C POINTS TO LAST
  5569					;DOESN'T SKIP IF EXITS BECAUSE IT RAN OUT OF INPUT STRING
  5570					
  5571	042746	012700	043072		CPYSTR:	MOV	#INSTR,A
  5572	042752	010346			MAKSTR:	MOV	D,-(SP)
  5573	042754	010446				MOV	E,-(SP)
  5574	042756	010546				MOV	F,-(SP)
  5575					
  5576	042760	010046				MOV	A,-(SP)	;ADDRESS OF INPUT STRING ROUTINE
  5577	042762	005005				CLR	F
  5578					
  5579	042764	004736			OUTSTR:	JSR	PC,@(SP)+	;CALL INPUT STRING CO-ROUTINE
  5580	042766	001416				BEQ	OSTRE1	;INPUT STRING DONE
  5581					
  5582	042770	010301			OSTR1:	MOV	D,B	;SAVE CHARACTER
  5583	042772	004736				JSR	PC,@(SP)+	;CALL INPUT STRING CO-ROUTINE
  5584	042774	001411				BEQ	OSTRE2	;INPUT STRING DONE
  5585					
  5586					OSTR2:	SPUSH	A	;SAVE REGISTERS USED BY INPUT STRING
  5587						SPUSH	C
  5588	043002	000303				SWAB	D
  5589	043004	050301				BIS	D,B	;BIS SECOND CHARACTER
  5590	043006	004767	000050			JSR	PC,ACTSTO	;ACTUAL STORE
  5591						SPOP	C
  5592						SPOP	A
  5593	043016	000762				BR	OUTSTR
  5594					
  5595					;INPUT STRING HAS ENDED
  5596	043020	004767	000036		OSTRE2:	JSR	PC,ACTSTO	;STORE CHAR IN B
  5597					OSTRE1:	POPS	B	;POINTER TO FIRST NODE OF STRING
  5598	043034	010502				MOV	F,C	;POINTER TO LAST NODE
  5599	043036	042701	170000			BIC	#170000,B
  5600	043042	042702	170000			BIC	#170000,C
  5601	043046	005067	140420		.RDEF:	CLR	GCP1
  5602	043052	012605				MOV	(SP)+,F
  5603	043054	012604				MOV	(SP)+,E
  5604	043056	012603				MOV	(SP)+,D
  5605	043060	000207			OSTRR:	RTS	PC
  5606					
  5607					
  5608					;ACTUALLY STORE OUTPUT NODE
  5609	043062	012700	070000		ACTSTO:	MOV	#SSTR,A
  5610	043066	000167	170156			JMP	LISTB
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 166
	EVAL 334	PAGE 12 	SYSTEM PRIMITIVES

  5611					
  5612					
  5613					;INPUT STRING
  5614					;A CO-ROUTINE THAT HANDS BACK A CHARACTER IN BOTTOM BYTE OF D
  5615					;DOES RTS PC WHEN INPUT STRING FINISHED
  5616					
  5617	043072	010102			INSTR:	MOV	B,C
  5618	043074	032702	007777		INSTR1:	BIT	#7777,C
  5619	043100	001767				BEQ	OSTRR	;RTS PC
  5620	043102	004767	010532			JSR	PC,.LDP2I
  5621	043106	110003				MOVB	A,D
  5622	043110	001403				BEQ	INSTR2	;NULL CHAR
  5623	043112	042703	177400			BIC	#177400,D	;CLEAR TOP BYTE
  5624	043116	004736				JSR	PC,@(SP)+	;RETURN TO CO-ROUTINE
  5625					
  5626	043120	105000			INSTR2:	CLRB	A
  5627	043122	000300				SWAB	A
  5628	043124	001763				BEQ	INSTR1	;NULL CHAR
  5629	043126	010003				MOV	A,D
  5630	043130	004736				JSR	PC,@(SP)+	;RETURN TO CO-ROUTINE
  5631	043132	000760				BR	INSTR1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 167
	EVAL 334	PAGE 13 	SYSTEM PRIMITIVES

  5632					
  5633	043134	042767	000020	140430	MAKE:	BIC #MMF,FLAGS2
  5634	043142	000403				BR .+10
  5635	043144	052767	000020	140420	MMAKE:	BIS #MMF,FLAGS2
  5636						POPS TOPS	;PUT VALUE INTO TOPS
  5637	043164	017701	140216			MOV @S,B
  5638	043170	010100				MOV B,A
  5639	043172	042700	007777			BIC #7777,A
  5640	043176	022700	110000			CMP #ATOM,A	;IS TYPE ATOM?
  5641	043202	001027				BNE MAKE2
  5642	043204	012700	030000		MAKE4:	MOV #VBIND,A	;YES< SET VARIABLE BINDING?
  5643	043210	004767	010474			JSR PC,.BIND
  5644	043214	032767	000020	140350		BIT #MMF,FLAGS2	;IS IT MULTIPLE MAKE?
  5645	043222	001407				BEQ MAKE1
  5646	043224	016777	140236	140154		MOV TOPS,@S
  5647	043232	005067	140230			CLR TOPS
  5648	043236	000167	004614			JMP ORT
  5649					MAKE1:	POPS A
  5650	043252	005067	140210			CLR TOPS
  5651	043256	000167	004074			JMP NORT
  5652	043262	022700	140000		MAKE2:	CMP #LSTR,A
  5653	043266	001401				BEQ MAKE3
  5654	043270	104447			MAKE5:	ERROR+WTAB	;WRONG TYPE OF ARG
  5655	043272	032701	007777		MAKE3:	BIT #7777,B
  5656	043276	001774				BEQ MAKE5
  5657	043300	016777	140162	140100		MOV TOPS,@S
  5658	043306	010167	140154			MOV B,TOPS	;FOR .INTRN
  5659	043312	004767	011122			JSR PC,UINTRN	;.INTRN FOR STRINGS THAT MAY INCLUDE NULL CHARS
  5660	043316	000400				BR .+2
  5661	043320	017767	140062	140140		MOV @S,TOPS
  5662	043326	000726				BR MAKE4
  5663	043330	004767	000030		DOTS:	JSR PC,GUOEB	;GET UOE PTR FROM S INTO B
  5664	043334	104410				ERROR+HNV	;HAS NO VALUE
  5665	043336	004767	010570		DOTS2:	JSR PC,.BNDVS
  5666	043342	104410				ERROR+HNV	;HAS NO VALUE
  5667						PUSHS B
  5668	043354	005067	140106			CLR TOPS
  5669	043360	000167	004472			JMP ORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 168
	EVAL 334	PAGE 14 	SYSTEM PRIMITIVES

  5670					GUOEB:	POPS B	;GET UOE OR LSTR IN B FROM S
  5671	043374	010100				MOV B,A	;    SKIP IF UOE
  5672	043376	042700	007777			BIC #7777,A
  5673	043402	022700	110000			CMP #ATOM,A
  5674	043406	001411				BEQ GUOE1
  5675	043410	022700	140000			CMP #LSTR,A
  5676	043414	001401				BEQ GUOE2
  5677	043416	104447				ERROR+WTAB	;.(B). ISWRONG TYPE OF ARG
  5678	043420	010167	140042		GUOE2:	MOV B,TOPS
  5679	043424	004767	011002			JSR PC,UOBSCH	;.OBSCH FOR STRINGS THAT HAVE NULL CHARS
  5680	043430	000207				RTS PC	;NOT THERE
  5681	043432	000167	004474		GUOE1:	JMP SRET
  5682	043436	017700	137744		DO:	MOV @S,A	;DO...
  5683	043442	010001				MOV A,B
  5684	043444	042700	007777			BIC #7777,A
  5685	043450	022700	140000			CMP #LSTR,A
  5686	043454	001404				BEQ DO1
  5687	043456	022700	170000			CMP #LIST,A
  5688	043462	001401				BEQ DO1
  5689	043464	104447				ERROR+WTAB
  5690	043466	004767	167672		DO1:	JSR PC,BLSTI
  5691	043472	012767	033404	140112		MOV #BLST,PCHR
  5692	043500	005067	140104			CLR NBKTS
  5693	043504	004767	171106			JSR PC,PNODAB
  5694	043510	004767	167762			JSR PC,BLSTF
  5695	043514	000415				BR DO3	;EMPTY STRING
  5696	043516	016777	137744	137662		MOV TOPS,@S
  5697	043524	012767	020270	140060		MOV #TYO,PCHR
  5698	043532	004767	166500		DO2:	JSR PC,READ
  5699	043536	004767	154064			JSR PC,EVLINE
  5700	043542	000167	004310			JMP ORT
  5701	043546	000404				BR DO4
  5702					DO3:	POPS A
  5703	043560	000167	003572		DO4:	JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 169
	EVAL 334	PAGE 15 	SYSTEM PRIMITIVES

  5704							;PRINT TOP (C) THINGS ON S
  5705	043564	005267	140020		PRINT:	INC NBKTS	;PRINTS OUTER [,]'S
  5706	043570	004767	001672		FPRINT:	JSR	PC,REVS	;DOESNT "
  5707						POP	C
  5708	043602	004767	000032			JSR	PC,TYPE1
  5709	043606	004767	146376			JSR	PC,.CRLF
  5710	043612	000167	003540			JMP	NORT
  5711					
  5712	043616	004767	001644		TYPE:	JSR	PC,REVS
  5713						POP	C
  5714	043630	004767	000004			JSR	PC,TYPE1	;PRINT WITHOUT CRLF AT END
  5715	043634	000167	003516			JMP	NORT
  5716					
  5717	043640	004767	170704		TYPE1:	JSR PC,PRS1
  5718						POPS A
  5719	043654	005302				DEC C
  5720	043656	003370				BGT	TYPE1
  5721	043660	000207				RTS	PC
  5722					
  5723	043662	004767	154120		LPAR:	JSR PC,GNT
  5724	043666	022767	006012	137652		CMP #$RPAR,CT+2
  5725	043674	001401				BEQ LPAR1
  5726	043676	104436				ERROR+TIP	;TOO MUCH INSIDE PARENS
  5727	043700	000167	004152		LPAR1:	JMP ORT
  5728	043704	104406			RPAR:	ERROR+ERP	;EXTRA RIGHT PAREN
  5729					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 170
	EVAL 334	PAGE 16 	SYSTEM PRIMITIVES

  5730					
  5731					;SINGLE PRECISION ARITHMETIC ROUTINES
  5732					
  5733	043706	000167	004144		UPLUS:	JMP ORT	;UNARY PLUS - NOTHING TO DO
  5734	043712	004767	002516		UMINS:	JSR PC,G1NARG	;UNARY MINUS
  5735	043716	005401				NEG B
  5736	043720	000167	002610			JMP R1NARG
  5737					
  5738					SUM:
  5739	043724	005000				CLR	A
  5740	043726	012603				MOV	(SP)+,D	;NUMBER OF ARGS
  5741	043730	003406				BLE	SUM.2	;DONE
  5742	043732	004767	002476		SUM.1:	JSR	PC,G1NARG	;GET 1 NUMBER IN B
  5743	043736	060100				ADD	B,A
  5744	043740	102432				BVS	RTBE	;RESULT TOO BIG
  5745	043742	005303				DEC	D	;COUNTER
  5746	043744	003372				BGT	SUM.1
  5747	043746	010001			SUM.2:	MOV	A,B
  5748	043750	000404				BR	DONEMP
  5749					
  5750					DIFF:
  5751	043752	004767	002450			JSR	PC,G2NARG	;GET 2 NUMBERS
  5752	043756	160001				SUB	A,B
  5753	043760	102422				BVS	RTBE	;RESULT TOO BIG
  5754	043762	000167	002546		DONEMP:	JMP	R1NARG
  5755					
  5756					PROD:
  5757	043766	012705	177304			MOV	#MQ,F
  5758	043772	012704	177311			MOV	#EAESR,E
  5759	043776	012725	000001			MOV	#1,(F)+	;INITIALIZE MULTIPLICAND TO 1
  5760	044002	012702	000002			MOV	#SIPRBT,C
  5761	044006	012603				MOV	(SP)+,D	;NUMBER OF ARGS
  5762	044010	005303			PROD.1:	DEC	D
  5763	044012	002406				BLT	PROD.2	;DONE
  5764	044014	004767	002414			JSR	PC,G1NARG	;GET ONE ARG IN B
  5765	044020	010115				MOV	B,(F)	;MULTIPLY
  5766	044022	130214				BITB	C,(E)
  5767	044024	001371				BNE	PROD.1
  5768	044026	104435			RTBE:	ERROR+RTB	;RESULT TOO BIG
  5769					
  5770	044030	014501			PROD.2:	MOV	-(F),B	;PICK ANSWER OUT OF EAE
  5771	044032	000753				BR	DONEMP
  5772					
  5773					MOD:
  5774	044034	005003				CLR	D
  5775	044036	000402				BR	DIV.1
  5776					DIVDE:
  5777	044040	012703	177670			MOV	#<DONEMP-DIV.8>,D
  5778	044044	004767	002356		DIV.1:	JSR	PC,G2NARG
  5779	044050	005700				TST	A
  5780	044052	001765				BEQ	RTBE	;DIVISOR = 0
  5781	044054	012705	177304			MOV	#MQ,F
  5782	044060	010115				MOV	B,(F)	;DIVIDEND
  5783	044062	010067	133212			MOV	A,DIVIDE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 171
	EVAL 334	PAGE 16.1 	SYSTEM PRIMITIVES

  5784	044066	012501				MOV	(F)+,B	;PICK UP QUOTIENT
  5785	044070	060307				ADD	D,PC	;IF DIVIDE DESIRED, BRANCHES TO DONEMP
  5786	044072	012501			DIV.8:	MOV	(F)+,B	;IF MOD DESIRED, STAYS HERE
  5787	044074	000732				BR	DONEMP	;AND PICKS UP REMAINDER
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 172
	EVAL 334	PAGE 17 	SYSTEM PRIMITIVES

  5788					
  5789					;PREDICATES
  5790					
  5791	044076	016705	137304		EQUAL:	MOV	S,F
  5792	044102	012501				MOV	(F)+,B	;ARG1.  LEAVE ON STACK FOR GC PROTECTION
  5793	044104	011502				MOV	(F),C	;ARG2
  5794	044106	012704	007777			MOV	#7777,E	;AN OFT USED CONSTANT
  5795	044112	004767	000026			JSR	PC,EQUAL1
  5796	044116	000403				BR	EQ.F	;RETURNS HERE IF FALSE
  5797	044120	012701	140024			MOV	#TRUE,B
  5798	044124	000402				BR	EQ.RET
  5799					
  5800	044126	012701	140026		EQ.F:	MOV	#FALSE,B
  5801	044132	062767	000002	137246	EQ.RET:	ADD	#2,S
  5802	044140	000167	003624			JMP	ORTNB
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 173
	EVAL 334	PAGE 18 	SYSTEM PRIMITIVES

  5803					
  5804					
  5805					;COMPARE THE DATA ITEM POINTED TO BY B WITH
  5806					;THE DATA ITEM POINTED TO BY C.
  5807					;SKIP IF THEY ARE EQUAL
  5808					
  5809	044144	020102			EQUAL1:	CMP	B,C	;ARE THE POINTERS THE SAME
  5810	044146	001440				BEQ	EQTRUE
  5811	044150	010100				MOV	B,A
  5812	044152	004767	000104			JSR	PC,EQ.SUB	;IS ARG1 A WORD?
  5813	044156	001047				BNE	EQ.W1	;A WORD
  5814	044160	004767	000074			JSR	PC,EQ.SB1	;IS ARG2 A WORD?
  5815	044164	001030				BNE	EQFALS	;ARG1 ISN'T WORD, BUT ARG2 IS.
  5816					;BOTH ARGS ARE LISTS
  5817	044166	004767	007314		EQ.LST:	JSR	PC,.LOAD	;FIRST NODE OF ARG1
  5818						PUSH	A	;SAVE POINTER TO BF
  5819	044200	004767	007434			JSR	PC,.LDP2I	;FIRST NODE OF ARG2
  5820						SPUSH	C	;SAVE POINTER TO BF
  5821	044206	010002				MOV	A,C	;POINTER TO FIRST OF ARG1
  5822					;B POINTS TO FIRST ARG2.  C POINTS TO FIRST ARG1.
  5823	044210	004767	177730			JSR	PC,EQUAL1	;ARE THE FIRSTS EQUAL?
  5824	044214	000416				BR	EQ.FF	;NO.  RETURN FALSE
  5825						POP	B	;POINTER TO BF
  5826						SPOP	C	;POINTER TO BF OF OTHER ARG
  5827	044226	042701	170000			BIC	#170000,B
  5828	044232	042702	170000			BIC	#170000,C
  5829	044236	020102				CMP	B,C
  5830	044240	001403				BEQ	EQTRUE
  5831	044242	004767	177720			JSR	PC,EQ.LST	;ARE THE BF'S EQUAL?
  5832	044246	000207			EQFALS:	RTS	PC	;NO
  5833	044250	104000			EQTRUE:	SKPRET	;YES
  5834					
  5835	044252	022626			EQ.FF:	CMP	(SP)+,(SP)+	;POP OFF THE POINTERS TO THE BF'S
  5836	044254	000167	145634			JMP	PPOPT	;DON'T OVERPOP!
  5837					
  5838	044260	010200			EQ.SB1:	MOV	C,A	;IS ARG A WORD?
  5839	044262	030400			EQ.SUB:	BIT	E,A	;EMPTY?
  5840	044264	001770				BEQ	EQFALS	;ONE ARG FINISHED
  5841	044266	040400				BIC	E,A
  5842	044270	022700	170000			CMP	#SENT,A
  5843	044274	000207				RTS	PC
  5844					
  5845					;ARG1 IS A WORD
  5846	044276	004767	177756		EQ.W1:	JSR	PC,EQ.SB1	;IS ARG2 A WORD?
  5847	044302	001761				BEQ	EQFALS	;NOT A WORD
  5848					;FALLS INTO WEQUAL
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 174
	EVAL 334	PAGE 19 	SYSTEM PRIMITIVES

  5849					
  5850					;COMPARE TWO WORDS
  5851					
  5852	044304	012700	120000		WEQUAL:	MOV	#SNUM,A
  5853	044310	004767	001254			JSR	PC,CONVERT	;TRY CONVERTING ARG TO SNUM
  5854	044314	000403				BR	EQ.STR	;NOT NUMERIC
  5855	044316	012703	177660			MOV	#<EQFALS-EQ.FAL>,D	;ADD TO PC IN A WHILE
  5856	044322	000406				BR	EQ.A2
  5857					
  5858					;ARG NOT NUMERIC.  TRY STRING COMPARE
  5859	044324	012700	140000		EQ.STR:	MOV	#LSTR,A
  5860	044330	004767	001234			JSR	PC,CONVERT
  5861	044334	104447				ERROR+WTAB	;EQUAL NOT DEFINED FOR SNAPS, ETC
  5862	044336	005003				CLR	D	;ADD TO PC IN A WHILE
  5863					EQ.A2:	EXCH	B,C
  5864	044352	004767	001212			JSR	PC,CONVERT	;TRY CONVERTING 2ND ARG, TOO
  5865	044356	000733				BR	EQFALS	;NOT SAME TYPE AS FIRST ARG
  5866	044360	020102				CMP	B,C
  5867	044362	001732				BEQ	EQTRUE
  5868	044364	060307				ADD	D,PC	;JUMP TO EQFALS IF NUMERIC.
  5869		044366				EQ.FAL==.
  5870					
  5871					;COMPARE TWO STRINGS.  POINTERS IN B AND C.
  5872	044366	010167	137100			MOV	B,GCP1
  5873	044372	010267	137076			MOV	C,GCP2
  5874						SPUSH	#INSTR1
  5875	044402	010105				MOV	B,F
  5876	044404	030405			CMPST1:	BIT	E,F	;IS ARG 1 ENDED
  5877	044406	001430				BEQ	CMPSTE	;YES
  5878						SPUSH	A	;SAVE A
  5879	044412	010501				MOV	F,B	;POINTER TO REST OF ARG1
  5880	044414	004767	007066			JSR	PC,.LOAD
  5881	044420	010005				MOV	A,F	;POINTER TO REST OF ARG1
  5882						SPOP	A	;RESTORE A
  5883	044424	105701				TSTB	B	;IS CHAR REAL OR NULL?
  5884	044426	001404				BEQ	CMPST2	;NULL
  5885	044430	004736				JSR	PC,@(SP)+	;PUTS 1 CHAR OF ARG 2 INTO B
  5886	044432	001411				BEQ	CSFAL1	;ARG 2 ENDED
  5887	044434	120301				CMPB	D,B	;COMPARE CHARS!!
  5888	044436	001006				BNE	CSFALS
  5889	044440	000301			CMPST2:	SWAB	B
  5890	044442	001760				BEQ	CMPST1	;NULL CHAR
  5891	044444	004736				JSR	PC,@(SP)+	;1 CHAR OF ARG 2 IN B
  5892	044446	001403				BEQ	CSFAL1
  5893	044450	120301				CMPB	D,B	;COMPARE CHARS!!
  5894	044452	001754				BEQ	CMPST1
  5895	044454	005726			CSFALS:	TST	(SP)+	;POP CO-ROUTINE LINKAGE
  5896	044456	005067	137010		CSFAL1:	CLR	GCP1
  5897	044462	005067	137006			CLR	GCP2
  5898	044466	000667				BR	EQFALS
  5899					
  5900					;ARG 1 HAS ENDED
  5901	044470	004736			CMPSTE:	JSR	PC,@(SP)+
  5902	044472	001370				BNE	CSFALS	;BUT ARG 2 HASN'T ENDED
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 175
	EVAL 334	PAGE 19.1 	SYSTEM PRIMITIVES

  5903	044474	005067	136772			CLR	GCP1
  5904	044500	005067	136770			CLR	GCP2
  5905	044504	000661				BR	EQTRUE	;BOTH ENDED AT THE SAME TIME!!!!
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 176
	EVAL 334	PAGE 20 	SYSTEM PRIMITIVES

  5906					
  5907					;MORE PREDICATES
  5908					
  5909	044506	004767	001714		GREATR:	JSR PC,G2NARG
  5910	044512	020100				CMP B,A
  5911	044514	003013				BGT RTTRUE
  5912					RTFALS:	PUSHS #FALSE
  5913	044530	000167	003322		RTNCMP:	JMP ORT
  5914					
  5915	044534	004767	001666		LESS:	JSR PC,G2NARG
  5916	044540	020100				CMP B,A
  5917	044542	002365				BGE RTFALS
  5918					RTTRUE:	PUSHS #TRUE
  5919	044556	000764				BR RTNCMP
  5920					
  5921	044560	004767	001642		GREQ:	JSR PC,G2NARG
  5922	044564	020100				CMP B,A
  5923	044566	002366				BGE RTTRUE
  5924	044570	000752				BR RTFALS
  5925					
  5926	044572	004767	001630		LSEQ:	JSR PC,G2NARG
  5927	044576	020100				CMP B,A
  5928	044600	003761				BLE RTTRUE
  5929	044602	000745				BR RTFALS
  5930					
  5931					NUMBP:	POPS B
  5932	044614	012700	130000			MOV	#LNUM,A
  5933	044620	004767	000744			JSR	PC,CONVERT
  5934	044624	000734				BR	RTFALS	;COULDN'T CONVERT IT
  5935	044626	000746				BR	RTTRUE
  5936					
  5937					EMPTYP:	POPS B
  5938	044640	032701	007777			BIT	#7777,B
  5939	044644	001737				BEQ	RTTRUE
  5940	044646	000723				BR	RTFALS
  5941					
  5942					LISTP:	POPS B
  5943	044660	042701	007777			BIC	#7777,B
  5944	044664	022701	170000			CMP	#SENT,B
  5945	044670	001725				BEQ	RTTRUE
  5946	044672	000711				BR	RTFALS
  5947					
  5948					WORDP:	POPS B
  5949	044704	042701	007777			BIC	#7777,B
  5950	044710	022701	170000			CMP	#SENT,B
  5951	044714	001700				BEQ	RTFALS
  5952	044716	000712				BR	RTTRUE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 177
	EVAL 334	PAGE 21 	SYSTEM PRIMITIVES

  5953	044720	005267	136574		IF:	INC IFLEV
  5954	044724	052767	000040	136570		BIS #IFF,FLAGS
  5955	044732	004767	000200			JSR PC,TSTST	;TEST S, SKIP IF "TRUE"
  5956	044736	000401				BR .+4
  5957	044740	000406				BR IFR
  5958	044742	004767	000066			JSR PC,STNE
  5959	044746	000403				BR IFR
  5960	044750	042767	000002	136544		BIC #RTF,FLAGS
  5961	044756	000167	002374		IFR:	JMP NORT
  5962	044762	032767	000040	136532	THEN:	BIT #IFF,FLAGS
  5963	044770	001372				BNE IFR
  5964	044772	104431				ERROR+OOP	;THEN OUT OF PLACE
  5965	044774	000770				BR IFR
  5966	044776	032767	000040	136516	ELSE:	BIT #IFF,FLAGS
  5967	045004	001001				BNE .+4
  5968	045006	104431				ERROR+OOP	;ELSE OUT OF PLACE
  5969	045010	004767	000020			JSR PC,STNE
  5970	045014	000760				BR IFR
  5971	045016	005367	136476			DEC IFLEV
  5972	045022	003355				BGT IFR
  5973	045024	042767	000040	136470		BIC #IFF,FLAGS
  5974	045032	000751				BR IFR
  5975	045034	004767	152746		STNE:	JSR PC,GNT	;SCAN TOO NEXT ELSE
  5976	045040	022767	004456	136500		CMP #$ELSE,CT+2
  5977	045046	001005				BNE STNE1
  5978	045050	052767	000002	136444		BIS #RTF,FLAGS	;IF "ELSE", SET RTF AND SKIP RETURN
  5979	045056	000167	003050			JMP SRET
  5980	045062	032767	000004	136432	STNE1:	BIT #CRF,FLAGS
  5981	045070	001407				BEQ STNE2
  5982	045072	052767	000002	136422	STNE3:	BIS #RTF,FLAGS	;IF "CR" SET RTF AND RETURN
  5983	045100	042767	000004	136414		BIC #CRF,FLAGS
  5984	045106	000207				RTS PC
  5985	045110	022767	004726	136430	STNE2:	CMP #$IF,CT+2	;IF "IF", LOOK FOR NEXT ELSE!
  5986	045116	001346				BNE STNE
  5987	045120	004767	177710			JSR PC,STNE
  5988	045124	000762				BR STNE3
  5989	045126	042767	000002	136366		BIC #RTF,FLAGS
  5990	045134	000737				BR STNE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 178
	EVAL 334	PAGE 22 	SYSTEM PRIMITIVES

  5991					TSTST:	PUSH A		;TEST S, SKIP IF TRUE
  5992	045144	017700	136236			MOV @S,A	;ERROR IF NEITHER "TRUE" OR "FALSE"
  5993						PUSHS A
  5994						PUSHS #TRUE
  5995	045172	004767	000066			JSR PC,CSEQ
  5996	045176	000406				BR TSTST1
  5997						POPS A	;"TRUE", SKIP
  5998	045210	000167	002710			JMP SRETA
  5999	045214	017700	136166		TSTST1:	MOV @S,A
  6000						PUSHS A
  6001						PUSHS #FALSE
  6002	045242	004767	000016			JSR PC,CSEQ
  6003	045246	104424				ERROR+NTF	;NOT "TRUE" OR "FALSE"
  6004						POPS A
  6005	045260	000167	000162			JMP RETA
  6006					CSEQ:	PUSH A		;COMPARE TWO STRINGS - POINTERS ON S
  6007						PUSH B		;SKIP IF EQUAL
  6008						PUSH C		;ASSUMES NO "NULL" (8-BIT ON) CHARACTERS
  6009						PUSH D
  6010	045314	016702	136066			MOV S,C
  6011	045320	012203				MOV (C)+,D	;GET STR 1 POINTER IN D
  6012	045322	011202				MOV @C,C	;GET STR 2 POINTER INTO C
  6013	045324	010301			CSEQ1:	MOV D,B
  6014	045326	020203				CMP C,D	;CHECK IF POINTERS EQUAL
  6015	045330	001452				BEQ CSEQ3
  6016	045332	032701	007777			BIT #7777,B	;CHECK IF EITHER STRING DONE
  6017	045336	001412				BEQ CSEQ2
  6018	045340	032700	007777			BIT #7777,A
  6019	045344	001407				BEQ CSEQ2
  6020	045346	004767	006134			JSR PC,.LOAD	;GET NEXT NODE OF STR 1
  6021	045352	010003				MOV A,D	;SAVE POINTER IN D
  6022	045354	004767	006260			JSR PC,.LDP2I	;GET NEXT NODE OF STR 2
  6023	045360	020001				CMP A,B
  6024	045362	001760				BEQ CSEQ1
  6025					CSEQ2:	POPS A
  6026						SPOPS A
  6027	045406	000406				BR RETD	;STRINGS NOT EQUAL
  6028					RETF:	POP F
  6029					RETE:	POP E
  6030					RETD:	POP D
  6031					RETC:	POP C
  6032					RETB:	POP B
  6033					RETA:	POP A
  6034	045454	000207			RET:	RTS PC
  6035	045456	062766	000002	000010	CSEQ3:	ADD #2,8.(P)	;STRINGS EQUAL
  6036	045464	000737				BR CSEQ2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 179
	EVAL 334	PAGE 23 	SYSTEM PRIMITIVES

  6037	045466	022766	000001	000002	REVS:	CMP #1,2(P)
  6038	045474	002401				BLT .+4
  6039	045476	000207				RTS PC
  6040						PUSH A	;REVERSES THE TOP ((P)+1) THINGS ON S
  6041						PUSH B
  6042						PUSH C
  6043						PUSH D
  6044	045530	016602	000012			MOV 10.(P),C
  6045	045534	016700	135646			MOV S,A
  6046	045540	010201				MOV C,B
  6047	045542	006301				ASL B
  6048	045544	060001				ADD A,B
  6049	045546	006202				ASR C
  6050	045550	001405				BEQ REVS1
  6051	045552	011003			REVS2:	MOV @A,D
  6052	045554	014120				MOV -(B),(A)+
  6053	045556	010311				MOV D,@B
  6054	045560	005302				DEC C
  6055	045562	003373				BGT REVS2
  6056	045564	000167	177634		REVS1:	JMP RETD
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 180
	EVAL 334	PAGE 24 	CONVERSION ROUTINES

  6057						.STITL CONVERSION ROUTINES
  6058					
  6059					
  6060					;CONVERT
  6061					;CALL WITH DESIRED DATA TYPE IN A
  6062					;CALL WITH POINTER TO DATA IN B
  6063					;IF CONVERSION SUCCEEDS, RETURN POINTER TO CONVERTED DATA IN B AND
  6064					;LEAVE A UNCHANGED.
  6065					;
  6066					;IF CONVERSION FAILS, LEAVE B UNCHANGED,BUT RETURN ITS DATA TYPE IN A
  6067					
  6068					CONVERT:
  6069	045570	010046				MOV	A,-(SP)	;SAVE A,B,C HERE
  6070	045572	010146				MOV	B,-(SP)
  6071	045574	010246				MOV	C,-(SP)
  6072					
  6073	045576	042700	107777			BIC	#107777,A	;LEAVE DATA TYPE ONLY
  6074	045602	010102				MOV	B,C
  6075	045604	042702	107777			BIC	#107777,C
  6076	045610	006200				ASR	A	;SHIFT DESTINATION DATA TYPE 3 PLACES
  6077	045612	006200				ASR	A
  6078	045614	006200				ASR	A
  6079	045616	050200				BIS	C,A	;SET SOURCE DATA TYPE IN THE 3 VACATED BITS
  6080	045620	006200				ASR	A	;AND PLACE THE ENTIRE MESS IN BOTTOM 6 BITS
  6081	045622	000300				SWAB	A
  6082					;(A IS NOW A 6 BIT DISPATCH ADDRESS)
  6083	045624	116000	046326			MOVB	CNVTBL(A),A	;PICK UP ENTRY FROM TABLE
  6084	045630	042700	177400			BIC	#177400,A	;CLEAR TOP BYTE
  6085	045634	006300				ASL	A		;IT IS A BYTE ADDRESS
  6086	045636	004760	045674			JSR	PC,CNVTOP(A)	;RELATIVE TO CONVERT TOP
  6087	045642	000405				BR	CONV.F	;THE CONVERSION FAILED
  6088	045644	012602				MOV	(SP)+,C
  6089	045646	005726				TST	(SP)+	;DON'T RESTORE B
  6090	045650	012600				MOV	(SP)+,A
  6091	045652	000167	002254			JMP	SRET	;SKIP RETURN
  6092					
  6093	045656	012602			CONV.F:	MOV	(SP)+,C
  6094	045660	012601				MOV	(SP)+,B
  6095	045662	010100				MOV	B,A
  6096	045664	042700	007777			BIC	#7777,A	;DATA TYPE OF ARG LEFT IN A
  6097	045670	005726				TST	(SP)+	;DON'T RESTORE A
  6098	045672	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 181
	EVAL 334	PAGE 25 	CONVERSION ROUTINES

  6099					
  6100					
  6101					;CONVERT ROUTINE JUMPS TO THE PROGRAMS HERE
  6102					
  6103		045674			CNVTOP==.	;TOP OF CONVERT ROUTINES
  6104					
  6105					;THE ARGUMENT CAN'T BE CONVERTED TO DESIRED DATA TYPE
  6106	045674	000207			.CERR:	RTS	PC
  6107					
  6108		000001			CNVNOP==<.-CNVTOP>/2
  6109					;THE ARGUMENT ALREADY HAS THE DESIRED TYPE
  6110	045676	104000			.CNOP:	SKPRET
  6111					
  6112		000002			CA2LS==<.-CNVTOP>/2
  6113					;CONVERT ATOM TO LSTR
  6114	045700	004767	005602		.CATLS:	JSR	PC,.LOAD
  6115	045704	104000				SKPRET
  6116					
  6117		000005			CSN2LN==<.-CNVTOP>/2
  6118					;CONVERT SNUM TO LNUM.  ASSUME NUMBER IN B, RATHER THAN POINTER
  6119	045706	012700	120000		.CSNLN:	MOV	#SNUM,A
  6120	045712	004767	007312			JSR	PC,GRBAD	;STORE THE NODE A,B IN A NEW NODE
  6121	045716	052702	130000			BIS	#LNUM,C	;CPOINTS TO NEW NODE
  6122	045722	010201				MOV	C,B
  6123	045724	104000				SKPRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 182
	EVAL 334	PAGE 26 	CONVERSION ROUTINES

  6124					
  6125					;MORE CONVERSION ROUTINES
  6126					
  6127		000015			CSN2LS==<.-CNVTOP>/2
  6128					;CONVERT SNUM TO LSTR
  6129	045726	010346			.CSNLS:	MOV	D,-(SP)
  6130	045730	010446				MOV	E,-(SP)
  6131	045732	010546				MOV	F,-(SP)
  6132	045734	012700	177304			MOV	#MQ,A
  6133	045740	012704	000010			MOV	#<.CSNL4-.CSNL5>,E
  6134	045744	005046				CLR	-(SP)	;MARK STACK
  6135	045746	010110				MOV	B,(A)
  6136	045750	003006				BGT	.CSNL0
  6137	045752	002403				BLT	.CSNLL
  6138						SPUSH	#'0	;NUMBER IS 0
  6139	045760	000416				BR	.CSNL2
  6140					
  6141	045762	005004			.CSNLL:	CLR	E
  6142	045764	005410				NEG	(A)	;SNUM WAS NEGATIVE
  6143	045766	012703	000012		.CSNL0:	MOV	#10.,D
  6144	045772	004767	000100		.CSNL1:	JSR	PC,.CNXTD	;GET NEXT DIGIT IN B
  6145	045776	000407				BR	.CSNL2	;NO MORE CHARS
  6146	046000	000301				SWAB	B
  6147	046002	010146				MOV	B,-(SP)
  6148	046004	004767	000066			JSR	PC,.CNXTD
  6149	046010	000402				BR	.CSNL2
  6150	046012	150116				BISB	B,(SP)	;SET NEW CHAR INTO PREVIOUS ONE
  6151	046014	000766				BR	.CSNL1
  6152					
  6153	046016	012700	070000		.CSNL2:	MOV	#SSTR,A
  6154	046022	005005				CLR	F
  6155	046024	060407				ADD	E,PC
  6156	046026	012701	000055		.CSNL5:	MOV	#'-,B	;STAYS HERE IF ARG WAS NEGATIVE
  6157	046032	004767	165212		.CSNL3:	JSR	PC,LISTB	;PUT NEXT 2 CHARS ONTO LIST
  6158	046036	012601			.CSNL4:	MOV	(SP)+,B
  6159	046040	001374				BNE	.CSNL3	;0 MARKS END OF DIGITS
  6160						POPS	B	;POINTER TO FIRST NODE OF ANSWER
  6161	046052	042701	170000			BIC	#170000,B	;CLEAR DATA TYPE
  6162	046056	052701	140000			BIS	#LSTR,B	;REPLACE BY LSTR
  6163					
  6164	046062	005067	135404		.SRDEF:	CLR	GCP1
  6165	046066	012605				MOV	(SP)+,F
  6166	046070	012604				MOV	(SP)+,E
  6167	046072	012603				MOV	(SP)+,D
  6168	046074	104000				SKPRET
  6169					
  6170					;GET NEXT CHARACTER IN B
  6171					;SKIP UNLESS NO MORE CHARS
  6172	046076	005710			.CNXTD:	TST	(A)	;IS THERE MORE NUMBER LEFT
  6173	046100	001414				BEQ	.CLNR	;RTS PC
  6174	046102	005040				CLR	-(A)	;CLEAR REMAINDER
  6175	046104	010340				MOV	D,-(A)	;DIVIDE BY 10.
  6176	046106	005720				TST	(A)+
  6177	046110	012001				MOV	(A)+,B	;REMAINDER IS NEXT DIGIT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 183
	EVAL 334	PAGE 26.1 	CONVERSION ROUTINES

  6178	046112	062701	000060			ADD	#60,B	;CONVERT TO ASCII
  6179	046116	104000				SKPRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 184
	EVAL 334	PAGE 27 	CONVERSION ROUTINES

  6180					
  6181					;MORE CONVERSION ROUTINES
  6182					
  6183		000112			CLN2SN==<.-CNVTOP>/2
  6184					;CONVERT LNUM TO SNUM.  RETURN NUMBER IN B
  6185	046120	004767	005362		.CLNSN:	JSR	PC,.LOAD
  6186	046124	020027	120000			CMP	A,#SNUM
  6187	046130	001401				BEQ	.CLNS1
  6188	046132	000207			.CLNR:	RTS	PC	;CAN'T CONVERT IF LNUM HAS MORE THAN ONE NODE
  6189	046134	104000			.CLNS1:	SKPRET
  6190					
  6191		000121			CLN2LS==<.-CNVTOP>/2
  6192					;CONVERT LNUM TO LSTR
  6193					.CLNLS:		;CONVERT LNUM TO LSTR
  6194	046136	004767	177756			JSR	PC,.CLNSN	;FOR NOW, CAN ONLY CONVERT
  6195	046142	000207				RTS	PC	;IF LNUM HAS ONE NODE
  6196	046144	000167	177556			JMP	.CSNLS	;(WHICH MUST BE CHANGED SOMEDAY)
  6197					
  6198		000126			CLS2SN==<.-CNVTOP>/2
  6199					;CONVERT LSTR TO SNUM
  6200	046150	032701	007777		.CLSSN:	BIT	#7777,B	;IS B EMPTY
  6201	046154	001766				BEQ	.CLNR	;CAN'T CONVERT EMPTY
  6202	046156	010346				MOV	D,-(SP)
  6203	046160	010446				MOV	E,-(SP)
  6204	046162	010546				MOV	F,-(SP)
  6205	046164	010167	135302			MOV	B,GCP1	;POINT TO INPUT. (GETS CLEARED AT .RDEF & .SRDEF)
  6206					
  6207	046170	010102				MOV	B,C
  6208	046172	012746	043074			MOV	#INSTR1,-(SP)	;ADD. OF CO-ROUTINE
  6209	046176	005001				CLR	B
  6210	046200	012704	000012			MOV	#10.,E
  6211	046204	012705	177304			MOV	#MQ,F
  6212	046210	005015				CLR	(F)	;ZERO AC AND MQ
  6213					
  6214	046212	005725			.CLSS0:	TST	(F)+	;POINT TO MULTIPLY
  6215	046214	004736			.CLSS1:	JSR	PC,@(SP)+	;OUTPUTS CHAR IN D
  6216	046216	001432				BEQ	.CLSS9
  6217	046220	005701				TST	B	;IF NOT THE FIRST CHARACTER,
  6218	046222	001011				BNE	.CNXN2	;BRANCH.
  6219	046224	005201				INC	B	;1
  6220	046226	120327	000055			CMPB	D,#55	;IS CHARACTER MINUS?
  6221	046232	001002				BNE	.CNXN1
  6222	046234	005401				NEG	B	;-1 (MUST BE EXACTLY -1 FOR LATER USE)
  6223	046236	000766				BR	.CLSS1
  6224					
  6225	046240	120327	000053		.CNXN1:	CMPB	D,#53	;PLUS?
  6226	046244	001763				BEQ	.CLSS1	;(REMEMBER THAT D=1)
  6227					
  6228	046246	162703	000060		.CNXN2:	SUB	#60,D	;CONVERT ASCII TO BINARY
  6229	046252	002411				BLT	.CNXN9
  6230	046254	120304				CMPB	D,E	;COMPARE TO 10.
  6231	046256	002007				BGE	.CNXN9
  6232	046260	010415				MOV	E,(F)	;MULTIPLY MQ BY 10.
  6233	046262	132767	000002	131021		BITB	#SIPRBT,EAESR	;TEST SINGLE PRECISION BIT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 185
	EVAL 334	PAGE 27.1 	CONVERSION ROUTINES

  6234	046270	001402				BEQ	.CNXN9	;ANSWER NO LONGER SINGLE PRECISION
  6235	046272	060345				ADD	D,-(F)	;ADD NEW NUMBER TO MQ
  6236	046274	000746				BR	.CLSS0
  6237					
  6238	046276	005726			.CNXN9:	TST	(SP)+	;POP OFF ADDRESS OF CO-ROUTINE
  6239	046300	000167	174542			JMP	.RDEF	;RESTORE D,E,F
  6240					
  6241	046304	010115			.CLSS9:	MOV	B,(F)	;END OF STRING.  MULTIPLY BY 1 OR -1
  6242	046306	014501				MOV	-(F),B	;PICK NUMBER OUT OF EAE
  6243	046310	000167	177546			JMP	.SRDEF	;RESTORE D,E,F AND SKPRET
  6244					
  6245		000210			CLS2LN==<.-CNVTOP>/2
  6246					;CONVERT LSTR TO LNUM
  6247					;FOR NOW ONLY WORKS IF NUMBER LESS THAN 16 BITS
  6248	046314	004767	177630		.CLSLN:	JSR	PC,.CLSSN	;CONVERT TO SNUM
  6249	046320	000207				RTS	PC
  6250	046322	000167	177360			JMP	.CSNLN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 186
	EVAL 334	PAGE 28 	CONVERSION ROUTINES

  6251					
  6252					
  6253					;THE DISPATCH TABLE FOR CONVERT
  6254					
  6255					CNVTBL:
  6256	046326	   001				.BYTE CNVNOP	;SNAP TO SNAP
  6257					REPT1 7,^\.BYTE 0\	;NOT USED AT THIS TIME
  6258					
  6259					REPT1 2,^\.BYTE 0\	;NOT USED AT THIS TIME
  6260	046340	   000				.BYTE 0	;ATOM TO SNUM
  6261	046341	   000				.BYTE 0	;ATOM TO LNUM
  6262	046342	   002				.BYTE CA2LS	;ATOM TO LSTR
  6263					REPT1 3,^\.BYTE 0\	;NOT USED AT THIS TIME
  6264					
  6265					REPT1 2,^\.BYTE 0\	;NOT USED AT THIS TIME
  6266	046350	   001				.BYTE CNVNOP	;SNUM TO SNUM
  6267	046351	   005				.BYTE CSN2LN	;SNUM TO LNUM
  6268	046352	   015				.BYTE CSN2LS	;SNUM TO LSTR
  6269					REPT1 3,^\.BYTE 0\	;NOT USED AT THIS TIME
  6270					
  6271					REPT1 2,^\.BYTE 0\	;NOT USED AT THIS TIME
  6272	046360	   112				.BYTE CLN2SN	;LNUM TO SNUM
  6273	046361	   001				.BYTE CNVNOP	;LNUM TO LNUM
  6274	046362	   121				.BYTE CLN2LS	;LNUM TO LSTR
  6275					REPT1 3,^\.BYTE 0\	;NOT USED AT THIS TIME
  6276					
  6277					REPT1 2,^\.BYTE 0\	;NOT USED AT THIS TIME
  6278	046370	   126				.BYTE CLS2SN	;LSTR TO SNUM
  6279	046371	   210				.BYTE CLS2LN	;LSTR TO LNUM
  6280	046372	   001				.BYTE CNVNOP	;LSTR TO LSTR
  6281					REPT1 3,^\.BYTE 0\	;NOT USED AT THIS TIME
  6282					
  6283					REPT1 8.,^\.BYTE 0\	;NOT USED AT THIS TIME (RNUM TO ANYTHING)
  6284					
  6285					REPT1 6,^\.BYTE 0\	;NOT USED AT THIS TIME
  6286	046414	   001				.BYTE CNVNOP	;SENT TO SENT
  6287					REPT1 1,^\.BYTE 0\	;NOT USED AT THIS TIME
  6288					
  6289					REPT1 7,^\.BYTE 0\	;NOT USED AT THIS TIME
  6290	046425	   001				.BYTE CNVNOP	;LIST TO LIST
  6291					
  6292		046426				.EVEN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 187
	EVAL 334	PAGE 29 	CONVERSION ROUTINES

  6293					
  6294						.STITL GET ARGUMENT ROUTINES
  6295					
  6296					;GET 2 SNUM'S OFF OF S PDL
  6297					;RETURN TOP ONE IN A, BOTTOM ONE IN B
  6298	046426	004767	000002		G2NARG:	JSR	PC,G1NARG	;NUMBER IN B
  6299	046432	010100				MOV	B,A
  6300					
  6301					;GET 1 SNUM OFF OF S PDL
  6302					;RETURN IT IN B
  6303					G1NARG:	POPS B
  6304	046444	010046			G1NAR1:	MOV	A,-(SP)	;ENTER HERE WITH ARG IN B
  6305	046446	012700	120000			MOV	#SNUM,A
  6306	046452	004767	177112			JSR	PC,CONVERT
  6307	046456	104447			G1WTA:	ERROR+WTAB	;WRONG TYPE OF ARG
  6308	046460	012600				MOV	(SP)+,A
  6309	046462	000207			G1RET:	RTS	PC
  6310					
  6311					;GET ONE LIST OR WORD ARG
  6312					;SKIP IF WORD
  6313	046464	017701	134716		GLWARG:	MOV	@S,B	;DON'T POP ARG.  LEAVE IT GC PROTECTED
  6314	046470	012700	140000		GLWAR1:	MOV	#LSTR,A
  6315	046474	004767	177070			JSR	PC,CONVERT
  6316	046500	000401				BR	GSW1	;NOT WORD
  6317	046502	104000				SKPRET
  6318	046504	020027	170000		GSW1:	CMP	A,#SENT
  6319	046510	001362				BNE	G1WTA	;NOT SENTENCE EITHER
  6320	046512	000207			GSW2:	RTS	PC
  6321					
  6322					;GET ONE LIST OR WORD.  ERRROR IF EMPTY
  6323	046514	017701	134666		GLWANE:	MOV	@S,B
  6324	046520	032701	007777			BIT	#7777,B
  6325	046524	001754				BEQ	G1WTA
  6326	046526	000760				BR	GLWAR1
  6327					
  6328					;RETURN ONE NUMERIC ARGUMENT
  6329					;CALL WITH SNUM IN B
  6330	046530	004767	012032		R1INT:	JSR	PC,GETINT
  6331	046534	012746	050024		R1NARG:	MOV	#ORTB,-(SP)	;ENTER HERE FROM LOGO
  6332	046540	004767	177142		P1NARG:	JSR	PC,.CSNLN	;CONVERT SNUM TO LNUM
  6333						NOP 1
  6334	046546	000207				RTS	PC
  6335					
  6336	046550	004767	012012		PSHINT:	JSR	PC,GETINT
  6337					;PUSH A NUMBER ONTO THE S-PDL
  6338	046554	004767	177126		PSHNUM:	JSR	PC,.CSNLN
  6339						NOP 1
  6340						SPUSHS	B
  6341	046574	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 188
	EVAL 334	PAGE 30 	GET ARGUMENT ROUTINES

  6342					
  6343					
  6344					;GET 1 SNAP
  6345					;	RETURN POINTER TO SNAP IN D, DELTA X IN E, DELTA Y IN F
  6346	046576	017702	134604		G1SNAP:	MOV	@S,C	;POINTER TO ARG
  6347	046602	032702	007777			BIT	#7777,C	;IS IT EMPTY?
  6348	046606	001725				BEQ	G1RET	;YES. RETURN WITHOUT SKIPPING
  6349	046610	004767	000002			JSR	PC,LD3NUM	;LOAD D,E,F
  6350	046614	104000				SKPRET
  6351					
  6352					
  6353					;LOAD 3 NUMBERS
  6354					;	GROVEL DOWN A LIST OF NUMBERS RETURNING 3 NUMBERS IN D,E,F
  6355					;	CALL WITH C POINTING TO LIST
  6356					;	IF LIST CONTAINS 1)NON-NUMBERS OR 2)MORE THAN 3 ELEMENTS,
  6357					;	THEN ERROR+WTA
  6358					LD3NUM:	PUSH	A
  6359						SPUSH	B
  6360						SPUSH	C
  6361	046630	012703	007777			MOV	#7777,D	;AN OFT USED CONSTANT
  6362	046634	012705	000003			MOV	#3,F	;COUNTER
  6363	046640	030302			LDN.L:	BIT	D,C	;IS THERE MORE LIST?
  6364	046642	001407				BEQ	LDN.E	;ERROR
  6365	046644	004767	004770			JSR	PC,.LDP2I	;LOAD A WITH NEXT ELEMENT
  6366	046650	010001				MOV	A,B
  6367	046652	012700	120000			MOV	#SNUM,A
  6368	046656	004767	176706			JSR	PC,CONVERT
  6369	046662	104445			LDN.E:	ERROR+WTA
  6370						SPUSH	B	;PUSH THIS ELEMENT
  6371	046666	005305				DEC	F
  6372	046670	003363				BGT	LDN.L	;LOOP BACK
  6373	046672	030302				BIT	D,C	;IS THE LIST FINISHED?
  6374	046674	001372				BNE	LDN.E	;NO. ERROR
  6375	046676	000167	176506			JMP	RETF	;SKIP RETURN AND RESTORE ALL AC'S!
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 189
	EVAL 334	PAGE 31 	EVAL

  6376						.STITL EVAL
  6377		000000				EVBUG=HALT
  6378					
  6379	046702	004767	151100		EVAL:	JSR PC,GNT
  6380	046706	004767	167250			JSR PC,STRACE
  6381	046712	042700	007777			BIC #7777,A
  6382	046716	020027	020000			CMP A,#UFUN
  6383	046722	101521				BLOS EVFUN
  6384	046724	020027	030000			CMP A,#UVAR
  6385	046730	001421				BEQ EVVAR
  6386	046732	020027	070000			CMP A,#SSTR
  6387	046736	103001				BHIS .+4
  6388	046740	000000				EVBUG
  6389	046742	020027	110000			CMP A,#ATOM
  6390	046746	001404				BEQ EVATM
  6391	046750	020027	150000			CMP A,#RNUM
  6392	046754	001001				BNE EVCON
  6393	046756	000000				EVBUG
  6394					EVCON:
  6395					EVATM:	PUSHS CT+2
  6396	046772	000411				BR EVI
  6397	046774	042700	007777		EVVAR:	BIC #7777,A
  6398	047000	004767	004660			JSR PC,.BINDL
  6399	047004	104410				ERROR+HNV	;... HAS NO VALUE
  6400						PUSHS B
  6401	047016	004767	150764		EVI:	JSR PC,GNT	;ABOUT TO OUTPUT A VLAUE.  BEFORE WE DO, CHECK TO SEE IF
  6402								;NEXT TOKEN IS INFIX WHICH SHOULD GOBBLE IT.
  6403	047022	042700	007777			BIC #7777,A	;IS NEXT TOKEN INFIX?
  6404	047026	022700	010000			CMP #INFIX,A
  6405	047032	001410				BEQ CKPRCD	;YES
  6406	047034	052737	000002	003522	EVI1:	BIS #RTF,@#FLAGS	;SET REPEAT TOKEN FLAG
  6407	047042	042767	000004	134452		BIC #CRF,FLAGS
  6408	047050	000167	001056			JMP SRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 190
	EVAL 334	PAGE 32 	EVAL

  6409	047054	005767	134452		CKPRCD:	TST CO+2	;COMPARE PRECEDENCE
  6410	047060	001407				BEQ EVI2
  6411	047062	017700	134460			MOV @CT+2,A
  6412	047066	042700	007777			BIC #7777,A
  6413	047072	020067	134440			CMP A,COF
  6414	047076	101756				BLOS EVI1	;PRECD OF CO IS >= PRECD OF NEXT OPR
  6415							;NEXT TOKEN SHOULD GOBBLE THIS OUTPUT
  6416	047100	004767	167056		EVI2:	JSR PC,STRACE
  6417						PUSH CO
  6418						SPUSH CO+2
  6419						SPUSH NOR
  6420	047124	016767	134414	134376		MOV CT,CO
  6421	047132	016767	134410	134372		MOV CT+2,CO+2
  6422	047140	017767	134366	134370		MOV @CO+2,COF	;GET FLAGS
  6423	047146	004767	000760			JSR PC,CKTYP
  6424	047152	104445				ERROR+WTA	;WRONG TYPE OF ARG
  6425	047154	012767	000001	134352		MOV #1,NOR
  6426	047162	000167	000404			JMP EVW
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 191
	EVAL 334	PAGE 33 	EVAL

  6427	047166	032767	000004	134326	EVFUN:	BIT #CRF,FLAGS	;CT IS A FUNCTION
  6428	047174	001401				BEQ .+4
  6429	047176	104441				ERROR+UEL	;UNEXPECTED END OF LINE
  6430	047200	022767	006004	134340		CMP #$LPAR,CT+2
  6431	047206	001012				BNE EVF1
  6432	047210	005767	134316			TST CO+2
  6433	047214	001404				BEQ EVF11
  6434	047216	022767	005770	134306		CMP #$LLPAR,CO+2
  6435	047224	001003				BNE EVF1
  6436	047226	012767	005770	134312	EVF11:	MOV #$LLPAR,CT+2
  6437					EVF1:	PUSH CO
  6438						SPUSH CO+2
  6439						SPUSH NOR
  6440	047254	016767	134264	134246		MOV CT,CO
  6441	047262	016767	134260	134242		MOV CT+2,CO+2
  6442	047270	020027	020000			CMP A,#UFUN	;IS IT A  USER FUNCTION?
  6443	047274	103414				BLO MFUN	;NO, MACHINE
  6444	047276	012767	040000	134232	EVF2:	MOV #40000,COF	;SET PRECD TO 2
  6445	047304	004767	004126			JSR PC,GNASN	;GET NO. OF ARGS IN B
  6446	047310	104407				ERROR+HNM	;... HAS NO MEANING
  6447	047312	110101				MOVB B,B	;CLEAR ANY LEFT HALF FLAGS
  6448	047314	010167	134214			MOV B,NOR
  6449	047320	001110				BNE EVL1
  6450	047322	000167	000746		EVXP:	JMP PEVAL	;SET TO EVALUATE THIS USER PROCEDURE
  6451							;PEVAL RETURNS TO "NORT" IF THERE WAS NO OUTPUT
  6452							;GOES TO "ORT:" IF THERE WAS
  6453	047326	017700	134200		MFUN:	MOV @CO+2,A	;GET FLAGS FOR THIS MACHINE PROCEDURE
  6454	047332	010067	134200			MOV A,COF
  6455	047336	000300				SWAB A
  6456	047340	042700	177774			BIC #177774,A
  6457	047344	010067	134164			MOV A,NOR
  6458	047350	001036				BNE EVS	;IS  NO. ARGS = 0?
  6459	047352	000167	000702		EVXM:	JMP MEVAL	;YES.  EXECUTE THIS MACHINE PROCEDURE
  6460	047356	012700	047444		NORT:	MOV #EVDNO,A
  6461	047362	016767	134144	134152	NORT1:	MOV CO+2,LO+2
  6462	047370	016767	134134	134142		MOV CO,LO
  6463						POP NOR
  6464						SPOP B
  6465	047410	010167	134116			MOV B,CO+2
  6466						SPOP CO
  6467	047420	005067	134112			CLR COF
  6468	047424	005701				TST B
  6469	047426	001405				BEQ NORT2
  6470	047430	032701	170000			BIT #170000,B	;IS IT A UFUN
  6471	047434	001002				BNE NORT2
  6472	047436	011167	134074			MOV @B,COF
  6473	047442	000110			NORT2:	JMP @A
  6474	047444	000207			EVDNO:	RTS PC
  6475	047446	036727	134064	010000	EVS:	BIT COF,#INFIX	;IS CO INFIX OP
  6476	047454	001420				BEQ EVL	;NO
  6477	047456	004767	000472			JSR PC,CKUI	;CHECK FOR VALID UNARY INFIX +,-
  6478	047462	104412				ERROR+INF1	;INFIX IN WRONG PLACE
  6479	047464	000442				BR EVW
  6480	047466	004767	173672		PROC:	JSR PC,GUOEB	;PEVAL INVOKED VIA "#"
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 192
	EVAL 334	PAGE 33.1 	EVAL

  6481	047472	104407				ERROR+HNM	;HAS NO MEANING
  6482	047474	005067	133766			CLR TOPS
  6483	047500	012767	020000	134022		MOV #UFUN,CO
  6484	047506	010167	134020			MOV B,CO+2
  6485	047512	000167	177560			JMP EVF2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 193
	EVAL 334	PAGE 34 	EVAL

  6486					
  6487	047516	032767	000001	133776	EVL:	BIT #PTLPF,FLAGS	;WAS PREVIOUS TOKEN A LEFT PAREN
  6488	047524	001406				BEQ EVL1
  6489	047526	032767	002000	134002		BIT #VNAF,COF
  6490	047534	001402				BEQ EVL1
  6491	047536	005067	133772			CLR NOR
  6492	047542	004767	150240		EVL1:	JSR PC,GNT
  6493	047546	022767	005166	133772		CMP #$OF,CT+2
  6494	047554	001406				BEQ EVW
  6495	047556	052767	000002	133736	EVW1:	BIS #RTF,FLAGS	;SET RTF
  6496	047564	042767	000004	133730		BIC #CRF,FLAGS
  6497	047572	004767	177104		EVW:	JSR PC,EVAL
  6498	047576	000455				BR EVW2
  6499	047600	004767	000326			JSR PC,CKTYP
  6500	047604	104445				ERROR+WTA	;WRONG TYPE
  6501	047606	005367	133722			DEC NOR
  6502	047612	001427				BEQ EVX	;WHEN NOR = 0, WE'VE ENUF INPUTS
  6503	047614	004767	150166			JSR PC,GNT
  6504	047620	022767	004302	133720		CMP #$AND,CT+2	;SKIP NEXT TOKEN IF IT IS "AND"
  6505	047626	001761				BEQ EVW
  6506	047630	005767	133700			TST NOR	;IF NOR < 0 AND NEXT TOKEN IS ")" THEN THE ")" 
  6507	047634	002350				BGE EVW1	;TERMINATES THE ARG SCAN FOR THE CO
  6508	047636	022767	006012	133702		CMP #$RPAR,CT+2
  6509	047644	001344				BNE EVW1
  6510	047646	052767	000002	133646		BIS #RTF,FLAGS
  6511	047654	042767	000004	133640		BIC #CRF,FLAGS
  6512	047662	005467	133646			NEG NOR
  6513	047666	000167	000356			JMP MEVALN
  6514	047672	032767	160000	133630	EVX:	BIT #160000,CO	;IS IT A MACHINE PROCEDURE
  6515	047700	001210				BNE EVXP	;NO
  6516	047702	032767	002000	133626		BIT #VNAF,COF	;MACHINE PROC NOW HAS ITS "STD" NO. OF ARGS.
  6517							;IF IT CAN TAKE A VARIABLE NO., THEN THE "STD" NO. HAS TO 
  6518							;BE PUSHED ON P
  6519	047710	001563				BEQ MEVAL
  6520	047712	016700	133620			MOV COF,A
  6521	047716	000300				SWAB A
  6522	047720	042700	177774			BIC #177774,A
  6523	047724	010067	133604			MOV A,NOR
  6524	047730	000547				BR MEVALN
  6525	047732	022767	005770	133572	EVW2:	CMP #$LLPAR,CO+2	;EVAL SHOULD OUTPUT WHEN NOT AT TOP LEVEL
  6526	047740	001401				BEQ LLPAR	;EXCEPT WHEN CO IS LLPAR
  6527	047742	104421				ERROR+NOU	;WHAT, NO OUTPUT??!!
  6528	047744	004767	150036		LLPAR:	JSR PC,GNT
  6529	047750	022767	006012	133570		CMP #$RPAR,CT+2
  6530	047756	001277				BNE EVW1
  6531	047760	000167	177372			JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 194
	EVAL 334	PAGE 35 	EVAL

  6532					
  6533					ORTNA:	SPUSH A
  6534	047766	000411				BR	ORTNP
  6535					ORTNB:	SPUSH B
  6536	047772	000407				BR	ORTNP
  6537					ORTNC:	SPUSH C
  6538	047776	000405				BR	ORTNP
  6539					ORTND:	SPUSH D
  6540	050002	000403				BR	ORTNP
  6541					ORTNE:	SPUSH E
  6542	050006	000401				BR	ORTNP
  6543					ORTNF:	SPUSH F
  6544	050012	012677	133370		ORTNP:	MOV	(SP)+,@S
  6545	050016	000417				BR	ORT
  6546					
  6547					
  6548					ORTA:	SPUSH A
  6549	050022	000411				BR	ORTSP
  6550					ORTB:	SPUSH B
  6551	050026	000407				BR	ORTSP
  6552					ORTC:	SPUSH C
  6553	050032	000405				BR	ORTSP
  6554					ORTD:	SPUSH D
  6555	050036	000403				BR	ORTSP
  6556					ORTE:	SPUSH E
  6557	050042	000401				BR	ORTSP
  6558					ORTF:	SPUSH F
  6559		050046			ORTP==.
  6560					ORTSP:	PUSHS	(SP)+
  6561	050056	012700	047016		ORT:	MOV #EVI,A
  6562	050062	000167	177274			JMP NORT1
  6563					SRETF:	POP F
  6564					SRETE:	POP E
  6565					SRETD:	POP D
  6566					SRETC:	POP C
  6567					SRETB:	POP B
  6568					SRETA:	POP A	;POP A THEN SKIP RETURN
  6569					CKTYP:
  6570					SRET:
  6571	050132	022776	000200	000000		CMP #200,@0(P)	;SKIP RETURN. IS NEXT INST A 'JMP' OR HALT
  6572	050140	101402				BLOS .+6
  6573	050142	062716	000002			ADD #2,@P	;YES, SKIP 2 EXTRA
  6574	050146	062716	000002			ADD #2,@P
  6575	050152	000207				RTS PC
  6576					CKUI:	PUSH A
  6577	050162	016700	133344			MOV CO+2,A
  6578	050166	020027	006026			CMP A,#$PLUS	;+
  6579	050172	001013				BNE CKUI1
  6580	050174	012767	006034	133330		MOV #$UPLUS,CO+2
  6581	050202	017767	133324	133326	CKUI0:	MOV @CO+2,COF
  6582	050210	012767	000001	133316		MOV #1,NOR
  6583	050216	000167	177702			JMP SRETA
  6584	050222	020027	006044		CKUI1:	CMP A,#$MINUS	;-
  6585	050226	001004				BNE CKUI2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 195
	EVAL 334	PAGE 35.1 	EVAL

  6586	050230	012767	006052	133274		MOV #$UMINS,CO+2
  6587	050236	000761				BR CKUI0
  6588					CKUI2:	POP A
  6589	050246	000207				RTS PC
  6590					MEVALN:	PUSH NOR
  6591	050260	016700	133246		MEVAL:	MOV CO+2,A	;GET SOE POINTER
  6592	050264	005067	133320			CLR NBKTS
  6593	050270	000170	000002			JMP @2(A)	;JMP ADDR IS IN 2ND WORD
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 196
	EVAL 334	PAGE 36 	PROCEDURE EVALUATOR

  6594						.STITL PROCEDURE EVALUATOR
  6595	050274	016701	133232		PEVAL:	MOV CO+2,B	;FIRST CHECK IF PROC IS THERE
  6596	050300	004767	003566			JSR PC,.BINDF
  6597	050304	104407				ERROR+HNM	;PROCEDURE HAS NO MEANING
  6598						PUSH CPP		;PUSH THE WORLD!
  6599						SPUSH CPSN
  6600						SPUSH CLN
  6601						SPUSH CLP
  6602						SPUSH CLGN
  6603						SPUSH CTN
  6604						PUSH CTP
  6605						SPUSH FLAGS
  6606						SPUSH CO
  6607						SPUSH CO+2
  6608						SPUSH IFLEV
  6609						;GET ARG LIST - PUT UOE POINTERS AND VALUES FROM THERE ON S
  6610	050372	010102				MOV B,C	;SAVE PTR TO LLP
  6611	050374	016701	133132			MOV CO+2,B
  6612	050400	004767	003032			JSR PC,GNASN	;GET FLAGS,,#ARGS
  6613	050404	000000				HALT
  6614	050406	000000				HALT
  6615	050410	010167	133106			MOV B,FLAGS
  6616	050414	110101				MOVB B,B
  6617						SPUSH B
  6618	050420	042767	177377	133074		BIC #-TPTF-1,FLAGS
  6619	050426	001423				BEQ PEV6
  6620	050430	016701	133076			MOV CO+2,B
  6621	050434	005267	133056			INC FUNLEV
  6622	050440	004767	000444			JSR PC,TINDNT
  6623	050444	005367	133046			DEC FUNLEV
  6624	050450	004767	164276			JSR PC,PPNAME
  6625						PRTXT ^\'S INPUTS: \
  6626	050474	011601				MOV @P,B
  6627					PEV6:	SPUSH C	;SAVE FOR BELOW
  6628	050500	010103				MOV B,D
  6629	050502	001470				BEQ PEV2
  6630	050504	004767	002774			JSR PC,.LOADC
  6631	050510	004767	002772			JSR PC,.LOAD
  6632						SPUSH A	;SAV PTR TO REST OF LLP
  6633						SPUSH B	;FOR REVS
  6634	050520	004767	174742			JSR PC,REVS
  6635	050524	004767	000300			JSR PC,PUSHSN	;PUSH S BY (B) WORDS
  6636	050530	016703	132652			MOV S,D
  6637						SPOP B	;REVS DOESNT POP
  6638	050536	010304				MOV D,E
  6639	050540	006301				ASL B
  6640	050542	060104				ADD B,E	;E POINTS TO FIRST ARG
  6641	050544	011601				MOV @P,B	;GET SAVED LLP PTR
  6642	050546	032767	000400	132746	PEV1:	BIT #TPTF,FLAGS
  6643	050554	001411				BEQ PEV5
  6644	050556	011401				MOV @E,B
  6645	050560	010100				MOV B,A
  6646						SPUSH D
  6647	050564	004767	164114			JSR PC,PRTAB
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 197
	EVAL 334	PAGE 36.1 	PROCEDURE EVALUATOR

  6648						SPACE
  6649						SPOP D
  6650	050576	011601				MOV @P,B
  6651	050600	004767	002702		PEV5:	JSR PC,.LOAD
  6652	050604	010016				MOV A,@P
  6653	050606	010123				MOV B,(D)+	;SAVE UOE PTR
  6654	050610	004767	003326			JSR PC,.BNDVN	;NOW GET VARIB. BINDING
  6655	050614	000477				BR PEV3	;NOT THERE
  6656	050616	032700	100000		PEV4:	BIT #100000,A	;IF OLD VALUE SWAPPED OUT, CLEAR TYPE FIELD
  6657	050622	001402				BEQ .+6
  6658	050624	042701	170000			BIC #170000,B
  6659	050630	012400				MOV (E)+,A	;GET NEW VALUE PTR
  6660	050632	010123				MOV B,(D)+	;SAVE OLD VALUE PO[NTER
  6661	050634	010001				MOV A,B
  6662	050636	004767	002752			JSR PC,.LDP1
  6663	050642	042700	100000			BIC #100000,A	;MAKE SURE BINDING NODE SAYS "VBIND"
  6664	050646	004767	002656			JSR PC,.STORE	;STORE NEW BINDING AWAY
  6665	050652	011601				MOV @P,B
  6666	050654	032701	007777			BIT #7777,B
  6667	050660	001332				BNE PEV1	;GO DO NEXT ARG
  6668						SPOP C	;USED LLP POINTER
  6669					PEV2:	SPOP C	;PTR TO LLP THAT WAS SAVED WAY ABOVE
  6670						SPUSH CSPDLP
  6671	050672	016767	132510	132624		MOV S,CSPDLP
  6672	050700	166767	132516	132616		SUB SPRBAO,CSPDLP	;SPECIAL PDL RELATIVE BASE ADDR OFFSET
  6673						SPUSH CPDLP
  6674	050712	010667	132610			MOV P,CPDLP
  6675	050716	166767	132512	132602		SUB PRBAO,CPDLP	;PDL RELATIVE BASE ADDR OFFSET
  6676	050724	052767	100000	132574		BIS #100000,CPDLP	;TO INDICATE PROC PUSH AS OPPOSED TO A LOCAL PUSH
  6677	050732	016767	132574	132540		MOV CO+2,CPP
  6678	050740	005067	132540			CLR CLN
  6679	050744	010267	132536			MOV C,CLP
  6680	050750	016701	132524			MOV CPP,B	;GET CPSN IN A
  6681	050754	004767	002456			JSR PC,GNASN
  6682	050760	000000				EVBUG
  6683	050762	000000				HALT
  6684	050764	010067	132512			MOV A,CPSN
  6685	050770	005067	132534			CLR CO
  6686	050774	005067	132532			CLR CO+2
  6687	051000	005067	132514			CLR IFLEV
  6688	051004	005267	132506			INC FUNLEV
  6689	051010	000167	145462			JMP MLOOP
  6690	051014	012700	030000		PEV3:	MOV #VBIND,A
  6691	051020	005001				CLR B
  6692	051022	004767	004204			JSR PC,GRBAD1
  6693	051026	000673				BR PEV4
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 198
	EVAL 334	PAGE 37 	PROCEDURE EVALUATOR

  6694	051030	005701			PUSHSN:	TST B	;PUSH (B) EMPTY WORDS ONTO S
  6695	051032	003001				BGT .+4
  6696	051034	000207				RTS PC
  6697					PSN1:	PUSHS #0
  6698	051050	005301				DEC B
  6699	051052	003371				BGT PSN1
  6700	051054	000207				RTS PC
  6701	051056	005701			PUSHN:	TST B	;PUSH (B) EMPTY WORDS ON P
  6702	051060	003001				BGT .+4
  6703	051062	000207				RTS PC
  6704	051064	011667	132470			MOV @P,TEMP
  6705					PN1:	PUSH #0
  6706	051100	005301				DEC B
  6707	051102	003372				BGT PN1
  6708	051104	000177	132450			JMP @TEMP
  6709					TINDNT:	PUSH A	;TRACE INDENT
  6710						PRCR
  6711	051122	016700	132370			MOV FUNLEV,A
  6712	051126	005300			TIND2:	DEC A
  6713	051130	003002				BGT TIND1
  6714	051132	000167	174310			JMP RETA
  6715					TIND1:	SPACE
  6716	051142	000771				BR TIND2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 199
	EVAL 334	PAGE 38 	PROC EVAL - "OUTPUT" "STOP"

  6717					.STITL PROC EVAL - "OUTPUT" "STOP"
  6718	051144	104427			PSTP30:	ERROR+OIP	;ONLY IN PROCEDURE
  6719	051146	000167	000426		PSTP35:	JMP PSTP33
  6720	051152	012700	030000		PSTP31:	MOV #VBIND,A
  6721						POPS B
  6722	051166	005701				TST B	;IF OLD BINDING EMPTY, DONT BOTHER
  6723	051170	001766				BEQ PSTP35
  6724	051172	004767	004034			JSR PC,GRBAD1
  6725	051176	000567				BR PSTP32
  6726	051200	005767	132312		OUTPUT:	TST FUNLEV
  6727	051204	003757				BLE PSTP30
  6728	051206	012767	050056	132340		MOV #ORT,PSTOPR ;"OUTPUT"
  6729						POPS TOPS1	;SAVE THE OUTPUT
  6730	051226	000410				BR PSTP10
  6731					STOP:
  6732	051230	005767	132262		PSTOP:	TST FUNLEV
  6733	051234	003743				BLE PSTP30
  6734	051236	012767	047356	132310		MOV #NORT,PSTOPR	;"STOP" AND "END"
  6735	051244	005067	132220			CLR TOPS1
  6736	051250	032767	000400	132244	PSTP10:	BIT #TPTF,FLAGS
  6737	051256	001433				BEQ PSTP14
  6738	051260	004767	177624			JSR PC,TINDNT
  6739	051264	016701	132210			MOV CPP,B
  6740	051270	004767	163456			JSR PC,PPNAME
  6741	051274	016701	132170			MOV TOPS1,B
  6742	051300	001414				BEQ PSTP13
  6743						PRTXT ^\ OUTPUTS \
  6744	051320	004767	163272			JSR PC,PNODAB	;USES A
  6745						SPACE
  6746	051330	000406				BR PSTP14
  6747					PSTP13:	PRTXT ^\ STOPS.\
  6748	051346	062706	000012		PSTP14:	ADD #12,P	;TO GET BACK IN PHASE
  6749	051352	016700	132150			MOV CPDLP,A
  6750	051356	042767	000400	132176		BIC #TF3,TFLAGS ;SAVE MODE OF PROC/LOCAL PUSH FLAG
  6751	051364	032700	100000			BIT #100000,A
  6752	051370	001403				BEQ .+10
  6753	051372	052767	000400	132162		BIS #TF3,TFLAGS
  6754	051400	042700	100000			BIC #100000,A
  6755	051404	001402				BEQ .+6
  6756	051406	052700	100000			BIS #100000,A
  6757	051412	066700	132016			ADD PRBAO,A
  6758	051416	020006			PSTP11:	CMP A,P
  6759	051420	001406				BEQ PSTOP1
  6760	051422	003001				BGT .+4
  6761	051424	000000				HALT	;PDL SCREWED
  6762						POP B
  6763	051434	000770				BR PSTP11
  6764					PSTOP1:	POP CPDLP	 ;RESTORE OLD CPDLP
  6765	051446	016700	132052			MOV CSPDLP,A
  6766	051452	066700	131744			ADD SPRBAO,A
  6767	051456	020067	131724		PSTP21:	CMP A,S
  6768	051462	001407				BEQ PSTOP2
  6769	051464	003001				BGT .+4
  6770	051466	000000				HALT	;SPECIAL PDL OUT OF PHASE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 200
	EVAL 334	PAGE 38.1 	PROC EVAL - "OUTPUT" "STOP"

  6771						POPS B
  6772	051500	000766				BR PSTP21
  6773					PSTOP2:	SPOP CSPDLP	;RESTORE OLD CSPDLP
  6774						SPOP D	;# ARGS SAVED
  6775	051510	001435				BEQ PSTOP4	;NO ARGS
  6776					PSTOP3:	POPS B	;GET NEXT UOE PTR
  6777	051522	004767	002414			JSR PC,.BNDVN	;GET VARIB BINDING PTR
  6778	051526	000611				BR PSTP31	;NONE THERE
  6779	051530	032700	100000			BIT #100000,A	;IS IT SWAPPED OUT
  6780	051534	001402				BEQ .+6	;NO
  6781	051536	004767	003434			JSR PC,DSVB	;YES, DELETE SWAPPED VARIB
  6782						POPS B	;GET OLD VARIB BINDING
  6783	051552	042700	100000			BIC #100000,A
  6784	051556	005701			PSTP32:	TST B	;IF OLD PTR 0, SKIP SWAPPED TEST
  6785	051560	001405				BEQ PSTP34
  6786	051562	032701	170000			BIT #170000,B	;IS OLD BINDING SWAPPED
  6787	051566	001002				BNE PSTP34
  6788	051570	052700	100000			BIS #100000,A	;YES
  6789	051574	004767	001730		PSTP34:	JSR PC,.STORE	;RESTORE OLD BINDING
  6790	051600	005303			PSTP33:	DEC D
  6791	051602	003343				BGT PSTOP3
  6792	051604	032767	000400	131750	PSTOP4:	BIT #TF3,TFLAGS	;WAS IT A LOCAL PUSH OR PROC PUSH
  6793	051612	001606				BEQ PSTOP	;LOCAL
  6794	051614	022767	050056	131732		CMP #ORT,PSTOPR	;WAS IT "OUTPUT"
  6795	051622	001007				BNE PSTP42	;NO
  6796						PUSHS TOPS1	;PUT THE OUTPUT BACK ON S
  6797	051636	005067	131624			CLR TOPS
  6798					PSTP42:	POP IFLEV	;PROC, RESTORE REST OF WORLD
  6799						SPOP CO+2
  6800						SPOP CO
  6801						SPOP FLAGS
  6802						SPOP CTP
  6803						SPOP CTN
  6804						SPOP CLGN
  6805						POP CLP
  6806						SPOP CLN
  6807						SPOP CPSN
  6808						SPOP CPP
  6809	051726	005367	131564			DEC FUNLEV	;IF AT TOP LEVEL, ALMOST DONE!
  6810	051732	003462				BLE PSTOP9
  6811	051734	016701	131540			MOV CPP,B
  6812	051740	004767	002126			JSR PC,.BINDF	;MAKE SURE PROC IS IN
  6813	051744	104434				ERROR+PNH	;PROCEDURE ... NOT HERE
  6814	051746	016701	131526			MOV CPP,B	;SEE IF PROC'S CPSN AGREE
  6815	051752	004767	001460			JSR PC,GNASN	;GET CPSN
  6816	051756	000000				EVBUG	;IMPOSSIBLE!!!
  6817	051760	000000				HALT
  6818	051762	016702	131520			MOV CLP,C
  6819	051766	052767	000400	131566		BIS #TF3,TFLAGS
  6820	051774	020067	131502			CMP A,CPSN
  6821	052000	001410				BEQ PSTP41	;OK
  6822	052002	042767	000400	131552		BIC #TF3,TFLAGS
  6823	052010	016701	131470			MOV CLN,B	;DON'T AGREE, GO RELOCATE LINE WE WERE IN
  6824	052014	004767	001250			JSR PC,GTLINE
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 201
	EVAL 334	PAGE 38.2 	PROC EVAL - "OUTPUT" "STOP"

  6825	052020	000422				BR PSTOP5	;LINE NOT THERE
  6826	052022	010267	131460		PSTP41:	MOV C,CLP
  6827	052026	004767	001452			JSR PC,.LOADC	;GET LLP NODE
  6828	052032	004767	001450			JSR PC,.LOAD	;GET LINE #
  6829	052036	010002				MOV A,C
  6830	052040	004767	001440			JSR PC,.LOADC	;GET NEXT NODE-SEE IF SNUM (I.E. GEN NO.)
  6831	052044	042700	007777			BIC #7777,A
  6832	052050	022700	120000			CMP #SNUM,A
  6833	052054	001401				BEQ .+4
  6834	052056	005001				CLR B	;NOT SNUM, SO SET GEN NO. TO 0
  6835	052060	020167	131424			CMP B,CLGN	;ARE GEN #'S =?
  6836	052064	001401				BEQ .+4
  6837	052066	104415			PSTOP5:	ERROR+LCE	;NO, LINE CHANGED BY EDIT
  6838	052070	032767	000400	131464		BIT #TF3,TFLAGS	;IF PROC WASNT SWAPPED
  6839	052076	001404				BEQ PSTOP8	;THEN CTP IS GOOD
  6840	052100	005003			PSTOP9:	CLR D
  6841	052102	016702	131406			MOV CTP,C
  6842	052106	000407				BR PSTOP6
  6843	052110	016703	131376		PSTOP8:	MOV CTN,D	;OK, NOW GET NODE NO.
  6844	052114	005701				TST B	;IF B > 0, WE WERE LOOKING GEN NO.
  6845	052116	001403				BEQ PSTOP6
  6846	052120	004767	001470			JSR PC,.LDP1
  6847	052124	010002			PSTOP7:	MOV A,C
  6848	052126	004767	001352		PSTOP6:	JSR PC,.LOADC
  6849	052132	005303				DEC D
  6850	052134	003373				BGT PSTOP7
  6851	052136	010267	131352			MOV C,CTP
  6852	052142	010067	131376			MOV A,CT
  6853	052146	010167	131374			MOV B,CT+2
  6854	052152	000177	131376			JMP @PSTOPR
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 202
	EVAL 334	PAGE 39 	"TO" ETC.

  6855						.STITL "TO" ETC.
  6856	052156	052767	000010	131336	EDIT:	BIS #EDITF,FLAGS
  6857	052164	000403				BR .+10
  6858	052166	042767	000010	131326	TO:	BIC #EDITF,FLAGS
  6859	052174	005767	131366			TST TOPRNM
  6860	052200	001401				BEQ TO8
  6861	052202	104405				ERROR+CTIT	;CANT "TO" IN TO
  6862	052204	004767	145576		TO8: 	JSR PC,GNT
  6863	052210	042700	007777			BIC #7777,A
  6864	052214	022700	020000			CMP #UFUN,A
  6865	052220	001413				BEQ TO1
  6866	052222	022700	110000			CMP #ATOM,A
  6867	052226	001410				BEQ TO1
  6868	052230	010167	131232			MOV B,TOPS	;FOR .INTRN
  6869	052234	022700	140000			CMP #LSTR,A
  6870	052240	001143				BNE TO2
  6871	052242	004767	002000			JSR PC,.INTRN
  6872	052246	000400				BR TO1
  6873	052250	010167	131312		TO1:	MOV B,TOPRNM
  6874	052254	005067	131206			CLR TOPS
  6875	052260	004767	001606			JSR PC,.BINDF
  6876	052264	000532				BR TO6
  6877	052266	010167	131276			MOV B,FNLLP
  6878	052272	032767	000010	131222		BIT #EDITF,FLAGS	;IS IT "EDIT"?
  6879	052300	001114				BNE TO5	;YES
  6880	052302	104433				ERROR+PAE	;PROCEDURE ALREADY EXISTS
  6881	052304	016767	131234	131154	TO7:	MOV CT,TOPS
  6882	052312	004767	145470		TO3:	JSR PC,GNT
  6883	052316	032767	000004	131176		BIT #CRF,FLAGS
  6884	052324	001006				BNE TO4	;DONE
  6885	052326	042700	007777			BIC #7777,A
  6886	052332	022700	030000			CMP #UVAR,A
  6887	052336	001765				BEQ TO3
  6888	052340	104444				ERROR+WIT	;WRONG TYPE OF INPUT TO "TO"
  6889	052342	012700	020000		TO4:	MOV #UFUN,A
  6890	052346	010001				MOV A,B
  6891	052350	004767	002656			JSR PC,GRBAD1	;THE UFUN BINDING NODE
  6892	052354	012700	170000			MOV #LIST,A
  6893	052360	010001				MOV A,B
  6894	052362	004767	002636			JSR PC,GRBAD2	;FIRST NODE IN LLP
  6895	052366	010267	131176			MOV C,FNLLP
  6896	052372	016702	131070			MOV TOPS,C	;PTR TO REST OF LINE
  6897	052376	004767	000400			JSR PC,CLE	;COUNT 'EM
  6898	052402	010200				MOV C,A
  6899	052404	042700	170000			BIC #170000,A
  6900	052410	052700	120000			BIS #SNUM,A
  6901	052414	016702	131150			MOV FNLLP,C
  6902	052420	004767	002600			JSR PC,GRBAD2	;FIRST NODE OF LINE 0 (ARG LINE)
  6903	052424	010103				MOV B,D
  6904	052426	016701	131134			MOV TOPRNM,B
  6905	052432	004767	001562			JSR PC,.BNDFS	;GET SWAPPED FUNC BINDING NODE FOR THIS PROC
  6906	052436	000421				BR END1		;NOT THERE
  6907	052440	010102				MOV B,C	;PTR TO LIST OF GOODIES
  6908	052442	004767	001142			JSR PC,.LDP2	;ALL THIS TO PRESERVE "TRACED" FLAG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 203
	EVAL 334	PAGE 39.1 	"TO" ETC.

  6909	052446	042700	000377			BIC #377,A
  6910	052452	060300				ADD D,A	;#ARGS FROM ABOVE
  6911	052454	004767	001076			JSR PC,.STP2	;STORE # ARGS IN FIRST NODE
  6912	052460	004767	001020			JSR PC,.LOADC	;TO GET ADDR OF NEXT NODE
  6913	052464	010002				MOV A,C
  6914	052466	004767	001116			JSR PC,.LDP2
  6915	052472	005200				INC A
  6916	052474	004767	001056			JSR PC,.STP2	;GET, INC AND STORE BACK CPSN
  6917	052500	000414				BR TO5
  6918	052502	012701	130000		END1:	MOV #LNUM,B	;CREATE S. F. B. NODE STUFF
  6919	052506	004767	002520			JSR PC,GRBAD1
  6920	052512	012700	120000			MOV #SNUM,A
  6921	052516	010301				MOV D,B	;# ARGS FROM ABOVE
  6922	052520	004767	002500			JSR PC,GRBAD2	; - # ARGS NODE
  6923	052524	005001				CLR B
  6924	052526	004767	002500			JSR PC,GRBAD1	; - CPSN NODE (START CPSN AT 0)
  6925	052532	012767	000076	131042	TO5:	MOV #'>,PRMTCH
  6926	052540	005067	130722			CLR TOPS
  6927	052544	000167	174606			JMP NORT
  6928	052550	104411			TO2:	ERROR+ILN	;INVALID LOGO NAME
  6929	052552	032767	000010	130742	TO6:	BIT #EDITF,FLAGS	;IS IT "EDIT"
  6930	052560	001651				BEQ TO7	;NO
  6931	052562	104434				ERROR+PNH	;YES, PROCEDUTE NOT HERE
  6932	052564	004767	173644		GO:	JSR PC,G1NARG
  6933	052570	010167	130710			MOV B,CLN
  6934	052574	005067	130706			CLR CLP
  6935	052600	000167	174552			JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 204
	EVAL 334	PAGE 40 	"TO" ETC.

  6936					TOLN:	PUSH A	;TOKEN
  6937						SPUSH B	;LIST ON S
  6938	052614	017701	130566			MOV @S,B
  6939	052620	004767	000662			JSR PC,.LOAD
  6940	052624	042700	007777			BIC #7777,A
  6941	052630	022700	120000			CMP #SNUM,A	;IS FIRST THING A NUMBER
  6942	052634	001010				BNE TOLN1	;NO
  6943	052636	004767	000206			JSR PC,ADLN	;ADD LINE-LINE IS ON S
  6944							;FNLLP POINTS TO FIRST NODE OF LIST OF LINE POINTERS
  6945					TOLN2:	POPS A	;FINISHED WITH LINE
  6946	052652	000167	172562			JMP RETB
  6947	052656	022701	004504		TOLN1:	CMP #$END,B
  6948	052662	001422				BEQ END
  6949						PRTXT ^\NO DIRECT WITHIN TO DEF YET.\
  6950	052726	000745				BR TOLN2
  6951	052730	016701	130632		END:	MOV TOPRNM,B
  6952	052734	001420				BEQ END2
  6953	052736	004767	162010			JSR PC,PPNAME
  6954						PRTXT ^\ DEFINED\
  6955						PRCR
  6956	052764	005067	130576			CLR TOPRNM
  6957	052770	012767	000077	130604		MOV #'?,PRMTCH
  6958	052776	000167	174354		END2:	JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 205
	EVAL 334	PAGE 41 	UTILITY - COUNT LIST ELEMENTS

  6959						.STITL UTILITY - COUNT LIST ELEMENTS
  6960					CLE:		;COUNT LIST ELEMENTS
  6961							  ;IN - LIST PTR IN C
  6962							 ;OUT - # OF ELEMENTS IN B
  6963						PUSH A
  6964						SPUSH C
  6965	053012	005001				CLR B
  6966	053014	010200				MOV C,A
  6967	053016	032700	007777		CLE1:	BIT #7777,A
  6968	053022	001405				BEQ CLE2
  6969	053024	010002				MOV A,C
  6970	053026	004767	000562			JSR PC,.LDP1
  6971	053032	005201				INC B
  6972	053034	000770				BR CLE1
  6973					CLE2:	POP C
  6974						SPOP A
  6975	053046	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 206
	EVAL 334	PAGE 42 	UTILITY - COUNT LIST ELEMENTS

  6976					ADLN:		;ON S IS A "NEW LINE" INSERT IN PROPER PLACE
  6977							;IN LLP POINTED TO BY FNLLP.
  6978						PUSH A
  6979						SPUSH B
  6980						SPUSH C
  6981						SPUSH D
  6982						SPUSH E
  6983						SPUSH F
  6984	053070	017702	130312			MOV @S,C
  6985	053074	004767	000404			JSR PC,.LOADC
  6986	053100	010105				MOV B,F
  6987	053102	016702	130462			MOV FNLLP,C
  6988	053106	010203				MOV C,D
  6989	053110	004767	000370			JSR PC,.LOADC
  6990	053114	010002				MOV A,C
  6991						;LOOK DOWN LLP FOR LINE #(@P)
  6992	053116	010304			ADLN1:	MOV D,E	;SAVE PTR TO PREDECESSOR IN E
  6993	053120	010203				MOV C,D	;SAVE PTR TO CURRENT IN D
  6994	053122	012700	170000			MOV #LIST,A
  6995	053126	032702	007777			BIT #7777,C
  6996	053132	001411				BEQ ADLN2	;AT END, ADD NEW NODE
  6997	053134	004767	000344			JSR PC,.LOADC
  6998	053140	010002				MOV A,C	;SAVE PTR TO SUCCESSOR IN C
  6999	053142	004767	000340			JSR PC,.LOAD
  7000	053146	020105				CMP B,F
  7001	053150	002762				BLT ADLN1	;NOT THERE YET
  7002	053152	001410				BEQ ADLN3	;FOUND LINE
  7003	053154	010300				MOV D,A	;PASSED IT, INSERT NEW LINE
  7004	053156	017701	130224		ADLN2:	MOV @S,B	;ADD NEW NODE TO END
  7005	053162	010402				MOV E,C
  7006	053164	004767	002042			JSR PC,GRBAD1
  7007	053170	000167	172214		ADLN5:	JMP RETF
  7008					ADLN3:		;FOUND LINE #.REPLACE THEN CHECK GEN. NO.
  7009	053174	010004				MOV A,E	;SAVE A, POINT TO FIRST TOKEN IN OLD LINE
  7010	053176	017700	130204			MOV @S,A
  7011	053202	010302				MOV D,C	;D POINTS TO RELEVENT LLP NODE
  7012	053204	004767	000346			JSR PC,.STP2	;STORE LINK TO NEW LINE
  7013	053210	005767	130302			TST FUNLEV	;IF AT FUNLEV 0, DON'T BOTHER WITH GEN #
  7014	053214	001765				BEQ ADLN5
  7015	053216	010402				MOV E,C	;E POINTS TO OLD LINE
  7016	053220	004767	000262			JSR PC,.LOAD	;GET NEXT NODE IN OLD LINE(1ST TOKEN OR GEN )
  7017	053224	042700	007777			BIC #7777,A
  7018	053230	022700	120000			CMP #SNUM,A
  7019	053234	001401				BEQ ADLN4
  7020	053236	005001				CLR B
  7021	053240	005201			ADLN4:	INC B	;ALREADY HAS GEN NO.
  7022	053242	017702	130140			MOV @S,C
  7023	053246	004767	000342			JSR PC,.LDP1
  7024	053252	042700	170000			BIC #170000,A
  7025	053256	052700	120000			BIS #SNUM,A
  7026	053262	004767	001744			JSR PC,GRBAD1
  7027	053266	000740				BR ADLN5
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 207
	EVAL 334	PAGE 43 	UTILITY - COUNT LIST ELEMENTS

  7028					GTLINE:		;GET LLP POINTER OF LINE WHOSE NO. IS IN B
  7029								;FOR PROCEDURE PONTED TO BY "CPP"
  7030								;OUTPUT - LLP PTR WILL BE IN C AND WILL SKIP
  7031	053270	052767	000100	130264		BIS #TF1,TFLAGS
  7032	053276	000403				BR .+10
  7033					GNLINE:		;SAME EXCEPT LOOKING FOR LINE WHOSE # IS > # IN B
  7034	053300	042767	000100	130254		BIC #TF1,TFLAGS
  7035						PUSH A
  7036						SPUSH B
  7037						SPUSH C
  7038						SPUSH D
  7039						SPUSH E
  7040	053324	010103				MOV B,D
  7041	053326	016701	130146			MOV CPP,B
  7042	053332	004767	000534			JSR PC,.BINDF	;LOOK FOR PROC BINDING
  7043	053336	000000				EVBUG	;WHAT NO PROC BINDING??!!
  7044	053340	000000				HALT
  7045	053342	010102				MOV B,C
  7046	053344	004767	000270			JSR PC,.LDP2I
  7047	053350	010204				MOV C,E
  7048	053352	032704	007777		GNL1:	BIT #7777,E
  7049	053356	001415				BEQ GNL4	;NONE LEFT
  7050	053360	010402				MOV E,C
  7051	053362	004767	000116			JSR PC,.LOADC	;GET NEXT NODE IN LLP
  7052	053366	010004				MOV A,E
  7053	053370	004767	000112			JSR PC,.LOAD	;GET FIRST NODE OF THAT LINE
  7054	053374	020103				CMP B,D
  7055	053376	002765				BLT GNL1	;NOT THERE YET
  7056	053400	001406				BEQ GNL2	;FOUND IT
  7057	053402	032767	000100	130152		BIT #TF1,TFLAGS	;WENT PAST, WERE WE LOOKING FOR IT?
  7058	053410	001406				BEQ GNL3	;NO, OK
  7059	053412	000167	172000		GNL4:	JMP RETE	;YES "NO SUCH LINE NO."
  7060	053416	032767	000100	130136	GNL2:	BIT #TF1,TFLAGS	;FOUND IT, LOOKING FOR IT?
  7061	053424	001752				BEQ GNL1	;NO, GET NEXT
  7062	053426	010266	000004		GNL3:	MOV C,4(P)	;OUTPUT (C) INTO C
  7063	053432	000167	174436			JMP SRETE
  7064					GNASN:		;GET NO. OF ARGS AND CPSN OF USER PROC
  7065							;IN: PROC PTR IN B
  7066							;OUTPUT: CPSN IN A # IN B
  7067							;DONT SKIP IF NO PROC
  7068						PUSH A
  7069						SPUSH B
  7070						SPUSH C
  7071	053450	004767	000544			JSR PC,.BNDFS
  7072	053454	000167	171752			JMP RETC
  7073	053460	004767	000022			JSR PC,.LOAD
  7074	053464	010166	000002			MOV B,2(P)	;# IN OLD B
  7075	053470	004767	000012			JSR PC,.LOAD
  7076	053474	010166	000004			MOV B,4(P)	;CPSN IN OLD A
  7077	053500	000167	174404			JMP SRETC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 208
	EVAL 334	PAGE 44 	UTILITY - LOAD AND STORE

  7078						.STITL UTILITY - LOAD AND STORE
  7079	053504	010201			.LOADC:	MOV C,B	;NODE ADDR IN C
  7080							;NODE RETURNED IN A,B
  7081	053506	042701	170000		.LOAD:	BIC #170000,B	;NODE ADDR IN B
  7082	053512	006301				ASL B	;NODE RETURNED IN A,B
  7083	053514	006301				ASL B
  7084	053516	066701	127662			ADD UAB,B
  7085	053522	012100				MOV (B)+,A
  7086	053524	011101				MOV @B,B
  7087	053526	000207				RTS PC
  7088					.STORE:	SPUSH C	;NODE ADDR IN C
  7089	053532	042702	170000			BIC #170000,C
  7090	053536	006302				ASL C	;NODE IN A,B IS STORED AT C
  7091	053540	006302				ASL C
  7092	053542	066702	127636			ADD UAB,C
  7093	053546	010022				MOV A,(C)+
  7094	053550	010112				MOV B,@C
  7095						SPOP C
  7096	053554	000207				RTS PC
  7097					
  7098					.STP2:		;SAME AS .STP1 EXCEPT STORE IN 2ND WORD OF NODE
  7099	053556	000261				SEC	;THEN RESULT OF ROL'S WILL BE TWO GREATER THAN  .STP1
  7100	053560	000401				BR .+4
  7101	053562	000241			.STP1:	CLC	;STORE (A) IN FIRST WORD OF NODE AT C
  7102						SPUSH C	;NODE ADDR IN C
  7103	053566	042702	170000			BIC #170000,C
  7104	053572	006102				ROL C
  7105	053574	006102				ROL C
  7106	053576	066702	127602			ADD UAB,C
  7107	053602	010012				MOV A,@C
  7108						SPOP C
  7109	053606	000207				RTS PC
  7110					
  7111	053610	000261			.LDP2:	SEC		;NODE ADDR IN C (TYPE FIELD =0)
  7112	053612	000401				BR .+4		;LOAD 2ND WORD OF NODE INTO A
  7113	053614	000241			.LDP1:	CLC		;SAME AS .LDP2 EXCEPT 1ST WORD
  7114	053616	010200				MOV C,A
  7115	053620	042700	170000			BIC #170000,A
  7116	053624	006100				ROL A
  7117	053626	006100				ROL A
  7118	053630	066700	127550			ADD UAB,A
  7119	053634	011000				MOV @A,A
  7120	053636	000207				RTS PC
  7121					
  7122	053640	010200			.LDP2I:	MOV C,A	;SAME AS .LDP2 EXCEPT C WILL
  7123	053642	042700	170000			BIC #170000,A	;CONTAIN ADDR OF NEXT NODE
  7124	053646	006300				ASL A
  7125	053650	006300				ASL A
  7126	053652	066700	127526			ADD UAB,A
  7127	053656	012002				MOV (A)+,C
  7128	053660	011000				MOV @A,A
  7129	053662	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 209
	EVAL 334	PAGE 45 	UTILITY - BINDING

  7130						.STITL UTILITY - BINDING
  7131						;INPUT:	A=TYPE	B=UOE POINTER
  7132						;		TOPS=0 OR TYPE+VALUE POINTER
  7133						;OUTPUT:	A - UCHANGED
  7134						;		B - EITHER UNCHANGED OR VALUE POINTER
  7135						;		C - POINTS TO BINDING NODE, EITHER 
  7136						;		    RELEVANT ONE OR LAST IN BINDING LIST
  7137						;		IF TOPS = 0, SKIPS IF BINDING FOUND
  7138						;		IF TOPS NOT = 0, TOPS WILL BE INSERTED
  7139						;		   AS THE NEW VALUE POINTER (A NEW BINDING
  7140						;		   NODE WILL BE ADDED IF NECESSARY) NEVER SKIPS.
  7141	053664	005767	127576		.BINDL:	TST TOPS
  7142	053670	001407				BEQ .BIND
  7143						PUSHS TOPS
  7144	053704	005067	127556			CLR TOPS
  7145					.BIND:	PUSH D
  7146						SPUSH B
  7147						SPUSH A
  7148	053722	010102			BINDF1:	MOV B,C
  7149	053724	004767	177554			JSR PC,.LOADC
  7150	053730	010003				MOV A,D
  7151	053732	042703	007777			BIC #7777,D
  7152	053736	021603				CMP @P,D
  7153	053740	001426				BEQ BINDF4	;FOUND IT
  7154	053742	010001				MOV A,B
  7155	053744	032700	007777			BIT #7777,A
  7156	053750	001364				BNE BINDF1
  7157	053752	005767	127510			TST TOPS	;DIDNT FIND IT
  7158	053756	001412				BEQ BINDF2	;SHOULD ONE BE CREATED?
  7159						SPOP A
  7160	053762	016701	127500			MOV TOPS,B
  7161	053766	004767	001240			JSR PC,GRBAD1
  7162					BINDF5:	POP D	;OLD B
  7163					BINDF3:	SPOP D
  7164	054002	000207				RTS PC
  7165					BINDF2:	POP A	;NO, DONT CREATE NODE
  7166						SPOP B
  7167	054014	000771				BR BINDF3
  7168	054016	005767	127444		BINDF4:	TST TOPS	;FOUND, CHANGE VALUE POINTER?
  7169	054022	001410				BEQ BINDF6
  7170	054024	016700	127436			MOV TOPS,A	;YES + DONT SKIP
  7171	054030	004767	177522			JSR PC,.STP2
  7172						POP A
  7173	054042	000753				BR BINDF5
  7174					BINDF6:	POP A	;NO, LEAVE VALUE POINTER, BUT SKIP
  7175						POP D	;OLD B
  7176						POP D
  7177	054066	000167	174040			JMP SRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 210
	EVAL 334	PAGE 46 	UTILITY - BINDING

  7178	054072	012700	020000		.BINDF:	MOV #FBIND,A	;GET FUNCTION BINDING, SWAP IN IF NECESSARY
  7179							;PTR TO UOE IN B
  7180							;OUTPUT AS IN .BIND: EXCEPT A = #FBIND
  7181	054076	004767	177562			JSR PC,.BINDL	;LOOK FOR FUNCTION BINDING
  7182	054102	000402				BR BIF1	;NOT THERE
  7183	054104	000167	174022			JMP SRET
  7184	054110	012700	120000		BIF1:	MOV #SFBIND,A	;OK, THEN, LOOK FOR SWAPPED FUNCTION BINDING
  7185	054114	004767	177544			JSR PC,.BINDL
  7186	054120	000207				RTS PC	;PROC NOT DEFINED
  7187	054122	004767	001040			JSR PC,PSWPIN	;GO GET IT
  7188	054126	000167	174000			JMP SRET
  7189					.BNDVS:		;GET VARIABLE BINDING, SWAPIN IF NECESSARY
  7190								;INPUT AND OUTPUT SIMILAR TO .BINDF
  7191	054132	052767	000200	127422		BIS #TF2,TFLAGS
  7192	054140	000403				BR .+10
  7193					.BNDVN:		;SAME AS ABOVE EXCEPT DONT SWAP
  7194	054142	042767	000200	127412		BIC #TF2,TFLAGS
  7195	054150	012700	030000			MOV #VBIND,A
  7196	054154	004767	177504			JSR PC,.BINDL	;LOOK FOR BINDING
  7197	054160	000402				BR BIV1	;NOPE
  7198	054162	000167	173744			JMP SRET	;FOUND IT
  7199	054166	012700	130000		BIV1:	MOV #SVBIND,A	;LOOK FOR SWAPPED BINDING
  7200	054172	004767	177466			JSR PC,.BINDL
  7201	054176	000207				RTS PC	;LOSE AGAIN - UNDEFINED
  7202	054200	032767	000200	127354		BIT #TF2,TFLAGS	;FOUND IT, SWAP IT IN?
  7203	054206	001402				BEQ .+6
  7204	054210	004767	000756			JSR PC,VSWPIN	;YES
  7205	054214	000167	173712			JMP SRET
  7206	054220	012700	120000		.BNDFS:	MOV #SFBIND,A	;LOOK FOR SWAPPED FUNCTION BINDING
  7207	054224	004767	177434			JSR PC,.BINDL
  7208	054230	000207				RTS PC
  7209	054232	000167	173674			JMP SRET
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 211
	EVAL 334	PAGE 47 	.INTRN!!

  7210						.STITL .INTRN!!
  7211					.OBSCH:		;SAME AS .INTRN EXCEPT WONT INSERT IF ENTRY ISNT FOUND
  7212							;(ALSO SEE UOBSCH ON NEXT PAGE)
  7213	054236	042767	020000	127316		BIC #TF5,TFLAGS
  7214	054244	000403				BR .+10
  7215					.INTRN:		;(ALSO SEE UINTRN ON NEXT PAGE)
  7216							;INPUT:  TYPE IN A, LSTR IN "TOPS"
  7217							;OUTPUT:  IF TYPE IS UFUN OR SFUN, SEARCH SYSTEM OBLIST FIRST.
  7218							;  IF FOUND THERE, RETURN THAT PTR IN B, MAKING TYPE OF A
  7219							;  TO "SFUN".  IF NOT FOUND THERE, AND IF A=UFUN, OR IF TYPE
  7220							;  IS > "UFUN", DO THE LOOKUP IN THE USER OBLIST.
  7221							;  RETURN WITH THE UOE PTR IN B. DONT SKIP IF A NEW ONE
  7222							;  HAD TO BE ADDED.
  7223	054246	052767	020000	127306		BIS #TF5,TFLAGS
  7224						PUSH A
  7225						SPUSH B
  7226						SPUSH C
  7227	054266	016702	127174			MOV TOPS,C
  7228	054272	022700	020000			CMP #UFUN,A	;IS TYPE SFUN OR UFUN
  7229	054276	103411				BLO INT2	;NO
  7230	054300	004767	000246			JSR PC,SSOL	;YES, SEARCH SYSTEM OBLIST
  7231	054304	000404				BR INT1	;NOT THERE
  7232	054306	005000				CLR A	;SET A TO TYPE "SFUN" (=0)
  7233	054310	010066	000004			MOV A,4(P)
  7234	054314	000410				BR INT5
  7235	054316	005700			INT1:	TST A	;IS A = TYPE SFUN
  7236	054320	001442				BEQ INT0	;YES, DONE, DONT SKIP
  7237	054322	004767	000406		INT2:	JSR PC,HSSL	;NO, HASH TO AND SEARCH SUBLIST
  7238	054326	000407				BR INT3
  7239	054330	011101				MOV @B,B
  7240	054332	004767	177150			JSR PC,.LOAD	;GET UOE PTR
  7241	054336	010166	000002		INT5:	MOV B,2(P)
  7242	054342	000167	173542			JMP SRETC	;FOUND IT
  7243	054346	032767	020000	127206	INT3:	BIT #TF5,TFLAGS	;NOT THERE, SHOULD IT BE ADDED
  7244	054354	001424				BEQ INT0	;NO, RETURN AND DONT SKIP
  7245	054356	004767	000616			JSR PC,.GRAB	;YES
  7246	054362	011100				MOV @B,A
  7247	054364	010211				MOV C,@B	;UPDATE BUCKET POINTER
  7248	054366	004767	000606			JSR PC,.GRAB
  7249	054372	010266	000002			MOV  C,2(P)	;NEW  UOE PTR
  7250	054376	011102				MOV @B,C
  7251	054400	016601	000002			MOV 2(P),B
  7252	054404	004767	177120			JSR PC,.STORE
  7253	054410	010102				MOV B,C
  7254	054412	012700	110000			MOV #ATOM,A
  7255	054416	016701	127044			MOV TOPS,B
  7256	054422	004767	177102			JSR PC,.STORE
  7257	054426	000167	171000		INT0:	JMP RETC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 212
	EVAL 334	PAGE 48 	.INTRN!!

  7258					
  7259					
  7260					;"UNPURE" .INTRN AND .OBSCH
  7261					;BY "UNPURE" IT IS MEANT THAT THE INPUT STRING MAY INCLUDE
  7262					;NULL CHARACTERS
  7263					;SPECIFICATIONS ARE OTHERWISE IDENTICAL TO .INTRN AND .OBSCH
  7264	054432	012746	000014		UOBSCH:	MOV	#<UOBCON-UINCON>,-(SP)
  7265	054436	000401				BR	UINOB
  7266					
  7267	054440	005046			UINTRN:	CLR	-(SP)
  7268					UINOB:	PUSH A
  7269						PUSH B
  7270						PUSH C
  7271	054464	016701	126776			MOV	TOPS,B
  7272	054470	004767	166252			JSR	PC,CPYSTR	;OUTPUT POINTER IN B TO STRINWITH NO NULLS
  7273	054474	010167	126766			MOV	B,TOPS
  7274						POP C
  7275						POP B
  7276						POP A
  7277					
  7278	054522	062607				ADD	(SP)+,PC
  7279	054524	004767	177516		UINCON:	JSR	PC,.INTRN	;CONTINUES HERE IF UINTRN
  7280	054530	000207				RTS	PC	;THE PURE STRING WAS ADDED BY .INTRN
  7281	054532	004767	000644		UOBSKP:	JSR	PC,FRELST	;PURE LIST NOT ADDED.  FREE IT
  7282	054536	104000				SKPRET
  7283					
  7284	054540	004767	177472		UOBCON:	JSR	PC,.OBSCH	;CONTINUES HERE IF UOBSCH
  7285	054544	000167	000632			JMP	FRELST	;FREE PURE STRING AND DON'T SKIP RETURN
  7286	054550	000770				BR	UOBSKP	;FREE IT AND SKIP
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 213
	EVAL 334	PAGE 49 	.INTRN!!

  7287					SSOL:		;SEARCH SYSTEM OBLIST
  7288							;INPUT:  C POINTS TO STRING
  7289							;OUTPUT:  SKIP = FOUND AND SOE PTR IN B
  7290							;  NO SKIP = NOT FOUND AND NO CHANGE
  7291							;NULL MUST BE USED AS FILLER CHAR BUT NOT BE IMBEDDED
  7292						PUSH A
  7293						SPUSH B
  7294						SPUSH C
  7295						SPUSH D
  7296						SPUSH E
  7297						SPUSH F
  7298	054572	004767	176706			JSR PC,.LOADC
  7299	054576	010103				MOV B,D
  7300						SPUSH A
  7301	054602	016704	127204			MOV SOBP2,E
  7302	054606	012705	004014			MOV #SOBLST,F
  7303	054612	006204			SSOL1:	ASR E
  7304	054614	032704	177776			BIT #177776,E
  7305	054620	001440				BEQ SSOL5
  7306	054622	060405				ADD E,F
  7307	054624	020567	127160			CMP F,SOOMX
  7308	054630	103037				BHIS SSOL2
  7309	054632	011501				MOV @F,B
  7310	054634	062701	000004			ADD #4,B
  7311	054640	011602				MOV @P,C
  7312	054642	010300				MOV D,A
  7313	054644	000402				BR SSOL6
  7314	054646	004767	176766		SSOL4:	JSR PC,.LDP2I
  7315	054652	120021			SSOL6:	CMPB A,(B)+
  7316	054654	101356				BHI SSOL1
  7317	054656	103424				BLO SSOL2
  7318	054660	000300				SWAB A
  7319	054662	120021				CMPB A,(B)+
  7320	054664	101352				BHI SSOL1
  7321	054666	103420				BLO SSOL2
  7322	054670	032702	007777			BIT #7777,C
  7323	054674	001364				BNE SSOL4
  7324	054676	105711				TSTB (B)	;AT END OF STRING, IS IT END OF SYS PNAME
  7325	054700	001403				BEQ SSOL3	;YES
  7326	054702	105761	177777			TSTB -1(B)	;NO, BUT CHECK IF PREV CHAR WAS TERMINATOR
  7327	054706	001010				BNE SSOL2
  7328					SSOL3:	SPOP A
  7329	054712	011566	000010			MOV @F,10(P)	;YES, SAVE F AS OUTPUT
  7330	054716	000167	173144			JMP SRETF
  7331					SSOL5:	SPOP A
  7332	054724	000167	170460			JMP RETF
  7333	054730	160405			SSOL2:	SUB E,F
  7334	054732	000727				BR SSOL1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 214
	EVAL 334	PAGE 50 	.INTRN!!

  7335					HSSL:		;HASH, THEN SEARCH SUB-LIST
  7336							;INPUT:  C POINTS TO LSTR
  7337							;OUTPUT:  B POINTS TO SUBLIST PTR.  RELEVANT ENTRY WILL
  7338							;  WILL BE AT HEAD OF SUBLIST.  SKIPS IF ONE FOUND.
  7339						PUSH A
  7340						SPUSH B
  7341						SPUSH C
  7342						SPUSH D
  7343						SPUSH E
  7344						SPUSH F
  7345	054754	004767	176524			JSR PC,.LOADC	;GET FIRST CHARS INTO B
  7346	054760	010103				MOV B,D
  7347	054762	010004				MOV A,E		;PTR TO REST OF ARG
  7348	054764	012700	177304			MOV #MQ,A
  7349	054770	010110				MOV B,(A)
  7350	054772	005040				CLR -(A)	;DIVIDEND IS 0,,(B)
  7351	054774	012740	000103			MOV #HCC,-(A)	;DIVIDE BY HASH CODE CONSTANT
  7352	055000	005720				TST (A)+
  7353	055002	011001				MOV (A),B	;GET REMAINDER
  7354	055004	006101				ROL B
  7355	055006	066701	126424			ADD SUHCT,B
  7356	055012	010166	000010			MOV B,10(P)	;FOR OUTPUT
  7357	055016	011105				MOV @B,F
  7358	055020	001444				BEQ HSSL6	;NO ENTRYS IN THIS BUCKET
  7359	055022	010502				MOV F,C
  7360						SPUSH C
  7361	055026	004767	176452		HSSL1:	JSR PC,.LOADC	;GET NEXT SUBLIST NODE
  7362	055032	010016				MOV A,@P
  7363	055034	004767	176446			JSR PC,.LOAD	;GET UOE PNAME NODE
  7364	055040	004767	176442			JSR PC,.LOAD	;GET FIRST NODE OF PNAME
  7365	055044	020103				CMP B,D	;ARE THE FIRST 2 CHAR =
  7366	055046	001021				BNE HSSL2	;NO
  7367						PUSHS A	;YES, COMPARE REST OF STRING
  7368						SPUSHS E
  7369	055072	004767	170166			JSR PC,CSEQ
  7370	055076	000405				BR HSSL2	;NOT EQUAL
  7371	055100	020502			HSSL3:	CMP F,C	;IF F = C, THEN LOCATED UOE WAS FIRST SO DONE
  7372	055102	001015				BNE HSSL4
  7373						SPOP A
  7374	055106	000167	172754		HSSL5:	JMP SRETF
  7375	055112	010205			HSSL2:	MOV C,F	;NOPE, SAVE THIS PTR FOR PREDECESSOR
  7376	055114	011602				MOV @P,C	;GET SAVED PTR TO NEXT SUBLIST NODE
  7377	055116	032702	007777			BIT #7777,C
  7378	055122	001341				BNE HSSL1
  7379						POP A
  7380	055132	000167	170252		HSSL6:	JMP RETF
  7381	055136	017600	000012		HSSL4:	MOV @12(P),A	;MOVE ENTRY TO HEAD OF BUCKET
  7382	055142	004767	176414			JSR PC,.STP1	;NEW TOP NOW PIONTS TO OLD TOP
  7383	055146	010276	000012			MOV C,@12(P)	;UHCT ENTRY NOW POINTS TO NEW TOP
  7384	055152	010502				MOV F,C
  7385						SPOP A
  7386	055156	004767	176400			JSR PC,.STP1	;NEW TOP'S OLD PREDECESSOR NOW LINKED TO ITS SUC.
  7387	055162	000751				BR HSSL5
  7388	055164	000207			WIPOBS:	RTS	PC	;WIPE WIPERS FROM OBLIST
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 215
	EVAL 334	PAGE 51 	MINI SWAPPING

  7389						.STITL MINI SWAPPING
  7390	055166	000000			PSWPIN:	HALT
  7391	055170	000000			PSWPOT:	HALT
  7392	055172	000000			VSWPIN:	HALT
  7393	055174	000000			VSWPOT:	HALT
  7394	055176	000000			DSVB:	HALT	;DELETE SWAPPED VARIABLE BINDING
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 216
	EVAL 334	PAGE 52 	UTILITY - GRAB NODE ROUTINES

  7395						.STITL UTILITY - GRAB NODE ROUTINES
  7396					.GRAB:	PUSH A	;GRAB A FREE NODE - PTR IN C; CLEAR IT
  7397						SPUSH B
  7398	055210	005000				CLR A
  7399	055212	005001				CLR B
  7400	055214	004767	000010			JSR PC,GRBAD
  7401	055220	000167	170214			JMP RETB
  7402	055224	000261			GRBAD2:	SEC	;GRAB A FREE NODE, FILL IT WITH A,,B
  7403								;IF C NOT =0, PUT PTR TO NEW NODE IN WORD 2 OF NODE(C)
  7404	055226	000402				BR .+6
  7405	055230	005002			GRBAD:	CLR	C	;SAME AS ABOVE EXCEPT NEW POINTER ALWAYS IN C
  7406	055232	000241			GRBAD1:	CLC	;SAME AS ABOVE EXCEPT NEW PTR IN WORD 1
  7407						SPUSH A
  7408	055236	042702	170000			BIC #170000,C
  7409	055242	001404				BEQ GRB2	;C IS ZERO, FORGET STORING NEW NODE PTR
  7410	055244	006102				ROL C
  7411	055246	006102				ROL C
  7412	055250	066702	126130			ADD UAB,C
  7413	055254	016700	126276		GRB2:	MOV UNGRAB,A
  7414	055260	001011				BNE GRB1
  7415	055262	016700	126176			MOV FREE,A
  7416	055266	001006				BNE GRB1
  7417	055270	004767	143440			JSR PC,.GCOLL
  7418	055274	016700	126164			MOV FREE,A
  7419	055300	001001				BNE GRB1
  7420	055302	104422				ERROR+NSL	;NO STORAGE LEFT
  7421	055304	005067	126246		GRB1:	CLR UNGRAB
  7422	055310	005702				TST C
  7423	055312	001405				BEQ GRB3
  7424	055314	042700	170000			BIC #170000,A
  7425	055320	042712	007777			BIC #7777,@C
  7426	055324	060012				ADD A,@C
  7427	055326	010002			GRB3:	MOV A,C
  7428	055330	004767	176260			JSR PC,.LDP1
  7429	055334	042700	170000			BIC #170000,A
  7430	055340	010067	126120			MOV A,FREE
  7431						SPOP A
  7432	055346	004767	176156			JSR PC,.STORE
  7433	055352	000207				RTS PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 217
	EVAL 334	PAGE 53 	UTILITY - GRAB NODE ROUTINES

  7434						;.STITL UTILITY  -  FREE NODE ROUTINES
  7435					.FREE:	SPUSH A	;RETURN NODE IN C TO FREE STORAGE
  7436	055356	016700	126102			MOV FREE,A
  7437	055362	004767	176174			JSR PC,.STP1
  7438	055366	042702	170000			BIC #170000,C
  7439	055372	010267	126066			MOV C,FREE
  7440						SPOP A
  7441	055400	000207				RTS PC
  7442	055402	005767	126060		FRELST:	TST TOPS
  7443	055406	001001				BNE .+4
  7444	055410	000207				RTS PC
  7445						PUSH A	;RETURN LIST IN TOPS TO FREE STORAGE
  7446						SPUSH B
  7447						SPUSH C
  7448	055424	016702	126036			MOV TOPS,C
  7449	055430	004767	176050		FRL1:	JSR PC,.LOADC
  7450	055434	032700	007777			BIT #7777,A
  7451	055440	001402				BEQ FRL2
  7452	055442	010002				MOV A,C
  7453	055444	000771				BR FRL1
  7454	055446	066700	126012		FRL2:	ADD FREE,A
  7455	055452	004767	176052			JSR PC,.STORE
  7456	055456	016767	126004	126000		MOV TOPS,FREE
  7457	055464	042767	170000	125772		BIC #170000,FREE
  7458	055472	005067	125770			CLR TOPS
  7459	055476	000167	167730			JMP RETC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 218
	TURTLE 59	PAGE 1 	DISPLAY AND TURTLE

  7460						.STITL DISPLAY AND TURTLE
  7461		001633				VERN==VERN+%FNAM2
  7462					
  7463					;A  BRIEF DESCRIPTION OF WHAT IS LEFT TO BE DONE TO THIS PROGRAM.
  7464					
  7465					
  7466					;2)	GARBAGE COLLECTION.  COLLAPSING ADDS AND NOPS IN THE STATIC AREA.
  7467					;3)	ERROR RECOVERY. CHECKING FOR DISPLAY PDL OVERFLOW.
  7468					;4)	DECIDING WHAT SNAP AND WIPE REALLY ARE GOING TO DO.
  7469					;AT THIS TIME, SNAP OUTPUTS THE ENTIRE SCREEN
  7470					;AND WIPE ERASES ONLY TOP LEVEL OCCURRENCES OF THE SNAP
  7471					;6)	RUNNING THE DISPLAY ON INTERRUPT LEVEL.
  7472					
  7473					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 219
	TURTLE 59	PAGE 2 	DISPLAY AND TURTLE

  7474					
  7475					
  7476					
  7477					
  7478					;CHOOSE BETWEEN DISPLAY AND REAL TURTLE
  7479					;	THE ARGUMENT IS WHERE TO JUMP IF DISPLAY.
  7480					.MACR WHICHTUR DADD
  7481						BITB	#TURTF,DFLAGS
  7482						BNE	.+6
  7483						JMP	DADD
  7484					.ENDM
  7485					
  7486					;MOVE THE REAL TURTLE
  7487					;	THE ARG IS THE CHARACTER CODE TO CAUSE 1-STEP OF MOTION
  7488					.MACR MOVTUR CHAR
  7489						MOV	#" 'CHAR,-(P)
  7490						JMP	TURMOV
  7491					.ENDM
  7492					
  7493					;SEND OUT SOME CONTROL COMMAND TO REAL TURTLE
  7494					;	ARGUMENT IS THE CHARACTER FOR THE COMMAND
  7495					.MACR CONTUR CHAR
  7496						MOV	#" 'CHAR,A
  7497						JMP	TURCON
  7498					.ENDM
  7499					
  7500					;CONVERT ADDRESS TO DISPLAY PUSHJ
  7501					;	ARGUMENT IS AC
  7502					.MACR	MAKEPJ	F
  7503						SUB	#DISREL,F
  7504						ASR	F
  7505						BIS	#DPUSHJ,F
  7506					.ENDM
  7507					
  7508					;CONVERT DISPLAY CONTROLLER ADDRESSES TO REAL WORLD ADDRESSES
  7509					;	ARG IS AC
  7510					.MACR	MAKEAD	F
  7511						ASL	F
  7512						ADD	#DISREL,F
  7513					.ENDM
  7514					
  7515					;START UP DISPLAY--FOR SIMULATOR ONLY
  7516					.MACR	DISGO
  7517						BISB	DISBIT,NGCSR
  7518					.ENDM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 220
	TURTLE 59	PAGE 3 	DISPLAY AND TURTLE

  7519					;DISPLAY AND TURTLE COMMANDS THAT HAVE TO CHOOSE BETWEEN
  7520					;THE TWO GO THROUGH HERE
  7521					
  7522	055502	004767	170726		FORWAR:	JSR	PC,G1NARG
  7523						WHICHTUR DFD
  7524						MOVTUR C
  7525	055532	004767	170676		BACK:	JSR	PC,G1NARG
  7526						WHICHTUR DBK
  7527						MOVTUR @
  7528	055562	004767	170646		RIGHT:	JSR	PC,G1NARG
  7529						WHICHTUR DRT
  7530						MOVTUR B
  7531	055612	004767	170616		LEFT:	JSR	PC,G1NARG
  7532						WHICHTUR DLT
  7533						MOVTUR A
  7534					PENUP:	WHICHTUR DPU
  7535						CONTUR 8
  7536					PENDOW:	WHICHTUR DPD
  7537						CONTUR 0
  7538					
  7539					
  7540					;REST OF REAL TURTLE COMMANDS
  7541	055712	132767	000010	125753	LAMPON:	BITB	#TURTF,DFLAGS
  7542	055720	001001				BNE LMPON1
  7543	055722	104451				ERROR+YNT	;YOU DON'T HAVE THE TURTLE
  7544					LMPON1:	CONTUR "
  7545	055734	132767	000010	125731	LAMPOFF:	BITB	#TURTF,DFLAGS
  7546	055742	001001				BNE	LMPOF1
  7547	055744	104451				ERROR+YNT	;YOU DON'T HAVE THE TURTLE
  7548					LMPOF1:	CONTUR !
  7549					
  7550	055756	132767	000010	125707	TOOT:	BITB	#TURTF,DFLAGS
  7551	055764	001001				BNE TOOT.0
  7552	055766	104451				ERROR+YNT	;YOU DON'T HAVE THE TURTLE
  7553	055770	004767	170440		TOOT.0:	JSR	PC,G1NARG	;GET NUMERIC ARG
  7554	055774	012700	024040			MOV	#" (,A
  7555	056000	000411				BR	TOOT.9
  7556					
  7557	056002	012704	000001		TOOT.1:	MOV	#1,E
  7558	056006	004767	000224			JSR	PC,TUROUT	;A IS OUTPUT CHARACTER, E IS COUNT
  7559	056012	000300				SWAB	A	;PUT SPACE AS BOTTOM CHARACTER OF A.
  7560	056014	012704	000005			MOV	#5,E
  7561	056020	004767	000212			JSR	PC,TUROUT	;THERE NEED TO BE 5 SPACES BETWEEN TOOTS.
  7562	056024	005301			TOOT.9:	DEC	B	;NUMBER OF TOOTS
  7563	056026	002365				BGE	TOOT.1
  7564	056030	000167	171322			JMP	NORT	;RETURN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 221
	TURTLE 59	PAGE 4 	DISPLAY AND TURTLE

  7565					
  7566					;TURTLE  MOVER
  7567					;	OUTUT THE APPROPRIATE CHARACTERS TO CAUSE THE REAL TURTLE
  7568					;	TO MOVE.
  7569					;	CALL WITH NUMBER OF STEPS IN B
  7570					;	CALL WITH CHARACTER FOR 1-STEP ON STACK
  7571					;
  7572					;	IT IS NECESSARY TO ACCELERATE AND DECELERATE THE TURTLE
  7573					;	MUCH OF THE ROUTINE BELOW IS TO DO THIS.
  7574	056034	004767	000222		TURMOV:	JSR	PC,TURON	;TURN ON THE TURTLE
  7575	056040	011600				MOV	(P),A	;THE CHARACTER FOR ONE STEP
  7576	056042	012705	000010			MOV	#10,F	;AN OFT USED CONSTANT
  7577	056046	020167	121732			CMP	B,4	;COMPARE # OF STEPS TO 4
  7578	056052	002460				BLT	TM.8	;THERE IS NO CHANCE FOR MORE THAN 1-STEPS
  7579	056054	020167	121734			CMP	B,12.
  7580	056060	002435				BLT	TM.3	;NO CHANCE FOR MORE THAN 2-STEPS
  7581					
  7582	056062	012702	177304			MOV	#MQ,C	;START TO DIVIDE.
  7583	056066	010112				MOV	B,(C)	;THE DIVIDEND
  7584	056070	005042				CLR	-(C)	;CLEAR THE TOP PART OF DIVIDEND.
  7585	056072	012742	000004			MOV	#4,-(C)	;THE DIVISOR.
  7586	056076	005722				TST	(C)+
  7587	056100	012203				MOV	(C)+,D	;THE REMAINDER.
  7588	056102	011202				MOV	(C),C	;THE QUOTIENT.
  7589	056104	005001				CLR	B
  7590	056106	006203				ASR	D	;DIVIDE BY 2
  7591	056110	006101				ROL	B	;PUT REMAINDER IN B
  7592	056112	005723				TST	(D)+	;ADD 2 TO D
  7593	056114	005721				TST	(B)+	;ADD 2 TO B
  7594					;NOW A=#OF 1-STEPS TO DECELERATE, B=# OF 2-STEPS TO DECELERATE
  7595					;AND D= # OF 4-STEPS ALTOGETHER
  7596	056116	012704	000002			MOV	#2,E
  7597	056122	004767	000110			JSR	PC,TUROUT	;OUTPUT TO TURTLE. A=THE CHAR. E=COUNT
  7598	056126	060500				ADD	F,A	;TURN A INTO CHAR FOR 2-STEP
  7599	056130	012704	000002			MOV	#2,E
  7600	056134	004767	000076			JSR	PC,TUROUT
  7601	056140	060500				ADD	F,A	;TURN A INTO CHARACTER FOR 4-STEP
  7602	056142	010304				MOV	D,E	;NUMBER OF 4-STEPS
  7603	056144	004767	000066			JSR	PC,TUROUT
  7604	056150	160500				SUB	F,A	;TURN A INTO CHARACTER FOR 2-STEP
  7605	056152	000414				BR	TM.5
  7606					
  7607					;THERE ARE LESS THAN 12. STEPS.
  7608					;	SO THERE IS NO CHANCE FOR ANY 4-STEPS
  7609	056154	162701	000004		TM.3:	SUB	#4,B	;YOU LOSE AT LEAST 4 STEPS IN ACCELERATION AND DECEL.
  7610	056160	010103				MOV	B,D
  7611	056162	005001				CLR	B
  7612	056164	006203				ASR	D	;DIVIDE BY 2
  7613	056166	006101				ROL	B	;PUT REMAINDER IN B
  7614	056170	005721				TST	(B)+	;ADD 2 TO B
  7615	056172	012704	000002			MOV	#2,E
  7616	056176	004767	000034			JSR	PC,TUROUT	;ACCELERATE
  7617	056202	060500				ADD	F,A	;TURN A INTO CHAR FOR 2-STEP
  7618					;OUTPUT THE NUMBER OF 2-STEPS
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 222
	TURTLE 59	PAGE 4.1 	DISPLAY AND TURTLE

  7619	056204	010304			TM.5:	MOV	D,E	;NUMBER OF STEPS
  7620	056206	004767	000024			JSR	PC,TUROUT
  7621	056212	160500				SUB	F,A	;TURN A INTO CHAR FOR 1-STEP
  7622					;OUTPUT THE 1-STEPS
  7623	056214	010104			TM.8:	MOV	B,E	;NUMBER OF 1-STEPS
  7624	056216	004767	000014			JSR	PC,TUROUT
  7625	056222	004767	000056			JSR	PC,TUROFF	;TURN OFF THE TURTLE
  7626	056226	000167	171124			JMP	NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 223
	TURTLE 59	PAGE 5 	DISPLAY AND TURTLE

  7627					
  7628					
  7629					;TURTLE OUTPUT
  7630					;	CALL WITH A=CHARACTER TO OUTPUT
  7631					;	E=NUMBER OF TIMES TO OUTPUT IT
  7632					;	NOTE: JSR TO TUROUT NOT TO TO.1
  7633	056232	004767	000006		TO.1:	JSR	PC,.IOT	;NOT THE ENTRY POINT!!
  7634					;ENTER HERE
  7635	056236	005304			TUROUT:	DEC	E
  7636	056240	002374				BGE	TO.1	;THERE'S MORE TO OUTPUT
  7637	056242	000207				RTS	PC
  7638					
  7639					;.IOT
  7640					;	OUTPUT CAHRACTER IN A TO TELETYPE
  7641	056244	032767	000200	121312	.IOT:	BIT	#200,TPS	;TEST READY
  7642	056252	001774				BEQ	.IOT
  7643	056254	010067	121306			MOV	A,TPB	;OUTPUT THE CHARACTER
  7644	056260	000207				RTS	PC
  7645					
  7646					
  7647					
  7648					;TURN THE TURTLE ON
  7649					;	OUTPUT CHARACTERS TO TURN OFF THE PRINTER AND TURN ON THE TURTLE
  7650	056262	012700	000143		TURON:	MOV	#143,A
  7651	056266	004767	177752			JSR	PC,.IOT
  7652	056272	012700	000151			MOV	#151,A
  7653	056276	004767	177742			JSR	PC,.IOT
  7654	056302	000207				RTS	PC
  7655					
  7656					;TURN OFF THE TURTLE
  7657					;	AND TURN THE PRINTER BACK ON
  7658	056304	012700	000150		TUROFF:	MOV	#150,A
  7659	056310	004767	177730			JSR	PC,.IOT
  7660	056314	012700	000142			MOV	#142,A
  7661	056320	004767	177720			JSR	PC,.IOT
  7662	056324	000207				RTS	PC
  7663					
  7664					
  7665					;OUTPUT A CONTROLLING CHARACTER TTO TURTLE
  7666					;	CALL WITH B=CHARACTER
  7667	056326	004767	177730		TURCON:	JSR	PC,TURON
  7668	056332	012704	000001			MOV	#1,E
  7669	056336	010100				MOV	B,A
  7670	056340	004767	177672			JSR	PC,TUROUT	;A HAS CHAR, E HAS COUNT
  7671	056344	004767	177734			JSR	PC,TUROFF
  7672	056350	000167	171002			JMP	NORT	;RETURN.
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 224
	TURTLE 59	PAGE 6 	DISPLAY AND TURTLE

  7673					;HERE IS WHERE THE DISPLAY PRIMITIVES START.
  7674					
  7675					;STARTDISPLAY
  7676					;	INITIALIZE EVERYTHING
  7677					;	ALLOCATE DISPLAY BUFFERS
  7678					STARTDISPLAY:
  7679	056354	116700	125346			MOVB	DISBIT,A	;HAS A BIT SET IF USER ALREADY HAS A DISPLAY
  7680	056360	001402				BEQ	STRTD1	;USER DOESN'T HAVE A DISPLAY YET
  7681	056362	004767	000240			JSR	PC,KILLD2	;KILL HIS PREVIOUS DISPLAY FIRST
  7682					
  7683	056366	016767	123120	120710	STRTD1:	MOV	USER,MQ	;FIND USER'S DISPLAY CONSOLE NUMBER
  7684	056374	012767	000056	120676		MOV	#L,DIVIDE	;LENGTH OF USER BLOCK
  7685	056402	016700	120676			MOV	MQ,A	;USER NUMBER
  7686	056406	116000	002406			MOVB	DCONS(A),A
  7687	056412	002001				BGE	.+4
  7688	056414	104420				ERROR+NDU	;NOT A DISPLAY USER
  7689					
  7690	056416	012702	003654			MOV	#DORBEG,C	;ZERO VARIOUS USER DISPLAY VARS
  7691	056422	012701	003674			MOV	#DOREND,B	;LAST WORD
  7692	056426	005022			SDLOOP:	CLR	(C)+	;ZERO WORD
  7693	056430	020201				CMP	C,B
  7694	056432	003775				BLE	SDLOOP
  7695					
  7696	056434	116001	002416			MOVB	SDISBT(A),B	;DISBIT
  7697	056440	110167	125262			MOVB	B,DISBIT
  7698					
  7699	056444	006300				ASL	A	;MAKE INTO WORD INDEX
  7700	056446	016002	002430			MOV	STLIST(A),C	;THIS USERS TURTLE DISPLAY AREA
  7701	056452	010267	125230			MOV	C,TUB	;TURTLE BOTTOM
  7702						MAKEPJ	C
  7703	056470	010267	125230			MOV	C,PUSHJT	;PUSHJ TO TURTLE
  7704					
  7705	056474	016003	063134			MOV	DISREL(A),D	;PUSHJ TO START OF DLIST
  7706						MAKEAD	D
  7707	056506	012723	143200			MOV	#DRSTXY!DPOP,(D)+	;FIRST WORD OF DLIST
  7708	056512	010213				MOV	C,(D)	;PUSHJT IN 2ND WORD
  7709					
  7710					;SET UP BUFFER VARIABLES
  7711	056514	010367	125154			MOV	D,STB	;STATIC AREA BOTTOM
  7712	056520	010367	125152			MOV	D,STT	;STATIC AREA TOP
  7713	056524	005743				TST	-(D)	;POINT D BACK TO FIRST WORD
  7714	056526	062703	000400			ADD	#DLEN,D
  7715	056532	005043				CLR	-(D)	;SET UP DUMMY FREE AREA
  7716	056534	010367	125144			MOV	D,DYT	;(DYNAMIC AREA TOP)
  7717	056540	005043				CLR	-(D)	;AT THE TOP OF DYNAMIC AREA
  7718	056542	010367	125132			MOV	D,DYB	;DYNAMIC AREA BOTTOM
  7719	056546	010367	125130			MOV	D,DYR	;DYNAMIC AREA ROVING POINTER
  7720					
  7721	056552	016060	002422	063154		MOV	SDPDLP(A),DPDLP(A)	;SET DISPLAY PDL POINTER
  7722					
  7723	056560	004767	002140			JSR	PC,ANGCRP	;GET DIREC, SINA, COSA
  7724	056564	004767	003626			JSR	PC,DR.TUR	;DRAW THE TURTLE
  7725	056570	004767	001344			JSR	PC,NEWSN2	;SET UP FOR NEW SNAP
  7726					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 225
	TURTLE 59	PAGE 6.1 	DISPLAY AND TURTLE

  7727	056574	012767	063134	105240		MOV	#DISREL,NGREL	;SET THE RELOCATION, JUST IN CASE
  7728	056602	156767	125120	105230		BISB	DISBIT,NGCSR	;AND START UP THIS GUYS DISPLAY
  7729	056610	000167	170542			JMP	NORT	;RETURN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 226
	TURTLE 59	PAGE 7 	DISPLAY AND TURTLE

  7730					  7731					
  7732					;KILLDISPLAY
  7733					;	USER WANTS TO GIVE UP HIS DISPLAY
  7734					KILLDISPLAY:
  7735	056614	012746	047356			MOV	#NORT,-(SP)	;ENTER HERE FROM EVAL
  7736	056620	116700	125102		KILLD1:	MOVB	DISBIT,A	;HAS A BIT SET IF USER HAS DISPLAY
  7737	056624	001410				BEQ	KILLDR	;USER DOESN'T HAVE DISPLAY
  7738	056626	040067	105206		KILLD2:	BIC	A,NGCSR	;STOP HIS DISPLAY (ENTER HERE FROM STARTDISPLAY)
  7739	056632	005067	125052			CLR	SNLIST	;CLEAR  SNAPS
  7740	056636	105067	125064			CLRB	DISBIT
  7741	056642	004767	142066			JSR	PC,.GCOLL
  7742					
  7743	056646	000207			KILLDR:	RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 227
	TURTLE 59	PAGE 8 	DISPLAY AND TURTLE

  7744					
  7745	056650	005401			DBK:	NEG	B
  7746					
  7747					;DISPLAY FORWARD AND BACK
  7748	056652	016746	125042		DFD:	MOV	DIREC,-(SP)	;SAVE DIREC SINCE DRAW
  7749					;		WANTS TO USE IT FOR ITS OWN DEVIOUS PURPOSES
  7750	056656	010100				MOV	B,A
  7751	056660	100006				BPL	DFD.0	;FIGURE THIS ONE OUT FOR HOMEWORK
  7752	056662	162767	000040	125030		SUB	#40,DIREC
  7753	056670	042767	177707	125022		BIC	#177707,DIREC
  7754	056676	004767	001742		DFD.0:	JSR	PC,MULSIN	;PUTS DX IN B,,C
  7755	056702	010146				MOV	B,-(SP)
  7756	056704	010246				MOV	C,-(SP)
  7757	056706	066701	124742			ADD	CURX,B	;INTEGER PARTS
  7758	056712	066702	124740			ADD	CURX+2,C	;FRACTION PARTS
  7759	056716	005501				ADC	B	;IF FRACTIONS > 1, ADD 1 TO INT
  7760	056720	010167	123512		DFD.1:	MOV	B,NEWX
  7761	056724	010267	123510			MOV	C,NEWX+2
  7762	056730	004767	001636			JSR	PC,FIX	;B HAS THE INTEGER PART OF B,,C
  7763	056734	004767	001600			JSR	PC,CHKBND	;ERROR IF B IS OFF SCREEN
  7764					
  7765					;DO  DELTA Y NOW
  7766	056740	004767	001672			JSR	PC,MULCOS	;DY IS IN B,,C
  7767	056744	010146				MOV	B,-(SP)
  7768	056746	010246				MOV	C,-(SP)
  7769	056750	066701	124704			ADD	CURY,B	;THE INTEGER PARTS.
  7770	056754	066702	124702			ADD	CURY+2,C	;THE FRACTION PARTS
  7771	056760	005501				ADC	B	;IF FRACTIONS > 1, ADD 1 TO INT
  7772	056762	010167	123454		DFD.2:	MOV	B,NEWY
  7773	056766	010267	123452			MOV	C,NEWY+2
  7774	056772	004767	001574			JSR	PC,FIX	;B HAS THE INTEGER PART OF B,,C
  7775	056776	004767	001536			JSR	PC,CHKBND	;ERROR IF B IS OFF SCREEN.
  7776					
  7777					;FALLS THROUGH
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 228
	TURTLE 59	PAGE 9 	DISPLAY AND TURTLE

  7778					
  7779					;FALLS IN
  7780					
  7781						
  7782					;WHEN WE ACTUALLY DRAW THE LINE, DX AND DY ARE OF INTEREST.
  7783					;THE STUFF IN REGISTERS NOW IS CURX+DX, ETC.
  7784	057002	012602				MOV	(SP)+,C	;FRACTION PART OF DY
  7785	057004	012601				MOV	(SP)+,B	;THE INTEGER PART OF DY
  7786	057006	004767	001560			JSR	PC,FIX
  7787	057012	010104				MOV	B,E	;THIS IS DY.
  7788					
  7789	057014	012602				MOV	(SP)+,C	;THE FRACTION PART OF DX
  7790	057016	012601				MOV	(SP)+,B	;THE INTEGER PART OF DX.
  7791	057020	004767	001546			JSR	PC,FIX
  7792	057024	010103				MOV	B,D	;THIS IS DX.
  7793					
  7794	057026	012701	000004			MOV	#<MTO.P2-MTO.P1>,B	;A SORT OF FLAG FOR MOVETO
  7795	057032	004767	000250			JSR	PC,MOVETO	;DRAW A LINE OR PUT ADDXY INTO DLIST
  7796	057036	012667	124656			MOV	(SP)+,DIREC	;RESTORE DIREC
  7797					
  7798						DISGO
  7799	057050	000167	170302			JMP	NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 229
	TURTLE 59	PAGE 10 	DISPLAY AND TURTLE

  7800					
  7801					
  7802					;SETX
  7803					;	IF THE PEN IS UP, SIMPLY SET THE CURRENT X TO THE ARG.
  7804					;	IF THE PEN IS DOWN, DRAW A LINE.
  7805	057054	012700	003654		SETX:	MOV	#CURX,A
  7806	057060	012705	002436			MOV	#NEWX,F
  7807	057064	004767	000142			JSR	PC,SET.A	;RETURNS DX IN B AND SET CURX
  7808	057070	012025				MOV	(A)+,(F)+	;SET NEWY TO CURY
  7809	057072	011015				MOV	(A),(F)	;SET FRACTION OF NEWY TO FRACTION OF CURY
  7810	057074	010103				MOV	B,D	;DX
  7811	057076	005004				CLR	E	;DY
  7812	057100	000421				BR	SETMOV
  7813					
  7814					
  7815					;SETY
  7816					;	SIMILAR TO SETX
  7817	057102	012700	003654		SETY:	MOV	#CURX,A
  7818	057106	012705	002436			MOV	#NEWX,F
  7819	057112	012025				MOV	(A)+,(F)+	;SET NEWX TO CURX
  7820	057114	012025				MOV	(A)+,(F)+	;SET FRACTION OF NEWY TO FRACTION OF CURY
  7821	057116	004767	000110			JSR	PC,SET.A	;RETURNS DY IN B.
  7822	057122	005003				CLR	D	;DX
  7823	057124	010104				MOV	B,E	;DY
  7824	057126	000406				BR	SETMOV
  7825					
  7826					
  7827					;SETXY
  7828					;	CALLED WITH TWO ARGS. AND DOES THE OBVIOUS THING.
  7829	057130	004767	167272		SETXY:	JSR	PC,G2NARG	;B=X, A=Y
  7830	057134	010004				MOV	A,E
  7831	057136	010103				MOV	B,D
  7832	057140	004767	000110			JSR	PC,SXY.S	;GETS DX AND DY
  7833	057144	016746	124550		SETMOV:	MOV	DIREC,-(SP)
  7834	057150	005001				CLR	B	;A FLAG THAT CAUSES DIREC TO BE CALCULATED IN MOVETO
  7835	057152	004767	000130			JSR	PC,MOVETO	;DRAW LINE OR DO ADDXY
  7836	057156	012667	124536			MOV	(SP)+,DIREC	;BUT RESTORE GLOBAL DIREC
  7837					
  7838						DISGO
  7839	057170	000167	170162			JMP	NORT
  7840					
  7841					
  7842					;SETTURTLE
  7843					;	ARGUMENT IS A LIST OF 3 NUMBERS
  7844					;	SETXY TO FIRST TWO SNUMS, AND SETHEADING TO THE THIRD
  7845					SETTURTLE:
  7846	057174	017702	124206			MOV	@S,C	;ARGUMENT
  7847	057200	004767	167412			JSR	PC,LD3NUM	;GET 3 NUMBERS IN D,E,F
  7848	057204	010546				MOV	F,-(SP)	;SAVE ANGLE FOR SETHEADING LATER
  7849	057206	004767	132742			JSR	PC,SPOPT	;AND POP S	
  7850	057212	004767	000036			JSR	PC,SXY.S	;GETS DX AND DY
  7851	057216	005001				CLR	B	;A FLAG THAT CAUSES DIREC TO BE CALCULATED IN MOVETO
  7852	057220	004767	000062			JSR	PC,MOVETO	;DRAW LINE OR DO ADDXY
  7853	057224	012601				MOV	(SP)+,B	;PUT THE ANGLE INTO B
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 230
	TURTLE 59	PAGE 10.1 	DISPLAY AND TURTLE

  7854					
  7855	057226	000167	000226			JMP	DRT.HD	;AND JUMP TO SETHEADING PROGRAM
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 231
	TURTLE 59	PAGE 11 	DISPLAY AND TURTLE

  7856					
  7857					;THIS PAGE IS VARIOUS SUBROUTINES USED BY THE SET COMMANDS.
  7858					
  7859					;SET.A
  7860					;	CALL WITH A POINTING TO EITHER CURX OR CURY
  7861					;	CALL WITH F POINTING TO EITHER NEWX OR NEWY
  7862					;	TAKES AN ARGUMENT OFF OF THE S PDL.  PUTS THE ARG IN NEW
  7863					;	PUTS ARG - CURRENT IN B
  7864	057232	004767	167176		SET.A:	JSR	PC,G1NARG	;NUMERIC ARGUMENT IN B.
  7865					
  7866					;ENTER HERE IF ARGUMENT IS ALREADY IN B
  7867	057236	004767	001276		SET.A1:	JSR	PC,CHKBND	;IS NUMBER IN BOUNDS?
  7868	057242	010125				MOV	B,(F)+	;PUT IN NEW
  7869	057244	005025				CLR	(F)+	;CLEAR THE FRACTION PART OF NEW.
  7870	057246	004767	001254			JSR	PC,SUBXY	;RETURNS INTEGER OF B-CURRENT IN B.
  7871	057252	000207				RTS	PC
  7872					
  7873					
  7874					;SXY.S
  7875					;	CALL WITH D = NEW X
  7876					;	CALL WITH E = NEW Y
  7877					;	GET DX AND DY
  7878	057254	012700	003654		SXY.S:	MOV	#CURX,A
  7879	057260	012705	002436			MOV	#NEWX,F
  7880	057264	010301				MOV	D,B	;X
  7881	057266	004767	177744			JSR	PC,SET.A1	;RETURN DX IN B
  7882	057272	010103				MOV	B,D
  7883	057274	010401				MOV	E,B	;Y
  7884	057276	004767	177734			JSR	PC,SET.A1	;RETURN DY IN B
  7885	057302	010104				MOV	B,E
  7886	057304	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 232
	TURTLE 59	PAGE 12 	DISPLAY AND TURTLE

  7887					
  7888					
  7889					;MOVE TO
  7890					
  7891					
  7892					;ENTER HERE WITH D = DX, AND E = DY
  7893					;IF THE PEN IS DOWN, DRAW A LINE
  7894					;IF THE PEN IS UP, INSERT ADDX AND ADDY COMMANDS
  7895					
  7896	057306	005703			MOVETO:	TST	D	;IS DX=0
  7897	057310	001002				BNE	MTO.1	;NO
  7898	057312	005704				TST	E	;IS DY=0, TOO
  7899	057314	001421				BEQ	MTO.R	;RETURN
  7900					
  7901	057316	132767	000001	124347	MTO.1:	BITB	#PENUF,DFLAGS	;IS THE PEN UP?
  7902	057324	001016				BNE	MTO.PU	;YES
  7903					;THE PEN IS DOWN.  DRAW A LINE
  7904	057326	060107			MTO.PD:	ADD	B,PC	;B WAS SET SUCH THAT
  7905					;			IF MOVETO CALLED FROM SETXY, ETC. , THERE IS NO SKIP
  7906					;			BUT IF MOVETO CALLED FROM FORWARD THERE IS A SKIP
  7907	057330	004767	001724		MTO.P1:	JSR	PC,XYDIR
  7908	057334	004767	002724		MTO.P2:	JSR	PC,DR.LIN	;DRAW THE LINE
  7909					
  7910					;AT THIS POINT, WE HAVE SUCCESSFULLY DONE THE COMMAND.
  7911					;THEREFORE SET CURX AND CURY TO THEIR NEW VALUES, AND EXIT
  7912	057340	012700	003654		MTO.XY:	MOV	#CURX,A	;POINT A TO CURX
  7913	057344	012705	002436			MOV	#NEWX,F	;POINT F TO NEWX
  7914	057350	012520				MOV	(F)+,(A)+	;MOVE NEWX TO CURX
  7915	057352	012520				MOV	(F)+,(A)+	;MOVE FRACTION OF NEWX TO F. OF CURX
  7916	057354	012520				MOV	(F)+,(A)+	;MOVE NEWY TO CURY
  7917	057356	011510				MOV	(F),(A)	;MOVE FRACTION OF NEWY TO F. OF CURY
  7918	057360	000207			MTO.R:	RTS	PC
  7919					
  7920					
  7921					
  7922					;THE PEN IS UP
  7923					;PUT ADDX AND ADDY COMMANDS INTO DISPLAY LIST
  7924					MTO.PU:	SPUSH	#MTO.XY	;SO THAT THE RTS BELOW WILL WORK
  7925	057366	016700	124304			MOV	STT,A	;TOP OF STATIC DISPLAY AREA.
  7926	057372	062700	000004		MTO.:	ADD	#4,A	;WHERE NEW TOP WILL BE
  7927	057376	020067	124276			CMP	A,DYB	;PROVIDING THERE'S ROOM.
  7928	057402	002401				BLT	MTO.RM	;THERE'S ROOM
  7929	057404	104437				ERROR+TML	;TOO MANY LINES
  7930					
  7931	057406	010067	124264		MTO.RM:	MOV	A,STT
  7932	057412	016710	124306			MOV	PUSHJT,(A)	;DISPLAY JUMP TO TURTLE
  7933	057416	042703	176000			BIC	#176000,D	;IN CASE EITHER DX OR DY WERE NEGATIVE
  7934	057422	042704	176000			BIC	#176000,E	;CLEAR THE TOP 6 BITS
  7935	057426	052704	144000			BIS	#ADDY,E	;TURN E INTO ADDY COMMAND
  7936	057432	010440				MOV	E,-(A)	;STORE IN DLIST
  7937	057434	052703	150000			BIS	#ADDX,D	;TURN D INTO ADDX COMMAND
  7938	057440	010340				MOV	D,-(A)	;STORE IN DLIST
  7939	057442	142767	000002	124223		BICB	#HOOKF,DFLAGS	;FOR LINE DRAWER
  7940	057450	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 233
	TURTLE 59	PAGE 13 	DISPLAY AND TURTLE

  7941					
  7942	057452	005401			DLT:	NEG	B
  7943					
  7944					;DISPLAY RIGHT AND LEFT
  7945					
  7946	057454	066701	124204		DRT:	ADD	CURA,B
  7947	057460	004767	001114		DRT.HD:	JSR	PC,MOD360	;SET B=B MOD 360
  7948	057464	010167	124174			MOV	B,CURA
  7949	057470	004767	001230			JSR	PC,ANGCRP	;DO ALL THE ANGLE CRAP.
  7950					;			CALCULATE DIREC, SIN, AND COS.
  7951	057474	132767	000004	124171		BITB	#HIDETF,DFLAGS	;IS THE TURTLE BEING HIDDEN ?
  7952	057502	001002				BNE	DRTRET	;YES. SO RETURN
  7953					
  7954					;THE TURTLE IS BEING SHOWN. SO DRAW THE TURTLE
  7955	057504	004767	002706			JSR	PC,DR.TUR
  7956					
  7957					DRTRET:	DISGO
  7958	057516	000167	167634			JMP	NORT
  7959					
  7960					
  7961					;SETHEAD
  7962					;	LIKE RIGHT, EXCEPT SET CURA TO ARGUMENT
  7963	057522	004767	166706		SETHEAD:	JSR	PC,G1NARG	;NUMERIC ARGUMENT IN B
  7964	057526	000754				BR	DRT.HD	;JUMP INTO RIGHT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 234
	TURTLE 59	PAGE 14 	DISPLAY AND TURTLE

  7965					
  7966					
  7967					;HERE
  7968					;	OUTPUT A SENTENCE OF CURX,CURY,CURA
  7969	057530	012703	003654		HERE:	MOV	#CURX,D
  7970	057534	004767	167010			JSR	PC,PSHINT	;PUSH INTEGER OF CURX ONTO S-PDL
  7971	057540	004767	167004			JSR	PC,PSHINT	;PUSH INTEGER OF CURY
  7972	057544	011301				MOV	(D),B	;CURRENT ANGLE
  7973	057546	004767	167002		HERE.1:	JSR	PC,PSHNUM	;PUSH CURRENT ANGLE
  7974					HERE.2:	SPUSH	#3	;PUSH 3 ONTO P-PDL
  7975	057556	000167	161776			JMP	SENTENCE
  7976					
  7977					;HOME
  7978					;	OUTPUT A SENTENCE OF 0 0 0
  7979	057562	005001			HOME:	CLR	B
  7980	057564	004767	166764			JSR	PC,PSHNUM
  7981						SPUSHS	B	;AND PUSH IT AGAIN
  7982						SPUSHS	B	;AND AGAIN
  7983	057614	000756				BR	HERE.2
  7984					
  7985					
  7986					;XCOR
  7987					;	OUTPUT THE X COORDINATE
  7988	057616	012703	003654		XCOR:	MOV	#CURX,D
  7989	057622	000402				BR	.+6
  7990					;YCOR
  7991					;	OUTPUT THE Y COORDINATE
  7992	057624	012703	003660		YCOR:	MOV	#CURY,D
  7993	057630	000167	166674			JMP	R1INT	;RETURN INTEGER
  7994					
  7995					
  7996					;HEADING
  7997					;	RETURN THE CURRENT ANGLE
  7998	057634	016701	124024		HEADING:	MOV	CURA,B
  7999	057640	000167	166670			JMP	R1NARG
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 235
	TURTLE 59	PAGE 15 	DISPLAY AND TURTLE

  8000					
  8001					
  8002					;	HIDETURTLE
  8003					HIDETURTLE:
  8004	057644	152767	000004	124021		BISB	#HIDETF,DFLAGS	;SET THE HIDETURTLE FLAG
  8005	057652	012777	140600	124026		MOV	#DPOP!DSTOP,@TUB	;DISPLAY POP AND STOP
  8006						DISGO
  8007	057666	000167	167464			JMP	NORT
  8008					
  8009					
  8010					;	SHOWTURTLE
  8011					SHOWTURTLE:
  8012	057672	132767	000004	123773		BITB	#HIDETF,DFLAGS	;IS TURTLE HIDDEN NOW ?
  8013	057700	001405				BEQ	SHOWT9	;NO, IT'S ALREADY BEING SHOWN
  8014					;HAVE TO DRAW THE TURTLE
  8015	057702	142767	000004	123763		BICB	#HIDETF,DFLAGS	;CLEAR THE FLAG FIRST
  8016	057710	004767	002502			JSR	PC,DR.TUR
  8017					SHOWT9:	DISGO
  8018	057722	000167	167430			JMP	NORT
  8019					
  8020					
  8021					;	DISPLAY PENUP
  8022	057726	152767	000001	123737	DPU:	BISB	#PENUF,DFLAGS
  8023	057734	000167	167416			JMP	NORT
  8024					
  8025					
  8026					;	DISPLAY PENDOWN
  8027	057740	142767	000001	123725	DPD:	BICB	#PENUF,DFLAGS
  8028	057746	000167	167404			JMP	NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 236
	TURTLE 59	PAGE 16 	DISPLAY AND TURTLE

  8029					
  8030					
  8031					;SNAP
  8032					;	OUTPUTS STUFF ON THE SCREEN
  8033					;	TRANSFER D. CODE STARTING AT STB+2 AND GOING ALL THE WAY TO STT
  8034					;	INTO THE DYNAMIC AREA.
  8035					;	RETURNS A LIST OF CURX, CURY AND POINTER TO SNAP
  8036	057752	016703	123734		SNAP:	MOV	SNABOT,D	;BOTTOM OF STUFF TO BE SNAPPED
  8037	057756	004767	001344			JSR	PC,DYXFR	;TRANSFER THE DCODE.
  8038					;			SET D = POINTER TO DCODE
  8039	057762	005703				TST	D	;IF 0
  8040	057764	001445				BEQ	SNAP.3	;NO CODE MOVED
  8041					
  8042					;NOW PUT THIS SNAP ON THE SNAP LIST
  8043	057766	016702	123716		SNAP.1:	MOV	SNLIST,C	;POINTER TO SNAP LIST
  8044	057772	001007				BNE	SNAP.2
  8045	057774	012700	120000			MOV	#SNUM,A	;FIRST SNAP
  8046	060000	005001				CLR	B	;CREATE SNAP LIST. FIRST NODE IS A DUMMY
  8047	060002	004767	175222			JSR	PC,GRBAD
  8048	060006	010267	123676			MOV	C,SNLIST
  8049	060012	004767	173576		SNAP.2:	JSR	PC,.LDP1	;POINTER TO REST OF SNAP LIST
  8050	060016	010301				MOV	D,B	;PUT PTR TO SNAP IN B
  8051	060020	004767	175206			JSR	PC,GRBAD1	;:KILINK NODE IN A,B TO NODE IN (C)
  8052					
  8053					;NOW SET UP THE 3 NODE SNAP STRUCTURE ITSELF
  8054	060024	004767	166524			JSR	PC,PSHNUM	;PUSH THE POINTER ONTO S-PDL
  8055	060030	012703	003654			MOV	#CURX,D
  8056	060034	004767	000526			JSR	PC,GETINT	;INTEGER OF CURX IN B
  8057	060040	166701	123622			SUB	OLDX,B	;TO GET DELTA X
  8058	060044	004767	166504			JSR	PC,PSHNUM	;PUSH ON S-PDL
  8059	060050	004767	000512			JSR	PC,GETINT	;INTEGER OF CURY
  8060	060054	166701	123610			SUB	OLDY,B	;TO GET DELTA-Y
  8061	060060	004767	166470			JSR	PC,PSHNUM
  8062	060064	012746	100000			MOV	#SNP,-(SP)	;TYPE OF LIST SENTENCE WILL CREATE
  8063	060070	012703	000003			MOV	#3,D	;NUMBER OF ARGS TO SENTENCE
  8064	060074	000167	161466			JMP	SNPSEN	;JUMP INTO SENTENCE
  8065					
  8066					;SINCE NO DISPLAY CODE WAS MOVED, RETURN EMPTY SNAP
  8067	060100	012700	100000		SNAP.3:	MOV	#SNP,A
  8068	060104	000167	167710			JMP	ORTA
  8069					
  8070					
  8071					
  8072					;NEWSNAP
  8073					;SET UP FOR NEXT SNAP TO START HERE
  8074	060110	012746	047356		NEWSNAP:	MOV	#NORT,-(SP)	;ENTER HERE FROM LOGO
  8075	060114	012703	003654		NEWSN1:	MOV	#CURX,D	;ENTER HERE AS SUBROUTINE
  8076	060120	004767	000442			JSR	PC,GETINT	;GET INTEGER OF CURX IN B
  8077	060124	010167	123536			MOV	B,OLDX
  8078	060130	004767	000432			JSR	PC,GETINT	;GET INTEGER OF CURY IN B
  8079	060134	010167	123530			MOV	B,OLDY
  8080	060140	016767	123532	123544	NEWSN2:	MOV	STT,SNABOT	;RESET SNAP BOTTOM TO TOP OF DISPLAY
  8081	060146	142767	000002	123517		BICB	#HOOKF,DFLAGS	;TELL LINE DRAWER THAT LAST WORD OF DLIST ISN'T INCREMENTS
  8082	060154	000207				RTS	PC	;EITHER RETURN FROM SUBROUTINE , OR JMP NORT
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 237
	TURTLE 59	PAGE 17 	DISPLAY AND TURTLE

  8083					
  8084					;DISPLAY A SINGLE SNAP
  8085					
  8086					DISPLAY:
  8087	060156	004767	166414			JSR	PC,G1SNAP	;LOAD D,E,F WITH PTR TO SNAP,CURX,CURY
  8088	060162	000446				BR	D.RET	;RETURNS HERE IF ARG IS EMPTY
  8089	060164	010401				MOV	E,B
  8090	060166	066701	123462			ADD	CURX,B
  8091	060172	004767	000342			JSR	PC,CHKBND	;IS NEW X COR IN BOUNDS?
  8092	060176	010501				MOV	F,B
  8093	060200	066701	123454			ADD	CURY,B
  8094	060204	004767	000330			JSR	PC,CHKBND	;IS NEW Y COR IN BOUNDS?
  8095					
  8096					;NOW SEE IF THERE'S ENOUGH ROOM IN THE DISPLAY AREA
  8097	060210	016700	123462			MOV	STT,A	;TOP OF THE STATIC AREA
  8098	060214	062700	000004			ADD	#4,A	;RAISE IT 4 BYTES
  8099	060220	020067	123454			CMP	A,DYB	;COMPARE TO BOTTOM OF DYNAMIC AREA
  8100	060224	002401				BLT	DISRM
  8101	060226	104437				ERROR+TML	;TOO MANY LINES
  8102					
  8103					;FINALLY, WE CAN PLACE THE PUSHJ TO THE SNAP INTO THE DISPLAY LIST
  8104	060230	005263	177776		DISRM:	INC	-2(D)	;INCREMENT THE REF COUNTER OF THE SNAP
  8105	060234	010067	123436			MOV	A,STT	;SET STATIC TOP TO HERE IN DLIST
  8106	060240	016710	123460			MOV	PUSHJT,(A)	;PUT PUSHJ TO TURTLE AT TOP OF DLIST
  8107						MAKEPJ D
  8108	060256	010340				MOV	D,-(A)	;PUT IN THE PUSHJ
  8109	060260	005040				CLR	-(A)	;PRECEDE BY A NOP
  8110					
  8111					;NOW, SET CURX AND CURY
  8112	060262	060467	123366			ADD	E,CURX	;E HAD DX OF THE SNAP
  8113	060266	060567	123366			ADD	F,CURY	;F HAS DY OF THE SNAP
  8114					
  8115	060272	142767	000002	123373		BICB	#HOOKF,DFLAGS	;TELL LINE DRAWER THAT LAST DWORD NOT INCREMENTS
  8116					D.RET:	DISGO
  8117	060306	004767	131642			JSR	PC,SPOPT	;POP S
  8118	060312	000167	167040			JMP	NORT	;RETURN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 238
	TURTLE 59	PAGE 18 	DISPLAY AND TURTLE

  8119					
  8120					;WIPE A SNAP
  8121					
  8122	060316	004767	166254		WIPE:	JSR	PC,G1SNAP	;LOAD D,E,F WITH PTR TO SNAP, X,  Y
  8123					
  8124	060322	000766				BR	D.RET	;RETURNS HERE IF ARG IS EMPTY
  8125	060324	042704	176000			BIC	#176000,E	;CLEAR TOP 6 BITS
  8126	060330	052704	150000			BIS	#ADDX,E	;AND TURN INTO ADDX COMMAND
  8127	060334	042705	176000			BIC	#176000,F	;CLEAR TOP 6 BITS
  8128	060340	052705	144000			BIS	#ADDY,F	;TURN INTO ADDY
  8129					
  8130	060344	010301				MOV	D,B
  8131	060346	005743				TST	-(D)	;POINT D TO SNAP'S REF COUNTER
  8132						MAKEPJ B	;MAKE B INTO DPUSHJ TO SNAP
  8133	060362	016700	123310			MOV	STT,A	;POINTER TO TOP OF DISPLAY LIST
  8134	060366	016702	123302			MOV	STB,C	;POINTER TO BOTTOM OF DLIST
  8135					
  8136	060372	020002			WIPE.L:	CMP	A,C	;ARE WE AT THE BOTTOM YET?
  8137	060374	002741				BLT	D.RET	;YES, SO WE ARE DONE
  8138	060376	020140				CMP	B,-(A)	;IS THE NEXT WORD A PUSHJ?
  8139	060400	001374				BNE	WIPE.L	;NO.  LOOP BACK AND TRY ANOTHER
  8140					;YES!  IT IS A PUSHJ
  8141					;PUT ADDX AND ADDY COMMANDS INTO DLIST
  8142	060402	010510				MOV	F,(A)
  8143	060404	010440				MOV	E,-(A)
  8144					
  8145	060406	005313				DEC	(D)	;DECREMENT REF COUNTER
  8146	060410	000770				BR	WIPE.L	;AND THEN LOOP BACK TO SEE IF THERE'S ANOTHER
  8147					;			PUSHJ TO THIS SNAP
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 239
	TURTLE 59	PAGE 19 	DISPLAY AND TURTLE

  8148					
  8149					
  8150					;WIPE THE ENTIRE DISPLAY
  8151					
  8152					WIPECLEAN:
  8153	060412	016700	123256			MOV	STB,A	;POINTER TO BOTTOM OF DISPLAY LIST
  8154	060416	016701	123254			MOV	STT,B	;POINTER TO TOP OF DLIST
  8155					  8156	060422	012704	100000			MOV	#100000,E	;SMALLEST DPUSHJ
  8157	060426	012705	140000			MOV	#140000,F	;SMALLEST COMMAND BIGGER THAN PUSHJ
  8158					
  8159	060432	020100			WC.LP:	CMP	B,A	;ARE WE AT BOTTOM YET?
  8160	060434	002412				BLT	WC.DUN	;YES, WE ARE DONE
  8161	060436	024104				CMP	-(B),E	;IS NEXT WORD DOWN A PUSHJ?
  8162	060440	103774				BLO	WC.LP	;NO, IT'S TOO SMALL
  8163	060442	021105				CMP	(B),F
  8164	060444	103372				BHIS	WC.LP	;NO, IT'S TOO BIG
  8165					;THIS WORD IS A PUSHJ
  8166	060446	011103				MOV	(B),D	;MOVE	THE PUSHJ COMMAND INTO D
  8167						MAKEAD D	;TURN INTO PDP-11 ADDRESS
  8168	060456	005343				DEC	-(D)	;DECREMENT SNAP'S REF COUNTER
  8169	060460	000764				BR	WC.LP	;LOOP BACK TO LOOK FOR MORE PUSHJ'S
  8170					
  8171					;NOW PLACE ADDX AND ADDY COMMANDS IN THE DISPLAY LIST
  8172					;SO THAT THE TURTLE WILL STAY AT THE SAME PLACE IT WAS BEFORE THE WIPE
  8173	060462	012703	003654		WC.DUN:	MOV	#CURX,D
  8174	060466	004767	000074			JSR	PC,GETINT	;GET INTEGER OF  CURX IN B
  8175						SPUSH	B	;SAVE DX
  8176	060474	004767	000066			JSR	PC,GETINT	;GET INTEGER OF CURY IN B
  8177	060500	010104				MOV	B,E	;PUT DY IN E
  8178						SPOP	D	;PUT DX IN B
  8179	060504	004767	176662			JSR	PC,MTO.	;PUTS THE ADD COMMANDS INTO THE DLIST, STARTING AT A
  8180	060510	004767	177400			JSR	PC,NEWSN1	;SO THAT SNAPS WILL START HERE
  8181					
  8182						DISGO
  8183	060522	000167	166630			JMP	NORT	;RETURN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 240
	TURTLE 59	PAGE 20 	DISPLAY UTILITY ROUTINES

  8184					.STITL DISPLAY UTILITY ROUTINES
  8185					
  8186					
  8187					;SUBXY
  8188					;	CALL WITH AN INTEGER IN B
  8189					;	CALL WITH A POINTER TO CURX OR CURY IN A
  8190					;	RETURNS THE INTEGER OF B-CURRENT X OR Y IN B
  8191					;	ALSO LEAVES A POINTING TO WORD AFTER THE FRACTION PART
  8192	060526	162001			SUBXY:	SUB	(A)+,B	;B-CUR
  8193	060530	005720				TST	(A)+	;TEST THE FRACTION PART
  8194	060532	002001				BGE	SUBXY9	;BRANCH IF THE HIGH BIT IS OFF
  8195	060534	005301				DEC	B	;ROUND THE ANSWER DOWN
  8196	060536	000207			SUBXY9:	RTS	PC
  8197					
  8198					
  8199					;CHKBND
  8200					;	CHECK BOUNDS.  ERROR IF B IS OFF SCREEN
  8201	060540	020127	000144		CHKBND:	CMP	B,#100.
  8202	060544	003004				BGT	ERROOB
  8203	060546	020127	177634			CMP	B,#-100.
  8204	060552	002401				BLT	ERROOB
  8205	060554	000207				RTS	PC
  8206					;THE NUMBER IS OUT OF BOUNDS
  8207	060556	012777	003724	123112	ERROOB:	MOV	#PUSHJT,@STT	;A VERY SIMPLE ERROR RECOVERY 
  8208	060564	104430				ERROR+OOB
  8209					
  8210					
  8211					;	CALL WITH D POINTING TO CURX OR CURY.
  8212					;	RETURN THE INTEGER OF CURX OR CURY IN B
  8213	060566	012301			GETINT:	MOV	(D)+,B
  8214	060570	012302				MOV	(D)+,C
  8215					;FIX
  8216					;	CALL WITH INTEGER IN B AND FRACTION IN C
  8217					;	RETURNS INTEGER ROUNDED CORRECTLY IN B
  8218	060572	006102			FIX:	ROL	C	;PUT TOP BIT OF C INTO CARRY
  8219	060574	005501				ADC	B	;SO THAT B IS ROUNDED UP IFF TOP BIT OF C SET
  8220	060576	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 241
	TURTLE 59	PAGE 21 	DISPLAY UTILITY ROUTINES

  8221					
  8222					
  8223					;MOD360
  8224					;	OUTPUT B MOD 360 IN B.
  8225					;	ALWAYS OUTPUTS A POSITIVE NUMBER
  8226	060600	012702	000550		MOD360:	MOV	#360.,C
  8227	060604	012700	177302			MOV	#AC,A
  8228	060610	005010				CLR	(A)	;CLEAR HIGH PART OF DIVIDEND
  8229	060612	010160	000002			MOV	B,2(A)	;MOVE NUMBER TO LOW PART OF DIVIDEND
  8230	060616	002001				BGE	M360A
  8231	060620	005110				COM	(A)	;EXTEND SIGN TO HIGH PART OF DIVIDEND
  8232	060622	010240			M360A:	MOV	C,-(A)	;360 TO DIVISOR
  8233	060624	016001	000002			MOV	2(A),B	;REMAINDER
  8234	060630	002001				BGE	M360R
  8235	060632	060201				ADD	C,B	;IF REMAINDER WAS NEGATIVE, ADD 360 TO IT
  8236					
  8237	060634	000207			M360R:	RTS	PC
  8238					
  8239					
  8240					
  8241					;MULCOS
  8242					;	RETURN A*COSINE OF CURA IN B,,C
  8243	060636	016701	123054		MULCOS:	MOV	COSA,B
  8244	060642	000402				BR	MULCS2
  8245					;MULSIN
  8246					;	RETURN A*SINE OF CURA IN B,,C
  8247	060644	016701	123044		MULSIN:	MOV	SINA,B
  8248	060650	010346			MULCS2:	MOV	D,-(SP)	;GUESS WHY
  8249	060652	005003				CLR	D	;USE D AS FLAG
  8250	060654	005701				TST	B
  8251	060656	100003				BPL	MULCS3
  8252	060660	005303				DEC	D	;TO MARK THAT B WAS NEGATIVE
  8253	060662	042701	100000			BIC	#100000,B	;WHEN TRIG THINGS ARE SUPPOSED TO BE NEG.
  8254					;			THEY ARE INSTEAD STORED POSITIVE, BUT WITH TOP BIT SET
  8255	060666	012705	177304		MULCS3:	MOV	#MQ,F
  8256	060672	010125				MOV	B,(F)+	;MULTIPLICAND
  8257	060674	010015				MOV	A,(F)	;MULTIPLIER
  8258	060676	014502				MOV	-(F),C	;LOW ORDER PRODUCT = FRACTION
  8259	060700	014501				MOV	-(F),B	;HIGH ORDER PRODUCT = INTEGER
  8260	060702	006302				ASL	C	;MULTIPLY FRACTION AND
  8261	060704	006101				ROL	B	;INTEGER BY 2.
  8262	060706	005703				TST	D	;WAS THE TRIG THING NEGATIVE?
  8263	060710	002003				BGE	MULCS9
  8264	060712	005402				NEG	C	;SINCE THE TRIG FUNCTION WAS NEGATIVE, NEGATE FRACTION
  8265	060714	005501				ADC	B	;INCREMENT INTEGER UNLESS, FRACTION WAS 0
  8266	060716	005401				NEG	B	;AND NEGATE THE INTEGER.
  8267	060720	012603			MULCS9:	MOV	(SP)+,D	;RESTORE D
  8268	060722	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 242
	TURTLE 59	PAGE 22 	DISPLAY UTILITY ROUTINES

  8269					
  8270					
  8271					;ANGCRP
  8272					;	CALCULATE ANGLE CRAP.
  8273					;	CALCULATE DIREC, SINA, COSA
  8274	060724	016700	122734		ANGCRP:	MOV	CURA,A	;THE CURRENT ANGLE
  8275	060730	012704	000132			MOV	#90.,E
  8276	060734	012705	177304			MOV	#MQ,F
  8277	060740	010015				MOV	A,(F)	;THE DIVIDEND
  8278	060742	005045				CLR	-(F)
  8279	060744	010445				MOV	E,-(F)	;THE DIVISOR = 90.
  8280	060746	005725				TST	(F)+
  8281	060750	012500				MOV	(F)+,A	;THE REMAINDER
  8282	060752	011505				MOV	(F),F	;THE QUOTIENT
  8283	060754	010002				MOV	A,C	;SAVE THE REMAINDER
  8284	060756	160004				SUB	A,E	;NOW E = 90.- REMAINDER
  8285	060760	004767	000110			JSR	PC,SINGET	;D_SIN (A)
  8286	060764	010301				MOV	D,B
  8287	060766	010400				MOV	E,A
  8288	060770	004767	000100			JSR	PC,SINGET
  8289	060774	012704	100000			MOV	#100000,E	;BIS THIS GUY WHEN TRIG THINGS ARE SUPPOSED TO BE NEGATIVE
  8290	061000	006305				ASL	F	;F = 0,1,2,3
  8291	061002	060507				ADD	F,PC	;JUMP THROUGH THIS DISPATCH TABLE
  8292	061004	000416				BR	ACR.D
  8293	061006	000411				BR	ACRII	;QUADRANT II
  8294	061010	000405				BR	ACRIII	;QUADRANT III
  8295					;FOURTH QUADRANT
  8296	061012	010100				MOV	B,A	;SIN (A)
  8297	061014	010301				MOV	D,B	;SIN (90-A)
  8298	061016	050401				BIS	E,B	;SINA=-SIN(90-A) IN 4TH QUADRANT
  8299	061020	010003				MOV	A,D	;AND COSA=SIN(A) IN 4TH QUADRANT
  8300	061022	000407				BR	ACR.D
  8301					
  8302					;THE THIRD QUADRANT
  8303	061024	050401			ACRIII:	BIS	E,B	;SINA = -SIN (A) IN 3RD QUADRANT
  8304	061026	050403				BIS	E,D	;COSA = - SIN (90-A) IN 3RD QUADRANT
  8305	061030	000404				BR	ACR.D
  8306					
  8307					;SECOND QUADRANT
  8308	061032	010100			ACRII:	MOV	B,A	;SIN (A)
  8309	061034	010301				MOV	D,B	;SINA = SIN (90-A) IN 2ND QUADRANT
  8310	061036	010003				MOV	A,D
  8311	061040	050403				BIS	E,D	;COSA = -SIN (A) IN 2ND QUADRANT
  8312					
  8313					;IN THE FIRST QUADRANT
  8314					;SINA = SIN (A) AND
  8315					;COSA = SIN (90-A)
  8316	061042	010167	122646		ACR.D:	MOV	B,SINA
  8317	061046	010367	122644			MOV	D,COSA
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 243
	TURTLE 59	PAGE 23 	DISPLAY UTILITY ROUTINES

  8318					
  8319					
  8320					;NOW GET DIREC.  DIREC IS THE DIRECTION CODE FOR THE DISPLAY CODE
  8321	061052	022702	000055			CMP	#45.,C	;IS THE REMAINDER MORE THAN 45?
  8322	061056	005505				ADC	F	;CARRY WAS SET IF C<45
  8323	061060	006305				ASL	F
  8324	061062	006305				ASL	F
  8325	061064	006305				ASL	F
  8326	061066	010567	122626			MOV	F,DIREC
  8327					
  8328	061072	000207				RTS	PC
  8329					
  8330					;GET SIN (A) INTO D.
  8331					;THE SINE TABLE HAS ONLY EVEN ANGLES.  INTERPOLATE ODD ANGLES.
  8332	061074	032700	000001		SINGET:	BIT	#1,A	;ODD OR EVEN
  8333	061100	001406				BEQ	AEVEN
  8334	061102	062700	061125			ADD	#<SIN+1>,A	;POINT TO ANGLE AFTER IT
  8335	061106	011003				MOV	(A),D	;SIN (A+1)
  8336	061110	064003				ADD	-(A),D	;PLUS SIN (A-1)
  8337	061112	006203				ASR	D	;DIVIDED BY 2
  8338	061114	000207				RTS	PC
  8339	061116	016003	061124		AEVEN:	MOV	SIN(A),D
  8340	061122	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 244
	TURTLE 59	PAGE 24 	DISPLAY UTILITY ROUTINES

  8341					
  8342					
  8343					;BEAUTIFUL SINE TABLE IN WHOOPIE FORMAT
  8344					
  8345					
  8346					SIN:
  8347					
  8348	061124	000000				0	;0 DEGREES
  8349	061126	002167				2167	;2 DEGREES
  8350	061130	004355				4355	;4 DEGREES
  8351	061132	006541				6541	;6 DEGREES
  8352	061134	010720				10720	;8 DEGREES
  8353	061136	013072				13072	;10 DEGREES
  8354	061140	015234				15234	;12 DEGREES
  8355	061142	017367				17367	;14 DEGREES
  8356	061144	021510				21510	;16 DEGREES
  8357	061146	023615				23615	;18 DEGREES
  8358	061150	025707				25707	;20 DEGREES
  8359	061152	027763				27763	;22 DEGREES
  8360	061154	032017				32017	;24 DEGREES
  8361	061156	034034				34034	;26 DEGREES
  8362	061160	036027				36027	;28 DEGREES
  8363	061162	040000				40000	;30 DEGREES
  8364	061164	041724				41724	;32 DEGREES
  8365	061166	043623				43623	;34 DEGREES
  8366	061170	045474				45474	;36 DEGREES
  8367	061172	047315				47315	;38 DEGREES
  8368	061174	051106				51106	;40 DEGREES
  8369	061176	052646				52646	;42 DEGREES
  8370	061200	054352				54352	;44 DEGREES
  8371	061202	056023				56023	;46 DEGREES
  8372	061204	057437				57437	;48 DEGREES
  8373	061206	061015				61015	;50 DEGREES
  8374	061210	062335				62335	;52 DEGREES
  8375	061212	063615				63615	;54 DEGREES
  8376	061214	065035				65035	;56 DEGREES
  8377	061216	066214				66214	;58 DEGREES
  8378	061220	067331				67331	;60 DEGREES
  8379	061222	070404				70404	;62 DEGREES
  8380	061224	071413				71413	;64 DEGREES
  8381	061226	072357				72357	;66 DEGREES
  8382	061230	073255				73255	;68 DEGREES
  8383	061232	074107				74107	;70 DEGREES
  8384	061234	074674				74674	;72 DEGREES
  8385	061236	075412				75412	;74 DEGREES
  8386	061240	076062				76062	;76 DEGREES
  8387	061242	076463				76463	;78 DEGREES
  8388	061244	077016				77016	;80 DEGREES
  8389	061246	077301				77301	;82 DEGREES
  8390	061250	077514				77514	;84 DEGREES
  8391	061252	077660				77660	;86 DEGREES
  8392	061254	077754				77754	;88 DEGREES
  8393	061256	077777				77777	;90 DEGREES
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 245
	TURTLE 59	PAGE 25 	DISPLAY UTILITY ROUTINES

  8394					
  8395					;XYDIR
  8396					;	CALL WITH D=DX, E=DY
  8397					;	CALCULATE DIREC BASED ON DX AND DY
  8398	061260	005000			XYDIR:	CLR	A	;BUILD INDEX IN A
  8399	061262	005703				TST	D	;IS DX POSITIVE
  8400	061264	002002				BGE	XYDIR1
  8401	061266	005403				NEG	D	;ABSOLUTE VALUE OF DX
  8402	061270	005720				TST	(A)+	;PUT 2 INTO A
  8403	061272	005704			XYDIR1:	TST	E	;IS DY POSITIVE
  8404	061274	002002				BGE	XYDIR2
  8405	061276	005404				NEG	E	;ABSOLUTE VALUE OF DY
  8406	061300	005200				INC	A	;INCREMENT INDEX
  8407	061302	020304			XYDIR2:	CMP	D,E	;WILL GENERATE CARRY IF D<E
  8408	061304	006100				ROL	A	;PUT CARRY INTO BOTTOM BIT OF INDEX.  AND MULTIPLY REST BY 2
  8409	061306	116067	061316	122404		MOVB	DREC(A),DIREC	;NOW MOVE THE RIGHT THING INTO DIREC
  8410	061314	000207				RTS	PC
  8411	061316	   010			DREC:	.BYTE 10
  8412	061317	   000				.BYTE 0
  8413	061320	   020				.BYTE 20
  8414	061321	   030				.BYTE 30
  8415	061322	   060				.BYTE 60
  8416	061323	   070				.BYTE 70
  8417	061324	   050				.BYTE 50
  8418	061325	   040				.BYTE 40
  8419		061326				.EVEN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 246
	TURTLE 59	PAGE 26 	DISPLAY UTILITY ROUTINES

  8420					
  8421					
  8422					;DYXFR
  8423					;	TRANSFER FROM STATIC AREA TO DYNAMIC AREA
  8424					;	THE CODE BEING TRANSFERRED STARTS AT D AND GOES UP TO STT
  8425					;	ON RETURN, D POINTS TO THE TRANSFERRED DCODE
  8426					;	IF NO CODE WAS TRANSFERRED, THEN D = 0.
  8427	061326	016704	122344		DYXFR:	MOV	STT,E
  8428	061332	160304				SUB	D,E	;LENGTH OF DCODE TO BE MOVED
  8429	061334	003517				BLE	DYRET	;NOTHING TO BE MOVED
  8430					;ALLOCATE STORAGE
  8431					;LENGTH OF BLOCK TO BE ALLOCATED IS IN E
  8432	061336	062704	000004		DYAL:	ADD	#4,E	;INCREASE LENGTH TO ALLOW FOR REF CNTR AND POPJ
  8433	061342	016701	122334			MOV	DYR,B	;INITIALIZE POINTER
  8434	061346	012702	000001			MOV	#1,C	;INITIALIZE FLAG
  8435	061352	016100	000002		DYAL1:	MOV	2(B),A	;POINTER TO NEXT FREE BLOCK
  8436	061356	001005				BNE	DYAL2
  8437	061360	005302				DEC	C	;NO NEXT FREE BLOCK--TEST AND SET FLAG
  8438	061362	001031				BNE	DYAL7	;NO MORE ROOM--GO TO EXPAND DY AREA
  8439	061364	016701	122310			MOV	DYB,B	;START AGAIN AT BOTTOM OF LIST
  8440	061370	000770				BR	DYAL1
  8441	061372	011005			DYAL2:	MOV	(A),F	;FREE BLOCK FOUND--CHECK LENGTH
  8442	061374	160405				SUB	E,F
  8443	061376	100002				BPL	DYAL4
  8444	061400	010001			DYAL3:	MOV	A,B	;BLOCK TOO SHORT--MOVE TO NEXT BLOCK
  8445	061402	000763				BR	DYAL1
  8446	061404	001003			DYAL4:	BNE	DYAL5	;BLOCK LONG ENOUGH--IF FILLED EXACTLY
  8447	061406	016061	000002	000002		MOV	2(A),2(B)	;REMOVE BLOCK FROM LIST BY CHANGING POINTERS
  8448	061414	020567	116362		DYAL5:	CMP	F,2	;DONT LEAVE A BLOCK OF LENGTH 2 BYTES
  8449	061420	001767				BEQ	DYAL3
  8450	061422	010510				MOV	F,(A)	;NEW LENGTH OF FREE BLOCK
  8451	061424	016102	000002			MOV	2(B),C	;RESET ROVING POINTER
  8452	061430	001002				BNE	DYAL6	;DONT SET IT TO O
  8453	061432	016702	122242			MOV	DYB,C
  8454	061436	010267	122240		DYAL6:	MOV	C,DYR	
  8455	061442	060500				ADD	F,A	;START STORING AT THIS ADDRESS
  8456	061444	000421				BR	DYAL9
  8457	061446	016700	122226		DYAL7:	MOV	DYB,A	;ADD NEW BLOCK TO BOTTOM OF LIST
  8458	061452	016005	000002			MOV	2(A),F	;POINTER TO 2ND FREE BLOCK
  8459	061456	160400				SUB	E,A
  8460	061460	020067	122212			CMP	A,STT
  8461	061464	003001				BGT	DYAL8	;THERE IS ENOUGH ROOM IN THE DY AREA
  8462	061466	104437				ERROR+TML
  8463	061470	010067	122204		DYAL8:	MOV	A,DYB	;NEW BOTTOM OF DY
  8464	061474	010067	122202			MOV	A,DYR	;FIX ROVING POINTER
  8465	061500	016702	122174			MOV	DYB,C	;SET UP NEW LIST BOTTOM
  8466	061504	005020				CLR	(A)+
  8467	061506	010520				MOV	F,(A)+
  8468	061510	162704	000004		DYAL9:	SUB	#4,E	;RESTORE LENGTH
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 247
	TURTLE 59	PAGE 27 	DISPLAY UTILITY ROUTINES

  8469					
  8470					
  8471					;NOW A CONTAINS ADDRESS OF FREE BLOCK
  8472					;E CONTAINS NUMBER OF BYTES TO BE TRANSFERRED
  8473					;NOW FINALLY YOU GET TO DO THE TRANSFER
  8474					;WHILE YOU DO IT, INCREMENT THE REF COUNTER OF ANY PUSHJ'S
  8475	061514	012702	100000		DYXFR1:	MOV	#100000,C	;THE CODE FOR DISPLAY PUSHJ
  8476	061520	012701	140000			MOV	#140000,B	;NEXT HIGHER DISPLAY COMMAND
  8477	061524	005020				CLR	(A)+	;SET REFERENCE COUNTER TO ZERO
  8478	061526	010046				MOV	A,-(SP)	;SAVE POINTER TO DCODE
  8479	061530	006204				ASR	E	;E/2 = NUMBER OF WORDS TO BE TRANSFERRED
  8480					;PICK UP A WORD.  SEE IF ITS A PUSHJ. AND TRANSFER IT
  8481	061532	005304			DYXFR2:	DEC	E	;NUMBER OF WORDS TO BE XFRED
  8482	061534	002413				BLT	DYXFR3
  8483	061536	012305				MOV	(D)+,F	;WORD OF DCODE IN F
  8484	061540	010520				MOV	F,(A)+	;PUT THIS WORD IN ITS NEW PLACE
  8485	061542	020502				CMP	F,C
  8486	061544	103772				BLO	DYXFR2	;NOT A PUSHJ
  8487	061546	020501				CMP	F,B
  8488	061550	103370				BHIS	DYXFR2	;NOT A PUSHJ
  8489					;IT IS A PUSHJ
  8490						MAKEAD	F
  8491	061560	005245				INC	-(F)	;INCREMENT THE REF COUNTER
  8492	061562	000763				BR	DYXFR2	;LOOP BACK
  8493					
  8494					;ALL TRANSFERRING DONE.  END THE BLOCK WITH A POPJ
  8495	061564	012710	140100		DYXFR3:	MOV	#DPOPJ,(A)
  8496	061570	012603				MOV	(SP)+,D	;PUT POINTER TO START OF DCODE INTO D
  8497	061572	000207				RTS	PC	;AND RETURN
  8498					
  8499					;THERE WAS NOTHING TO BE MOVED
  8500	061574	005003			DYRET:	CLR	D	;TO SIGNAL THIS FACT
  8501	061576	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 248
	TURTLE 59	PAGE 28 	DISPLAY UTILITY ROUTINES

  8502					
  8503					;DYFREE
  8504					;	CALLED DURING GARBAGE COLLECTIONS
  8505					;	CALL WITH D POINTING TO REF COUNTER (WORD BEFORE SNAP)
  8506					;	FREES THE BLOCK!!
  8507					DYFREE:	PUSH	A	;SAVE REGISTERS
  8508						SPUSH	B
  8509						SPUSH	C
  8510						SPUSH	D
  8511						SPUSH	E
  8512						SPUSH	F
  8513					
  8514	061620	012700	100000			MOV	#100000,A
  8515	061624	012701	140000			MOV	#140000,B
  8516	061630	012702	140100			MOV	#DPOPJ,C
  8517	061634	004767	000004			JSR	PC,DYF1	;DOES THE FREEING
  8518	061640	000167	163544			JMP	RETF	;RESTORE AC'S AND RETURN TO OUT OF DYFREE
  8519					
  8520					;REAL WORK OF FREEING STARTS HERE.
  8521	061644	010346			DYF1:	MOV	D,-(SP)	;SAVE PTR TO FIRST WORD OF BLOCK
  8522	061646	005723				TST	(D)+	;POINT D TO FIRST WORD
  8523					
  8524					;PICK UP EACH WORD OF BLOCK.  IF IT IS A PUSHJ, FREE THAT BLOCK
  8525					;CONTINUE UNTIL A POPJ IS REACHED
  8526	061650	012305			DYF11:	MOV	(D)+,F	;NEXT WORD
  8527	061652	020500				CMP	F,A
  8528	061654	103775				BLO	DYF11	;NOT PUSHJ OR POPJ
  8529	061656	020501				CMP	F,B
  8530	061660	103013				BHIS	DYF2	;NOT PUSHJ, BUT MAY BE POPJ
  8531					
  8532					;	ITS A PUSHJ
  8533						MAKEAD	F
  8534	061670	005345				DEC	-(F)	;REF COUNTER
  8535	061672	001366				BNE	DYF11	;SNAP BEING DISPLAYED, OR EXISTS IN LOGO
  8536						SPUSH	D	;SAVE WHERE YOU ARE IN THIS BLOCK
  8537	061676	010503				MOV	F,D	;POINTER TO NEW BLOCK TO BE FREED
  8538	061700	004767	177740			JSR	PC,DYF1	;RECURSE (GOD DAMN IT AGAIN)
  8539						SPOP	D	;RESTORE PLACE IN THIS BLOCK
  8540	061706	000760				BR	DYF11	;LOOK AT NEXT WORD
  8541					
  8542					;IS THE WORD A POPJ
  8543	061710	020502			DYF2:	CMP	F,C	;C CONTAINS A POPJ
  8544	061712	001356				BNE	DYF11	;NOT A POPJ.  LOOK AT NEXT WORD
  8545						SPOP	C	;POINTER TO FIRST WORD OF BLOCK
  8546	061716	160203				SUB	C,D	;LENGTH OF BLOCK
  8547	061720	010305				MOV	D,F
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 249
	TURTLE 59	PAGE 29 	DISPLAY UTILITY ROUTINES

  8548					
  8549					
  8550					;NOW LINK BLOCK BACK TO FREE CORE
  8551					;C/ADDRESS OF BLOCK TO BE LIBERATED
  8552					;F CONTAINS LENGTH OF BLOCK
  8553					
  8554	061722	016701	121752		DYLIB:	MOV	DYB,B	;INITIALIZE POINTER TO BOTTOM OF LIST
  8555	061726	016100	000002		DYLIB1:	MOV	2(B),A	;NEXT FREE BLOCK
  8556	061732	001422				BEQ	DYLIB3	;AT END OF LIST
  8557	061734	020002				CMP	A,C
  8558	061736	003002				BGT	DYLIB2	;PASSED BLOCK TO BE FREED
  8559	061740	010001				MOV	A,B	;TRY NEXT FREE BLOCK
  8560	061742	000771				BR	DYLIB1
  8561	061744	010503			DYLIB2:	MOV	F,D	;CHECK UPPER BOUND
  8562	061746	060203				ADD	C,D	;DO WE COLLAPSE NEW BLOCK WITH NEXT ONE?
  8563	061750	020300				CMP	D,A
  8564	061752	001012				BNE	DYLIB3	;NO
  8565	061754	061005				ADD	(A),F	;YES--NEW LENGTH
  8566	061756	016062	000002	000002		MOV	2(A),2(C)	;NEW POINTER
  8567	061764	020067	121712			CMP	A,DYR	;DID WE JUST SCREW ROVING POINTER?
  8568	061770	001005				BNE	DYLIB4
  8569	061772	016767	121702	121702		MOV	DYB,DYR	;YES--RESET IT
  8570	062000	010062	000002		DYLIB3:	MOV	A,2(C)	;POINTER TO NEXT FREE BLOCK--NO COLLAPSE ON TOP
  8571	062004	011103			DYLIB4:	MOV	(B),D	;CHECK LOWER BOUND
  8572	062006	060103				ADD	B,D
  8573	062010	020302				CMP	D,C	;DO WE COLLAPSE WITH BLOCK ON BOTTOM?
  8574	062012	001005				BNE	DYLIB5	;NO
  8575	062014	060511				ADD	F,(B)	;NEW LENGTH OF PREVIOUS BLOCK
  8576	062016	016261	000002	000002		MOV	2(C),2(B)	;NEW POINTER
  8577	062024	000403				BR	DYLIB6
  8578	062026	010261	000002		DYLIB5:	MOV	C,2(B)	;POINTER IN PREVIOUS BLOCK--NO COLLAPSE
  8579	062032	010512				MOV	F,(C)	;LENGTH OF BLOCK JUST FREED
  8580	062034	010200			DYLIB6:	MOV	C,A	;DID WE JUST FREE BOTTOM BLOCK IN DY?
  8581	062036	162700	000004			SUB	#4,A
  8582	062042	020067	121632			CMP	A,DYB	;NOTE THAT IF CURRENT BLOCK = DYB+4
  8583								;THEN PREVIOUS BLOCK (ADDR IN B) MUST BE DYB
  8584	062046	001011				BNE	DYLIB7	;NO
  8585	062050	061201				ADD	(C),B	;YES--COLLAPSE DY AREA
  8586	062052	005011				CLR	(B)
  8587	062054	016261	000002	000002		MOV	2(C),2(B)	;NEW BOTTOM BLOCK
  8588	062062	010167	121612			MOV	B,DYB
  8589	062066	010167	121610			MOV	B,DYR	;FIX POINTERS
  8590	062072	000207			DYLIB7:	RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 250
	TURTLE 59	PAGE 30 	DISPLAY UTILITY ROUTINES

  8591					
  8592					
  8593					;DSGCF
  8594					;	CALLED BY LOGO GARBAGE COLLECTOR WHEN ITS ALL DONE
  8595					;	SEE IF EACH SNAP ON THE SNAP LIST WAS MARKED.
  8596					;	AND DYFREE THE SNAP IF NOT MARKED AND IT'S REFERENCE COUNTER IS 0
  8597					
  8598	062074	005005			DSGCF:	CLR	F
  8599	062076	000405				BR	DSGC1
  8600					
  8601	062100	005705			DSGC4:	TST	F	;0 IF FIRST TIME THROUGH
  8602	062102	001401				BEQ	.+4
  8603	062104	000207			DSGC9:	RTS	PC
  8604	062106	012705	000026			MOV	#<DSGC6-DSGCF1>,F	;NOW CLEAR MARKED BITS
  8605	062112	016702	121572		DSGC1:	MOV	SNLIST,C	;POINTER TO SNAP LIST
  8606	062116	001772				BEQ	DSGC9	;OBVIOUSLY DOESN'T HAVE SNAPS
  8607					
  8608	062120	004767	171360			JSR	PC,.LOADC	;FIRST NODE OF LIST IS DUMMY
  8609	062124	010204			DSGC2:	MOV	C,E	;SAVE POINTER TO NODE
  8610	062126	032700	007777		DSGC3:	BIT	#7777,A	;LEAVE ADDRESS ONLY
  8611	062132	001762				BEQ	DSGC4	;END OF LIST
  8612	062134	010002				MOV	A,C	;POINTER TO NEXT NODE
  8613	062136	004767	171342			JSR	PC,.LOADC
  8614	062142	060507				ADD	F,PC	;CHOOSE BETWEEN FREEING AND CLEARING
  8615					
  8616					;TRY TO FREE THE SNAP
  8617	062144	005741			DSGCF1:	TST	-(B)	;WAS SNAP MARKED?  (B POINTS TO REF COUNT)
  8618	062146	001366				BNE	DSGC2	;EITHER DISPLAYED OR MARKED
  8619					
  8620					;NOT MARKED, AND NOT DISPLAYED ANYWHERE!!
  8621					;FREE THIS SNAP
  8622	062150	004767	173200			JSR	PC,.FREE	;CLEAN UP SNLIST
  8623	062154	010402				MOV	E,C	;POINTER TO PREVIOUS NODE OF SNLIST
  8624	062156	004767	171400			JSR	PC,.STP1	;STORE A AS TOP WORD OF PREVIOUS NODE
  8625	062162	010103				MOV	B,D	;POINTER TO SNAP DCODE
  8626	062164	004767	177410			JSR	PC,DYFREE
  8627	062170	000756				BR	DSGC3
  8628					
  8629	062172	042741	100000		DSGC6:	BIC	#100000,-(B)	;CLEAR MARKED BIT
  8630	062176	000753				BR	DSGC3
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 251
	TURTLE 59	PAGE 31 	DISPLAY UTILITY ROUTINES

  8631					
  8632					
  8633					;MKDC
  8634					;	CALLED BY LOGO GARBAGE COLLECTOR DURING MARKING PHASE
  8635					;	CALLED WITH B POINTING TO SNAP NODE
  8636	062200	005767	121504		MKDC:	TST	SNLIST	;CALLED TO KILL THE DISPLAY?
  8637	062204	001422				BEQ	MKDC.K	;YES
  8638	062206	032701	007777			BIT	#7777,B
  8639	062212	001734				BEQ	DSGC9	;EMPTY SNAP
  8640					;MARK THE SNAP
  8641						PUSH	A
  8642						SPUSH	B
  8643	062224	004767	171256			JSR	PC,.LOAD
  8644	062230	012700	120000			MOV	#SNUM,A
  8645	062234	004767	163330			JSR	PC,CONVERT	;GET SNAP ADDRESS INTO B
  8646	062240	000402				BR	MKDC.R	;IF DOESN'T SKIP, THEN BAD NODE!!!!!!!!!!!!!!!  8647	062242	052741	100000			BIS	#100000,-(B)	;MARK THE REF COUNTER
  8648	062246	000167	163166		MKDC.R:	JMP	RETB	;RESTORE A AND B
  8649					
  8650					;CALLED BY KILLDISPLAY
  8651					;TURN SNAP INTO EMPTY SNAP
  8652	062252	012701	100000		MKDC.K:	MOV	#SNP,B	;EMPTY SNAP
  8653	062256	004767	171274			JSR	PC,.STP2
  8654	062262	000207				RTS	PC
  8655					
  8656					
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 252
	TURTLE 59	PAGE 32 	DISPLAY UTILITY ROUTINES

  8657					
  8658					;HERE START THE LINE AND TURTLE DRAWING PROGRAMS
  8659					
  8660					;DR.LIN
  8661					;	DRAW A LINE. D=DX, E=DY, OR VICE VERSA.
  8662					;	THE DIRECTION CODE FOR THE LINE IS IN DIREC
  8663	062264	142767	000020	121401	DR.LIN:	BICB	#TEMF,DFLAGS	;GOING TO USE TEMF SO CLEAR IT
  8664	062272	016702	121424			MOV	BYCNT,C
  8665	062276	116746	121370			MOVB	OLDIR,-(SP)	;IN CASE OF ERROR BOMB OUT
  8666					
  8667	062302	126716	121412			CMPB	DIREC,(SP)	;OLDIR IS THE DIREC LAST TIME DR.LIN CALLED
  8668	062306	001404				BEQ	DR.LAN	;THEY ARE THE SAME
  8669	062310	012702	000001			MOV	#1,C	;NOT SAME.
  8670	062314	116716	121400			MOVB	DIREC,(SP)	;SET OLDIR
  8671					
  8672	062320	132767	000002	121345	DR.LAN:	BITB	#HOOKF,DFLAGS	;CAN NEW D.LIST BE HOOKED TO PREVIOUS ONE?
  8673	062326	001002				BNE	DR.LBN	;YES.
  8674	062330	012702	000001			MOV	#1,C	;NO.
  8675	062334	004767	000302		DR.LBN:	JSR	PC,DR.SC	;SET A=CON, B=AC.
  8676	062340	004767	000370			JSR	PC,DR.NEP	;CALCULATE NEW END POINT OF DLIST
  8677	062344	010246				MOV	C,-(SP)	;SAVE THE NEW BYCNT
  8678	062346	066703	121324			ADD	STT,D	;D = HOW MANY MORE WORDS IN DLIST
  8679	062352	020367	121322			CMP	D,DYB	;COMPARE TO DY BOTTOM
  8680	062356	002401				BLT	DR.L1	;THERE'S ROOM
  8681	062360	104437				ERROR+TML	;TOO MANY LINES
  8682					
  8683					;OKAY, THERE WAS ROOM FOR THE LINE
  8684	062362	010367	121310		DR.L1:	MOV	D,STT	;SET STT TO NEW STATIC TOP
  8685	062366	016713	121332			MOV	PUSHJT,(D)	;PUT PUSHJ TURTLE AT TOP
  8686	062372	004767	000464			JSR	PC,DR.ASC	;ASSEMBLE THE DISPLAY CODE
  8687	062376	012667	121320			MOV	(SP)+,BYCNT	;THE NEW BYCNT
  8688	062402	112667	121264			MOVB	(SP)+,OLDIR	;NEW OLDIR
  8689	062406	152767	000002	121257		BISB	#HOOKF,DFLAGS	;FOR NEXT TIME
  8690	062414	000207				RTS	PC	;RETURN
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 253
	TURTLE 59	PAGE 33 	DISPLAY UTILITY ROUTINES

  8691					
  8692					
  8693					;DRAW THE TURTLE
  8694	062416	016746	121276		DR.TUR:	MOV	DIREC,-(SP)	;USED LOCALLY BY DR.TUR
  8695	062422	012700	000004			MOV	#TURSIZ,A	;TURTLE SIZE
  8696	062426	004767	176212			JSR	PC,MULSIN	;B,,C = SIZE * SINA
  8697	062432	004767	176134			JSR	PC,FIX
  8698	062436	010104				MOV	B,E	;NOW E HAS INTEGER OF SIZE * SINA
  8699	062440	004767	176172			JSR	PC,MULCOS	;B,,C = SIZE * COSA
  8700	062444	004767	176122			JSR	PC,FIX
  8701	062450	010103				MOV	B,D	;NOW D HAS INTEGER OF SIZE * COSA
  8702					
  8703	062452	010146				MOV	B,-(SP)
  8704	062454	160416				SUB	E,(SP)	;NOW SIZE * (COSA - SINA) IS ON STACK
  8705	062456	060401				ADD	E,B
  8706	062460	010146				MOV	B,-(SP)	;SIZE * (COSA + SINA) IS NOW ON STACK
  8707					
  8708	062462	016767	121220	117756		MOV	TUB,TUT	;TUT WILL BE POINTER TO TOP OF TURTLE DLIST SO FAR
  8709					
  8710					;SIDE 1
  8711	062470	062767	000020	121222		ADD	#20,DIREC	;SIDE 1 IS 2*45 DEGREES LEFT OF CURRENT DIRECTION
  8712	062476	004767	000102			JSR	PC,DR.TSD	;DRAW THE SIDE
  8713					
  8714					;SIDE 2
  8715	062502	162767	000030	121210		SUB	#30,DIREC	;SIDE 2 IS 3*45 DEGREES RIGHT OF SIDE 1
  8716	062510	012603				MOV	(SP)+,D	;DX IS SIZE * (COSA + SINA)
  8717	062512	012604				MOV	(SP)+,E	;DY IS SIZE * (COSA - SINA)
  8718	062514	004767	000064			JSR	PC,DR.TSD	;DRAW THE SIDE
  8719					
  8720					;SIDE 3 HAS THE SAME INCREMENTS AS SIDE 2.
  8721					;JUST THE DIRECTION IS DIFFERENT
  8722	062520	016701	121174			MOV	DIREC,B
  8723	062524	162701	000020			SUB	#20,B	;SIDE 3 IS 2*45 DEGREES RIGHT
  8724	062530	042701	177707			BIC	#177707,B	;LEAVE ONLY THE 3 BITS
  8725	062534	000301				SWAB	B	;PUT THE DIREC BITS IN TOP BYTE
  8726	062536	016702	117704			MOV	TUT,C	;POINTS TO WORD ABOVE LAST ONE OF TURTLE DLIST
  8727	062542	010200				MOV	C,A
  8728	062544	160302				SUB	D,C	;SINCE D POINTS TO BOTTOM WORD OF SIDE 2
  8729								;C-D IS NUMBER OF BYTES IN SIDE 2'S DLIST
  8730	062546	006202				ASR	C	;C/2 = NUMBER OF WORDS
  8731	062550	012304			DR.TS3:	MOV	(D)+,E	;NEXT WORD OF SIDE 2'S DLIST
  8732	062552	042704	034000			BIC	#34000,E	;CLEAR THE DIRECTION BITS THEREIN
  8733	062556	050104				BIS	B,E	;AND SET THEM FROM THE NEW DIREC IN B
  8734	062560	010420				MOV	E,(A)+	;STORE IN DLIST
  8735	062562	005302				DEC	C	;NUMBER OF WORDS IN SIDE 2'S DLIST
  8736	062564	003371				BGT	DR.TS3	;THERE ARE MORE WORDS
  8737					
  8738					;SIDE 4 IS IDENTICAL TO SIDE 1
  8739					;FURTHERMORE, SIDE 1 IS MADE UP OF ONLY ONE WORD
  8740	062566	017720	121114			MOV	@TUB,(A)+	;PUT THE FIRST WORD OF TURTLE INTO TOP WORD
  8741	062572	012710	140600			MOV	#DPOP!DSTOP,(A)	;DISPLAY POP AND STOP.
  8742					
  8743					;RESTORE DIREC, THEN RETURN
  8744	062576	012667	121116			MOV	(SP)+,DIREC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 254
	TURTLE 59	PAGE 33.1 	DISPLAY UTILITY ROUTINES

  8745	062602	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 255
	TURTLE 59	PAGE 34 	DISPLAY UTILITY ROUTINES

  8746					
  8747					
  8748					;DRAW TURTLE SIDE
  8749					;	DRAW ONE SIDE OF THE TURTLE
  8750					;	DIREC CONTAINS THE DIRECTION
  8751					;	TUT POINTS TO TOP OF TURTLE DISPLAY LIST SO FAR
  8752					;	C,D = + OR - DX OR DY
  8753	062604	042767	177707	121106	DR.TSD:	BIC	#177707,DIREC	;BITS MAY HAVE BEEN SET BY THE SUBTRACTING
  8754	062612	004767	000024			JSR	PC,DR.SC
  8755	062616	012702	000001			MOV	#1,C	;BYCNT
  8756	062622	004767	000114			JSR	PC,DR.NE1
  8757	062626	066703	117614			ADD	TUT,D	;D = NEW TOP OF TURTLE
  8758	062632	010367	117610			MOV	D,TUT
  8759	062636	000167	000220			JMP	DR.ASC	;ACTUALLY CREAT THE DISPLAY LIST
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 256
	TURTLE 59	PAGE 35 	DISPLAY UTILITY ROUTINES

  8760					
  8761					
  8762					;SET UP CON AND AC
  8763					;	CALL WITH D,E = + OR - DX OR DY
  8764					;	RETURNS A=CON, B = AC
  8765	062642	005703			DR.SC:	TST	D
  8766	062644	002001				BGE	DR.TE	;TEST E
  8767	062646	005403				NEG	D	;MAKE D POSITIVE
  8768					;MAKE SURE E IS POSITIVE
  8769	062650	005704			DR.TE:	TST	E
  8770	062652	002001				BGE	DR.BIG	;NEXT WE'LL SEE WHICH IS BIGGER
  8771	062654	005404				NEG	E	;MAKE D POSITIVE
  8772					
  8773					;WHICH IS BIGGER
  8774	062656	012700	177304		DR.BIG:	MOV	#MQ,A
  8775	062662	005010				CLR	(A)	;START TO SET UP DIVISION
  8776	062664	020304				CMP	D,E
  8777	062666	003011				BGT	DR.DBG	;D IS BIGGER
  8778	062670	001404				BEQ	DR.EQ	;THEY ARE THE SAME SIZE
  8779					
  8780					;OTHERWISE, E IS BIGGER
  8781	062672	010340				MOV	D,-(A)	;HIGH ORDER DIVIDEND
  8782	062674	010440				MOV	E,-(A)	;AND E IS THE DIVISOR
  8783	062676	010405				MOV	E,F	;WHICHEVER IS BIGGER IS THE NUMBER OF INCS
  8784	062700	000407				BR	DR.SC4
  8785					
  8786					;THEY ARE THE SAME SIZE
  8787	062702	012700	177777		DR.EQ:	MOV	#-1,A	;SET CON = .777...
  8788	062706	010405				MOV	E,F	;NUMBER OF INCS
  8789	062710	000406				BR	DR.SC5
  8790					
  8791					;D IS BIGGER
  8792	062712	010440			DR.DBG:	MOV	E,-(A)	;HIGH ORDER DIVIDEND
  8793	062714	010340				MOV	D,-(A)	;AND D IS THE DIVISOR
  8794	062716	010305				MOV	D,F	;NUMBER OF INCS
  8795					
  8796					;NOW PICK UP THE QUOTIENT
  8797	062720	062700	000004		DR.SC4:	ADD	#4,A	;POINT A TO QUOTIENT
  8798	062724	011000				MOV	(A),A	;SET CON TO THE QUOTIENT
  8799					
  8800					;NOW SET AC = .1000 = 1/2 IN THIS REPRESENTATION
  8801	062726	012701	100000		DR.SC5:	MOV	#100000,B
  8802	062732	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 257
	TURTLE 59	PAGE 36 	DISPLAY UTILITY ROUTINES

  8803					
  8804					
  8805					;CALCULATE THE NEW END POINT OF THE DLIST
  8806					;	CALL WITH F = THE NUMBER OF INCS
  8807					;	RETURNS D = NUMBER OF MORE WORDS IN DLIST
  8808					;	C = PLACE WHERE FIRST INCREMENT CAN GO IN LAST DWORD
  8809	062734	020227	000001		DR.NEP:	CMP	C,#1
  8810	062740	001003				BNE	DR.NE2
  8811					
  8812	062742	152767	000020	120723	DR.NE1:	BISB	#TEMF,DFLAGS	;TEMF IS SET WHEN YOU CAN'T HOOK
  8813	062750	010046			DR.NE2:	MOV	A,-(SP)	;SAVE A REGISTER
  8814	062752	012703	177304			MOV	#MQ,D
  8815	062756	010513				MOV	F,(D)	;DIVIDEND=NUMBER OF INCS
  8816	062760	005043				CLR	-(D)
  8817	062762	012743	000010			MOV	#8.,-(D)	;DIVISOR.
  8818	062766	005723				TST	(D)+
  8819	062770	012300				MOV	(D)+,A	;PUT REMAINDER IN A
  8820	062772	011303				MOV	(D),D	;PUT QUOTIENT INTO D
  8821	062774	005300			DR.N1:	DEC	A	;THE REMAINDER
  8822	062776	002413				BLT	DR.N25	;FINISHED SHIFTING, BUT BYCNT DIDNT FALL OFF
  8823	063000	006202				ASR	C	;SHIFT BYCNT RIGHT
  8824	063002	103374				BCC	DR.N1
  8825					
  8826					;SINCE CARRY SET, BYCNT FELL OFF RIGHT END OF REGISTER
  8827	063004	106002				RORB	C	;STICK A ONE IN THE HIGH BIT OF C
  8828	063006	005203				INC	D	;INCREMENT THE QUOTIENT
  8829	063010	012704	000100			MOV	#100,E	;INCREMENT MODE MARKER
  8830	063014	005204			DR.N2:	INC	E	;COUNTER IN LAST DWORD
  8831	063016	005300				DEC	A	;THE REMAINDER
  8832	063020	002411				BLT	DR.N3
  8833	063022	006202				ASR	C	;SHIFT BYCNT RIGHT
  8834	063024	000773				BR	DR.N2
  8835					
  8836					;C IS SET CORRECTLY, BUT HAVE TO GET COUNT IN E
  8837	063026	010246			DR.N25:	MOV	C,-(SP)	;SAVE FOR A WHILE
  8838	063030	012704	000111			MOV	#111,E	;INCREMENT-MODE MARKER + 9
  8839	063034	005304			DR.N26:	DEC	E	;DEC THE COUNT
  8840	063036	006202				ASR	C	;SHIFT  BYCNT
  8841	063040	103375				BCC	DR.N26	;DIDN'T FALL OFF.  DEC COUNT AGAIN
  8842	063042	012602				MOV	(SP)+,C	;E IS SET NOW.  RESTORE C.
  8843					
  8844	063044	042704	000010		DR.N3:	BIC	#10,E	;STRAY BIT THAT MIGHT BE ON
  8845	063050	056704	120644			BIS	DIREC,E	;OR IN THE DIRECTION
  8846	063054	006303				ASL	D	;NUMBER OF WORDS IS 2*QUOTIENT
  8847	063056	012600				MOV	(SP)+,A	;RESTORE A
  8848	063060	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 258
	TURTLE 59	PAGE 37 	DISPLAY UTILITY ROUTINES

  8849					
  8850					
  8851					;ACTUALLY ASSEMBLE THE NEW DISPLAY LIST
  8852					;	CALL WITH A=CON, B=AC, C=BYCNT, D=POINTER  TO FIRST WORD OF DLIST
  8853					;	E=TOP HALF OF THE INC MODE INSTRUCTION, F=NUMBER OF INCS
  8854	063062	000304			DR.ASC:	SWAB	E	;STUFF IN E WAS IN WRONG HALF
  8855	063064	060001			DR.AS0:	ADD	A,B	;CON+AC
  8856	063066	103001				BCC	DR.AS1
  8857	063070	060204				ADD	C,E	;CARRY, SO PUT A 1 INTO DCODE
  8858	063072	005305			DR.AS1:	DEC	F	;NUMBER OF INCS
  8859	063074	003407				BLE	DR.ALW	;THIS WAS THE LAST WORD
  8860	063076	106302				ASLB	C	;SHIFT BYCNT
  8861	063100	103371				BCC	DR.AS0	;CONTINUE WITH THIS WORD
  8862					
  8863					;THIS WORD DONE
  8864	063102	010443				MOV	E,-(D)	;STORE IN DLIST
  8865	063104	042704	003777			BIC	#3777,E	;0 THE COUNT AND BOTTOM BYTE
  8866	063110	005202				INC	C	;SET C TO 1
  8867	063112	000764				BR	DR.AS0
  8868					
  8869					;ALL THAT'S LEFT TO DO IS STORE THE BOTTOM WORD OF NEW DLIST
  8870	063114	132767	000020	120551	DR.ALW:	BITB	#TEMF,DFLAGS	;IS BOTTOM WORD OF NEW SAME AS TOP WORD OF OLD?
  8871	063122	001002				BNE	DR.AS9	;NO.
  8872	063124	156304	177776			BISB	-2(D),E	;SET THE BITS IN BOTTOM WORD THAT WERE ALREADY SET IN DLIST
  8873	063130	010443			DR.AS9:	MOV	E,-(D)	;STORE BOTTOM WORD
  8874					
  8875	063132	000207				RTS	PC
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 259
	TURTLE 59	PAGE 38 	DISPLAY UTILITY ROUTINES

  8876					
  8877					.STITL DISPLAY BUFFERS
  8878					
  8879					.IF2
  8880						PAD ^\START OF BUFFERS\,\.
  8881					.ENDC
  8882					
  8883		063134				DISREL=.	;DISPLAY RELOCATION
  8884					
  8885					;FIRST WORD OF EACH DISPLAY IS HERE
  8886						REPT1 3,<DLIST+<.RPCNT*DLEN>-DISREL>/2!DPUSHJ
  8887						REPT1 5,DSTOP
  8888					
  8889					;THE DISPLAY PDL POINTERS FOLLOW
  8890		063154				DPDLP=.
  8891						REPT1 10,-1
  8892					
  8893					;THE DISPLAY PDL'S GO HERE
  8894		063174				DPDL=.
  8895		063414				.=.+SDPDLL	;SAVE A BLOCK OF CORE FOR PDL'S
  8896					
  8897					;THE BODY OF THE DISPLAY LISTS GO HERE
  8898		063414				DLIST=.
  8899		065014				.=.+SDLEN	;SAVE A BLOCK OF CORE FOR DISPLAY LISTS
  8900					
  8901					;THE TURTLE DISPLAY LISTS GO HERE
  8902		065014				TLIST=.
  8903		065074				.=.+STLEN	;SAVE A BLOCK OF CORE FOR THE TURTLES
  8904					
  8905					;AND THAT IS THE END OF THE DISPLAY LIST BUFFERS
  8906		065073				DLTOP=.-1
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 260
	ZEND 67	PAGE 1 	DISC BLOCKS, NODE SPACE AND TEST LINES

  8907						.STITL	DISC BLOCKS, NODE SPACE AND TEST LINES
  8908		001736				VERN==VERN+%FNAM2
  8909					
  8910						.MACR NODE A,B
  8911						.XLIST
  8912					$.==$$+1
  8913						A
  8914						B
  8915					$$==$$+1
  8916						.LIST
  8917					.ENDM
  8918					
  8919		001736			VERNF==VERN
  8920	065074	065076			SALTL:	LTL
  8921	065076	000145			LTL:	L1
  8922	065100	000151				L2
  8923	065102	000156				L3
  8924	065104	000202				L4
  8925	065106	000220				L5
  8926	065110	000225				L6
  8927	065112	000000				0	;L7
  8928	065114	000000				0	;L8
  8929	065116	000000				0	;L9
  8930	065120	000000				0	;L10
  8931	065122	000000				0	;L11
  8932	065124	000000				0	;L12
  8933	065126	000000				0	;L13
  8934	065130	000000				0	;L14
  8935	065132	000000				0
  8936					
  8937		065134			.EVEN
  8938					SLOT1:
  8939		044404			MSLTLN==LUVBLK+PPDLL+SPDLL+DBUFL+DDIRL+<4*4096.>	;ALL YOU COULD POSSIBLY WANT
  8940		065540			UVSAV:	.=.+LUVBLK
  8941		066340				.=.+PPDLL
  8942		066340				IP=.
  8943		066344			PDLINK:	.=.+4	;LINK TO PREVIOUS DISK BLOCK
  8944		067144				.=.+SPDLL
  8945		067144				IS=.
  8946		067150			SDLINK:	.=.+4
  8947		000103			HCC==67.	;HASH CODE CONSTANT - A PRIME
  8948		067210			UHCT:	.=UHCT+<2*16.>
  8949	067210	000266				$OB3
  8950	067212	000267				$OB4
  8951	067214	000270				$OB5
  8952		067226				.=UHCT+<2*23.>
  8953	067226	000227				$OB2
  8954		067340				.=UHCT+<2*60.>
  8955	067340	000171				$OB1
  8956		067356				.=UHCT+<2*HCC>
  8957		067756			DBUF:	.=.+DBUFL
  8958		071756			DDIR:	.=.+DDIRL
  8959	071756	000000				0
  8960	071760	000000				0
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 261
	ZEND 67	PAGE 1.1 	DISC BLOCKS, NODE SPACE AND TEST LINES

  8961					
  8962					.IF2
  8963						PAD ^\ START OF NODESP\,\.
  8964					.ENDC
  8965					
  8966	071762	000000			NODESP:	0	;NODE 0
  8967	071764	000000				0
  8968		072102				.=NODESP+80.
  8969		140024				TRUE=140000+20.
  8970	072102	070025				SSTR+21.	;20
  8971	072104	051124				"TR
  8972	072106	070000				SSTR+0	;21
  8973	072110	042525				"UE
  8974		140026				FALSE=140000+22.
  8975	072112	070027				SSTR+23.	;22
  8976	072114	040506				"FA
  8977	072116	070030				SSTR+24.	;23
  8978	072120	051514				"LS
  8979	072122	070000				SSTR+0		;24
  8980	072124	000105				'E
  8981		072606				.=NODESP+404.
  8982		000145				L1=101.			;PRINT "ABCD"
  8983	072606	000146				SFUN+102.	;NODE 101
  8984	072610	005240				$PRINT
  8985	072612	140000				LSTR+0		;102
  8986	072614	140147				LSTR+103.
  8987	072616	070150				SSTR+104.	;103
  8988	072620	041101				"AB
  8989	072622	070000				SSTR	;104
  8990	072624	042103				"CD
  8991		000151				L2=105.			;"123"
  8992	072626	140000				LSTR+0	;105
  8993	072630	140152				LSTR+106.
  8994	072632	070153				SSTR+107.	;106
  8995	072634	031061				"12
  8996	072636	070000				SSTR	;107
  8997	072640	000063				'3
  8998	072642	000000				SFUN	;108
  8999	072644	000000				0
  9000	072646	000000				SFUN		;109
  9001	072650	000000				0
  9002		000156				L3=110.			;(PRINT "AXBYJ" "1Q" "FOOBAR")
  9003	072652	000157				SFUN+111.	;110
  9004	072654	006004				$LPAR
  9005	072656	000160				SFUN+112.	;111
  9006	072660	005240				$PRINT
  9007	072662	140165				LSTR+117.	;112
  9008	072664	140162				LSTR+114.
  9009	072666	070000				SSTR+0		;113
  9010	072670	050461				"1Q
  9011	072672	070163				SSTR+115.	;114
  9012	072674	054101				"AX
  9013	072676	070164				SSTR+116.	;115
  9014	072700	054502				"BY
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 262
	ZEND 67	PAGE 1.2 	DISC BLOCKS, NODE SPACE AND TEST LINES

  9015	072702	070000				SSTR+0		;116
  9016	072704	000112				'J
  9017	072706	140166				LSTR+118.	;117
  9018	072710	140161				LSTR+113.
  9019	072712	110167				ATOM+119.	;118
  9020	072714	110172				ATOM+122.
  9021	072716	000000				SFUN+0	;119
  9022	072720	006012				$RPAR
  9023	072722	000000				SFUN+0		;120
  9024	072724	000000				0
  9025		000171			$OB1=121.
  9026	072726	000000				0		;121 = START OF UOB BUCKET 60.
  9027	072730	000172				$FOO
  9028		000172				$FOO=122.
  9029	072732	110175				ATOM+125.		;122 - HEADER OF FIRST UOE
  9030	072734	140173				LSTR+123.
  9031	072736	070174				SSTR+124.	;123
  9032	072740	047506				"FO
  9033	072742	070000				SSTR+0		;124
  9034	072744	000117				'O
  9035	072746	030241				VBIND+$FOOF		;125 - VARIABLE BINDING OF 1ST UOE
  9036	072750	140176				LSTR+126.
  9037	072752	070177				SSTR+127.	;126
  9038	072754	047506				"FO
  9039	072756	070200				SSTR+128.	;127
  9040	072760	041117				"OB
  9041	072762	070000				SSTR+0		;128
  9042	072764	051101				"AR
  9043	072766	000000				0		;129
  9044	072770	000000				0
  9045		000202				L4=130.		;IF "TRUE" THEN PRINT "TRUE" ELSE PRINT "FALSE"
  9046	072772	000203				SFUN+131.	;130
  9047	072774	004726				$IF
  9048	072776	140206				LSTR+134.	;131
  9049	073000	140204				LSTR+132.
  9050	073002	070205				SSTR+133.	;132
  9051	073004	051124				"TR
  9052	073006	070000				SSTR+0		;133
  9053	073010	042525				"UE
  9054	073012	000207				SFUN+135.	;134
  9055	073014	005574				$THEN
  9056	073016	000210				SFUN+136.	;135
  9057	073020	005240				$PRINT
  9058	073022	140211				LSTR+137.	;136
  9059	073024	140204				LSTR+132.
  9060	073026	000212				SFUN+138.	;137
  9061	073030	004456				$ELSE
  9062	073032	000213				SFUN+139.	;138
  9063	073034	005240				$PRINT
  9064	073036	140000				LSTR+0	;139
  9065	073040	140214				LSTR+140.
  9066	073042	070215				SSTR+141.	;140
  9067	073044	040506				"FA
  9068	073046	070216				SSTR+142.	;141
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 263
	ZEND 67	PAGE 1.3 	DISC BLOCKS, NODE SPACE AND TEST LINES

  9069	073050	051514				"LS
  9070	073052	070000				SSTR+0		;142
  9071	073054	000105				'E
  9072	073056	000000				SFUN+0		;143
  9073	073060	000000				0
  9074		000220				$$=144.
  9075		000220			L5=$$	;MAKE "BAR" "AB1C"
  9076						NODE SFUN+$.,$MAKE
  9077						NODE ATOM+$.,ATOM+$BAR
  9078						NODE LSTR,LSTR+$.
  9079						NODE SSTR+$.,"AB
  9080						NODE SSTR,"1C
  9081		000225			L6=$$	;PRINT :BAR
  9082						NODE SFUN+$.,$PRINT
  9083						NODE UVAR,UVAR+$BAR
  9084		000227			$OB2=$$
  9085						NODE 0,$BAR	;START OF UOB BUCKET 23.
  9086		000230			$BAR=$$
  9087						NODE ATOM,LSTR+$.
  9088						NODE SSTR+$.,"BA
  9089						NODE SSTR,'R
  9090		000233			L7==$$	;FOO :BAR "GRINCH"
  9091						NODE UFUN+$.,$FOO
  9092						NODE UVAR+$.,UVAR+$BAR
  9093						NODE LSTR,LSTR+$.
  9094						NODE SSTR+$.,"GR
  9095						NODE SSTR+$.,"IN
  9096						NODE SSTR,"CH
  9097		000241			$FOOF=$$
  9098						NODE FBIND+$.,LIST+$FLLP
  9099						NODE SFBIND,LIST+$FSFB
  9100		000243			$FLLP=$$
  9101						NODE LIST+$.,LIST+$FL0
  9102						NODE LIST+$.,LIST+$FL1
  9103						NODE LIST,LIST+$FL2
  9104		000246			$FL0=$$
  9105						NODE SNUM+$.,2
  9106						NODE SNUM+$.,$A
  9107						NODE SNUM,$B
  9108		000251			$FL1=$$
  9109						NODE SNUM+$.,10.
  9110						NODE SFUN+$.,$PRINT
  9111						NODE UVAR,UVAR+$A
  9112		000254			$FL2=$$
  9113						NODE SNUM+$.,20.
  9114						NODE SFUN+$.,$PRINT
  9115						NODE UVAR,UVAR+$B
  9116		000257			$FSFB=$$
  9117						NODE SNUM+$.,2	;NO. ARGS
  9118						NODE SNUM+$.,0	;PROCD SWAP NO.
  9119						NODE SNUM+$.,0	;NO. NODES
  9120						NODE SNUM+$.,0	;NO. FLUSHABLE NODES
  9121						NODE SNUM+$.,0	;DISC ADDR 1
  9122						NODE SNUM+$.,0	; "     "     2
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 264
	ZEND 67	PAGE 1.4 	DISC BLOCKS, NODE SPACE AND TEST LINES

  9123						NODE SNUM+$.,0	;# WORDS ON DISC
  9124		000266			$OB3=$$
  9125						NODE 0,$A	;START OF UOB BUCKET 16.
  9126		000267			$OB4=$$
  9127						NODE 0,$B	;START OF UOB BUCKET 17.
  9128		000270			$OB5=$$
  9129						NODE 0,$C	;START OF UOB BUCKET 18.
  9130		000271			$A=$$
  9131						NODE ATOM,LSTR+$.
  9132						NODE SSTR,'A
  9133		000273			$B=$$
  9134						NODE ATOM+$BVB,LSTR+$.
  9135						NODE SSTR,'B
  9136		000275			$BVB=$$
  9137						NODE VBIND,LSTR+$.
  9138						NODE SSTR+$.,"B.
  9139						NODE SSTR+$.,"HA
  9140						NODE SSTR+$.,"S.
  9141						NODE SSTR+$.,"LO
  9142						NODE SSTR,"TS
  9143		000303			$C==$$
  9144						NODE ATOM+$CVB,LSTR+$.
  9145						NODE SSTR,'C
  9146		000305			$CVB==$$
  9147						NODE VBIND,LNUM+$.
  9148						NODE SNUM,100.
  9149		000307			L8=$$	;MAKE "BLIP" 13
  9150						NODE SFUN+$.,$MAKE
  9151						NODE LSTR+$.,LSTR+$BLIP
  9152						NODE LNUM,LNUM+$.
  9153						NODE SNUM,13
  9154		000313			L9=$$	;PRINT : "BLIP"
  9155						NODE SFUN+$.,$PRINT
  9156						NODE SFUN+$.,$DOTS
  9157						NODE LSTR,LSTR+$BLIP
  9158		000316			L10=$$	;MAKE "BLIP" "XX"
  9159						NODE SFUN+$.,$MAKE
  9160						NODE LSTR+$.,LSTR+$BLIP
  9161						NODE LSTR,LSTR+$.
  9162						NODE SSTR,"XX
  9163		000322			L11=$$	;PRINT :"BLIP"
  9164						NODE SFUN+$.,$PRINT
  9165						NODE SFUN+$.,$DOTS
  9166						NODE LSTR,LSTR+$BLIP
  9167		000325			L12=$$	;MAKE "BLAP" "YY"
  9168						NODE SFUN+$.,$MAKE
  9169						NODE LSTR+$.,LSTR+$BLAP
  9170						NODE LSTR,LSTR+$.
  9171						NODE SSTR,"YY
  9172		000331			L13==$$	;PRINT :"BLAP"
  9173						NODE SFUN+$.,$PRINT
  9174						NODE SFUN+$.,$DOTS
  9175						NODE LSTR,LSTR+$BLAP
  9176		000334			L14==$$	;STARTDISPLAY
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 265
	ZEND 67	PAGE 1.5 	DISC BLOCKS, NODE SPACE AND TEST LINES

  9177						NODE SFUN,$START
  9178		000335			L15==$$	;FORWARD :C
  9179						NODE SFUN+$.,$FORWA
  9180						NODE UVAR,UVAR+$C
  9181		000337			$BLAP==$$	;"BLAP"
  9182						NODE SSTR+$.,"BL
  9183						NODE SSTR,"AP
  9184		000341			$BLIP==$$	;"BLIP"
  9185						NODE SSTR+$.,"BL
  9186						NODE SSTR,"IP
  9187		000343				NNN=$$	;NEXT NODE NO.
  9188		000343			SOFN=NNN	;START OF FREE NODES
  9189		073576			ASOFN=.
  9190		073576			LOGEND=.
  9191					
  9192					
  9193					;IN THE EVENT THAT THE SYSTEM OBLIST
  9194					;HAS BEEN INCORRECTLY SET UP, AND THE MACRO TRIED TO WRITE OVER
  9195					;PARTS OF IT, THIS LITTLE .IFLE WILL PRINT OUT A MESSAGE
  9196		000006				.IFLE OBX0
  9197						********
  9198						YOU ARE OVERWRITING THE SYSTEM OBLIST
  9199						********
  9200						.XLIST
  9201						.ENDC
  9202		000000				.END
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 266
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	A	000000R		BL.SR	042626		CLE	053002		CSN2LN	000005H	
	AC	177302		BL.W1	042564		CLE1	053016		CSN2LS	000015H	
	ACKRC1	014530		BL.W2	042562		CLE2	053036		CSPDLP	003524	
	ACKREC	014524		BL.W3	042570		CLGN	003510		CT	003544	
	ACR.D	061042		BLKFR1	007542		CLKBDM	011526		CT.ORT	042664	
	ACRELF	003452		BLKFR2	007560		CLKBR1	011514		CT.SEN	042674	
	ACRES	011776		BLKFRE	007524		CLKBR2	011520		CT.W1	042654	
	ACRII	061032		BLKGR2	007374		CLKBRK	011450		CTIP	000004H	
	ACRIII	061024		BLKGR3	007370		CLN	003504		CTIP.E	041350	
	ACSAV	011762		BLKGR4	007422		CLN2LS	000121H		CTIQ	024646	
	ACTREC	014512		BLKGR5	007426		CLN2SN	000112H		CTIS	024614	
	ACTSTO	043062		BLKGR6	007432		CLP	003506		CTIT	000005H	
	ADDX	150000H		BLKGRB	007366		CLRSTF	036376		CTIT.E	041416	
	ADDXY	154000H		BLST	033404		CLS2LN	000210H		CTIUQ	024650	
	ADDY	144000H		BLST2	033454		CLS2SN	000126H		CTN	003512	
	ADLN	053050		BLST3	033464		CMPST1	044404		CTOS	024654	
	ADLN1	053116		BLSTF	033476		CMPST2	044440		CTP	003514	
	ADLN2	053156		BLSTF1	033536		CMPSTE	044470		CURA	003664	
	ADLN3	053174		BLSTI	033364		CNINT	031214		CURX	003654	
	ADLN4	053240		BLSTI1	033376		CNSND	031230		CURY	003660	
	ADLN5	053170		BLSTRT	033450		CNSQ	025736		D	000003R	
	AEVEN	061116		BMT	020474		CNVNOP	000001H		D.RET	060300	
	ALTL	003574		BPTBRV	000014		CNVTBL	046326		DALOC2	015672	
	ANGCRP	060724		BRAKR	025564		CNVTOP	045674H		DALOC3	015710	
	ANSLT	000027H		BREAK	025530		CO	003530		DALOC4	015746	
	ANYT	000000H		BREAK1	025556		COF	003536		DALOC5	015736	
	ARS	177316		BREAKF	040000H		CONV.F	045656		DALOC6	015762	
	ASOFN	073576		BRKCHR	002402		CONVER	045570		DALOC7	015774	
	ASSSW	000000		BSAN	033542		COP	000002H		DALOC8	016012	
	ATOM	110000H		BSAN1	033572		COP.E	040012		DATA	014556	
	ATOMT	000001H		BSANR	033574		COPYL	042704		DATA1	014612	
	B	000001R		BSS	000000H		COPYL1	042710		DATEC	011550	
	BACK	055532		BSS.E	037176		COPYLR	042734		DBITBE	003652	
	BASEUS	003442		BUSSER	006674		CORCHK	015446		DBITTB	003614	
	BEBRV	000004		BUTFIR	042360		CORTOP	002246		DBK	056650	
	BF.SEN	042432		BUTLAS	042526		COSA	003716		DBUF	067356	
	BF.W	042366		BYCNT	003722		COUNT	042636		DBUFL	000400H	
	BF.W1	042416		C	000002R		CPDLP	003526		DCLRUS	002316	
	BIF1	054110		CA2LS	000002H		CPP	003500		DCONS	002406	
	BINDF1	053722		CFL	000001H		CPS	000003H		DCRACF	013734	
	BINDF2	054004		CFL.E	040572		CPS.E	040064		DCRB	174002	
	BINDF3	054000		CH	020352		CPSN	003502		DCRBF1	014110	
	BINDF4	054016		CHARNO	023372		CPYSTR	042746		DCRBF2	014210	
	BINDF5	053772		CHI	003600		CRF	000004H		DCRBFS	002322	
	BINDF6	054044		CHKBND	060540		CRLF	012224		DCRBIP	013732	
	BITCNT	015200		CKDOTF	033202		CRMES	002376		DCRBRK	014360	
	BITCT1	015206		CKPRCD	047054		CSEQ	045264		DCRBRV	000300	
	BITCT2	015210		CKTYP	050132		CSEQ1	045324		DCRCKS	013736	
	BIV1	054166		CKUI	050154		CSEQ2	045364		DCRDRB	014010	
	BKSL$	000017H		CKUI0	050202		CSEQ3	045456		DCRLST	013750	
	BL.ORT	042574		CKUI1	050222		CSFAL1	044456		DCRMID	013740	
	BL.SEN	042600		CKUI2	050240		CSFALS	044454		DCRPRB	013744	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 267
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	DCRRTS	015066		DMINT4	031074		DR.DBG	062712		DSKSG2	007116	
	DCRS	174000		DMINT5	031044		DR.EQ	062702		DSKSGO	007014	
	DCRWBL	013746		DMK	020642		DR.L1	062362		DSKSR1	006760	
	DCRWCT	013742		DMON	011640		DR.LAN	062320		DSKSRT	006742	
	DCTB	174006		DMRBRK	001440		DR.LBN	062334		DSKWA1	007224	
	DCTBFS	002326		DMRBRV	000310		DR.LIN	062264		DSKWA2	007212	
	DCTBRK	015222		DMSND	031102		DR.N1	062774		DSKWAI	007216	
	DCTBRV	000304		DMSND1	031154		DR.N2	063014		DSKWC	177462	
	DCTBST	014050		DMSND2	031162		DR.N25	063026		DSTOP	140400H	
	DCTS	174004		DMSND3	031210		DR.N26	063034		DSVB	055176	
	DCTSMS	014030		DMSND4	031126		DR.N3	063044		DTBL	006120	
	DDIR	067756		DMSND5	031206		DR.NE1	062742		DTBL2	006320	
	DDIRBL	000400H		DMSQ	025610		DR.NE2	062750		DTIBFL	002000H	
	DDIRL	002000H		DMSQ1	025636		DR.NEP	062734		DTOTB	034532	
	DEBUG	000001H		DMSQ2	025666		DR.SC	062642		DTYIBF	002522	
	DEDBFL	002000H		DMSQ3	025702		DR.SC4	062720		DUSECT	002310	
	DEDTBF	002526		DMSQ4	025724		DR.SC5	062726		DWRTCC	000107H	
	DFD	056652		DMTBR	175006		DR.TE	062650		DWRTEC	000103H	
	DFD.0	056676		DMTBRK	001442		DR.TS3	062550		DYAL	061336	
	DFD.1	056720		DMTBRV	000314		DR.TSD	062604		DYAL1	061352	
	DFD.2	056762		DMTRAN	031176		DR.TUR	062416		DYAL2	061372	
	DFLAGS	003673		DMTT	001200		DREADC	000105H		DYAL3	061400	
	DHDDIR	002532		DMWC	001036		DREC	061316		DYAL4	061404	
	DIFF	043752		DNDONE	007236		DRSTXY	143000H		DYAL5	061414	
	DING	025602		DO	043436		DRT	057454		DYAL6	061436	
	DIREC	003720		DO1	043466		DRT.HD	057460		DYAL7	061446	
	DISASS	000001H		DO2	043532		DRTRET	057510		DYAL8	061470	
	DISBIT	003726		DO3	043550		DSAMFL	001000H		DYAL9	061510	
	DISBRK	001436		DO4	043560		DSGC1	062112		DYB	003700	
	DISBRV	000270		DONE	017226		DSGC2	062124		DYF1	061644	
	DISPLA	060156		DONEMP	043762		DSGC3	062126		DYF11	061650	
	DISREL	063134		DORBEG	003654H		DSGC4	062100		DYF2	061710	
	DISRM	060230		DOREND	003674H		DSGC6	062172		DYFREE	061600	
	DIV$	000012H		DOTF	000400H		DSGC9	062104		DYLIB	061722	
	DIV.1	044044		DOTS	043330		DSGCF	062074		DYLIB1	061726	
	DIV.8	044072		DOTS$	000013H		DSGCF1	062144		DYLIB2	061744	
	DIVDE	044040		DOTS2	043336		DSKA	177466		DYLIB3	062000	
	DIVIDE	177300		DPD	057740		DSKAE	177470		DYLIB4	062004	
	DKRTYS	002244		DPDL	063174		DSKBRK	007574		DYLIB5	062026	
	DLEN	000400H		DPDLL	000060H		DSKBRV	000204		DYLIB6	062034	
	DLIST	063414		DPDLP	063154		DSKCA	177464		DYLIB7	062072	
	DLT	057452		DPOP	140200H		DSKCRB	002212		DYR	003702	
	DLTOP	065073		DPOPJ	140100H		DSKDBR	177472		DYRET	061574	
	DMBAR	175002		DPROVK	007060		DSKDST	002312		DYT	003704	
	DMBCR	175004		DPU	057726		DSKLOS	007642		DYXFR	061326	
	DMBIT	024556		DPUSHJ	100000H		DSKMT	177474		DYXFR1	061514	
	DMCA	000776		DR.ALW	063114		DSKRET	007634		DYXFR2	061532	
	DMCSR	175000		DR.AS0	063064		DSKRND	002332		DYXFR3	061564	
	DMINT	030754		DR.AS1	063072		DSKRTY	007630		E	000004R	
	DMINT1	030762		DR.AS9	063130		DSKS	177460		EAESR	177311H	
	DMINT2	031024		DR.ASC	063062		DSKSG	177476		EDBFSZ	000040H	
	DMINT3	031040		DR.BIG	062656		DSKSG1	007026		EDIT	052156	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 268
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	EDITA	025374		EVDNO	047444		FORWAR	055502		GLWARG	046464	
	EDITF	000010H		EVF1	047234		FPRINT	043570		GNASN	053436	
	EDITZ	025420		EVF11	047226		FPUT	042004		GNC	033576	
	EDQF	027460		EVF2	047276		FPUT1	042042		GNC1	033666	
	ELAPSE	001506		EVFUN	047166		FQF	000020H		GNC2	033656	
	ELSE	044776		EVI	047016		FRDSKW	000003H		GNC3	033632	
	EMPTY	034136		EVI1	047034		FREE	003464		GNC4	033606	
	EMPTY1	034544		EVI2	047100		FRELST	055402		GNCN	003604	
	EMPTYP	044630		EVL	047516		FRL1	055430		GNL1	053352	
	EMTBK	033676		EVL1	047542		FRL2	055446		GNL2	053416	
	EMTBRK	006672		EVLI1	017640		FRNEWU	000007H		GNL3	053426	
	EMTBRV	000030		EVLI2	020002		FRRAND	000006H		GNL4	053412	
	END	052730		EVLI3	017660		FRSCED	000001H		GNLINE	053300	
	END1	052502		EVLI4	017704		FRTRCF	000001H		GNSND	031240	
	END2	052776		EVLI5	017766		FRTYIH	000010H		GNSND1	031310	
	EQ.A2	044340		EVLI6	017634		FRTYIW	000004H		GNT	020006	
	EQ.F	044126		EVLI7	020004		FRTYOW	000005H		GNT1	020054	
	EQ.FAL	044366H		EVLINE	017626		FSF	000200H		GNT2	020144	
	EQ.FF	044252		EVS	047446		FUNLEV	003516		GNT3	020102	
	EQ.LST	044166		EVVAR	046774		G1NAR1	046444		GNT4	020132	
	EQ.RET	044132		EVW	047572		G1NARG	046434		GNT5	020172	
	EQ.SB1	044260		EVW1	047556		G1RET	046462		GNT6	020052	
	EQ.STR	044324		EVW2	047732		G1SNAP	046576		GO	052564	
	EQ.SUB	044262		EVX	047672		G1WTA	046456		GRB1	055304	
	EQ.W1	044276		EVXM	047352		G2NARG	046426		GRB2	055254	
	EQFALS	044246		EVXP	047322		GBITCH	015156		GRB3	055326	
	EQL$	000015H		EXCH1	002452		GCBITS	003440		GRBAD	055230	
	EQTRUE	044250		F	000005R		GCBTL	001002H		GRBAD1	055232	
	EQUAL	044076		F.SENT	042346		GCDBUG	000001H		GRBAD2	055224	
	EQUAL1	044144		F.STOR	042330		GCDIE	020644		GREATR	044506	
	ERMNO	000052H		F.WTA	042322		GCLOCK	002374		GREQ	044560	
	ERP	000006H		FALSE	140026		GCMARK	020646		GRTR	000000	
	ERP.E	037360		FBIND	020000H		GCMKL	002454		GSTR0	017052	
	ERRBK	033704		FCQF	000200H		GCP1	003472		GSTR1	017220	
	ERRBUF	003730		FIRST	042306		GCP2	003474		GSTR6	016736	
	ERRF	000040H		FIX	060572		GCPREV	003476		GSTR8	016652	
	ERRINA	003456		FLAGS	003522		GCRT2	021614		GSTR9	016562	
	ERROOB	060556		FLAGS2	003572		GCRT3	021632		GSTRT	017176	
	ERROR	104400		FLEV	036410		GCRT4	021636		GSW1	046504	
	ERRRT	033754		FLISTB	033320		GCRT5	021662		GSW2	046512	
	ERTAB	036430		FLSADR	002472		GCTRCF	000010H		GTIME	013636	
	ERTAP	034156		FLSB1	033344		GEDC	027336		GTLINE	053270	
	ERTAS	033764		FLSRES	002470		GEDC1	027356		GTR$	000016H	
	ERTEND	036554		FLUSH	010610		GEDC2	027416		GUOE1	043432	
	ERTL0	035426		FLUSH1	011040		GEDC3	027434		GUOE2	043420	
	ERTL1	035526		FLUSH2	011110		GEDC4	027436		GUOEB	043364	
	ERTLN	035426		FLUSH3	011030		GEDCA	027442		GWORD	015030	
	ETRACE	036274		FLUSH4	010620		GENSQ	025746		GWORDB	015152	
	EVAL	046702		FLUSH5	011070		GETINT	060566		HAS$	000002H	
	EVATM	046760		FNLLP	003570		GETSTR	016600		HCC	000103H	
	EVBUG	000000		FOF	000100H		GLWANE	046514		HEADIN	057634	
	EVCON	046760		FOO	000226H		GLWAR1	046470		HERE	057530	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 269
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	HERE.1	057546		KILLD2	056626		LMPON1	055724		MKSFB	021252	
	HERE.2	057552		KILLDI	056614		LMT	020504		MKSNP	020704	
	HIDETF	000004H		KILLDR	056646		LNTB	000017H		MKSNPL	020654	
	HIDETU	057644		L	000056H		LNTB.E	037750		MKSP1	021306	
	HNM	000007H		L.SEN1	042506		LNUM	130000H		MKSP2	021324	
	HNM.E	040632		L.SENT	042510		LO	003540		MKSP3	021340	
	HNV	000010H		L.SRET	042522		LOCKUS	002372		MKSP4	021550	
	HNV.E	037320		L.W1	042472		LOGDNE	015326		MKSP5	021414	
	HOME	057562		L1	000145		LOGEND	073576		MKSP6	021500	
	HOOKF	000002H		L10	000316		LOGMES	013702		MKSP7	021464	
	HSSL	054734		L11	000322		LOGSEN	015300		MKSP8	021400	
	HSSL1	055026		L12	000325		LOSER	006716		MKSPDL	021302	
	HSSL2	055112		L13	000331H		LOSSCT	006522		MKSVB	021250	
	HSSL3	055100		L14	000334H		LP$	000003H		MKTPS	021260	
	HSSL4	055136		L15	000335H		LPAR	043662		MKUOBI	021110	
	HSSL5	055106		L2	000151		LPAR1	043700		MKUOBL	021102	
	HSSL6	055132		L3	000156		LPOFF	000000		MKUOE	021150	
	IF	044720		L4	000202		LPON	000000		MKVB	021234	
	IFF	000040H		L5	000220		LPUT	042010		MLOOP	016476	
	IFLEV	003520		L6	000225		LPUT1	042072		MLOOP1	016522	
	IFR	044756		L7	000233H		LSEQ	044572		MMAKE	043144	
	IGNT	020174		L8	000307		LSS$	000014H		MMF	000020H	
	IGNT1	020252		L9	000313		LSTR	140000H		MNSLTS	000005H	
	IGNT2	020224		LAMPOF	055734		LTL	065076		MNUSRS	000012H	
	ILN	000011H		LAMPON	055712		LUBLK	000056H		MOD	044034	
	ILN.E	041072		LAST	042454		LUVBLK	000404H		MOD360	060600	
	INF1	000012H		LCE	000015H		LVERNF	000770		MOVETO	057306	
	INF1.E	037032		LCE.E	040672		M360A	060622		MQ	177304	
	INFIX	010000H		LD3NUM	046616		M360R	060634		MQZ	000010H	
	INIT1	016236		LDE	000016H		MAKE	043134		MRD1	017534	
	INIT2	016256		LDE.E	037676		MAKE1	043242		MRD2	017550	
	INSTR	043072		LDN.E	046662		MAKE2	043262		MREAD	017514	
	INSTR1	043074		LDN.L	046640		MAKE3	043272		MSLTLN	044404H	
	INSTR2	043120		LEFT	055612		MAKE4	043204		MSWPOR	001562	
	INT0	054426		LESS	044534		MAKE5	043270		MTO.	057372	
	INT1	054316		LGS	177314		MAKSTR	042752		MTO.1	057316	
	INT2	054322		LINEL	023412		MARKL	020544		MTO.P1	057330	
	INT3	054346		LINENO	003576		MARKN	020430		MTO.P2	057334	
	INT5	054336		LIST	170000H		MAXELN	000060H		MTO.PD	057326	
	INVN	000013H		LIST.1	041734		MEVAL	050260		MTO.PU	057362	
	INVN.E	041456		LIST.2	041752		MEVALN	050250		MTO.R	057360	
	IOTBRK	006520		LIST.9	041772		MFUN	047326		MTO.RM	057406	
	IOTBRV	000020		LIST.P	041724		MIN$	000010H		MTO.XY	057340	
	IP	066340		LIST1	041732		MINUS	000000		MULCOS	060636	
	IS	067144		LISTB	033250		MKDC	062200		MULCS2	060650	
	ITB	000014H		LISTB1	033300		MKDC.K	062252		MULCS3	060666	
	ITB.E	041302		LISTBD	003552		MKDC.R	062246		MULCS9	060720	
	ITINIT	016422		LISTBR	033302		MKFB	021242		MULSIN	060644	
	JDCSW	002404		LISTP	044650		MKL0	020560		MULTIP	177306	
	JTYI	027464		LISTT	000020H		MKL1	020576		NAKREC	014514	
	JTYO	031314		LLPAR	047744		MKL3	020716		NBKTS	003610	
	KILLD1	056620		LMPOF1	055746		MKRNDM	021264		NCHR	003564	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 270
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	NDCTY	000000H		NSL.E	037570		ORTP	050046H		PQF	000004H	
	NDMTY	000007H		NSLOTS	002254		ORTSP	050046		PRAS	034166	
	NDPTY	000000H		NSWPU	001534		OSTR1	042770		PRAS1	034170	
	NDU	000020H		NTB	000023H		OSTR2	042776		PRASR	034202	
	NDU.E	040150		NTB.E	040122		OSTRE1	043024		PRATM	034732	
	NEWSN1	060114		NTF	000024H		OSTRE2	043020		PRBAO	003434	
	NEWSN2	060140		NTF.E	037626		OSTRR	043060		PRCO	034042	
	NEWSNA	060110		NTL	000025H		OUTPUT	051200		PRCO1	034064	
	NEWX	002436		NTL.E	040226		OUTSTR	042764		PRCO2	034124	
	NEWY	002442		NTTY	000010H		P	000006R		PRCT	034650	
	NEXT10	010604		NTY	000001H		P1NARG	046540		PRD$	000005H	
	NEXT11	010362		NULTIM	001516		PAE	000033H		PRDATA	034776	
	NEXT12	010452		NUMBP	044604		PAE.E	041004		PRDN	034354	
	NEXT13	010462		NUMOBS	000133H		PAT	000506		PRDN1	034420	
	NEXT14	010004		NUMT	000002H		PATCH	000506		PRDN2	034454	
	NEXT15	010036		NUNODE	002250		PATEND	000706		PRDN3	034470	
	NEXTU1	007726		NUSER2	002256		PBF	000010H		PRDNL	034344	
	NEXTU2	007732		NUSERS	002252		PC	000007R		PRINT	043564	
	NEXTU3	010072		NY	000026H		PCBRV	000104		PRL1	035244	
	NEXTU4	010110		NY.E	037222		PCCNT	172544		PRL2	035304	
	NEXTU5	010322		OBADD1	004276		PCHR	003612		PRL3	035260	
	NEXTU6	010166		OBADD2	006120		PCS	172540		PRL4	035236	
	NEXTU7	010534		OBSTRT	004302		PCSTBF	172542		PRL5	035322	
	NEXTU8	010546		OBX0	000006		PDLINK	066340		PRL6	035254	
	NEXTU9	010600		OBX1	000002		PENDOW	055666		PRLN	036104	
	NEXTUS	010014		OBX2	000140		PENUF	000001H		PRLN1	036126	
	NFDCTY	000002H		OIP	000027H		PENUP	055642		PRLN2	036132	
	NFDMTY	000002H		OIP.E	041510		PEV1	050546		PRLO	034016	
	NFDPTY	000002H		OLDIR	003672		PEV2	050664		PRLST	035206	
	NFKLTY	000002H		OLDX	003666		PEV3	051014		PRLSTR	035066	
	NFTY	000000H		OLDY	003670		PEV4	050616		PRMTCH	003602	
	NGCSR	164040		OOB	000030H		PEV5	050600		PRNODE	035346	
	NGP2	000400		OOB.E	040262		PEV6	050476		PRNUM	035144	
	NGREL	164042		OOP	000031H		PEVAL	050274		PRNUM1	035162	
	NINU	001536		OOP.E	037464		PFBRV	000024		PRNUM2	035176	
	NKLTY	000000H		OOT	000032H		PLU$	000006H		PROAB	034100	
	NNGC	003454		OOT.E	037142		PLUS	000000		PROC	047466	
	NNN	000343		OPERF	000010H		PN1	051070		PROD	043766	
	NNODES	010000H		ORT	050056		PNH	000034H		PROD.1	044010	
	NNUMF	000040H		ORTA	050020		PNH.E	040740		PROD.2	044030	
	NODATA	015024		ORTB	050024		PNODAB	034616		PRON	034206	
	NODC11	015424		ORTC	050030		PPBASE	003432		PRON1	034224	
	NODESP	071762		ORTD	050034		PPDLL	000600H		PRON2	034262	
	NOR	003534		ORTE	050040		PPNAIF	002000H		PRON3	034244	
	NORMAL	177312		ORTF	050044		PPNAME	034752		PRON4	034276	
	NORT	047356		ORTNA	047764		PPOPL	003424		PRON5	034316	
	NORT1	047362		ORTNB	047770		PPOPT	012114		PRONL	034216	
	NORT2	047442		ORTNC	047774		PPSWP1	012334		PRQQ	035326	
	NOU	000021H		ORTND	050000		PPSWPI	012702		PRS1	034550	
	NOU.E	037102		ORTNE	050004		PPSWPO	012234		PRS11	034642	
	NRABLU	001532		ORTNF	050010		PPUSHL	003426		PRSSTR	035072	
	NSL	000022H		ORTNP	050012		PPUSHT	012070		PRSTR1	035136	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 271
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	PRSTR2	035076		RDLA	033076		RETF	045410		SENS.1	041702	
	PRSTR3	035106		RDLB	033160		REVS	045466		SENS.2	041666	
	PRSTR4	035120		RDLST	033066		REVS1	045564		SENT	170000H	
	PRTAB	034704		RDLX	033132		REVS2	045552		SENT.1	041572	
	PRUV	034742		RDLY	033152		RFLUSH	014402		SENT.2	041632	
	PRUV1	034760		RDSA	032720		RIGHT	055562		SENT.3	041640	
	PS	177776		RDSB	032724		RJLSW	013674		SENT.4	041644	
	PSHINT	046550		RDSC	033000		RLINE	017552		SENT.A	041622	
	PSHNUM	046554		RDSD	033006		RLINE1	017624		SENT.R	041712	
	PSN1	051036		RDSE	032766		RLOGIN	014420		SENT.S	041654	
	PSTOP	051230		RDSR	033024		RMONTH	011634		SENTEN	041560	
	PSTOP1	051436		RDST	032706		RNUM	150000H		SENTT	000004H	
	PSTOP2	051502		RDSTR	017262		RP$	000004H		SEPF	000004H	
	PSTOP3	051512		RDSTR1	017256		RPAR	043704		SET.A	057232	
	PSTOP4	051604		RDSTR2	017316		RPDLP	014332		SET.A1	057236	
	PSTOP5	052066		RDSTR3	017362		RQUEST	017456		SETHEA	057522	
	PSTOP6	052126		RDSTR4	017414		RSTART	016462		SETMOV	057144	
	PSTOP7	052124		RDSTR5	017406		RTB	000035H		SETSTF	036364	
	PSTOP8	052110		RDSTR6	017374		RTB.E	041232		SETTUR	057174	
	PSTOP9	052100		RDSTR7	017442		RTBE	044026		SETUVS	016302	
	PSTOPR	003554		RDSTR9	017306		RTF	000002H		SETX	057054	
	PSTP10	051250		RDSX	033010		RTFALS	044516		SETXY	057130	
	PSTP11	051416		RDWA	032554		RTNCMP	044530		SETY	057102	
	PSTP13	051332		RDWB	032604		RTTRUE	044544		SEX	035416	
	PSTP14	051346		RDWC	032642		RUG	100000		SEX1	035410	
	PSTP21	051456		RDWD	032670		RUNME	007656		SFBIND	120000H	
	PSTP30	051144		RDWE	032702		RUNME1	007666		SFLAGS	002370	
	PSTP31	051152		RDWRD	032544		RUNME2	007664		SFUN	000000H	
	PSTP32	051556		READ	032236		RUNRUG	016550		SHOW	035714	
	PSTP33	051600		READA	032300		RUNUS1	011154		SHOW1	036000	
	PSTP34	051574		READB	032334		RUNUS2	011170		SHOW2	036024	
	PSTP35	051146		READC	032320		RUNUS4	011322		SHOW3	036040	
	PSTP41	052022		READD	032534		RUNUS5	011240		SHOW4	036064	
	PSTP42	051642		READL	032506		RUNUS6	011220		SHOW5	035730	
	PSWPAD	003430		READR	032440		RUNUSR	011124		SHOWT9	057714	
	PSWPI1	012776		READS	032464		RWWSW	002400		SHOWTU	057672	
	PSWPI2	013124		RECLOP	014444		RYEAR	011636		SIMTST	024720	
	PSWPIN	055166		RECTAB	014472		S	003406		SIN	061124	
	PSWPOT	055170		REDY10	013676		S.ORT	041714		SINA	003714	
	PTLPF	000001H		RELA	000001H		SALTL	065074		SINGET	061074	
	PUSHJT	003724		RELB	000002H		SCHEDP	011410		SIPRBT	000002H	
	PUSHN	051056		RELC	000004H		SDBITB	002346		SKPRET	104000H	
	PUSHSN	051030		RELD	000010H		SDBITE	002366		SLISTB	033304	
	PUSPSL	001540		RELE	000020H		SDISBT	002416		SLOT1	065134	
	PUSRSP	001542		RELTIM	013622		SDLEN	001400H		SLOTST	002214	
	PWFBRV	000024		RET	045454		SDLINK	067144		SLSH	000000	
	QUANT	001526		RET1	035142		SDLOOP	056426		SLTAL1	015552	
	R1INT	046530		RETA	045446		SDPDLL	000220H		SLTCAD	002260	
	R1NARG	046534		RETB	045440		SDPDLP	002422		SNABOT	003712	
	RBPOIN	013730		RETC	045432		SDRBG1	007142		SNAP	057752	
	RDAY	011632		RETD	045424		SDRBG2	007172		SNAP.1	057766	
	RDFLAG	003550		RETE	045416		SDSKAD	002342		SNAP.2	060012	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 272
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	SNAP.3	060100		STLEN	000060H		TGTC2	026220		TIDR	020000H	
	SNAPT	000010H		STLIST	002430		TGTC3	026224		TIDTRA	174000H	
	SNLIST	003710		STNE	045034		TGTC4	026234		TIDTS1	027026	
	SNP	100000H		STNE1	045062		TGTC5	026152		TIDTS2	027036	
	SNPSEN	041566		STNE2	045110		THEN	044762		TIDTS3	027046	
	SNPTEM	002450		STNE3	045072		TI2Q	025776		TIDTSC	027020	
	SNUM	120000H		STOP	051230		TI2Q1	026006		TIDW	040000H	
	SNXTDB	002336		STPREC	014512		TI2Q2	026122		TIEBP	023772	
	SOBLST	004014		STRACE	036162		TI2Q3	026102		TIEBT	023746	
	SOBLSU	004240		STRTD1	056366		TIBF	021772		TIED	001000H	
	SOBP2	004012		STT	003676		TIBFSZ	000100H		TIEDP	024420	
	SOFN	000343		STYI	020360		TIBL	023666		TIEDR	010000H	
	SOOMX	004010		STYO	020274		TIBP	023566		TIEDW	004000H	
	SP	000006R		SUBXY	060526		TIBR	002000H		TIEFDP	024440	
	SPBASE	003420		SUBXY9	060536		TIBT	023540		TIEHD	024400	
	SPDLL	000600H		SUHCT	003436		TICBR	027132		TIELD	024360	
	SPDLP	000504		SUM	043724		TICC	026236		TIHD	024260	
	SPNAIF	004000H		SUM.1	043732		TICC1	026252		TIINB	027270	
	SPOPL	003412		SUM.2	043746		TICD	026260		TIINB1	027326	
	SPOPT	012154		SVBIND	130000H		TICD1	026274		TIINB2	027332	
	SPRBAO	003422		SWB	177570		TICM	026306		TILD	024240	
	SPSWP1	012550		SWPISP	011706		TICM1	026314		TIME	001522	
	SPSWPI	013136		SWPIST	011700		TICM2	026362		TIMUSD	002506	
	SPSWPO	012462		SWPLEP	001544		TICM3	026404		TIND1	051136	
	SPTRCF	000004H		SWPLST	001546		TICM4	026420		TIND2	051126	
	SPUSHL	003414		SWPOSP	011662		TICN	026432		TINDNT	051110	
	SPUSHT	012130		SWPOST	011654		TICN1	026456		TINIT	024674	
	SR	177310		SWTRCF	000002H		TICN2	026446		TINIT1	024726	
	SRET	050132		SXY.S	057254		TICPY	027050		TIOBR	027124	
	SRETA	050124		SYDRBG	007124		TICPY1	027114		TIP	000036H	
	SRETB	050116		SYPDLL	000100H		TICPY2	027120		TIP.E	037420	
	SRETC	050110		SYSMES	013700		TICQ	026504		TIPC	023706	
	SRETD	050102		SYSWPR	001776		TICR	026514		TIQM	027146	
	SRETE	050074		T1FLSH	015244		TICR1	026530		TISQ	025436	
	SRETF	050066		TBPOIN	014026		TICS	026546		TISQ1	025442	
	SSAVEA	003460		TEDK1	030430		TICS1	026566		TISQ2	025474	
	SSOL	054552		TEDKI	030362		TICW	026630		TISQ3	025526	
	SSOL1	054612		TEDKO	030540		TICW1	026620		TISVD	023726	
	SSOL2	054730		TEMF	000020H		TICY	026656		TITN	023626	
	SSOL3	054710		TEMP	003560		TICZ	026746		TITQ	021712	
	SSOL4	054646		TEST1	016476		TICZ1	027010		TITQL	023500	
	SSOL5	054722		TESTF	000001H		TIDCM	027660		TITQN	023520	
	SSOL6	054652		TF1	000100H		TIDCM1	027722		TITQP	023460	
	SSTR	070000H		TF2	000200H		TIDEL	027156		TITQSZ	000006H	
	SSWPAD	003416		TF3	000400H		TIDEL1	027166		TITQT	023432	
	SSWPI1	013234		TF4	010000H		TIDEL3	027224		TKB	177562	
	SSWPI2	013370		TF5	020000H		TIDEL5	027236		TKBRK	001400	
	STAR	000000		TF6	000001H		TIDEL6	027264		TKBRK1	001432	
	START	015346		TFLAGS	003562		TIDKI	030206		TKBRV	000060	
	STARTD	056354		TFLUSH	015240		TIDKI1	030246		TKS	177560	
	STARTF	016354		TGTC	026136		TIDKO	030046		TLEN	000020H	
	STB	003674		TGTC1	026200		TIDP	024300		TLIST	065014	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 273
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	TLOGIN	015262		TOSVD	024160		TYPE1	043640		UTYO1A	031572	
	TM.3	056154		TOTN	024100		U	000005R		UTYO1B	031606	
	TM.5	056204		TPB	177566		UAB	003404		UTYO2	031632	
	TM.8	056214		TPBRK	001434		UAC	003444		UTYO3	031676	
	TML	000037H		TPBRV	000064		UACA	002474		UTYO4	031702	
	TML.E	040314		TPDLP	014356		UACB	002476		UTYO5	031706	
	TMPDL	001446		TPS	177564		UACC	002500		UTYO6	031772	
	TMPDLL	000020H		TPTF	000400H		UACD	002502		UTYO7	031770	
	TMPDLP	001444		TRA1	036312		UACE	002504		UTYO8	031420	
	TMS	000040H		TRA2	036354		UACRES	012042		UTYO9	031436	
	TMS.E	040350		TRA5	036324		UACSAV	012014		UTYOR	020344	
	TO	052166		TRACE	036304		UBLK	002470		UVAR	030000H	
	TO.1	056232		TRACEF	000002H		UBLKFR	007336		UVBLK	003404	
	TO1	052250		TRPBRV	000034		UBLKG1	007332		UVINIT	016050	
	TO2	052550		TRUE	140024		UBLKGR	007252		UVREND	003444	
	TO3	052312		TSTAB	027726		UDSKAD	002542		UVSAV	065134	
	TO4	052342		TSTAB1	030010		UEL	000041H		VARIAB	000004H	
	TO5	052532		TSTAB2	030020		UEL.E	037524		VBIND	030000H	
	TO6	052552		TSTAB3	030012		UFUN	020000H		VERN	001736H	
	TO7	052304		TSTAB4	027756		UGO	016426		VERNF	001736H	
	TO8	052204		TSTST	045136		UHCT	067150		VERSN	036420	
	TOBF	022772		TSTST1	045214		UINCON	054524		VNAF	002000H	
	TOBFF	024040		TTP	025710		UINOB	054442		VSWPIN	055172	
	TOBFSZ	000040H		TTYBR	024460		UINTRN	054440		VSWPOT	055174	
	TOBP	024060		TTYEBR	024500		ULAST	001514		WC.DUN	060462	
	TOBT	024012		TTYRS1	025144		UMINS	043712		WC.LP	060432	
	TOCB	032142		TTYRS2	025156		UMQ	003446		WDW	000042H	
	TOCH	032164		TTYRS3	025300		UNGRAB	003556		WDW.E	037250	
	TOCI	032202		TTYRS4	025222		UNXTDB	002536		WEQUAL	044304	
	TOCI1	032206		TTYRST	025130		UOBCON	054540		WIC	000043H	
	TOCM	031716		TTYST	024520		UOBSCH	054432		WIC.E	040404	
	TODING	024200		TTYU	024540		UOBSKP	054532		WIPE	060316	
	TOENT	031510		TUB	003706		UPC	002512		WIPE.L	060372	
	TOF	000020H		TURCON	056326		UPDLP	003410		WIPECL	060412	
	TOINB	031774		TURMOV	056034		UPLUS	043706		WIPOBS	055164	
	TOINB1	032012		TUROFF	056304		UQUANT	001530		WIT	000044H	
	TOINB2	032124		TURON	056262		URELTM	013606		WIT.E	041144	
	TOINB3	032140		TUROUT	056236		USER	001512		WORD	042146	
	TOINB4	032066		TURSIZ	000004H		USLENT	002306		WORD.1	042152	
	TOLN	052604		TURTF	000010H		USR	003450		WORD.2	042174	
	TOLN1	052656		TUT	002446		USWCNT	002304		WORD.3	042242	
	TOLN2	052642		TYI	020354		USWPAD	002516		WORD.4	042246	
	TOOT	055756		TYIBP	023606		UTTY	002514		WORD.5	042222	
	TOOT.0	055770		TYIDKI	030642		UTYI	020402		WORD.6	042226	
	TOOT.1	056002		TYIDP	024320		UTYI1	027540		WORD.N	042256	
	TOOT.9	056024		TYIDR	100000H		UTYI2	027560		WORDP	044674	
	TOPC	024120		TYIFDP	024340		UTYI3	027636		WORDR	042274	
	TOPRNM	003566		TYITN	023646		UTYI4	027654		WORDT	000001H	
	TOPS	003466		TYO	020270		UTYO	020310		WSF	000002H	
	TOPS1	003470		TYOT	020346		UTYO1	031544		WSTART	016542	
	TOSND	024220		TYP1	040000H		UTYO10	031456		WTA	000045H	
	TOSVC	024140		TYPE	043616		UTYO11	031376		WTA.E	036746	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 274
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	WTAA	000046H		$GO	004622		$SNAP	005506		.CSRET	177601H	
	WTAA.E	036556		$GREAT	004632		$STAR	006020		.FREE	055354	
	WTAB	000047H		$GRTR	006112		$START	005520		.GCOL1	021014	
	WTAB.E	036652		$HEADI	004646		$STF	005542		.GCOL2	020754	
	XCOR	057616		$HERE	004662		$STOP	005552		.GCOL3	020770	
	XYDIR	061260		$HIDET	004674		$SUM	005564		.GCOLL	020734	
	XYDIR1	061272		$HOME	004714		$THEN	005574		.GRAB	055200	
	XYDIR2	061302		$IF	004726		$TO	005606		.INTRN	054246	
	YCOR	057624		$KILLD	004736		$TOOT	005616		.IOT	056244	
	YINFIX	000020H		$LAST	005006		$TRACE	005630		.LDP1	053614	
	YND	000050H		$LEFT	005020		$TYPE	005642		.LDP2	053610	
	YND.E	040456		$LESS	006076		$UMINS	006052		.LDP2I	053640	
	YNT	000051H		$LEVEL	005044		$UPLUS	006034		.LOAD	053506	
	YNT.E	040524		$LIST	005056		$VERSI	005654		.LOADC	053504	
	$	177777H		$LISTP	005070		$WIPE	005670		.OBSCH	054236	
	$$	000343H		$LLPAR	005770		$WIPEC	005702		.RDEF	043046	
	$.	000343H		$LPAR	006004		$WORD	005720		.SPACE	012200	
	$A	000271		$LPOFF	004756		$WORDP	005732		.SRDEF	046062	
	$AND	004302		$LPON	004772		$XCOR	005744		.STORE	053530	
	$B	000273		$LPUT	005102		$YCOR	005756		.STP1	053562	
	$BACK	004312		$MAKE	005114		.BIND	053710		.STP2	053556	
	$BAR	000230		$MINUS	006044		.BINDF	054072		.TIME	013402	
	$BLAP	000337H		$MOD	005126		.BINDL	053664		.UTIME	013476	
	$BLIP	000341H		$NEWSN	005136		.BNDFS	054220		.ZZZ	040000H	
	$BUTFI	004324		$NUMBE	005152		.BNDVN	054142	
	$BUTLA	004342		$OB1	000171		.BNDVS	054132	
	$BVB	000275		$OB2	000227		.CATLS	045700	
	$C	000303H		$OB3	000266		.CERR	045674	
	$COUNT	004356		$OB4	000267		.CLNLS	046136	
	$CTF	004370		$OB5	000270		.CLNR	046132	
	$CVB	000305H		$OF	005166		.CLNS1	046134	
	$DIFFE	004400		$OUTPU	005176		.CLNSN	046120	
	$DISPL	004420		$PENDO	005212		.CLSLN	046314	
	$DO	004434		$PENUP	005226		.CLSS0	046212	
	$DOTS	006070		$PLUS	006026		.CLSS1	046214	
	$EDIT	004444		$PRINT	005240		.CLSS9	046304	
	$ELSE	004456		$PROC	005776		.CLSSN	046150	
	$EMPTY	004470		$PRODU	005252		.CNOP	045676	
	$END	004504		$QUOTI	005266		.CNXN1	046240	
	$EQUAL	006104		$REQUE	005304		.CNXN2	046246	
	$ERASE	004526		$RIGHT	005320		.CNXN9	046276	
	$FIRST	004546		$RPAR	006012		.CNXTD	046076	
	$FL0	000246		$RUG	005332		.CRLF	012210	
	$FL1	000251		$SENTE	005342		.CSNL0	045766	
	$FL2	000254		$SETHE	005360		.CSNL1	045772	
	$FLLP	000243		$SETTU	005400		.CSNL2	046016	
	$FOO	000172		$SETX	005416		.CSNL3	046032	
	$FOOF	000241		$SETXY	005430		.CSNL4	046036	
	$FORWA	004560		$SETY	005442		.CSNL5	046026	
	$FPRIN	004574		$SHOW	005454		.CSNLL	045762	
	$FPUT	004610		$SHOWT	005466		.CSNLN	045706	
	$FSFB	000257		$SLSH	006062		.CSNLS	045726	
	PDP11 LOGO	PALX142 	04/19/72  11:13:47	PAGE 275
	ZEND 67	PAGE 1 	***SYMBOL TABLE***      

	.CSRET	177601H	
	.FREE	055354	
	.GCOL1	021014	
	.GCOL2	020754	
	.GCOL3	020770	
	.GCOLL	020734	
	.GRAB	055200	
	.INTRN	054246	
	.IOT	056244	
	.LDP1	053614	
	.LDP2	053610	
	.LDP2I	053640	
	.LOAD	053506	
	.LOADC	053504	
	.OBSCH	054236	
	.RDEF	043046	
	.SPACE	012200	
	.SRDEF	046062	
	.STORE	053530	
	.STP1	053562	
	.STP2	053556	
	.TIME	013402	
	.UTIME	013476	
	.ZZZ	040000H	

146 SECONDS RUN-TIME

A     	    62#	  1399	  1403	  1404	  1405	  1409	  1414	  1425	  1426	  1428	  1429	  1431	  1432	  1434
	  1439	  1440	  1443	  1445	  1446	  1448	  1449	  1450	  1451	  1460	  1464	  1470	  1471	  1473
	  1474	  1479	  1487	  1489	  1490	  1498	  1530	  1535	  1536	  1543	  1546	  1547	  1548	  1585
	  1588	  1589	  1590	  1593	  1597	  1617	  1618	  1620	  1628	  1653	  1655	  1657	  1658	  1659
	  1662	  1664	  1674	  1675	  1676	  1682	  1683	  1686	  1689	  1690	  1691	  1692	  1695	  1699
	  1703	  1706	  1715	  1726	  1735	  1739	  1740	  1742	  1746	  1749	  1760	  1762	  1778	  1781
	  1787	  1789	  1790	  1792	  1805	  1806	  1814	  1815	  1827	  1832	  1835	  1844	  1847	  1879
	  1891	  1902	  1903	  1930	  1934	  1938	  1942	  1946	  1948	  1953	  1960	  1964	  1971	  1978
	  2031	  2032	  2033	  2044	  2045	  2047	  2048	  2049	  2051	  2056	  2057	  2072	  2073	  2074
	  2084	  2085	  2087	  2088	  2089	  2091	  2096	  2097	  2115	  2116	  2117	  2123	  2124	  2125
	  2126	  2127	  2128	  2133	  2134	  2135	  2138	  2139	  2140	  2141	  2163	  2164	  2165	  2171
	  2172	  2173	  2174	  2175	  2176	  2177	  2182	  2183	  2184	  2187	  2188	  2189	  2190	  2230
	  2238	  2239	  2241	  2242	  2249	  2252	  2259	  2260	  2261	  2262	  2273	  2275	  2276	  2277
	  2278	  2281	  2282	  2283	  2284	  2375	  2376	  2380	  2381	  2385	  2390	  2392	  2394	  2395
	  2413	  2415	  2416	  2423	  2428	  2443	  2444	  2445	  2446	  2457	  2458	  2464	  2475	  2478
	  2479	  2480	  2481	  2484	  2485	  2486	  2487	  2488	  2489	  2490	  2492	  2498	  2506	  2507
	  2512	  2515	  2519	  2524	  2525	  2527	  2529	  2530	  2532	  2535	  2558	  2559	  2560	  2562
	  2564	  2565	  2568	  2576	  2581	  2582	  2591	  2594	  2600	  2602	  2605	  2606	  2607	  2609
	  2610	  2611	  2612	  2613	  2614	  2626	  2627	  2640	  2657	  2658	  2660	  2663	  2664	  2667
	  2668	  2671	  2672	  2676	  2677	  2698	  2700	  2701	  2706	  2707	  2708	  2709	  2710	  2711
	  2712	  2725	  2753	  2762	  2765	  2766	  2767	  2768	  2769	  2770	  2774	  2775	  2778	  2783
	  2796	  2805	  2806	  2808	  2813	  2823	  2824	  2830	  2912	  2913	  2914	  2916	  2919	  2922
	  2927	  2934	  2937	  2952	  2958	  2967	  2973	  3012	  3013	  3014	  3017	  3018	  3019	  3020
	  3021	  3024	  3059	  3064	  3065	  3073	  3111	  3122	  3124	  3125	  3143	  3148	  3155	  3156
	  3157	  3159	  3161	  3163	  3188	  3189	  3191	  3198	  3199	  3207	  3208	  3209	  3211	  3212
	  3213	  3214	  3224	  3225	  3226	  3227	  3228	  3229	  3230	  3252	  3253	  3270	  3625	  3632
	  3633	  3639	  3984	  3985	  3986	  3989	  3990	  3993	  3998	  4001	  4009	  4017	  4027	  4028
	  4029	  4033	  4034	  4035	  4036	  4037	  4038	  4045	  4046	  4054	  4055	  4056	  4057	  4059
	  4060	  4061	  4062	  4063	  4064	  4065	  4072	  4076	  4077	  4085	  4086	  4087	  4093	  4094
	  4095	  4096	  4097	  4098	  4105	  4109	  4118	  4119	  4120	  4121	  4122	  4123	  4130	  4139
	  4140	  4141	  4142	  4143	  4144	  4151	  4152	  4215	  4219	  4223	  4230	  4383	  4414	  4415
	  4416	  4418	  4419	  4422	  4443	  4444	  4446	  4454	  4458	  4461	  4466	  4476	  4477	  4487
	  4493	  4497	  4503	  4534	  4535	  4547	  4551	  4557	  4568	  4593	  4599	  4609	  4617	  4618
	  4631	  4635	  4636	  4637	  4638	  4639	  4641	  4644	  4646	  4648	  4649	  4651	  4653	  4654
	  4659	  4660	  4667	  4672	  4673	  4677	  4681	  4691	  4694	  4697	  4700	  4702	  4718	  4725
	  4755	  4756	  4757	  4758	  4765	  4766	  4767	  4769	  4775	  4777	  4782	  4783	  4786	  4797
	  4799	  4802	  4804	  4806	  4811	  4823	  4831	  4832	  4835	  4838	  4842	  4855	  4856	  4870
	  4875	  4885	  4890	  4897	  4898	  4899	  4900	  4901	  4902	  4903	  4905	  4906	  4907	  4908
	  4909	  4910	  4911	  4912	  4913	  4914	  4915	  4916	  4917	  4918	  4919	  4920	  4921	  4922
	  4923	  4925	  4942	  4946	  4949	  4958	  4967	  4974	  4985	  4994	  5004	  5007	  5084	  5285
	  5286	  5287	  5289	  5294	  5296	  5310	  5329	  5330	  5331	  5357	  5358	  5374	  5390	  5402
	  5453	  5455	  5456	  5457	  5466	  5467	  5486	  5489	  5502	  5504	  5510	  5520	  5558	  5571
	  5576	  5587	  5593	  5609	  5621	  5626	  5627	  5629	  5638	  5639	  5640	  5642	  5650	  5652
	  5671	  5672	  5673	  5675	  5682	  5683	  5684	  5685	  5687	  5703	  5719	  5739	  5743	  5747
	  5752	  5779	  5783	  5811	  5819	  5821	  5838	  5839	  5841	  5842	  5852	  5859	  5879	  5881
	  5883	  5910	  5916	  5922	  5927	  5932	  5992	  5994	  5998	  5999	  6001	  6005	  6007	  6018
	  6021	  6023	  6026	  6027	  6034	  6041	  6045	  6048	  6051	  6052	  6069	  6073	  6076	  6077
	  6078	  6079	  6080	  6081	  6083	  6084	  6085	  6086	  6090	  6095	  6096	  6119	  6132	  6135
	  6142	  6153	  6172	  6174	  6175	  6176	  6177	  6186	  6299	  6304	  6305	  6308	  6314	  6318
	  6359	  6366	  6367	  6381	  6382	  6384	  6386	  6389	  6391	  6397	  6403	  6404	  6411	  6412
	  6413	  6442	  6453	  6454	  6455	  6456	  6457	  6460	  6473	  6520	  6521	  6522	  6523	  6534
	  6549	  6561	  6569	  6577	  6578	  6584	  6589	  6591	  6593	  6633	  6645	  6652	  6656	  6659
	  6661	  6663	  6684	  6690	  6710	  6711	  6712	  6720	  6749	  6751	  6754	  6756	  6757	  6758
	  6765	  6766	  6767	  6779	  6783	  6788	  6820	  6829	  6831	  6832	  6847	  6852	  6863	  6864
	  6866	  6869	  6885	  6886	  6889	  6890	  6892	  6893	  6898	  6899	  6900	  6909	  6910	  6913
	  6915	  6920	  6937	  6940	  6941	  6946	  6964	  6966	  6967	  6969	  6975	  6979	  6990	  6994
	  6998	  7003	  7009	  7010	  7017	  7018	  7024	  7025	  7036	  7052	  7069	  7085	  7093	  7107
	  7114	  7115	  7116	  7117	  7118	  7119	  7122	  7123	  7124	  7125	  7126	  7127	  7128	  7148
	  7150	  7154	  7155	  7160	  7166	  7170	  7173	  7175	  7178	  7184	  7195	  7199	  7206	  7225
	  7228	  7232	  7233	  7235	  7246	  7254	  7269	  7277	  7293	  7301	  7312	  7315	  7318	  7319
	  7329	  7332	  7340	  7347	  7348	  7349	  7350	  7351	  7352	  7353	  7362	  7368	  7374	  7380
	  7381	  7386	  7397	  7398	  7408	  7413	  7415	  7418	  7424	  7426	  7427	  7429	  7430	  7432
	  7436	  7441	  7446	  7450	  7452	  7454	  7536	  7538	  7545	  7549	  7554	  7559	  7575	  7598
	  7601	  7604	  7617	  7621	  7643	  7650	  7652	  7658	  7660	  7669	  7679	  7685	  7686	  7696
	  7699	  7700	  7705	  7721	  7736	  7738	  7750	  7805	  7808	  7809	  7817	  7819	  7820	  7830
	  7878	  7912	  7914	  7915	  7916	  7917	  7925	  7926	  7927	  7931	  7932	  7936	  7938	  8045
	  8067	  8097	  8098	  8099	  8105	  8106	  8108	  8109	  8133	  8136	  8138	  8142	  8143	  8153
	  8159	  8192	  8193	  8227	  8228	  8229	  8231	  8232	  8233	  8257	  8274	  8277	  8281	  8283
	  8284	  8287	  8296	  8299	  8308	  8310	  8332	  8334	  8335	  8336	  8339	  8398	  8402	  8406
	  8408	  8409	  8435	  8441	  8444	  8447	  8450	  8455	  8457	  8458	  8459	  8460	  8463	  8464
	  8466	  8467	  8477	  8478	  8484	  8495	  8508	  8514	  8527	  8555	  8557	  8559	  8563	  8565
	  8566	  8567	  8570	  8580	  8581	  8582	  8610	  8612	  8642	  8644	  8695	  8727	  8734	  8740
	  8741	  8774	  8775	  8781	  8782	  8787	  8792	  8793	  8797	  8798	  8813	  8819	  8821	  8831
	  8847	  8855
AC    	   142#	  1757	  1860	  2603	  4739	  8227
ACKRC1	  2409	  2411#
ACKREC	  2402	  2410#
ACRELF	   619#	  1793	  1827	  3115	  3132	  3278
ACRES 	  1963#	  2062	  2102	  2151	  2200	  3278
ACRII 	  8293	  8308#
ACRIII	  8294	  8303#
ACR.D 	  8292	  8300	  8305	  8316#
ACSAV 	  1956#	  2024	  2066	  2109	  2157	  3113
ACTREC	  2399	  2406#
ACTSTO	  5434	  5590	  5596	  5609#
ADDX  	   722#	   724	  7937	  8126
ADDXY 	   724#
ADDY  	   723#	   724	  7935	  8128
ADLN  	  2925	  6943	  6976#
ADLN1 	  6992#	  7001
ADLN2 	  6996	  7004#
ADLN3 	  7002	  7008#
ADLN4 	  7019	  7021#
ADLN5 	  7007#	  7014	  7027
AEVEN 	  8333	  8339#
ALTL  	   667#	  2729	  2805	  2808
ANGCRP	  7723	  7949	  8274#
ANSLT 	   753#	   915	   938
ANYT  	   746#	   873	   874	   875	   882	   886	   900	   910	   921	   942	   943	   946
ARS   	   149#
ASOFN 	  2683	  9189#
ATOM  	   537#	  4503	  4769	  4802	  5289	  5640	  5673	  6389	  6866	  7254	  9019	  9020	  9029	  9078
	  9088	  9132	  9135	  9145
ATOMT 	   747#	   748	   753	   940	   948	   964
B     	    63#	  1440	  1442	  1444	  1445	  1446	  1447	  1448	  1449	  1461	  1463	  1489	  1490	  1499
	  1515	  1516	  1536	  1560	  1566	  1573	  1579	  1586	  1590	  1592	  1596	  1664	  1665	  1667
	  1675	  1683	  1707	  1708	  1788	  1789	  1803	  1805	  1817	  1819	  1829	  1830	  1831	  1837
	  1880	  1890	  1942	  1943	  1947	  1948	  1959	  1965	  1972	  1979	  2044	  2055	  2056	  2057
	  2058	  2084	  2095	  2096	  2097	  2098	  2124	  2126	  2127	  2172	  2173	  2175	  2176	  2231
	  2248	  2253	  2272	  2276	  2282	  2288	  2289	  2292	  2294	  2436	  2437	  2439	  2440	  2445
	  2449	  2450	  2451	  2452	  2453	  2454	  2455	  2460	  2461	  2462	  2463	  2464	  2466	  2492
	  2494	  2495	  2496	  2500	  2502	  2512	  2514	  2566	  2571	  2572	  2574	  2575	  2582	  2589
	  2590	  2591	  2592	  2593	  2595	  2596	  2597	  2599	  2613	  2615	  2616	  2617	  2619	  2641
	  2656	  2659	  2661	  2662	  2665	  2666	  2669	  2670	  2673	  2674	  2678	  2682	  2687	  2688
	  2690	  2696	  2697	  2699	  2700	  2750	  2759	  2770	  2773	  2782	  2793	  2806	  2810	  2910
	  2935	  2947	  2948	  2949	  2953	  2959	  2963	  2968	  2974	  3013	  3015	  3016	  3021	  3023
	  3054	  3056	  3060	  3064	  3068	  3110	  3123	  3126	  3140	  3144	  3151	  3176	  3178	  3183
	  3196	  3201	  3202	  3204	  3210	  3211	  3212	  3218	  3249	  3260	  3264	  4384	  4416	  4418
	  4453	  4466	  4494	  4498	  4535	  4536	  4558	  4569	  4580	  4594	  4595	  4610	  4611	  4619
	  4620	  4621	  4654	  4656	  4660	  4661	  4672	  4723	  4724	  4730	  4740	  4747	  4756	  4760
	  4765	  4776	  4778	  4816	  4819	  4820	  4823	  4824	  4838	  4843	  4849	  4871	  4875	  4893
	  4924	  4926	  4932	  4935	  4938	  4944	  4959	  4968	  5002	  5014	  5016	  5092	  5284	  5285
	  5304	  5312	  5313	  5328	  5329	  5357	  5360	  5361	  5367	  5385	  5386	  5388	  5393	  5405
	  5432	  5438	  5456	  5464	  5476	  5479	  5482	  5486	  5505	  5507	  5512	  5522	  5532	  5533
	  5535	  5538	  5543	  5553	  5558	  5562	  5582	  5589	  5598	  5599	  5617	  5637	  5638	  5655
	  5658	  5668	  5671	  5678	  5683	  5735	  5743	  5747	  5752	  5765	  5770	  5782	  5784	  5786
	  5792	  5797	  5800	  5809	  5811	  5826	  5827	  5829	  5864	  5866	  5872	  5875	  5879	  5883
	  5887	  5889	  5893	  5910	  5916	  5922	  5927	  5932	  5938	  5943	  5944	  5949	  5950	  6008
	  6013	  6016	  6023	  6033	  6042	  6046	  6047	  6048	  6052	  6053	  6070	  6074	  6094	  6095
	  6122	  6135	  6146	  6147	  6150	  6156	  6158	  6161	  6162	  6177	  6178	  6200	  6205	  6207
	  6209	  6217	  6219	  6222	  6241	  6242	  6299	  6304	  6313	  6323	  6324	  6341	  6360	  6366
	  6371	  6401	  6447	  6448	  6465	  6468	  6470	  6472	  6484	  6536	  6551	  6568	  6595	  6610
	  6611	  6615	  6616	  6618	  6620	  6626	  6628	  6634	  6638	  6639	  6640	  6641	  6644	  6645
	  6650	  6653	  6658	  6660	  6661	  6665	  6666	  6680	  6691	  6694	  6698	  6701	  6706	  6722
	  6739	  6741	  6763	  6772	  6777	  6783	  6784	  6786	  6811	  6814	  6823	  6834	  6835	  6844
	  6853	  6868	  6873	  6877	  6890	  6893	  6903	  6904	  6907	  6918	  6921	  6923	  6933	  6938
	  6947	  6951	  6965	  6971	  6980	  6986	  7000	  7004	  7020	  7021	  7037	  7040	  7041	  7045
	  7054	  7070	  7074	  7076	  7079	  7081	  7082	  7083	  7084	  7085	  7086	  7094	  7147	  7148
	  7154	  7160	  7167	  7226	  7239	  7241	  7246	  7247	  7250	  7251	  7253	  7255	  7270	  7271
	  7273	  7276	  7294	  7299	  7309	  7310	  7315	  7319	  7324	  7326	  7341	  7346	  7349	  7353
	  7354	  7355	  7356	  7357	  7365	  7398	  7399	  7447	  7562	  7577	  7579	  7583	  7589	  7591
	  7593	  7609	  7610	  7611	  7613	  7614	  7623	  7669	  7691	  7693	  7696	  7697	  7745	  7750
	  7755	  7757	  7759	  7760	  7767	  7769	  7771	  7772	  7785	  7787	  7790	  7792	  7794	  7810
	  7823	  7831	  7834	  7851	  7853	  7868	  7880	  7882	  7883	  7885	  7904	  7942	  7946	  7948
	  7972	  7979	  7982	  7983	  7998	  8046	  8050	  8057	  8060	  8077	  8079	  8089	  8090	  8092
	  8093	  8130	  8133	  8138	  8154	  8159	  8161	  8163	  8166	  8176	  8177	  8192	  8195	  8201
	  8203	  8213	  8219	  8229	  8233	  8235	  8243	  8247	  8250	  8253	  8256	  8259	  8261	  8265
	  8266	  8286	  8296	  8297	  8298	  8303	  8308	  8309	  8316	  8433	  8435	  8439	  8444	  8447
	  8451	  8476	  8487	  8509	  8515	  8529	  8554	  8555	  8559	  8571	  8572	  8575	  8576	  8578
	  8585	  8586	  8587	  8588	  8589	  8617	  8625	  8629	  8638	  8643	  8647	  8652	  8698	  8701
	  8703	  8705	  8706	  8722	  8723	  8724	  8725	  8733	  8801	  8855
BACK  	   872	  7525#
BASEUS	   608#	  1788	  1826	  2047	  2087	  4906	  4915
BEBRV 	   133#	  1405	  2557	  2563
BF.SEN	  5445	  5464#
BF.W  	  5448#
BF.W1 	  5454	  5459#
BIF1  	  7182	  7184#
BINDF1	  7148#	  7156
BINDF2	  7158	  7165#
BINDF3	  7163#	  7167
BINDF4	  7153	  7168#
BINDF5	  7162#	  7173
BINDF6	  7169	  7174#
BITCNT	  2493	  2511#
BITCT1	  2514#	  2516
BITCT2	  2513	  2515#	  2517
BIV1  	  7197	  7199#
BKSL$ 	   971#	  1359
BLKFR1	  1570#	  1574
BLKFR2	  1571	  1575#
BLKFRE	  1517	  1565#
BLKGR2	  1530#	  1534
BLKGR3	  1529#	  1537
BLKGR4	  1539	  1541#
BLKGR5	  1531	  1543#
BLKGR6	  1542	  1545#
BLKGRB	  1507	  1528#
BLST  	  2857	  4447	  4488	  4565#	  5691
BLST2 	  4576	  4579#
BLST3 	  4582#
BLSTF 	  2859	  2864	  4449	  4495	  4585#	  5694
BLSTF1	  4597#
BLSTI 	  2839	  4441	  4473	  4560#	  5690
BLSTI1	  4563#
BLSTRT	  4571	  4573	  4578#	  4584
BL.ORT	  5513#
BL.SEN	  5497	  5516#
BL.SR 	  5518	  5523#
BL.W1 	  5506	  5511#
BL.W2 	  5503	  5510#
BL.W3 	  5508	  5512#
BMT   	  3016	  3026#
BPTBRV	   138#
BRAKR 	  2735	  2843	  3578#
BREAK 	  3554	  3568#
BREAK1	  3569	  3573#
BREAKF	   380	   577#	  2733	  2834	  2841	  3571	  4928
BRKCHR	   378	   452#	  2719	  2845	  3475	  3553
BSAN  	  4582	  4596	  4598#
BSAN1 	  4602	  4605#
BSANR 	  4588	  4606#
BSS   	  5040#
BSS.E 	  5040	  5120#
BUSSER	  1406	  1417#
BUTFIR	   873	  5443#
BUTLAS	   874	  5495#
BYCNT 	   710#	  8664	  8687
C     	    64#	  1528	  1532	  1551	  1552	  1553	  1555	  1557	  1559	  1565	  1567	  1570	  1572	  1575
	  1576	  1577	  1578	  1628	  1703	  1704	  1705	  1706	  1707	  1708	  1709	  1710	  1713	  1714
	  1715	  1718	  1719	  1724	  1725	  1726	  1727	  1728	  1729	  1732	  1793	  1798	  1801	  1818
	  1819	  1820	  1822	  1823	  1824	  1958	  1966	  1973	  1980	  2049	  2089	  2137	  2138	  2186
	  2187	  2232	  2247	  2254	  2271	  2278	  2284	  2293	  2295	  2567	  2568	  2569	  2570	  2577
	  2581	  2583	  2584	  2586	  2598	  2599	  2600	  2601	  2618	  2621	  2623	  2624	  2629	  2632
	  2633	  2635	  2654	  2655	  2658	  2659	  2660	  2661	  2664	  2665	  2668	  2669	  2672	  2673
	  2677	  2678	  2683	  2684	  2690	  2691	  2692	  2694	  2695	  2753	  2775	  2778	  2779	  2780
	  2924	  3061	  3065	  3066	  3068	  3087	  3088	  3109	  3138	  3144	  3148	  3149	  3151	  3154
	  3155	  3197	  3232	  3250	  3258	  3259	  3263	  3591	  3594	  3597	  3598	  3600	  3601	  3604
	  3605	  3607	  3608	  3611	  3617	  3644	  3648	  3653	  3672	  3676	  3689	  3690	  3694	  3695
	  3810	  3811	  3875	  3876	  3913	  3914	  4239	  4263	  4267	  4270	  4275	  4284	  4289	  4293
	  4294	  4298	  4301	  4304	  4313	  4324	  4352	  4385	  4539	  4544	  4545	  4553	  4559	  4570
	  4595	  4598	  4603	  4605	  4844	  4849	  4850	  4855	  4858	  4940	  4946	  4949	  4951	  4956
	  4958	  4961	  4969	  4970	  4974	  4976	  5002	  5281	  5296	  5299	  5306	  5313	  5317	  5325
	  5331	  5333	  5338	  5361	  5362	  5370	  5371	  5372	  5376	  5382	  5418	  5419	  5435	  5438
	  5457	  5459	  5460	  5464	  5476	  5505	  5517	  5522	  5523	  5532	  5543	  5588	  5592	  5598
	  5600	  5617	  5618	  5708	  5714	  5719	  5760	  5766	  5793	  5809	  5821	  5827	  5828	  5829
	  5838	  5864	  5866	  5873	  6009	  6010	  6011	  6012	  6014	  6032	  6043	  6044	  6046	  6049
	  6054	  6071	  6074	  6075	  6079	  6088	  6093	  6121	  6122	  6207	  6346	  6347	  6361	  6363
	  6373	  6538	  6553	  6567	  6610	  6628	  6669	  6670	  6679	  6818	  6826	  6829	  6841	  6847
	  6851	  6895	  6896	  6898	  6901	  6907	  6913	  6965	  6966	  6969	  6974	  6981	  6984	  6987
	  6988	  6990	  6993	  6995	  6998	  7005	  7011	  7015	  7022	  7038	  7045	  7047	  7050	  7062
	  7071	  7079	  7089	  7090	  7091	  7092	  7093	  7094	  7096	  7103	  7104	  7105	  7106	  7107
	  7109	  7114	  7122	  7127	  7148	  7227	  7247	  7249	  7250	  7253	  7271	  7275	  7295	  7311
	  7322	  7342	  7359	  7361	  7371	  7375	  7376	  7377	  7383	  7384	  7405	  7408	  7410	  7411
	  7412	  7422	  7425	  7426	  7427	  7438	  7439	  7448	  7452	  7582	  7583	  7584	  7585	  7586
	  7587	  7588	  7690	  7692	  7693	  7700	  7701	  7703	  7708	  7756	  7758	  7761	  7768	  7770
	  7773	  7784	  7789	  7846	  8043	  8048	  8134	  8136	  8214	  8218	  8226	  8232	  8235	  8258
	  8260	  8264	  8283	  8321	  8434	  8437	  8451	  8453	  8454	  8465	  8475	  8485	  8510	  8516
	  8543	  8546	  8557	  8562	  8566	  8570	  8573	  8576	  8578	  8579	  8580	  8585	  8587	  8605
	  8609	  8612	  8623	  8664	  8669	  8674	  8677	  8726	  8727	  8728	  8730	  8735	  8755	  8809
	  8823	  8827	  8833	  8837	  8840	  8842	  8857	  8860	  8866
CA2LS 	  6112#	  6262
CFL   	  5041#
CFL.E 	  5041	  5220#
CH    	  2992#
CHARNO	  3356#	  3513	  3818	  4305	  4308	  4310	  4312	  4360	  4366	  4368	  4373	  4375
CHI   	   376	   377	   378	   669#	  3001	  3003	  3004
CHKBND	  7763	  7775	  7867	  8091	  8094	  8201#
CKDOTF	  4395	  4400	  4530#
CKPRCD	  6405	  6409#
CKTYP 	  6423	  6499	  6569#
CKUI  	  6477	  6576#
CKUI0 	  6581#	  6587
CKUI1 	  6579	  6584#
CKUI2 	  6585	  6588#
CLE   	  5544	  6897	  6960#
CLE1  	  6967#	  6972
CLE2  	  6968	  6973#
CLGN  	   635#	  2777	  2782	  6603	  6805	  6835
CLKBDM	  1894#	  3455	  3486
CLKBR1	  1888#	  1904	  1908	  1911	  3486
CLKBR2	  1888	  1889#	  1895	  1898
CLKBRK	   321	  1878#
CLN   	   633#	  2750	  2773	  2796	  4890	  6601	  6678	  6807	  6823	  6933
CLN2LS	  6191#	  6274
CLN2SN	  6183#	  6272
CLP   	   634#	  2759	  2769	  6602	  6679	  6806	  6818	  6826	  6934
CLRSTF	   876	  5012#
CLS2LN	  6245#	  6279
CLS2SN	  6198#	  6278
CMPST1	  5876#	  5890	  5894
CMPST2	  5884	  5889#
CMPSTE	  5877	  5901#
CNINT 	  3479	  4209#
CNSND 	  3388	  4211	  4215#
CNSQ  	  3478	  3625#
CNVNOP	  6108#	  6256	  6266	  6273	  6280	  6286	  6290
CNVTBL	  6083	  6255#
CNVTOP	  6086	  6103#	  6108	  6112	  6117	  6127	  6183	  6191	  6198	  6245
CO    	   646#	  2818	  2819	  4660	  4661	  6409	  6418	  6419	  6420	  6421	  6422	  6432	  6434	  6438
	  6439	  6440	  6441	  6453	  6461	  6462	  6465	  6467	  6483	  6484	  6514	  6525	  6577	  6580
	  6581	  6586	  6591	  6595	  6607	  6608	  6611	  6620	  6677	  6685	  6686	  6800	  6801
COF   	   650#	  6413	  6422	  6444	  6454	  6467	  6472	  6475	  6489	  6516	  6520	  6581
CONVER	  4455	  5391	  5853	  5860	  5864	  5933	  6068#	  6306	  6315	  6368	  8645
CONV.F	  6087	  6093#
COP   	  4409	  4492	  5042#
COPYL 	  5309	  5366	  5516	  5551#
COPYL1	  5553#	  5559
COPYLR	  5554	  5561#
COP.E 	  5042	  5174#
CORCHK	  2557	  2562#
CORTOP	   415#	  2564
COSA  	   708#	  8243	  8317
COUNT 	   875	  5527#
CPDLP 	   642#	  6674	  6675	  6676	  6749	  6765
CPP   	   631#	  2793	  4893	  6599	  6677	  6680	  6739	  6809	  6811	  6814	  7041
CPS   	  4813	  5043#
CPSN  	   632#	  6600	  6684	  6808	  6820
CPS.E 	  5043	  5180#
CPYSTR	  5400	  5500	  5571#	  7272
CRF   	   561#	  2900	  2905	  2939	  2955	  2957	  2965	  2972	  5980	  5983	  6407	  6427	  6496	  6511
	  6883
CRLF  	  2020#	  3476
CRMES 	   449#	  2017
CSEQ  	  5995	  6002	  6006#	  7369
CSEQ1 	  6013#	  6024
CSEQ2 	  6017	  6019	  6025#	  6036
CSEQ3 	  6015	  6035#
CSFAL1	  5886	  5892	  5896#
CSFALS	  5888	  5895#	  5902
CSN2LN	  6117#	  6267
CSN2LS	  6127#	  6268
CSPDLP	   641#	  4756	  6671	  6672	  6765	  6774
CT    	   653#	  2934	  2935	  2942	  2944	  2947	  2952	  2953	  2967	  2968	  4777	  4778	  5724	  5976
	  5985	  6396	  6411	  6420	  6421	  6430	  6436	  6440	  6441	  6493	  6504	  6508	  6529	  6852
	  6853	  6881
CTIP  	  5044#
CTIP.E	  5044	  5261#
CTIQ  	  3435#	  3695
CTIS  	  3420#	  3690
CTIT  	  5045#	  6861
CTIT.E	  5045	  5264#
CTIUQ 	  3437#	  3876
CTN   	   636#	  2970	  6604	  6804	  6843
CTOS  	  3441#	  4294
CTP   	   637#	  2774	  2783	  2787	  2789	  2948	  6605	  6803	  6841	  6851
CT.ORT	  5539#	  5545
CT.SEN	  5529	  5543#
CT.W1 	  5535#	  5537
CURA  	   689#	  7946	  7948	  7998	  8274
CURX  	   683#	  7757	  7758	  7805	  7817	  7878	  7912	  7969	  7988	  8055	  8075	  8090	  8112	  8173
CURY  	   687#	  7769	  7770	  7992	  8093	  8113
D     	    65#	  1500	  1501	  1516	  1547	  1548	  1550	  1551	  1554	  1555	  1556	  1557	  1565	  1629
	  1702	  1729	  1795	  1796	  1797	  1803	  1815	  1816	  1817	  1823	  1826	  1837	  1957	  1967
	  1974	  1981	  2020	  2143	  2144	  2146	  2192	  2193	  2195	  2233	  2237	  2238	  2239	  2240
	  2246	  2255	  2263	  2264	  2265	  2266	  2270	  2578	  2579	  2587	  2625	  2629	  2630	  2639
	  2656	  2681	  2684	  2685	  2692	  2835	  2845	  2849	  2851	  2854	  2912	  2921	  2922	  2979
	  2983	  2984	  2986	  2988	  2997	  2998	  3003	  3005	  3063	  3073	  3074	  3075	  3076	  3077
	  3078	  3079	  3107	  3137	  3138	  3140	  3143	  3253	  3255	  3268	  3270	  3272	  3551	  3553
	  3559	  3592	  3601	  3616	  3630	  3632	  3638	  3645	  3657	  3671	  3674	  3685	  3687	  3689
	  3692	  3694	  3717	  3736	  3737	  3751	  3753	  3777	  3779	  3787	  3789	  3798	  3827	  3833
	  3835	  3837	  3839	  3841	  3856	  3869	  3870	  3872	  3875	  3880	  3889	  3907	  3909	  3911
	  3913	  3957	  3983	  3987	  3988	  3989	  3990	  3992	  4002	  4005	  4006	  4009	  4012	  4018
	  4021	  4039	  4043	  4044	  4066	  4070	  4071	  4099	  4103	  4104	  4124	  4128	  4129	  4145
	  4149	  4150	  4240	  4262	  4268	  4271	  4274	  4284	  4285	  4289	  4290	  4291	  4293	  4296
	  4298	  4299	  4301	  4302	  4304	  4313	  4314	  4316	  4320	  4324	  4332	  4353	  4359	  4362
	  4372	  4377	  4386	  4401	  4403	  4405	  4407	  4410	  4412	  4414	  4443	  4476	  4479	  4481
	  4483	  4485	  4510	  4512	  4514	  4519	  4521	  4527	  4570	  4572	  4577	  4579	  4610	  4614
	  4619	  4622	  4664	  4666	  4681	  4686	  4692	  4696	  4699	  4701	  4703	  4708	  4712	  4717
	  4724	  4728	  4736	  4737	  4742	  4743	  4746	  4762	  4764	  4777	  4781	  4791	  4816	  4820
	  4846	  4862	  4867	  4872	  4878	  4970	  5278	  5282	  5301	  5323	  5326	  5347	  5349	  5363
	  5371	  5374	  5383	  5407	  5432	  5478	  5479	  5572	  5582	  5588	  5589	  5604	  5621	  5623
	  5629	  5740	  5745	  5761	  5762	  5774	  5777	  5785	  5855	  5862	  5868	  5887	  5893	  6010
	  6011	  6013	  6014	  6021	  6031	  6044	  6051	  6053	  6129	  6143	  6167	  6175	  6202	  6220
	  6225	  6228	  6230	  6235	  6361	  6363	  6373	  6540	  6555	  6566	  6628	  6636	  6638	  6647
	  6650	  6653	  6660	  6775	  6790	  6840	  6843	  6849	  6903	  6910	  6921	  6982	  6988	  6992
	  6993	  7003	  7011	  7039	  7040	  7054	  7146	  7150	  7151	  7152	  7163	  7164	  7176	  7177
	  7296	  7299	  7312	  7343	  7346	  7365	  7587	  7590	  7592	  7602	  7610	  7612	  7619	  7705
	  7707	  7708	  7711	  7712	  7713	  7714	  7715	  7716	  7717	  7718	  7719	  7792	  7810	  7822
	  7831	  7880	  7882	  7896	  7933	  7937	  7938	  7969	  7972	  7988	  7992	  8036	  8039	  8050
	  8055	  8063	  8075	  8104	  8108	  8130	  8131	  8145	  8166	  8168	  8173	  8179	  8213	  8214
	  8248	  8249	  8252	  8262	  8267	  8286	  8297	  8299	  8304	  8309	  8310	  8311	  8317	  8335
	  8336	  8337	  8339	  8399	  8401	  8407	  8428	  8483	  8496	  8500	  8511	  8521	  8522	  8526
	  8537	  8540	  8546	  8547	  8561	  8562	  8563	  8571	  8572	  8573	  8625	  8678	  8679	  8684
	  8685	  8701	  8716	  8728	  8731	  8757	  8758	  8765	  8767	  8776	  8781	  8793	  8794	  8814
	  8815	  8816	  8817	  8818	  8819	  8820	  8828	  8846	  8864	  8872	  8873
DALOC2	  2606#
DALOC3	  2608	  2610#
DALOC4	  2620	  2623#
DALOC5	  2619#	  2622
DALOC6	  2627#	  2631
DALOC7	  2628	  2632#	  2636
DALOC8	  2634	  2637#
DATA  	  2404	  2419#
DATA1 	  2425#	  2430
DATEC 	  1887	  1900#
DBITBE	   676#	  1499	  1502	  2633	  2638
DBITTB	   675#	  1498	  1514	  2618	  2637	  4897
DBK   	  7527	  7745#
DBUF  	   607	  8957#
DBUFL 	   160#	  8939	  8957
DCLRUS	   431#	  1718	  1719	  2709	  2710
DCONS 	   462#	  7686
DCRACF	  2338#	  2408	  2410	  2416
DCRB  	   126#	  2376
DCRBF1	  2337	  2361#
DCRBF2	  2349	  2362#
DCRBFS	   433#	  2454	  2456
DCRBIP	  2337#	  2424	  2443
DCRBRK	   349	  2374#
DCRBRV	   124#	   348
DCRCKS	  2339#	  2419	  2431	  2498
DCRDRB	  1425	  2347#	  2433	  2443	  2455	  2456
DCRLST	  2345#	  2436	  2440	  2449
DCRMID	  2340#	  2422	  2461
DCRPRB	  2342#	  2490	  2496
DCRRTS	  2483#	  2508
DCRS  	   125#	  2554
DCRWBL	  2343#	  2422	  2475	  2481	  2488	  2492
DCRWCT	  2341#	  2423	  2429
DCTB  	   129#	  2527	  2556
DCTBFS	   435#
DCTBRK	   353	  2523#
DCTBRV	   127#	   352
DCTBST	  2359#	  2416
DCTS  	   128#	  2383	  2538	  2541	  2555
DCTSMS	  2358#	  2457
DDIR  	  8958#
DDIRBL	   161#
DDIRL 	   165#	  2607	  2662	  8939	  8958
DEBUG 	  1679	  1701	  1775	  1786	  1841	  1852	  2027	  2039	  2069	  2079	  2112	  2122	  2160	  2170
DEDBFL	   164#	  2607	  2666
DEDTBF	   519#	  3466	  3467
DFD   	  7524	  7748#
DFD.0 	  7751	  7754#
DFD.1 	  7760#
DFD.2 	  7772#
DFLAGS	   693#	  7524	  7527	  7530	  7533	  7535	  7537	  7541	  7545	  7550	  7901	  7939	  7951	  8004
	  8012	  8015	  8022	  8027	  8081	  8115	  8663	  8672	  8689	  8812	  8870
DHDDIR	   520#
DIFF  	   877	   959	  5750#
DING  	  3558	  3584#
DIREC 	   709#	  7748	  7752	  7753	  7796	  7833	  7836	  8326	  8409	  8667	  8670	  8694	  8711	  8715
	  8722	  8744	  8753	  8845
DISBIT	   712#	  7679	  7697	  7728	  7736	  7740	  7799	  7839	  7958	  8007	  8018	  8117	  8183
DISBRK	   329	   383#
DISBRV	   119#	   328
DISPLA	   878	  8086#
DISREL	   474	   475	   476	  7703	  7705	  7707	  7727	  8108	  8133	  8168	  8491	  8534	  8883#	  8887
DISRM 	  8100	  8104#
DIVDE 	   917	   962	  5776#
DIVIDE	   141#	  4730	  5783	  7684
DIV.1 	  5775	  5778#
DIV.8 	  5777	  5786#
DIV$  	   961#	  1312
DKRTYS	   414#
DLEN  	   455#	  7714	  8887
DLIST 	  8887	  8898#
DLT   	  7533	  7942#
DLTOP 	  8906#
DMBAR 	    97#	  3508	  4204
DMBCR 	    98#
DMBIT 	  3413#	  3507	  3508	  4162	  4166	  4202	  4204
DMCA  	   368#	  3483	  3510	  4167	  4169	  4191	  4193	  4194	  4344	  4349
DMCSR 	    96#	  3487	  3588	  3620
DMINT 	  3485	  4160#
DMINT1	  4162#	  4177
DMINT2	  4168	  4170#
DMINT3	  4174#	  4185
DMINT4	  4171	  4184#
DMINT5	  4163	  4165	  4173	  4175#
DMK   	  3035	  3036	  3037	  3038	  3042	  3044	  3045	  3081#
DMON  	  1903	  1916#
DMRBRK	   333	   384#
DMRBRV	    94#	   332
DMSND 	  3393	  3505	  4189#	  4335
DMSND1	  4196	  4199#
DMSND2	  4198	  4200#
DMSND3	  4200	  4206#
DMSND4	  4174	  4192	  4194#
DMSND5	  4190	  4205#
DMSQ  	  1896	  3588#
DMSQ1 	  3597#	  3609
DMSQ2 	  3599	  3604#
DMSQ3 	  3595	  3606	  3608#
DMSQ4 	  3589	  3619#
DMTBR 	    99#	  3483
DMTBRK	   337	   385#
DMTBRV	    95#	   336	  3485
DMTRAN	  3507	  4162	  4166	  4203#
DMTT  	   374#	  3484	  3605	  3607	  3612
DMWC  	   370#	  3509	  4164	  4189	  4194	  4195	  4197	  4199	  4201
DNDONE	  1491	  1494#
DO    	   879	  5682#
DO1   	  5686	  5688	  5690#
DO2   	  5698#
DO3   	  5695	  5702#
DO4   	  5701	  5703#
DONE  	  2807	  2827#
DONEMP	  5748	  5754#	  5771	  5777	  5787
DORBEG	   682#	  7690
DOREND	   696#	  7691
DOTF  	   557#	  4434	  4459	  4462	  4530	  4532
DOTS  	   964	  5663#
DOTS2 	  5665#
DOTS$ 	   963#	  1323
DPD   	  7537	  8027#
DPDL  	   474	   475	   476	  8894#
DPDLL 	   456#	   474	   475	   476
DPDLP 	  7721	  8890#
DPOP  	   726#	  7707	  8005	  8741
DPOPJ 	   727#	  8495	  8516
DPROVK	  1455#
DPU   	  7535	  8022#
DPUSHJ	   725#	  7703	  8108	  8133	  8887
DREADC	   168#	  1727	  2141	  2190	  3214	  3230	  4069	  4102	  4148
DREC  	  8409	  8411#
DRSTXY	   729#	  7707
DRT   	  7530	  7946#
DRTRET	  7952	  7957#
DRT.HD	  7855	  7947#	  7964
DR.ALW	  8859	  8870#
DR.AS0	  8855#	  8861	  8867
DR.AS1	  8856	  8858#
DR.AS9	  8871	  8873#
DR.ASC	  8686	  8759	  8854#
DR.BIG	  8770	  8774#
DR.DBG	  8777	  8792#
DR.EQ 	  8778	  8787#
DR.L1 	  8680	  8684#
DR.LAN	  8668	  8672#
DR.LBN	  8673	  8675#
DR.LIN	  7908	  8663#
DR.N1 	  8821#	  8824
DR.N2 	  8830#	  8834
DR.N25	  8822	  8837#
DR.N26	  8839#	  8841
DR.N3 	  8832	  8844#
DR.NE1	  8756	  8812#
DR.NE2	  8810	  8813#
DR.NEP	  8676	  8809#
DR.SC 	  8675	  8754	  8765#
DR.SC4	  8784	  8797#
DR.SC5	  8789	  8801#
DR.TE 	  8766	  8769#
DR.TS3	  8731#	  8736
DR.TSD	  8712	  8718	  8753#
DR.TUR	  7724	  7955	  8016	  8694#
DSAMFL	   574#	  1504	  1511	  1518
DSGC1 	  8599	  8605#
DSGC2 	  8609#	  8618
DSGC3 	  8610#	  8627	  8630
DSGC4 	  8601#	  8611
DSGC6 	  8604	  8629#
DSGC9 	  8603#	  8606	  8639
DSGCF 	  3237	  8598#
DSGCF1	  8604	  8617#
DSKA  	   113#
DSKAE 	   114#
DSKBRK	   325	  1584#
DSKBRV	   108#	   324
DSKCA 	   112#
DSKCRB	   408#	  1439	  1588
DSKDBR	   110#
DSKDST	   429#
DSKLOS	  1587	  1599#
DSKMT 	   115#
DSKRET	  1595#	  1936
DSKRND	   437#	  2596	  2597
DSKRTY	  1594#	  1602
DSKS  	   109#	  1436	  1451	  1457	  1586	  1600	  1883
DSKSG 	   116#
DSKSG1	  1443#
DSKSG2	  1458	  1464#
DSKSGO	  1427	  1430	  1435	  1439#	  1935
DSKSR1	  1429#	  1433
DSKSRT	  1425#	  1461	  1594	  1885
DSKWA1	  1490#	  1496
DSKWA2	  1487#	  2046	  2086	  3200
DSKWAI	  1488#	  2142	  2191	  3215	  3231
DSKWC 	   111#	  1444
DSTOP 	   728#	  8005	  8741	  8888
DSVB  	  6781	  7394#
DTBL  	  1130#	  3687	  3692	  3753	  3779	  3789	  3833	  3872	  3911	  4291	  4412	  4443	  4476
DTBL2 	  1264#	  3689	  3694	  3875	  3913	  4293	  4414
DTIBFL	   163#	  2607	  2670
DTOTB 	  4730	  4748#
DTYIBF	   518#	  3464	  3465
DUSECT	   428#	  1479	  1480
DWRTCC	   169#
DWRTEC	   167#	  1710	  2045	  2085	  2712	  3199	  4042	  4127
DYAL  	  8432#
DYAL1 	  8435#	  8440	  8445
DYAL2 	  8436	  8441#
DYAL3 	  8444#	  8449
DYAL4 	  8443	  8446#
DYAL5 	  8446	  8448#
DYAL6 	  8452	  8454#
DYAL7 	  8438	  8457#
DYAL8 	  8461	  8463#
DYAL9 	  8456	  8468#
DYB   	   701#	  7718	  7927	  8099	  8439	  8453	  8457	  8463	  8465	  8554	  8569	  8582	  8588	  8679
DYF1  	  8517	  8521#	  8538
DYF11 	  8526#	  8528	  8535	  8540	  8544
DYF2  	  8530	  8543#
DYFREE	  8507#	  8626
DYLIB 	  8554#
DYLIB1	  8555#	  8560
DYLIB2	  8558	  8561#
DYLIB3	  8556	  8564	  8570#
DYLIB4	  8568	  8571#
DYLIB5	  8574	  8578#
DYLIB6	  8577	  8580#
DYLIB7	  8584	  8590#
DYR   	   702#	  7719	  8433	  8454	  8464	  8567	  8569	  8589
DYRET 	  8429	  8500#
DYT   	   703#	  7716
DYXFR 	  8037	  8427#
DYXFR1	  8475#
DYXFR2	  8481#	  8486	  8488	  8492
DYXFR3	  8482	  8495#
D.RET 	  8088	  8116#	  8124	  8137
E     	    66#	  1502	  1514	  1529	  1530	  1533	  1543	  1578	  1579	  1765	  1859	  1956	  1968	  1975
	  1982	  2136	  2137	  2139	  2185	  2186	  2188	  2259	  2273	  2580	  2583	  2585	  2611	  2639
	  2644	  2649	  2650	  2679	  3134	  3137	  3182	  3183	  3184	  3217	  3218	  3247	  3258	  3260
	  3274	  3452	  3453	  3460	  3462	  3463	  3464	  3465	  3466	  3467	  3468	  3470	  3500	  3501
	  3502	  3503	  3504	  3505	  3507	  3508	  3509	  3510	  3511	  3512	  3513	  3514	  3515	  3516
	  3517	  3519	  3520	  3521	  3522	  3523	  3524	  3525	  3526	  3527	  3528	  3529	  3530	  3531
	  3532	  3537	  3538	  3539	  3544	  3545	  3552	  3557	  3559	  3560	  3561	  3562	  3564	  3570
	  3580	  3584	  3593	  3600	  3602	  3615	  3631	  3633	  3637	  3646	  3648	  3649	  3651	  3655
	  3657	  3659	  3660	  3661	  3663	  3666	  3667	  3670	  3674	  3675	  3682	  3699	  3706	  3713
	  3721	  3725	  3726	  3728	  3730	  3732	  3736	  3744	  3758	  3762	  3771	  3794	  3800	  3803
	  3804	  3805	  3806	  3810	  3813	  3814	  3815	  3818	  3823	  3825	  3827	  3828	  3832	  3846
	  3850	  3852	  3866	  3868	  3869	  3878	  3880	  3882	  3887	  3889	  3890	  3891	  3892	  3903
	  3905	  3907	  3908	  3914	  3915	  3917	  3924	  3926	  3940	  3942	  3943	  3947	  3950	  3952
	  3954	  3957	  3958	  3959	  3964	  3984	  3986	  3987	  3998	  3999	  4002	  4003	  4005	  4008
	  4011	  4017	  4018	  4019	  4028	  4029	  4035	  4036	  4037	  4045	  4046	  4047	  4055	  4056
	  4057	  4059	  4061	  4062	  4064	  4072	  4077	  4087	  4089	  4093	  4095	  4096	  4097	  4105
	  4109	  4110	  4120	  4121	  4122	  4130	  4141	  4142	  4143	  4151	  4152	  4153	  4161	  4162
	  4164	  4166	  4167	  4169	  4170	  4172	  4175	  4176	  4179	  4189	  4191	  4193	  4194	  4195
	  4197	  4199	  4201	  4202	  4204	  4210	  4213	  4221	  4223	  4224	  4225	  4226	  4228	  4241
	  4243	  4244	  4248	  4252	  4255	  4258	  4261	  4269	  4270	  4271	  4278	  4282	  4286	  4287
	  4305	  4308	  4310	  4312	  4329	  4331	  4332	  4333	  4334	  4335	  4337	  4339	  4341	  4344
	  4346	  4348	  4349	  4351	  4352	  4353	  4360	  4366	  4368	  4373	  4375	  4387	  4561	  4563
	  4575	  4583	  4589	  4598	  4601	  4605	  4932	  4938	  5517	  5551	  5556	  5573	  5603	  5758
	  5766	  5794	  5839	  5841	  5876	  6030	  6130	  6133	  6141	  6155	  6166	  6203	  6210	  6230
	  6232	  6542	  6557	  6565	  6638	  6640	  6644	  6659	  6983	  6992	  7005	  7009	  7015	  7040
	  7047	  7048	  7050	  7052	  7297	  7301	  7303	  7304	  7306	  7333	  7344	  7347	  7369	  7557
	  7560	  7596	  7599	  7602	  7615	  7619	  7623	  7635	  7668	  7787	  7811	  7823	  7830	  7883
	  7885	  7898	  7934	  7935	  7936	  8089	  8112	  8125	  8126	  8143	  8156	  8161	  8177	  8275
	  8279	  8284	  8287	  8289	  8298	  8303	  8304	  8311	  8403	  8405	  8407	  8427	  8428	  8432
	  8442	  8459	  8468	  8479	  8481	  8512	  8609	  8623	  8698	  8704	  8705	  8717	  8731	  8732
	  8733	  8734	  8769	  8771	  8776	  8782	  8783	  8788	  8792	  8829	  8830	  8838	  8839	  8844
	  8845	  8854	  8857	  8864	  8865	  8872	  8873
EAESR 	   146#	  4733	  5758	  6233
EDBFSZ	  3375#	  3377	  3377#	  4086
EDIT  	   880	  6856#
EDITA 	  3537#	  3807
EDITF 	   562#	  6856	  6858	  6878	  6929
EDITZ 	  3544#
EDQF  	  3914	  3930#
ELAPSE	   389#	  2260	  2262	  2264	  2265	  2275	  2281
ELSE  	   881	  5966#
EMPTY 	  4655	  4662	  4675#	  4753
EMPTY1	  4753#	  4759
EMPTYP	   882	  5937#
EMTBK 	   345	  4628#
EMTBRK	  1416#
EMTBRV	   136#	   344
END   	   883	  6948	  6951#
END1  	  6906	  6918#
END2  	  6952	  6958#
EQFALS	  5815	  5832#	  5840	  5847	  5855	  5865	  5898
EQL$  	   967#	  1326
EQTRUE	  5810	  5830	  5833#	  5867	  5905
EQUAL 	   884	   968	  5791#
EQUAL1	  5795	  5809#	  5823
EQ.A2 	  5856	  5863#
EQ.F  	  5796	  5800#
EQ.FAL	  5855	  5869#
EQ.FF 	  5824	  5835#
EQ.LST	  5817#	  5831
EQ.RET	  5798	  5801#
EQ.SB1	  5814	  5838#	  5846
EQ.STR	  5854	  5859#
EQ.SUB	  5812	  5839#
EQ.W1 	  5813	  5846#
ERMNO 	  5038#	  5040	  5040#	  5041	  5041#	  5042	  5042#	  5043	  5043#	  5044	  5044#	  5045	  5045#	  5046
	  5046#	  5047	  5047#	  5048	  5048#	  5049	  5049#	  5050	  5050#	  5051	  5051#	  5052	  5052#	  5053
	  5053#	  5054	  5054#	  5055	  5055#	  5056	  5056#	  5057	  5057#	  5058	  5058#	  5059	  5059#	  5060
	  5060#	  5061	  5061#	  5062	  5062#	  5063	  5063#	  5064	  5064#	  5065	  5065#	  5066	  5066#	  5067
	  5067#	  5068	  5068#	  5069	  5069#	  5070	  5070#	  5071	  5071#	  5072	  5072#	  5073	  5073#	  5074
	  5074#	  5075	  5075#	  5076	  5076#	  5077	  5077#	  5078	  5078#	  5079	  5079#	  5080	  5080#	  5081
	  5081#
ERP   	  5046#	  5728
ERP.E 	  5046	  5138#
ERRBK 	   309	  4630#
ERRBUF	   717#
ERRF  	   573#	  2757	  2876
ERRINA	   621#
ERROOB	  8202	  8204	  8207#
ERROR 	    75#	  2740	  2752	  2928	  2961	  4409	  4492	  4771	  4813	  4837	  4934	  5001	  5351	  5354
	  5392	  5412	  5430	  5484	  5654	  5664	  5666	  5677	  5689	  5726	  5728	  5768	  5861	  5964
	  5968	  6003	  6307	  6369	  6399	  6424	  6429	  6446	  6478	  6481	  6500	  6527	  6597	  6718
	  6813	  6837	  6861	  6880	  6888	  6928	  6931	  7420	  7543	  7547	  7552	  7688	  7929	  8101
	  8208	  8462	  8681
ERRRT 	  4640#
ERTAB 	  4638	  5039#
ERTAP 	  2016	  4677#
ERTAS 	  1403	  1409	  1418	  1419	  1683	  1778	  1844	  2013	  2031	  2072	  2115	  2163	  2725	  2793
	  2796	  2812	  2828	  4643#	  4676	  4888	  4890	  4893	  4938	  4964	  4986	  4988	  4990	  5086
	  5088	  5094	  5096	  5101	  5103	  5108	  5113	  5117	  5121	  5125	  5129	  5135	  5139	  5143
	  5148	  5152	  5156	  5161	  5165	  5167	  5171	  5175	  5177	  5181	  5185	  5190	  5194	  5198
	  5202	  5206	  5210	  5214	  5218	  5221	  5225	  5229	  5233	  5238	  5240	  5245	  5251	  5255
	  5259	  5262	  5265	  5268	  5271	  6626	  6744	  6748	  6950	  6955
ERTEND	  5081#
ERTL0 	  4884#
ERTL1 	  4886	  4896#
ERTLN 	  2736	  4883#	  5089	  5097	  5104	  5109	  5114	  5118	  5122	  5126	  5131	  5136	  5140	  5144
	  5149	  5153	  5157	  5162	  5168	  5172	  5178	  5182	  5186	  5191	  5195	  5199	  5203	  5207
	  5211	  5215	  5219	  5222	  5226	  5230	  5234	  5241	  5246	  5252	  5256	  5260	  5263	  5266
	  5269	  5272
ETRACE	   885	  4995#
EVAL  	  2902	  6379#	  6497
EVATM 	  6390	  6395#
EVBUG 	  6377#	  6388	  6393	  6682	  6816	  7043
EVCON 	  6392	  6394#
EVDNO 	  6460	  6474#
EVF1  	  6431	  6435	  6437#
EVF11 	  6433	  6436#
EVF2  	  6444#	  6485
EVFUN 	  6383	  6427#
EVI   	  6396	  6401#	  6561
EVI1  	  6406#	  6414
EVI2  	  6410	  6416#
EVL   	  6476	  6487#
EVL1  	  6449	  6488	  6490	  6492#
EVLI1 	  2900#	  2909
EVLI2 	  2901	  2906	  2927#
EVLI3 	  2903	  2905#
EVLI4 	  2898	  2910#
EVLI5 	  2915	  2925#
EVLI6 	  2899#	  2917
EVLI7 	  2920	  2928#
EVLINE	  2739	  2897#	  5699
EVS   	  6458	  6475#
EVVAR 	  6385	  6397#
EVW   	  6426	  6479	  6494	  6497#	  6505
EVW1  	  6495#	  6507	  6509	  6530
EVW2  	  6498	  6525#
EVX   	  6502	  6514#
EVXM  	  6459#
EVXP  	  6450#	  6515
EXCH1 	   494#	  3087	  5864
F     	    67#	  1503	  1506	  1509	  1538	  1541	  1544	  1961	  1969	  2024	  2062	  2066	  2102	  2109
	  2151	  2157	  2200	  3113	  3133	  3135	  3175	  3176	  3216	  3220	  3251	  3265	  3278	  4388
	  4391	  4539	  4541	  4545	  4548	  4549	  4553	  4557	  4935	  4940	  4942	  4954	  4956	  5343
	  5346	  5355	  5372	  5433	  5552	  5556	  5574	  5577	  5598	  5602	  5757	  5759	  5765	  5770
	  5781	  5782	  5784	  5786	  5791	  5792	  5793	  5875	  5876	  5879	  5881	  6029	  6131	  6154
	  6165	  6204	  6211	  6212	  6214	  6232	  6235	  6241	  6242	  6362	  6371	  6544	  6559	  6564
	  6984	  6986	  7000	  7298	  7302	  7306	  7307	  7309	  7329	  7333	  7345	  7357	  7359	  7371
	  7375	  7384	  7576	  7598	  7601	  7604	  7617	  7621	  7806	  7808	  7809	  7818	  7819	  7820
	  7848	  7868	  7869	  7879	  7913	  7914	  7915	  7916	  7917	  8092	  8113	  8127	  8128	  8142
	  8157	  8163	  8255	  8256	  8257	  8258	  8259	  8276	  8277	  8278	  8279	  8280	  8281	  8282
	  8290	  8291	  8322	  8323	  8324	  8325	  8326	  8441	  8442	  8448	  8450	  8455	  8458	  8467
	  8483	  8484	  8485	  8487	  8491	  8513	  8526	  8527	  8529	  8534	  8537	  8543	  8547	  8561
	  8565	  8575	  8579	  8598	  8601	  8604	  8614	  8783	  8788	  8794	  8815	  8858
FALSE 	  3131	  5800	  5913	  6002	  8974#
FBIND 	   547#	  3157	  7178	  9099
FCQF  	  3332#	  3682	  3758	  3832
FIRST 	   886	  5423#
FIX   	  7762	  7774	  7786	  7791	  8218#	  8697	  8700
FLAGS 	   640#	  2817	  2900	  2905	  2908	  2931	  2933	  2939	  2941	  2946	  2955	  2957	  2965	  2969
	  2972	  5954	  5960	  5962	  5966	  5973	  5978	  5980	  5982	  5983	  5989	  6406	  6407	  6427
	  6487	  6495	  6496	  6510	  6511	  6606	  6615	  6618	  6642	  6736	  6802	  6856	  6858	  6878
	  6883	  6929
FLAGS2	   380	   666#	  1504	  1511	  1518	  2051	  2054	  2091	  2094	  2106	  2148	  2154	  2197	  2733
	  2757	  2789	  2803	  2834	  2841	  2876	  2879	  3571	  4670	  4789	  4793	  4794	  4801	  4809
	  4810	  4865	  4928	  4980	  5010	  5012	  5633	  5635	  5644
FLEV  	   903	  5014#
FLISTB	  4523	  4552#
FLSADR	   506#	  1609	  1613	  1625	  1644	  1649	  1720	  1760	  1762	  2647	  2652
FLSB1 	  4554	  4556#
FLSRES	   505#	  1494	  1614	  1623	  1631	  1642	  1716	  1744	  1767	  1769	  1871	  2648	  2653	  2891
	  3555	  3568	  3737	  3811	  3945	  4006	  4250
FLUSH 	  1495	  1753#	  1872	  2892	  3118	  3946	  4251
FLUSH1	  1789#	  1791
FLUSH2	  1794	  1799	  1805#	  1807
FLUSH3	  1776	  1787#
FLUSH4	  1754	  1756#
FLUSH5	  1797#	  1802	  1804
FNLLP 	   665#	  6877	  6895	  6901	  6987
FOF   	  1123#	  1133	  1138	  1139	  1140	  1141	  1142	  1143	  1144	  4291
FOO   	     3#	     5#	   420#	   426	   426#	   865#	   865
FORWAR	   887	  7522#
FPRINT	   888	  5706#
FPUT  	   889	  5342#
FPUT1 	  5346	  5357#
FQF   	  1124#	  1222	  1224	  3692	  3833	  3872	  3911
FRDSKW	   177#	  1494	  1744
FREE  	   624#	  3274	  7415	  7418	  7430	  7436	  7439	  7454	  7456	  7457
FRELST	  2866	  4465	  7281	  7285	  7442#
FRL1  	  7449#	  7453
FRL2  	  7451	  7454#
FRNEWU	   181#	  1623	  1716	  2653
FRRAND	   180#	  1769
FRSCED	   176#	  1871
FRTRCF	   171#	  1775	  1841
FRTYIH	   182#	  1642	  2891	  3555	  3568	  4006
FRTYIW	   178#	  3737	  3811	  3945
FRTYOW	   179#	  4250
FSF   	  1122#	  1134	  1135	  1138	  1144	  1145	  1148	  1149	  1150	  1154	  1155	  1156	  1157	  1258
	  3687	  3833
FUNLEV	   638#	  2755	  2874	  4885	  5014	  6621	  6623	  6688	  6711	  6726	  6732	  6809	  7013
F.SENT	  5425	  5438#
F.STOR	  5433#	  5483
F.WTA 	  5430#	  5449
G1NAR1	  6304#
G1NARG	  5734	  5742	  5764	  6298	  6303#	  6932	  7522	  7525	  7528	  7531	  7553	  7864	  7963
G1RET 	  6309#	  6348
G1SNAP	  6346#	  8087	  8122
G1WTA 	  6307#	  6319	  6325
G2NARG	  5751	  5778	  5909	  5915	  5921	  5926	  6298#	  7829
GBITCH	  2411	  2473	  2476	  2482	  2505#
GCBITS	   607#	  3020	  3122	  3252
GCBTL 	  3009#	  3123
GCDBUG	  3034	  3061	  3072	  3094	  3105
GCDIE 	  3039	  3040	  3041	  3048	  3082#
GCLOCK	   448#	  1667	  3116	  3120	  3276
GCMARK	  3046	  3047	  3049	  3050	  3083#
GCMKL 	   496#	  3175
GCP1  	   498	   627#	  5367	  5376	  5377	  5601	  5872	  5896	  5903	  6164	  6205
GCP2  	   499	   628#	  5873	  5897	  5904
GCPREV	   500	   629#	  5299	  5310	  5318	  5333	  5337	  5396	  5402	  5405	  5413	  5418
GCRT2 	  3257#	  3269	  3273
GCRT3 	  3257	  3263#
GCRT4 	  3262	  3264#
GCRT5 	  3266	  3274#
GCTRCF	   174#
GEDC  	  3709	  3716	  3750	  3765	  3776	  3903#
GEDC1 	  3907#	  3925
GEDC2 	  3910	  3912	  3915#
GEDC3 	  3916	  3919#
GEDC4 	  3918	  3921#
GEDCA 	  3906	  3924#
GENSQ 	  3625	  3629#
GETINT	  6330	  6336	  8056	  8059	  8076	  8078	  8174	  8176	  8213#
GETSTR	  2737	  2755#
GLWANE	  5424	  5444	  5472	  5496	  6323#
GLWAR1	  6314#	  6326
GLWARG	  5352	  5528	  6313#
GNASN 	  6445	  6612	  6681	  6815	  7064#
GNC   	  4425	  4442	  4475	  4509	  4608#
GNC1  	  4612	  4625#
GNC2  	  4622#	  4626
GNC3  	  4613	  4616#
GNC4  	  4610#	  4623
GNCN  	   671#	  4389	  4390	  4610	  4611	  4618	  4621	  4625
GNL1  	  7048#	  7055	  7061
GNL2  	  7056	  7060#
GNL3  	  7058	  7062#
GNL4  	  7049	  7059#
GNLINE	  7033#
GNSND 	  4215	  4219#
GNSND1	  4220	  4222	  4227	  4229#
GNT   	  2907	  2931#	  5723	  5975	  6379	  6401	  6492	  6503	  6528	  6862	  6882
GNT1  	  2932	  2941#
GNT2  	  2950	  2955#
GNT3  	  2943	  2946#
GNT4  	  2952#	  2960
GNT5  	  2956	  2961#
GNT6  	  2936	  2938	  2940#
GO    	   890	  6932#
GRB1  	  7414	  7416	  7419	  7421#
GRB2  	  7409	  7413#
GRB3  	  7423	  7427#
GRBAD 	  2923	  5297	  5332	  5458	  6120	  7400	  7405#	  8047
GRBAD1	  4540	  4600	  6692	  6724	  6891	  6919	  6924	  7006	  7026	  7161	  7406#	  8051
GRBAD2	  6894	  6902	  6922	  7402#
GREATR	   891	   970	  5909#
GREQ  	  5921#
GRTR  	   970	   970#
GSTR0 	  2756	  2758	  2803#
GSTR1 	  2804	  2825#
GSTR6 	  2781	  2787#
GSTR8 	  2754	  2763	  2769#
GSTR9 	  2750#	  2760
GSTRT 	  2790	  2800	  2821#	  2826
GSW1  	  6316	  6318#
GSW2  	  6320#
GTIME 	  2235	  2257	  2288#
GTLINE	  2751	  6824	  7028#
GTR$  	   969#	  1327
GUOE1 	  5674	  5681#
GUOE2 	  5676	  5678#
GUOEB 	  4930	  4998	  5663	  5670#	  6480
GWORD 	  2420	  2426	  2473#
GWORDB	  2497	  2501#
HAS$  	   947#	  1300
HCC   	  3133	  7351	  8947#	  8956
HEADIN	   892	  7998#
HERE  	   893	  7969#
HERE.1	  7973#
HERE.2	  7974#	  7983
HIDETF	   736#	  7951	  8004	  8012	  8015
HIDETU	   894	  8003#
HNM   	  5047#	  6446	  6481	  6597
HNM.E 	  5047	  5224#
HNV   	  5048#	  5664	  5666	  6399
HNV.E 	  5048	  5133#
HOME  	   895	  7979#
HOOKF 	   735#	  7939	  8081	  8115	  8672	  8689
HSSL  	  7237	  7335#
HSSL1 	  7361#	  7378
HSSL2 	  7366	  7370	  7375#
HSSL3 	  7371#
HSSL4 	  7372	  7381#
HSSL5 	  7374#	  7387
HSSL6 	  7358	  7380#
IF    	   896	  5953#
IFF   	   564#	  5954	  5962	  5966	  5973
IFLEV 	   639#	  5953	  5971	  6609	  6687	  6799
IFR   	  5957	  5959	  5961#	  5963	  5965	  5970	  5972	  5974
IGNT  	  2899	  2962#
IGNT1 	  2964	  2972#
IGNT2 	  2967#	  2975
ILN   	  5049#	  6928
ILN.E 	  5049	  5243#
INF1  	  5050#	  6478
INF1.E	  5050	  5106#
INFIX 	   530#	  4419	  6404	  6475
INIT1 	  2687#	  2693
INIT2 	  2689	  2694#
INSTR 	  5428	  5448	  5571	  5617#
INSTR1	  5478	  5534	  5618#	  5628	  5631	  5875	  6208
INSTR2	  5622	  5626#
INT0  	  7236	  7244	  7257#
INT1  	  7231	  7235#
INT2  	  7229	  7237#
INT3  	  7238	  7243#
INT5  	  7234	  7241#
INVN  	  4771	  5051#
INVN.E	  5051	  5267#
IOTBRK	   341	  1395#
IOTBRV	   137#	   340
IP    	   595	   601	   602	   603	   604	   605	  2742	  8942#
IS    	   594	   596	   597	   598	   599	   600	  8945#
ITB   	  5052#
ITB.E 	  5052	  5258#
ITINIT	  2716	  2721#
JDCSW 	   453#	  2715	  2887	  3578	  4179
JTYI  	  3473	  3936#
JTYO  	  3474	  4235#
KILLD1	  7736#
KILLD2	  7681	  7738#
KILLDI	   897	  7734#
KILLDR	  7737	  7743#
L     	   525#	  7684
L1    	  8921	  8982#
L10   	  9158#
L11   	  9163#
L12   	  9167#
L13   	  9172#
L14   	  9176#
L15   	  9178#
L2    	  8922	  8991#
L3    	  8923	  9002#
L4    	  8924	  9045#
L5    	  8925	  9075#
L6    	  8926	  9081#
L7    	  9090#
L8    	  9149#
L9    	  9154#
LAMPOF	   898	  7545#
LAMPON	   899	  7541#
LAST  	   900	  5471#
LCE   	  5053#	  6837
LCE.E 	  5053	  5228#
LD3NUM	  6349	  6358#	  7847
LDE   	  2752	  5054#
LDE.E 	  5054	  5164#
LDN.E 	  6364	  6369#	  6374
LDN.L 	  6363#	  6372
LEFT  	   901	  7531#
LESS  	   902	   966	  5915#
LGS   	   148#
LINEL 	  3357#	  4310
LINENO	   668#	  2686	  2812	  2813
LIST  	   542#	   543	  2787	  4544	  4556	  4557	  4811	  5338	  5523	  5687	  6892	  6994	  9099	  9100
	  9102	  9103	  9104
LIST1 	  5325#	  5369
LISTB 	  4396	  4518	  4537	  4539#	  5557	  5610	  6157
LISTB1	  4542	  4545#
LISTBD	   656#	  4490	  4550
LISTBR	  4531	  4546#
LISTP 	   905	  5942#
LISTT 	   752#	   753	   878
LIST.1	  5326#	  5335
LIST.2	  5331#	  5364
LIST.9	  5327	  5337#
LIST.P	   904	  5322#
LLPAR 	   946	  6526	  6528#
LMPOF1	  7546	  7548#
LMPON1	  7542	  7544#
LMT   	  3035#	  3079
LNTB  	  2928	  5055#
LNTB.E	  5055	  5170#
LNUM  	   539#	  2916	  4454	  4797	  5386	  5388	  5932	  6121	  6918	  9148	  9153
LO    	   651#	  4654	  4656	  6461	  6462
LOCKUS	   447#	  1665
LOGDNE	  2536	  2541#	  2544
LOGEND	  2558	  9190#
LOGMES	  2310#	  2534
LOGSEN	  2535#	  2540
LOSER 	  1397	  1418#
LOSSCT	  1396#
LPAR  	   950	  5723#
LPAR1 	  5725	  5727#
LPOFF 	   898	   898#
LPON  	   899	   899#
LPUT  	   906	  5345#
LPUT1 	  5346	  5366#
LP$   	   949#	  1305
LSEQ  	  5926#
LSS$  	   965#	  1325
LSTR  	   540#	  4493	  4494	  4497	  4604	  4804	  5294	  5390	  5419	  5435	  5460	  5512	  5652	  5675
	  5685	  5859	  6162	  6314	  6869	  8985	  8986	  8992	  8993	  9007	  9008	  9017	  9018	  9030
	  9036	  9048	  9049	  9058	  9059	  9064	  9065	  9079	  9088	  9094	  9132	  9135	  9138	  9145
	  9152	  9158	  9161	  9162	  9167	  9170	  9171	  9176
LTL   	  8920	  8921#
LUBLK 	   524#	   525	   527	  1638	  1640	  2585	  2645	  2646	  3469
LUVBLK	   718#	  1806	  1820	  2701	  8939	  8940
LVERNF	   366#	  2725	  5016
L.SEN1	  5486#	  5490
L.SENT	  5473	  5488#
L.SRET	  5492#
L.W1  	  5479#	  5481
M360A 	  8230	  8232#
M360R 	  8234	  8237#
MAKE  	   907	  5633#
MAKE1 	  5645	  5649#
MAKE2 	  5641	  5652#
MAKE3 	  5653	  5655#
MAKE4 	  5642#	  5662
MAKE5 	  5654#	  5656
MAKSTR	  5572#
MARKL 	  3054#	  3083	  3147	  3166	  3168	  3171	  3180	  3186	  3219
MARKN 	  3011#	  3069	  3141	  3145	  3152
MAXELN	   716#	   717	  1806
MEVAL 	  6459	  6519	  6591#
MEVALN	  6513	  6524	  6590#
MFUN  	  6443	  6453#
MINUS 	   959	   959#
MIN$  	   958#	  1310
MKDC  	  3087	  3090	  8636#
MKDC.K	  8637	  8652#
MKDC.R	  8646	  8648#
MKFB  	  3158	  3168#
MKL0  	  3055	  3058#	  3089	  3091
MKL1  	  3065#	  3081	  3084	  3092
MKL3  	  3067	  3105#
MKRNDM	  3176#	  3179	  3181
MKSFB 	  3162	  3171#
MKSNP 	  3043	  3090#
MKSNPL	  3057	  3086#
MKSP1 	  3183#	  3187
MKSP2 	  3185	  3188#
MKSP3 	  3190	  3193#
MKSP4 	  3192	  3234#
MKSP5 	  3203	  3206#
MKSP6 	  3205	  3223#
MKSP7 	  3218#	  3221
MKSP8 	  3201#	  3222
MKSPDL	  3177	  3182#
MKSVB 	  3164	  3170#
MKTPS 	  3136	  3175#
MKUOBI	  3138#	  3150
MKUOBL	  3135#	  3139
MKUOE 	  3149#	  3167	  3169	  3170	  3172
MKVB  	  3160	  3166#
MLOOP 	  2732#	  2741	  4929	  6689
MLOOP1	  2734	  2737#
MMAKE 	  5635#
MMF   	   572#	  5633	  5635	  5644
MNSLTS	   405	   406	   409	   426
MNUSRS	   407	   527	  1432	  1474	  1640	  2644	  2645	  3362	  3367	  3377	  3380
MOD   	   908	  5773#
MOD360	  7947	  8226#
MOVETO	  7795	  7835	  7852	  7896#
MQ    	   143#	  1758	  1861	  2567	  2571	  2598	  2605	  4725	  4727	  4736	  4739	  4742	  5757	  5781
	  6132	  6211	  7348	  7582	  7683	  7685	  8255	  8276	  8774	  8814
MQZ   	   151#	  4733
MRD1  	  2875	  2877	  2879#
MRD2  	  2880	  2882#
MREAD 	  2738	  2874#
MSLTLN	  2572	  2574	  8939#
MSWPOR	   406#	   426	   426#
MTO.  	  7926#	  8179
MTO.1 	  7897	  7901#
MTO.P1	  7794	  7907#
MTO.P2	  7794	  7908#
MTO.PD	  7904#
MTO.PU	  7902	  7924#
MTO.R 	  7899	  7918#
MTO.RM	  7928	  7931#
MTO.XY	  7912#	  7925
MULCOS	  7766	  8243#	  8699
MULCS2	  8244	  8248#
MULCS3	  8251	  8255#
MULCS9	  8263	  8267#
MULSIN	  7754	  8247#	  8696
MULTIP	   144#
NAKREC	  2403	  2408#
NBKTS 	   673#	  2833	  2847	  2853	  2856	  4844	  4848	  4860	  4983	  4992	  5692	  5705	  6592
NCHR  	   663#	  4560	  4574	  4587	  4924
NDCTY 	  3338#	  3341	  3343	  3344
NDMTY 	  3342#	  3344	  3390	  3416	  4176
NDPTY 	  3340#	  3343	  3344
NDU   	  5056#	  7688
NDU.E 	  5056	  5189#
NEWSN1	  8075#	  8180
NEWSN2	  7725	  8080#
NEWSNA	   909	  8074#
NEWX  	   482#	  7760	  7761	  7806	  7818	  7879	  7913
NEWY  	   487#	  7772	  7773
NEXT10	  1736	  1743	  1745	  1748	  1751#
NEXT11	  1630	  1711#
NEXT12	  1717	  1724#
NEXT13	  1723	  1726#
NEXT14	  1624	  1631#
NEXT15	  1627	  1642#
NEXTU1	  1617#	  1645
NEXTU2	  1618#	  1654
NEXTU3	  1619	  1622	  1653#
NEXTU4	  1658#	  1660	  1663	  1666	  1668
NEXTU5	  1680	  1702#
NEXTU6	  1656	  1670	  1673#
NEXTU7	  1738#	  1763
NEXTU8	  1740#	  1750
NEXTU9	  1741	  1749#
NEXTUS	  1621	  1638#	  1643	  1646	  1661	  1672	  1751	  1808	  2720	  3488
NFDCTY	  3339#
NFDMTY	   368	   370	  3343#	  3413	  3483	  3602	  4161	  4176
NFDPTY	  3341#
NFKLTY	  3337#
NFTY  	  3335#	  3627
NGCSR 	   120#	  7728	  7738	  7799	  7839	  7958	  8007	  8018	  8117	  8183
NGP2  	   863#	   865	   865#
NGREL 	   121#	  7727
NINU  	   401#	  1671	  1711	  1950	  2579
NKLTY 	  3336#	  3339	  3341	  3343	  3344
NNGC  	   620#	  3248	  3261
NNN   	  9187#	  9188
NNODES	  3008#	  3009
NNUMF 	  1127#	  1131	  1132	  1133	  1134	  1135	  1136	  1137	  1138	  1139	  1140	  1141	  1142	  1143
	  1144	  1145	  1146	  1147	  1148	  1149	  1150	  1151	  1152	  1153	  1154	  1155	  1156	  1157
	  1158	  1159	  1160	  1161	  1162	  1163	  1164	  1165	  1166	  1167	  1168	  1169	  1170	  1171
	  1172	  1173	  1174	  1175	  1176	  1177	  1178	  1189	  1190	  1191	  1192	  1193	  1194	  1195
	  1196	  1197	  1198	  1199	  1200	  1201	  1202	  1203	  1204	  1205	  1206	  1207	  1208	  1209
	  1210	  1211	  1212	  1213	  1214	  1215	  1216	  1217	  1218	  1219	  1220	  1221	  1222	  1223
	  1224	  1225	  1226	  1227	  1228	  1229	  1230	  1231	  1232	  1233	  1234	  1235	  1236	  1237
	  1238	  1239	  1240	  1241	  1242	  1243	  1244	  1245	  1246	  1247	  1248	  1249	  1250	  1251
	  1252	  1253	  1254	  1255	  1256	  1257	  1258	  4451	  4499
NODATA	  2427	  2432	  2434	  2441	  2468#
NODC11	  2553	  2557#
NODESP	   593	  8966#	  8968	  8981
NOR   	   648#	  2820	  6420	  6425	  6440	  6448	  6457	  6464	  6491	  6501	  6506	  6512	  6523	  6582
	  6591
NORMAL	   147#
NORT  	  2747	  4965	  5009	  5011	  5013	  5651	  5703	  5710	  5715	  5961	  6460#	  6531	  6734	  6927
	  6935	  6958	  7564	  7626	  7672	  7729	  7735	  7799	  7839	  7958	  8007	  8018	  8023	  8028
	  8074	  8118	  8183
NORT1 	  6461#	  6562
NORT2 	  6469	  6471	  6473#
NOU   	  5057#	  6527
NOU.E 	  5057	  5111#
NRABLU	   399#	  1615	  1770
NSL   	  5058#	  7420
NSLOTS	   418#	  2570	  2578
NSL.E 	  5058	  5155#
NSWPU 	   400#	  1669	  1712	  1951
NTB   	  4837	  5059#
NTB.E 	  5059	  5184#
NTF   	  5060#	  6003
NTF.E 	  5060	  5159#
NTL   	  5061#
NTL.E 	  5061	  5193#
NTTY  	  3344#	  3350	  3352	  3354	  3356	  3358	  3362	  3363	  3364	  3367	  3368	  3369	  3370	  3371
	  3372	  3373	  3377	  3380	  3381	  3382	  3383	  3384	  3385	  3386	  3394	  3395	  3396	  3397
	  3398	  3400	  3401	  3402	  3403	  3405	  3406	  3408	  3411
NTY   	  3334#	  3337	  3339	  3341	  3343	  3344	  3387	  3477
NULTIM	   393#	  1859
NUMBP 	   910	  5931#
NUMOBS	   859#	   867
NUMT  	   749#	   753	   872	   877	   884	   887	   890	   891	   901	   902	   908	   916	   917	   919
	   922	   924	   925	   926	   933	   936	   940	   954	   956	   957	   959	   960	   962	   966
	   968	   970
NUNODE	   416#	  2697	  3251
NUSER2	   419#	  2713	  2714	  3470	  3667
NUSERS	   417#	  2601	  2650	  2713
NY    	  5062#
NY.E  	  5062	  5124#
OBADD1	   866#	   871#	   871	   872#	   872	   873#	   873	   874#	   874	   875#	   875	   876#	   876	   877#
	   877	   878#	   878	   879#	   879	   880#	   880	   881#	   881	   882#	   882	   883#	   883	   884#
	   884	   885#	   885	   886#	   886	   887#	   887	   888#	   888	   889#	   889	   890#	   890	   891#
	   891	   892#	   892	   893#	   893	   894#	   894	   895#	   895	   896#	   896	   897#	   897	   898#
	   898	   899#	   899	   900#	   900	   901#	   901	   902#	   902	   903#	   903	   904#	   904	   905#
	   905	   906#	   906	   907#	   907	   908#	   908	   909#	   909	   910#	   910	   911#	   911	   912#
	   912	   913#	   913	   914#	   914	   915#	   915	   916#	   916	   917#	   917	   918#	   918	   919#
	   919	   920#	   920	   921#	   921	   922#	   922	   923#	   923	   924#	   924	   925#	   925	   926#
	   926	   927#	   927	   928#	   928	   929#	   929	   930#	   930	   931#	   931	   932#	   932	   933#
	   933	   934#	   934	   935#	   935	   936#	   936	   937#	   937	   938#	   938	   939#	   939	   940#
	   940	   941#	   941	   942#	   942	   943#	   943	   944#	   944	   945#	   945	   946#	   946	   948#
	   948	   950#	   950	   952#	   952	   954#	   954	   956#	   956	   957#	   957	   959#	   959	   960#
	   960	   962#	   962	   964#	   964	   966#	   966	   968#	   968	   970#	   970
OBADD2	   867#	   868	   871	   871#	   872	   872#	   873	   873#	   874	   874#	   875	   875#	   876	   876#
	   877	   877#	   878	   878#	   879	   879#	   880	   880#	   881	   881#	   882	   882#	   883	   883#
	   884	   884#	   885	   885#	   886	   886#	   887	   887#	   888	   888#	   889	   889#	   890	   890#
	   891	   891#	   892	   892#	   893	   893#	   894	   894#	   895	   895#	   896	   896#	   897	   897#
	   898	   898#	   899	   899#	   900	   900#	   901	   901#	   902	   902#	   903	   903#	   904	   904#
	   905	   905#	   906	   906#	   907	   907#	   908	   908#	   909	   909#	   910	   910#	   911	   911#
	   912	   912#	   913	   913#	   914	   914#	   915	   915#	   916	   916#	   917	   917#	   918	   918#
	   919	   919#	   920	   920#	   921	   921#	   922	   922#	   923	   923#	   924	   924#	   925	   925#
	   926	   926#	   927	   927#	   928	   928#	   929	   929#	   930	   930#	   931	   931#	   932	   932#
	   933	   933#	   934	   934#	   935	   935#	   936	   936#	   937	   937#	   938	   938#	   939	   939#
	   940	   940#	   941	   941#	   942	   942#	   943	   943#	   944	   944#	   945	   945#	   946	   946#
	   948	   948#	   950	   950#	   952	   952#	   954	   954#	   956	   956#	   957	   957#	   959	   959#
	   960	   960#	   962	   962#	   964	   964#	   966	   966#	   968	   968#	   970	   970#	   973
OBSTRT	   868#	   871	   872	   873	   874	   875	   876	   877	   878	   879	   880	   881	   882	   883
	   884	   885	   886	   887	   888	   889	   890	   891	   892	   893	   894	   895	   896	   897
	   898	   899	   900	   901	   902	   903	   904	   905	   906	   907	   908	   909	   910	   911
	   912	   913	   914	   915	   916	   917	   918	   919	   920	   921	   922	   923	   924	   925
	   926	   927	   928	   929	   930	   931	   932	   933	   934	   935	   936	   937	   938	   939
	   940	   941	   942	   943	   944	   945	   946	   948	   950	   952	   954	   956	   957	   959
	   960	   962	   964	   966	   968	   970
OBX0  	   871#	   871	   872#	   872	   873#	   873	   874#	   874	   875#	   875	   876#	   876	   877#	   877
	   878#	   878	   879#	   879	   880#	   880	   881#	   881	   882#	   882	   883#	   883	   884#	   884
	   885#	   885	   886#	   886	   887#	   887	   888#	   888	   889#	   889	   890#	   890	   891#	   891
	   892#	   892	   893#	   893	   894#	   894	   895#	   895	   896#	   896	   897#	   897	   898#	   898
	   899#	   899	   900#	   900	   901#	   901	   902#	   902	   903#	   903	   904#	   904	   905#	   905
	   906#	   906	   907#	   907	   908#	   908	   909#	   909	   910#	   910	   911#	   911	   912#	   912
	   913#	   913	   914#	   914	   915#	   915	   916#	   916	   917#	   917	   918#	   918	   919#	   919
	   920#	   920	   921#	   921	   922#	   922	   923#	   923	   924#	   924	   925#	   925	   926#	   926
	   927#	   927	   928#	   928	   929#	   929	   930#	   930	   931#	   931	   932#	   932	   933#	   933
	   934#	   934	   935#	   935	   936#	   936	   937#	   937	   938#	   938	   939#	   939	   940#	   940
	   941#	   941	   942#	   942	   943#	   943	   944#	   944	   945#	   945	   946#	   946	   948#	   948
	   950#	   950	   952#	   952	   954#	   954	   956#	   956	   957#	   957	   959#	   959	   960#	   960
	   962#	   962	   964#	   964	   966#	   966	   968#	   968	   970#	   970	  9196
OBX1  	   871#	   871	   872#	   872	   873#	   873	   874#	   874	   875#	   875	   876#	   876	   877#	   877
	   878#	   878	   879#	   879	   880#	   880	   881#	   881	   882#	   882	   883#	   883	   884#	   884
	   885#	   885	   886#	   886	   887#	   887	   888#	   888	   889#	   889	   890#	   890	   891#	   891
	   892#	   892	   893#	   893	   894#	   894	   895#	   895	   896#	   896	   897#	   897	   898#	   898
	   899#	   899	   900#	   900	   901#	   901	   902#	   902	   903#	   903	   904#	   904	   905#	   905
	   906#	   906	   907#	   907	   908#	   908	   909#	   909	   910#	   910	   911#	   911	   912#	   912
	   913#	   913	   914#	   914	   915#	   915	   916#	   916	   917#	   917	   918#	   918	   919#	   919
	   920#	   920	   921#	   921	   922#	   922	   923#	   923	   924#	   924	   925#	   925	   926#	   926
	   927#	   927	   928#	   928	   929#	   929	   930#	   930	   931#	   931	   932#	   932	   933#	   933
	   934#	   934	   935#	   935	   936#	   936	   937#	   937	   938#	   938	   939#	   939	   940#	   940
	   941#	   941	   942#	   942	   943#	   943	   944#	   944	   945#	   945	   946#	   946	   948#	   948
	   950#	   950	   952#	   952	   954#	   954	   956#	   956	   957#	   957	   959#	   959	   960#	   960
	   962#	   962	   964#	   964	   966#	   966	   968#	   968	   970#	   970
OBX2  	   871#	   871	   872#	   872	   873#	   873	   874#	   874	   875#	   875	   876#	   876	   877#	   877
	   878#	   878	   879#	   879	   880#	   880	   881#	   881	   882#	   882	   883#	   883	   884#	   884
	   885#	   885	   886#	   886	   887#	   887	   888#	   888	   889#	   889	   890#	   890	   891#	   891
	   892#	   892	   893#	   893	   894#	   894	   895#	   895	   896#	   896	   897#	   897	   898#	   898
	   899#	   899	   900#	   900	   901#	   901	   902#	   902	   903#	   903	   904#	   904	   905#	   905
	   906#	   906	   907#	   907	   908#	   908	   909#	   909	   910#	   910	   911#	   911	   912#	   912
	   913#	   913	   914#	   914	   915#	   915	   916#	   916	   917#	   917	   918#	   918	   919#	   919
	   920#	   920	   921#	   921	   922#	   922	   923#	   923	   924#	   924	   925#	   925	   926#	   926
	   927#	   927	   928#	   928	   929#	   929	   930#	   930	   931#	   931	   932#	   932	   933#	   933
	   934#	   934	   935#	   935	   936#	   936	   937#	   937	   938#	   938	   939#	   939	   940#	   940
	   941#	   941	   942#	   942	   943#	   943	   944#	   944	   945#	   945	   946#	   946	   948#	   948
	   950#	   950	   952#	   952	   954#	   954	   956#	   956	   957#	   957	   959#	   959	   960#	   960
	   962#	   962	   964#	   964	   966#	   966	   968#	   968	   970#	   970
OIP   	  5063#	  6718
OIP.E 	  5063	  5270#
OLDIR 	   692#	  8665	  8688
OLDX  	   690#	  8057	  8077
OLDY  	   691#	  8060	  8079
OOB   	  5064#	  8208
OOB.E 	  5064	  5197#
OOP   	  5065#	  5964	  5968
OOP.E 	  5065	  5146#
OOT   	  2961	  5066#
OOT.E 	  5066	  5116#
OPERF 	  1128#	  1166	  1170	  1171	  1172	  1173	  1174	  1176	  1178	  1189	  1191	  1192	  1193	  1225
	  4412
ORT   	  2872	  5648	  5669	  5700	  5727	  5733	  5913	  6545	  6561#	  6728	  6794
ORTA  	  6548#	  8068
ORTB  	  6331	  6550#
ORTC  	  5319	  5324	  5348	  6552#
ORTD  	  6554#
ORTE  	  6556#
ORTF  	  6558#
ORTNA 	  5440	  5468	  6533#
ORTNB 	  5492	  5513	  5540	  5802	  6535#
ORTNC 	  5436	  5461	  5524	  6537#
ORTND 	  6539#
ORTNE 	  6541#
ORTNF 	  6543#
ORTNP 	  6534	  6536	  6538	  6540	  6542	  6544#
ORTP  	  6559#
ORTSP 	  6549	  6551	  6553	  6555	  6557	  6560#
OSTR1 	  5582#
OSTR2 	  5586#
OSTRE1	  5580	  5597#
OSTRE2	  5584	  5596#
OSTRR 	  5605#	  5619
OUTPUT	   912	  6726#
OUTSTR	  5579#	  5593
P     	    69#	  1399	  1400	  1413	  1414	  1456	  1460	  1461	  1463	  1464	  1465	  1469	  1477	  1482
	  1550	  1551	  1559	  1560	  1585	  1586	  1596	  1597	  1617	  1682	  1689	  1699	  1731	  1735
	  1762	  1771	  1772	  1853	  1854	  1857	  1870	  1875	  1879	  1880	  1890	  1891	  1933	  1946
	  1953	  1956	  1957	  1958	  1959	  1960	  1963	  1964	  1965	  1966	  1967	  1968	  1987	  1990
	  1995	  2031	  2044	  2051	  2058	  2060	  2084	  2091	  2115	  2128	  2130	  2230	  2231	  2232
	  2233	  2234	  2245	  2246	  2247	  2248	  2249	  2252	  2253	  2254	  2255	  2256	  2269	  2270
	  2271	  2272	  2273	  2375	  2376	  2380	  2381	  2436	  2466	  2492	  2500	  2502	  2512	  2519
	  2524	  2525	  2529	  2530	  2548	  2742	  2765	  2766	  2767	  2768	  2823	  2824	  2830	  2869
	  2872	  2890	  2895	  3012	  3013	  3023	  3024	  3059	  3060	  3061	  3063	  3107	  3109	  3110
	  3111	  3115	  3278	  3591	  3592	  3593	  3594	  3614	  3615	  3616	  3617	  3630	  3631	  3632
	  3636	  3637	  3638	  3639	  3644	  3645	  3646	  3670	  3671	  3672	  3818	  3828	  3881	  3882
	  3884	  3940	  3941	  3963	  3964	  3992	  3993	  3998	  4011	  4012	  4017	  4027	  4054	  4085
	  4118	  4139	  4161	  4179	  4210	  4213	  4230	  4239	  4240	  4241	  4242	  4260	  4261	  4262
	  4263	  4267	  4268	  4269	  4272	  4274	  4275	  4351	  4383	  4384	  4385	  4386	  4387	  4388
	  4534	  4535	  4547	  4548	  4553	  4557	  4568	  4569	  4570	  4593	  4594	  4595	  4609	  4610
	  4628	  4631	  4641	  4644	  4649	  4651	  4653	  4654	  4659	  4660	  4664	  4666	  4677	  4678
	  4679	  4681	  4686	  4691	  4692	  4717	  4718	  4723	  4724	  4746	  4747	  4755	  4756	  4762
	  4764	  4775	  4776	  4777	  4781	  4842	  4843	  4844	  4870	  4871	  4872	  4878	  4909	  4967
	  4968	  4969	  4970	  4985	  4994	  5478	  5587	  5588	  5592	  5593	  5708	  5714	  5819	  5821
	  5826	  5827	  5875	  5879	  5883	  5992	  6007	  6008	  6009	  6010	  6029	  6030	  6031	  6032
	  6033	  6034	  6035	  6037	  6041	  6042	  6043	  6044	  6139	  6359	  6360	  6361	  6371	  6418
	  6419	  6420	  6438	  6439	  6440	  6464	  6465	  6467	  6534	  6536	  6538	  6540	  6542	  6544
	  6549	  6551	  6553	  6555	  6557	  6559	  6564	  6565	  6566	  6567	  6568	  6569	  6571	  6573
	  6574	  6577	  6589	  6591	  6599	  6600	  6601	  6602	  6603	  6604	  6605	  6606	  6607	  6608
	  6609	  6618	  6626	  6628	  6633	  6634	  6638	  6641	  6647	  6650	  6652	  6665	  6669	  6670
	  6671	  6674	  6704	  6706	  6710	  6748	  6758	  6763	  6765	  6774	  6775	  6799	  6800	  6801
	  6802	  6803	  6804	  6805	  6806	  6807	  6808	  6809	  6937	  6938	  6964	  6965	  6974	  6975
	  6979	  6980	  6981	  6982	  6983	  6984	  7036	  7037	  7038	  7039	  7040	  7062	  7069	  7070
	  7071	  7074	  7076	  7089	  7096	  7103	  7109	  7146	  7147	  7148	  7152	  7160	  7163	  7164
	  7166	  7167	  7173	  7175	  7176	  7177	  7225	  7226	  7227	  7233	  7241	  7249	  7251	  7269
	  7270	  7271	  7275	  7276	  7277	  7293	  7294	  7295	  7296	  7297	  7298	  7301	  7311	  7329
	  7332	  7340	  7341	  7342	  7343	  7344	  7345	  7356	  7361	  7362	  7374	  7376	  7380	  7381
	  7383	  7386	  7397	  7398	  7408	  7432	  7436	  7441	  7446	  7447	  7448	  7525	  7528	  7531
	  7534	  7575	  7925	  7975	  8176	  8179	  8508	  8509	  8510	  8511	  8512	  8513	  8537	  8540
	  8546	  8642	  8643
P1NARG	  5539	  6332#
PAE   	  5067#	  6880
PAE.E 	  5067	  5236#
PAT   	   362#
PATCH 	   363#
PATEND	   364#
PBF   	   571#	  4670	  4794	  4810
PC    	    71#	  1402	  1403	  1407	  1409	  1410	  1412	  1418	  1419	  1437	  1442	  1452	  1461	  1465
	  1482	  1492	  1493	  1495	  1507	  1508	  1517	  1519	  1540	  1545	  1580	  1592	  1594	  1608
	  1612	  1648	  1683	  1684	  1686	  1687	  1689	  1693	  1695	  1696	  1698	  1755	  1756	  1767
	  1778	  1779	  1781	  1782	  1784	  1844	  1845	  1847	  1848	  1850	  1860	  1868	  1872	  1873
	  1875	  1885	  1896	  1897	  1931	  1935	  1939	  1953	  1976	  1983	  1989	  1992	  1997	  2003
	  2009	  2013	  2016	  2018	  2031	  2034	  2036	  2040	  2046	  2063	  2072	  2075	  2077	  2080
	  2086	  2103	  2115	  2118	  2120	  2132	  2142	  2150	  2152	  2163	  2166	  2168	  2181	  2191
	  2199	  2201	  2235	  2236	  2243	  2249	  2257	  2258	  2267	  2279	  2285	  2296	  2377	  2384
	  2389	  2411	  2420	  2426	  2473	  2474	  2476	  2477	  2482	  2483	  2493	  2502	  2505	  2519
	  2525	  2533	  2539	  2542	  2705	  2723	  2725	  2726	  2728	  2732	  2735	  2737	  2738	  2739
	  2751	  2761	  2771	  2772	  2776	  2792	  2793	  2794	  2796	  2797	  2799	  2810	  2811	  2812
	  2814	  2816	  2821	  2823	  2824	  2825	  2828	  2829	  2833	  2837	  2838	  2839	  2840	  2843
	  2857	  2859	  2862	  2863	  2864	  2866	  2869	  2870	  2872	  2878	  2882	  2890	  2892	  2893
	  2895	  2899	  2902	  2904	  2907	  2911	  2918	  2923	  2925	  2927	  2940	  2951	  2954	  2963
	  2966	  2971	  2980	  2987	  2989	  3024	  3059	  3069	  3070	  3083	  3087	  3090	  3091	  3111
	  3115	  3118	  3121	  3129	  3141	  3142	  3145	  3146	  3147	  3152	  3153	  3166	  3168	  3171
	  3180	  3186	  3193	  3200	  3206	  3215	  3219	  3223	  3231	  3233	  3237	  3278	  3279	  3457
	  3461	  3533	  3540	  3546	  3565	  3572	  3573	  3585	  3603	  3611	  3617	  3621	  3634	  3658
	  3672	  3676	  3695	  3697	  3698	  3699	  3700	  3709	  3716	  3723	  3724	  3733	  3734	  3735
	  3738	  3739	  3740	  3748	  3749	  3750	  3765	  3766	  3767	  3774	  3775	  3776	  3784	  3785
	  3786	  3796	  3797	  3799	  3802	  3812	  3829	  3847	  3853	  3863	  3874	  3885	  3894	  3899
	  3919	  3940	  3941	  3946	  3949	  3956	  3961	  3963	  3964	  3993	  4012	  4027	  4054	  4085
	  4118	  4139	  4174	  4181	  4184	  4202	  4205	  4211	  4230	  4239	  4240	  4241	  4242	  4246
	  4251	  4254	  4257	  4258	  4260	  4261	  4262	  4263	  4272	  4275	  4286	  4300	  4303	  4309
	  4315	  4317	  4321	  4322	  4323	  4325	  4342	  4354	  4361	  4374	  4383	  4392	  4395	  4396
	  4400	  4422	  4425	  4426	  4430	  4432	  4441	  4442	  4447	  4449	  4450	  4455	  4463	  4465
	  4473	  4475	  4488	  4495	  4496	  4508	  4509	  4516	  4518	  4523	  4524	  4525	  4527	  4534
	  4537	  4540	  4544	  4546	  4553	  4556	  4557	  4564	  4568	  4582	  4593	  4596	  4600	  4606
	  4609	  4616	  4631	  4633	  4635	  4641	  4645	  4651	  4653	  4659	  4664	  4669	  4676	  4683
	  4686	  4691	  4709	  4715	  4718	  4723	  4729	  4738	  4744	  4746	  4747	  4755	  4762	  4772
	  4773	  4775	  4779	  4792	  4795	  4814	  4815	  4818	  4822	  4826	  4828	  4829	  4834	  4839
	  4840	  4842	  4847	  4854	  4857	  4863	  4870	  4872	  4873	  4875	  4876	  4879	  4881	  4888
	  4890	  4891	  4893	  4894	  4896	  4930	  4933	  4937	  4938	  4939	  4941	  4943	  4948	  4950
	  4954	  4957	  4960	  4964	  4965	  4967	  4973	  4975	  4979	  4982	  4985	  4986	  4988	  4990
	  4992	  4994	  4998	  5000	  5003	  5008	  5084	  5086	  5088	  5089	  5092	  5094	  5096	  5097
	  5099	  5101	  5103	  5104	  5106	  5108	  5109	  5111	  5113	  5114	  5117	  5118	  5121	  5122
	  5125	  5126	  5129	  5131	  5133	  5135	  5136	  5139	  5140	  5143	  5144	  5146	  5148	  5149
	  5152	  5153	  5156	  5157	  5159	  5161	  5162	  5165	  5167	  5168	  5171	  5172	  5175	  5177
	  5178	  5181	  5182	  5185	  5186	  5190	  5191	  5194	  5195	  5198	  5199	  5202	  5203	  5206
	  5207	  5210	  5211	  5214	  5215	  5218	  5219	  5221	  5222	  5225	  5226	  5229	  5230	  5233
	  5234	  5238	  5240	  5241	  5243	  5245	  5246	  5249	  5251	  5252	  5255	  5256	  5259	  5260
	  5262	  5263	  5265	  5266	  5268	  5269	  5271	  5272	  5293	  5297	  5300	  5309	  5311	  5332
	  5334	  5339	  5352	  5355	  5359	  5366	  5368	  5369	  5373	  5375	  5378	  5391	  5400	  5401
	  5403	  5406	  5411	  5424	  5428	  5434	  5439	  5444	  5448	  5458	  5465	  5472	  5480	  5488
	  5496	  5500	  5501	  5511	  5516	  5519	  5521	  5528	  5536	  5539	  5544	  5555	  5557	  5562
	  5579	  5583	  5590	  5596	  5598	  5605	  5620	  5624	  5630	  5637	  5643	  5650	  5659	  5663
	  5665	  5668	  5671	  5679	  5680	  5690	  5693	  5694	  5698	  5699	  5703	  5706	  5708	  5709
	  5712	  5714	  5717	  5719	  5721	  5723	  5734	  5742	  5751	  5764	  5778	  5785	  5795	  5812
	  5814	  5817	  5819	  5823	  5826	  5831	  5832	  5843	  5846	  5853	  5860	  5864	  5868	  5880
	  5885	  5891	  5901	  5909	  5913	  5915	  5919	  5921	  5926	  5932	  5933	  5938	  5943	  5949
	  5955	  5958	  5969	  5975	  5984	  5987	  5992	  5994	  5995	  5998	  6001	  6002	  6005	  6007
	  6008	  6009	  6010	  6020	  6022	  6026	  6029	  6030	  6031	  6032	  6033	  6034	  6039	  6041
	  6042	  6043	  6044	  6086	  6098	  6106	  6114	  6120	  6144	  6148	  6155	  6157	  6161	  6185
	  6188	  6194	  6195	  6215	  6248	  6249	  6298	  6304	  6306	  6309	  6315	  6320	  6330	  6332
	  6334	  6336	  6338	  6341	  6349	  6359	  6365	  6368	  6379	  6380	  6396	  6398	  6401	  6416
	  6418	  6423	  6438	  6445	  6464	  6474	  6477	  6480	  6492	  6497	  6499	  6503	  6528	  6561
	  6564	  6565	  6566	  6567	  6568	  6569	  6575	  6577	  6589	  6591	  6596	  6599	  6605	  6612
	  6622	  6624	  6626	  6630	  6631	  6634	  6635	  6647	  6649	  6651	  6654	  6662	  6664	  6681
	  6692	  6696	  6698	  6700	  6703	  6706	  6710	  6711	  6716	  6722	  6724	  6730	  6738	  6740
	  6744	  6746	  6748	  6763	  6765	  6772	  6777	  6781	  6783	  6789	  6797	  6799	  6806	  6812
	  6815	  6824	  6827	  6828	  6830	  6846	  6848	  6862	  6871	  6875	  6882	  6891	  6894	  6897
	  6902	  6905	  6908	  6911	  6912	  6914	  6916	  6919	  6922	  6924	  6932	  6937	  6939	  6943
	  6946	  6950	  6953	  6955	  6956	  6964	  6970	  6974	  6975	  6979	  6985	  6989	  6997	  6999
	  7006	  7012	  7016	  7023	  7026	  7036	  7042	  7046	  7051	  7053	  7069	  7071	  7073	  7075
	  7087	  7096	  7109	  7120	  7129	  7144	  7146	  7149	  7161	  7163	  7164	  7166	  7171	  7173
	  7175	  7176	  7177	  7181	  7185	  7186	  7187	  7196	  7200	  7201	  7204	  7207	  7208	  7225
	  7230	  7237	  7240	  7245	  7248	  7252	  7256	  7269	  7270	  7271	  7272	  7275	  7276	  7277
	  7278	  7279	  7280	  7281	  7284	  7293	  7298	  7314	  7340	  7345	  7361	  7363	  7364	  7368
	  7369	  7380	  7382	  7386	  7388	  7397	  7400	  7417	  7428	  7432	  7433	  7437	  7441	  7444
	  7446	  7449	  7455	  7522	  7525	  7528	  7531	  7553	  7558	  7561	  7574	  7597	  7600	  7603
	  7616	  7620	  7624	  7625	  7633	  7637	  7644	  7651	  7653	  7654	  7659	  7661	  7662	  7667
	  7670	  7671	  7681	  7723	  7724	  7725	  7741	  7743	  7754	  7762	  7763	  7766	  7774	  7775
	  7786	  7791	  7795	  7807	  7821	  7829	  7832	  7835	  7847	  7849	  7850	  7852	  7864	  7867
	  7870	  7871	  7881	  7884	  7886	  7904	  7907	  7908	  7918	  7940	  7947	  7949	  7955	  7963
	  7970	  7971	  7973	  7980	  8016	  8037	  8047	  8049	  8051	  8054	  8056	  8058	  8059	  8061
	  8076	  8078	  8082	  8087	  8091	  8094	  8117	  8122	  8174	  8176	  8179	  8180	  8196	  8205
	  8220	  8237	  8268	  8285	  8288	  8291	  8328	  8338	  8340	  8410	  8497	  8501	  8508	  8517
	  8538	  8590	  8603	  8608	  8613	  8614	  8622	  8624	  8626	  8642	  8643	  8645	  8653	  8654
	  8675	  8676	  8686	  8690	  8696	  8697	  8699	  8700	  8712	  8718	  8745	  8754	  8756	  8802
	  8848	  8875
PCBRV 	   102#	   320
PCCNT 	   105#	  2288
PCHR  	   674#	  4632	  4683	  4709	  4715	  4729	  4738	  4744	  4792	  4818	  4822	  4847	  4863	  4868
	  5691	  5697
PCS   	   103#	  2290	  2551
PCSTBF	   104#	  2550
PDLINK	  2048	  4905	  8943#
PENDOW	   913	  7536#
PENUF 	   734#	  7901	  8022	  8027
PENUP 	   914	  7534#
PEV1  	  6642#	  6667
PEV2  	  6629	  6669#
PEV3  	  6655	  6690#
PEV4  	  6656#	  6693
PEV5  	  6643	  6651#
PEV6  	  6619	  6627#
PEVAL 	  6450	  6595#
PFBRV 	   131#
PLUS  	   956	   956#
PLU$  	   955#	  1308
PN1   	  6705#	  6707
PNH   	  4934	  5001	  5068#	  6813	  6931
PNH.E 	  5068	  5232#
PNODAB	  4762	  4765#	  5693	  6744
PPBASE	   604#	  2136	  2143
PPDLL 	   158#	  8939	  8941
PPNAIF	   575#	  2051	  2054	  2106	  2148
PPNAME	  2794	  4793#	  4894	  4939	  6624	  6740	  6953
PPOPL 	   601#	  1995	  2053	  2149	  4911
PPOPT 	  1995#	  2823	  2872	  2895	  3111	  3278	  3963	  3964	  4260	  4261	  4262	  4263	  4553	  4557
	  4641	  4746	  4994	  5708	  5714	  5826	  5836	  6029	  6030	  6031	  6032	  6033	  6034	  6464
	  6564	  6565	  6566	  6567	  6568	  6569	  6589	  6763	  6765	  6799	  6806	  6974	  7163	  7166
	  7173	  7175	  7176	  7177	  7275	  7276	  7277	  7380
PPSWP1	  2028	  2040#
PPSWPI	  1998	  2106#
PPSWPO	  1993	  2024#
PPUSHL	   602#	  1987	  2029	  2036	  4913
PPUSHT	  1987#	  2824	  2869	  2890	  3059	  3115	  3940	  3941	  4239	  4240	  4241	  4242	  4383	  4534
	  4568	  4593	  4609	  4631	  4653	  4659	  4691	  4723	  4755	  4775	  4842	  4870	  4967	  4985
	  5819	  5992	  6007	  6008	  6009	  6010	  6041	  6042	  6043	  6044	  6359	  6418	  6438	  6577
	  6591	  6599	  6605	  6706	  6710	  6937	  6964	  6979	  7036	  7069	  7146	  7225	  7269	  7270
	  7271	  7293	  7340	  7397	  7446	  8508	  8642
PQF   	   570#	  4670	  4789	  4793	  4801	  4809	  4865
PRAS  	  4645	  4674	  4680#
PRAS1 	  4681#	  4684
PRASR 	  4682	  4685#
PRATM 	  4789#
PRBAO 	   605#	  2032	  2061	  2116	  2131	  4910	  6675	  6757
PRCO  	  4658#	  4988	  5084	  5092	  5099	  5106	  5146
PRCO1 	  4657	  4663#
PRCO2 	  4668	  4672#
PRCT  	  4774#	  4986	  5133	  5238	  5243	  5249
PRDATA	  4772	  4788	  4797#
PRDN  	  2726	  2797	  2814	  4721#	  4839	  4888	  4891	  5165
PRDN1 	  4726	  4730#	  4741
PRDN2 	  4732	  4736#
PRDN3 	  4734	  4739#
PRDNL 	  4719#
PRD$  	   953#	  1307
PRINT 	   915	  5705#
PRL1  	  4850#
PRL2  	  4851	  4860#
PRL3  	  4852	  4854#
PRL4  	  4845	  4848#
PRL5  	  4861	  4864#
PRL6  	  4853#	  4859
PRLN  	  2799	  2816	  4960	  4966#
PRLN1 	  4972#	  4977
PRLN2 	  4971	  4973#
PRLO  	  4652#	  5111
PRLST 	  4812	  4841#
PRLSTR	  4671	  4796	  4805	  4814#
PRMTCH	   670#	  2835	  2869	  2872	  6925	  6957
PRNODE	  4869#	  4879	  4881
PRNUM 	  4798	  4800	  4830#
PRNUM1	  4834#
PRNUM2	  4833	  4836	  4838#
PROAB 	  4664	  4667#	  4785
PROC  	   948	  6480#
PROD  	   916	   954	  5756#
PROD.1	  5762#	  5767
PROD.2	  5763	  5770#
PRON  	  1407	  1410	  1684	  1687	  1693	  1696	  1779	  1782	  1845	  1848	  2034	  2075	  2118	  2166
	  4687#	  4873	  4876
PRON1 	  4688	  4690#
PRON2 	  4695	  4703#
PRON3 	  4696#	  4706	  4711
PRON4 	  4704	  4707#
PRON5 	  4698	  4712#
PRONL 	  4633	  4689#
PRQQ  	  4815	  4828	  4865#
PRS1  	  4754#	  4990	  5086	  5094	  5101	  5129	  5159	  5717
PRS11 	  4768	  4770	  4772#
PRSSTR	  4808	  4815#
PRSTR1	  4825	  4828#
PRSTR2	  4816#	  4827
PRSTR3	  4817	  4819#
PRSTR4	  4821	  4823#
PRTAB 	  4779	  4782#	  4857	  4975	  6647
PRUV  	  4787	  4791#	  4950
PRUV1 	  4790	  4794#	  4803
PS    	   153#	  1456	  1465	  1469	  1477	  1482	  1731	  1735	  2234	  2245	  2256	  2269
PSHINT	  6336#	  7970	  7971
PSHNUM	  6338#	  7973	  7980	  8054	  8058	  8061
PSN1  	  6697#	  6699
PSTOP 	  2768	  6732#	  6793
PSTOP1	  6759	  6764#
PSTOP2	  6768	  6773#
PSTOP3	  6776#	  6791
PSTOP4	  6775	  6792#
PSTOP5	  6825	  6837#
PSTOP6	  6842	  6845	  6848#
PSTOP7	  6847#	  6850
PSTOP8	  6839	  6843#
PSTOP9	  6810	  6840#
PSTOPR	   657#	  6728	  6734	  6794	  6854
PSTP10	  6730	  6736#
PSTP11	  6758#	  6763
PSTP13	  6742	  6747#
PSTP14	  6737	  6746	  6748#
PSTP21	  6767#	  6772
PSTP30	  6718#	  6727	  6733
PSTP31	  6720#	  6778
PSTP32	  6725	  6784#
PSTP33	  6719	  6790#
PSTP34	  6785	  6787	  6789#
PSTP35	  6719#	  6723
PSTP41	  6821	  6826#
PSTP42	  6795	  6798#
PSWPAD	   603#	  2044	  2055	  2123	  2135
PSWPI1	  2113	  2123#
PSWPI2	  2145	  2147	  2150#
PSWPIN	  7187	  7390#
PSWPOT	  7391#
PTLPF 	   559#	  2941	  2946	  6487
PUSHJT	   711#	  7703	  7932	  8106	  8207	  8685
PUSHN 	  6701#
PUSHSN	  6635	  6694#
PUSPSL	   402#	  1655	  1673	  1746	  1813
PUSRSP	   403#	  1747	  1811
PWFBRV	   139#
QUANT 	   397#	  1857
R1INT 	  6330#	  7993
R1NARG	  5015	  5017	  5736	  5754	  6331#	  7999
RBPOIN	  2336#	  2424	  2425	  2428
RDAY  	  1901	  1903	  1906	  1913#
RDFLAG	   655#	  4388	  4394	  4397	  4399	  4428	  4432	  4434	  4440	  4446	  4451	  4459	  4462	  4472
	  4487	  4499	  4501	  4507	  4530	  4532
RDLA  	  4509#	  4511	  4522
RDLB  	  4513	  4520	  4525#
RDLST 	  4430	  4507#	  4525
RDLX  	  4518#	  4528
RDLY  	  4515	  4523#
RDSA  	  4475#	  4489
RDSB  	  4474	  4476#
RDSC  	  4482	  4490#
RDSD  	  4492#
RDSE  	  4478	  4487#
RDSR  	  4496#	  4500	  4502
RDST  	  4426	  4472#	  4516
RDSTR 	  2825	  2833#	  2860	  2870
RDSTR1	  2832#	  2865	  2867
RDSTR2	  2840#	  2858
RDSTR3	  2848	  2851#
RDSTR4	  2850	  2859#
RDSTR5	  2855	  2857#
RDSTR6	  2852	  2854#
RDSTR7	  2844	  2846	  2864#
RDSTR9	  2836	  2838#
RDSX  	  4480	  4484	  4486	  4491	  4493#
RDWA  	  4442#	  4448
RDWB  	  4445	  4449#
RDWC  	  4452	  4458#
RDWD  	  4460	  4463#	  4504
RDWE  	  4464	  4466#
RDWRD 	  4392	  4440#
READ  	  2881	  4382#	  5698
READA 	  4392#	  4398	  4413	  4435
READB 	  4393	  4399#
READC 	  4396#	  4420	  4429	  4433
READD 	  4411	  4434#
READL 	  4406	  4430#
READR 	  4402	  4421#
READS 	  4404	  4425#
RECLOP	  2389#	  2391	  2393	  2397	  2400	  2401	  2406	  2412	  2414	  2417	  2421	  2466	  2468
RECTAB	  2395	  2397#
REDY10	  2301#	  2387	  2543
RELA  	   614#
RELB  	   615#
RELC  	   616#
RELD  	   617#
RELE  	   618#	  3132
RELTIM	  2243	  2267	  2281#
RET   	  6034#
RET1  	  4829#	  4866
RETA  	  6005	  6033#	  6714
RETB  	  4538	  4615	  4624	  4666	  4676	  4764	  4781	  4878	  6032#	  6946	  7401	  8648
RETC  	  4578	  4864	  6031#	  7072	  7257	  7459
RETD  	  4979	  6027	  6030#	  6056
RETE  	  6029#	  7059
RETF  	  4424	  6028#	  6375	  7007	  7332	  7380	  8518
REVS  	  5706	  5712	  6037#	  6634
REVS1 	  6050	  6056#
REVS2 	  6051#	  6055
RFLUSH	  2379#	  2384	  2389	  2505
RIGHT 	   919	  7528#
RJLSW 	  2300#	  2552
RLINE 	  2838	  2885#
RLINE1	  2886	  2888	  2895#
RLOGIN	  2366	  2383#	  2386
RMONTH	  1902	  1905	  1907	  1910	  1914#
RNUM  	   541#	  6391
RPAR  	   952	  5728#
RPDLP 	  2367#	  2376	  2380
RP$   	   951#	  1306
RQUEST	   918	  2868#
RSTART	  2728#	  2743	  2830
RTB   	  5069#	  5768
RTBE  	  5744	  5753	  5768#	  5780
RTB.E 	  5069	  5254#
RTF   	   560#	  2908	  2931	  2933	  2969	  5960	  5978	  5982	  5989	  6406	  6495	  6510
RTFALS	  5912#	  5917	  5924	  5929	  5934	  5940	  5946	  5951
RTNCMP	  5913#	  5919
RTTRUE	  5911	  5918#	  5923	  5928	  5935	  5939	  5945	  5952
RUG   	    77#	  4882
RUNME 	  1492	  1606#	  1873	  2723	  2893	  3121	  3949	  4254
RUNME1	  1607	  1609#
RUNME2	  1608#	  1610
RUNRUG	   920	  2744#
RUNUS1	  1819#	  1821
RUNUS2	  1823#	  1825
RUNUS4	  1842	  1853#
RUNUS5	  1828	  1833	  1839#
RUNUS6	  1831#	  1836	  1838
RUNUSR	  1632	  1811#
RWWSW 	   451#	  1626	  2703
RYEAR 	  1909	  1915#
S     	   594#	  2000	  2001	  2006	  2007	  2072	  2098	  2100	  2163	  2177	  2179	  2789	  2810	  2862
	  2910	  2924	  2927	  2963	  3129	  3130	  3131	  3184	  3238	  4389	  4422	  4432	  4527	  4544
	  4556	  4558	  4758	  4760	  4918	  4959	  4970	  5084	  5092	  5284	  5328	  5360	  5385	  5562
	  5598	  5637	  5646	  5650	  5657	  5661	  5668	  5671	  5682	  5696	  5703	  5719	  5791	  5801
	  5913	  5919	  5932	  5938	  5943	  5949	  5992	  5994	  5995	  5998	  5999	  6001	  6002	  6005
	  6010	  6026	  6027	  6045	  6161	  6304	  6313	  6323	  6341	  6346	  6396	  6401	  6544	  6561
	  6636	  6671	  6698	  6722	  6730	  6767	  6772	  6777	  6783	  6797	  6938	  6946	  6984	  7004
	  7010	  7022	  7144	  7368	  7369	  7846	  7982	  7983
SALTL 	  2729	  8920#
SCHEDP	  1866#	  2732
SDBITB	   443#
SDBITE	   445#
SDISBT	   467#	  7696
SDLEN 	   459#	  8899
SDLINK	  2088	  4914	  8946#
SDLOOP	  7692#	  7694
SDPDLL	   458#	  8895
SDPDLP	   473#	  7721
SDRBG1	  1471#	  1475
SDRBG2	  1472	  1479#
SDSKAD	   441#
SENS.1	  5307	  5312#
SENS.2	  5309#
SENT  	   543#	  5280	  5287	  5467	  5842	  5944	  5950	  6318
SENTEN	   921	  5277#	  7975
SENTT 	   750#	   753	   923
SENT.1	  5283#	  5302
SENT.2	  5290	  5296#
SENT.3	  5299#	  5314
SENT.4	  5300#	  5305
SENT.A	  5293#
SENT.R	  5283	  5317#
SENT.S	  5288	  5304#
SEPF  	  1125#	  1140	  1141	  1142	  1143	  1144	  1163	  1165	  1166	  1171	  1172	  1173	  1174	  1176
	  1178	  1189	  1190	  1191	  1192	  1193	  1222	  1224	  1225	  1226	  4394	  4397	  4399	  4428
	  4432	  4444	  4477	  4501
SETHEA	   922	  7963#
SETMOV	  7812	  7824	  7833#
SETSTF	   931	  5010#
SETTUR	   923	  7845#
SETUVS	  2700#	  2702
SETX  	   924	  7805#
SETXY 	   925	  7829#
SETY  	   926	  7817#
SET.A 	  7807	  7821	  7864#
SET.A1	  7867#	  7881	  7884
SEX   	  4881#
SEX1  	  4879#
SFBIND	   549#	  3161	  7184	  7206	  9100
SFLAGS	   446#	  1679	  1775	  1841	  2027	  2069	  2112	  2160
SFUN  	   529#	  2937	  2958	  2973	  4535	  8983	  8998	  9000	  9003	  9005	  9021	  9023	  9046	  9054
	  9056	  9060	  9062	  9072	  9077	  9083	  9111	  9115	  9151	  9156	  9157	  9160	  9165	  9166
	  9169	  9174	  9175	  9178	  9180
SHOW  	   927	  4930#
SHOW1 	  4947#	  4952
SHOW2 	  4945	  4953#
SHOW3 	  4957#	  4962
SHOW4 	  4955	  4963#
SHOW5 	  4931	  4934#
SHOWT9	  8013	  8017#
SHOWTU	   928	  8011#
SIMTST	  3452	  3458#	  3458	  4318
SIN   	  8334	  8339	  8346#
SINA  	   707#	  8247	  8316
SINGET	  8285	  8288	  8332#
SIPRBT	   150#	  5760	  6233
SKPRET	    78#	  2927	  4456	  4457	  4467	  4591	  5833	  6110	  6115	  6123	  6168	  6179	  6189	  6317
	  6350	  7282
SLISTB	  4508	  4547#
SLOT1 	   593	   594	   595	   596	   597	   598	   599	   600	   601	   602	   603	   604	   605	   606
	   607	  2048	  2088	  2565	  2576	  2681	  2683	  2699	  2708	  4905	  4914	  8938#
SLOTST	   409#	  1617	  1628	  1657	  1690	  1703	  1706	  1715	  1739	  1815	  2583	  2584
SLSH  	   962	   962#
SLTAL1	  2581#	  2588
SLTCAD	   425#	  1628	  1703	  1706	  1715	  1815	  2577	  2583	  2584
SNABOT	   706#	  8036	  8080
SNAP  	   929	  8036#
SNAPT 	   751#	   878
SNAP.1	  8043#
SNAP.2	  8044	  8049#
SNAP.3	  8040	  8067#
SNLIST	   705#	  3129	  7739	  8043	  8048	  8605	  8636
SNP   	   536#	  3054	  3056	  8062	  8067	  8652
SNPSEN	  5281#	  8064
SNPTEM	   491#	  3087	  3088	  3154
SNUM  	   538#	  2780	  2914	  4799	  4832	  5852	  6119	  6186	  6305	  6367	  6832	  6900	  6920	  6941
	  7018	  7025	  8045	  8644	  9106	  9107	  9108	  9110	  9114	  9118	  9119	  9120	  9121	  9122
	  9123	  9124	  9149	  9154
SNXTDB	   439#
SOBLST	   865	   865#	   870#	  7302
SOBLSU	   862	   865	   865#	   944#	   947	   949	   951	   953	   955	   958	   961	   963	   965	   967
	   969	   971	  4416
SOBP2 	   865#	  7301
SOFN  	   624	  2682	  2696	  9188#
SOOMX 	   862#	  7307
SP    	    70#	  1403	  1409	  1414	  5278	  5280	  5317	  5323	  5324	  5347	  5348	  5383	  5431	  5450
	  5480	  5534	  5536	  5572	  5573	  5574	  5576	  5579	  5583	  5602	  5603	  5604	  5624	  5630
	  5740	  5761	  5835	  5885	  5891	  5895	  5901	  6069	  6070	  6071	  6088	  6089	  6090	  6093
	  6094	  6097	  6129	  6130	  6131	  6134	  6147	  6150	  6158	  6165	  6166	  6167	  6202	  6203
	  6204	  6208	  6215	  6238	  6304	  6308	  6331	  6544	  6561	  7264	  7267	  7278	  7735	  7748
	  7755	  7756	  7767	  7768	  7784	  7785	  7789	  7790	  7796	  7833	  7836	  7848	  7853	  8062
	  8074	  8248	  8267	  8478	  8496	  8521	  8665	  8667	  8670	  8677	  8687	  8688	  8694	  8703
	  8704	  8706	  8716	  8717	  8744	  8813	  8837	  8842	  8847
SPBASE	   599#	  2185	  2192	  3182	  3188	  3201	  3210	  3217
SPDLL 	   159#	  8939	  8944
SPDLP 	   361#	  1772	  1853	  2548
SPNAIF	   576#	  2091	  2094	  2154	  2197
SPOPL 	   596#	  2007	  2093	  2198	  4920
SPOPT 	  2006#	  2927	  2963	  4422	  4432	  4527	  5300	  5334	  5359	  5368	  5406	  5562	  5598	  5637
	  5650	  5671	  5703	  5719	  5932	  5938	  5943	  5949	  5998	  6005	  6026	  6161	  6304	  6722
	  6730	  6772	  6777	  6783	  6946	  7849	  8117
SPRBAO	   600#	  2073	  2101	  2164	  2180	  4757	  4919	  6672	  6766
SPSWP1	  2070	  2080#
SPSWPI	  2010	  2154#
SPSWPO	  2004	  2066#
SPTRCF	   173#	  2027	  2069	  2112	  2160
SPUSHL	   597#	  2001	  4922
SPUSHT	  2000#	  2810	  2862	  3129	  4544	  4556	  5084	  5092	  5668	  5913	  5919	  5994	  5995	  6001
	  6002	  6396	  6401	  6561	  6698	  6797	  7144	  7368
SR    	   145#	  1759	  1862
SRET  	  1512	  1560	  2500	  2509	  4628	  5681	  5979	  6091	  6408	  6570#	  7177	  7183	  7188	  7198
	  7205	  7209
SRETA 	  5998	  6568#	  6583
SRETB 	  6567#
SRETC 	  4597	  6566#	  7077	  7242
SRETD 	  6565#
SRETE 	  6564#	  7063
SRETF 	  6563#	  7330	  7374
SSAVEA	   622#	  3196	  3197	  3227	  3228	  3232
SSOL  	  7230	  7287#
SSOL1 	  7303#	  7316	  7320	  7334
SSOL2 	  7308	  7317	  7321	  7327	  7333#
SSOL3 	  7325	  7328#
SSOL4 	  7314#	  7323
SSOL5 	  7305	  7331#
SSOL6 	  7313	  7315#
SSTR  	   535#	  4599	  4767	  4806	  5609	  6153	  6386	  8970	  8972	  8975	  8977	  8979	  8987	  8989
	  8994	  8996	  9009	  9011	  9013	  9015	  9031	  9033	  9037	  9039	  9041	  9050	  9052	  9066
	  9068	  9070	  9080	  9081	  9089	  9090	  9095	  9096	  9097	  9133	  9136	  9139	  9140	  9141
	  9142	  9143	  9146	  9163	  9172	  9183	  9184	  9186	  9187
SSWPAD	   598#	  2084	  2095	  2171	  2184	  3198	  3209	  3226
SSWPI1	  2161	  2171#
SSWPI2	  2194	  2196	  2199#
STAR  	   954	   954#
START 	   359	  2547#
STARTD	   930	  7678#
STARTF	  2704	  2713#
STB   	   699#	  7711	  8134	  8153
STLEN 	   460#	  8903
STLIST	   477#	  7700
STNE  	  5958	  5969	  5975#	  5986	  5987	  5990
STNE1 	  5977	  5980#
STNE2 	  5981	  5985#
STNE3 	  5982#	  5988
STOP  	   932	  6731#
STPREC	  2398	  2406#
STRACE	  4980#	  6380	  6416
STRTD1	  7680	  7683#
STT   	   700#	  7712	  7925	  7931	  8080	  8097	  8105	  8133	  8154	  8207	  8427	  8460	  8678	  8684
STYI  	  2993	  2994#	  2996	  3938
STYO  	  2976	  2977#	  2999	  4237
SUBXY 	  7870	  8192#
SUBXY9	  8194	  8196#
SUHCT 	   606#	  3134	  7355
SUM   	   933	   956	  5738#
SUM.1 	  5742#	  5746
SUM.2 	  5741	  5747#
SVBIND	   550#	  3163	  7199
SWB   	    83#
SWPISP	  1938	  1941#
SWPIST	  1713	  1938#
SWPLEP	   404#	  1732	  1733	  1944
SWPLST	   404	   405#	  1434	  1946	  1947
SWPOSP	  1930	  1933#
SWPOST	  1704	  1930#
SWTRCF	   172#	  1679
SXY.S 	  7832	  7850	  7878#
SYDRBG	  1468#	  1478	  1545	  2132	  2181	  2705	  3206	  3223	  4027	  4054	  4085	  4118	  4139
SYPDLL	   156#	   360
SYSMES	  2302#	  2448
SYSWPR	   407#	  1428	  1432	  1470	  1474
S.ORT 	  5318#	  5420
T1FLSH	  2528#	  2542
TBPOIN	  2357#	  2534	  2535	  2537
TEDK1 	  4088	  4094#
TEDKI 	  3802	  3921	  4084#
TEDKO 	  3740	  3956	  4117#
TEMF  	   738#	  8663	  8812	  8870
TEMP  	   661#	  4577	  4579	  4580	  4595	  4830	  6704	  6708
TEST1 	  2731#
TESTF 	   568#	  2803	  2879
TF1   	   581#	  4719	  4721	  4731	  4735	  7031	  7034	  7057	  7060
TF2   	   582#	  4687	  4689	  4705	  4707	  4713	  7191	  7194	  7202
TF3   	   583#	  6750	  6753	  6792	  6819	  6822	  6838
TF4   	   584#
TF5   	   585#	  7213	  7223	  7243
TF6   	   580#	  4995	  4997	  5005
TFLAGS	   662#	  4687	  4689	  4705	  4707	  4713	  4719	  4721	  4731	  4735	  4995	  4997	  5005	  6750
	  6753	  6792	  6819	  6822	  6838	  7031	  7034	  7057	  7060	  7191	  7194	  7202	  7213	  7223
	  7243
TFLUSH	  2527#	  2533	  2539
TGTC  	  3658	  3682#
TGTC1 	  3688	  3692#
TGTC2 	  3430	  3686	  3693	  3697#	  3722	  3723	  3842
TGTC3 	  3698#	  3718	  3759	  3774	  3784	  3791	  3799	  3819	  3843	  3857	  3864
TGTC4 	  3700#	  3781
TGTC5 	  3683	  3685#	  3710	  3748	  3755	  3766
THEN  	   934	  5962#
TI2Q  	  1897	  3643#	  4181
TI2Q1 	  3648#	  3662	  3664	  3668	  3677
TI2Q2 	  3654	  3674#
TI2Q3 	  3650	  3652	  3656	  3666#
TIBF  	  3352#	  3367	  3367#	  3377	  3377#
TIBFSZ	  3351#	  3352	  3367	  3367#	  3377	  3377#	  4119	  4140
TIBL  	  3371#	  3522	  3538	  3545	  3887	  3892	  3959	  4055
TIBP  	  3367#	  3523	  3728	  3804	  3866	  3868	  3869	  3887	  3889	  3891	  3892	  4029	  4047	  4077
TIBR  	  3330#	  3504	  3519	  3570	  3950	  3999	  4008	  4019	  4244	  4255
TIBT  	  3366#	  3522	  3523	  3524	  3525	  3545	  3728	  3804	  3814	  3866	  3903	  3915	  3926	  4028
	  4040	  4047	  4056	  4067	  4125	  4146	  4153
TICBR 	  3437	  3850#
TICC  	  3421	  3706#
TICC1 	  3707	  3709#
TICD  	  3422	  3713#
TICD1 	  3714	  3716#
TICM  	  3424	  3721#
TICM1 	  3723#
TICM2 	  3729	  3730	  3732#
TICM3 	  3736#	  3741
TICM4 	  3727	  3739#
TICN  	  3425	  3744#
TICN1 	  3745	  3750#
TICN2 	  3748#	  3752	  3754
TICPY 	  3684	  3832#
TICPY1	  3834	  3840	  3842#
TICPY2	  3836	  3838	  3843#
TICQ  	  3426	  3758#
TICR  	  3427	  3762#
TICR1 	  3763	  3765#	  3768
TICS  	  3428	  3771#
TICS1 	  3775#	  3778	  3780
TICW  	  3429	  3786#
TICW1 	  3784#	  3788	  3790
TICY  	  3431	  3794#
TICZ  	  3423	  3432	  3810#
TICZ1 	  3796	  3812	  3818#
TIDCM 	  3983#	  4039	  4066	  4099	  4124	  4145
TIDCM1	  3992#	  4032	  4092
TIDEL 	  3433	  3863#
TIDEL1	  3786	  3863	  3866#
TIDEL3	  3871	  3874#
TIDEL5	  3867	  3878#
TIDEL6	  3879	  3884#	  3904	  3927
TIDKI 	  3883	  4053#
TIDKI1	  4058	  4060#
TIDKO 	  3731	  3896	  4026#
TIDP  	  3396#	  3526	  3726	  3732	  3805	  3878	  4037	  4045	  4057	  4059	  4064	  4072
TIDR  	  3326#	  3329	  4068
TIDTRA	  3329#	  3517	  3649	  3825	  3943	  3947	  4003
TIDTS1	  3734	  3825#
TIDTS2	  3824	  3827#
TIDTS3	  3826	  3829#
TIDTSC	  3724	  3749	  3767	  3775	  3785	  3797	  3823#
TIDW  	  3325#	  3329	  4041
TIEBP 	  3377#	  3525	  3539	  3903	  3905	  3907	  3908	  3915	  3926	  4110
TIEBT 	  3376#	  3538	  3539	  4100	  4110
TIED  	  3331#	  3521	  3537	  3544	  3706	  3713	  3744	  3762	  3771	  3794
TIEDP 	  3402#	  3527	  3800	  3917	  3954	  4087	  4089	  4093	  4105	  4122	  4130
TIEDR 	  3327#	  3329	  4101
TIEDW 	  3328#	  3329	  4126
TIEFDP	  3403#	  3529	  4097	  4109
TIEHD 	  3401#	  3467	  4096	  4121
TIELD 	  3400#	  3466	  4095	  4120
TIHD  	  3395#	  3465	  4036	  4062	  4142
TIINB 	  3697	  3887#
TIINB1	  3893	  3896#
TIINB2	  3888	  3898#
TILD  	  3394#	  3464	  4035	  4061	  4141
TIME  	   395#	  1695	  1781	  1847	  1880	  1881	  1886	  1894	  1900	  2293	  2294	  2549
TIMUSD	   512#	  1765
TIND1 	  6713	  6715#
TIND2 	  6712#	  6716
TINDNT	  6622	  6709#	  6738
TINIT 	  2721	  3451#
TINIT1	  3461#	  3471
TIOBR 	  3436	  3438	  3846#
TIP   	  5070#	  5726
TIPC  	  3372#	  3648	  3675	  3730	  3828	  3882
TIP.E 	  5070	  5142#
TIQM  	  3708	  3715	  3746	  3764	  3773	  3795	  3851	  3856#
TISQ  	  3551#	  3634
TISQ1 	  3552#	  3603
TISQ2 	  3559#	  3574
TISQ3 	  3556	  3563	  3565#	  3579
TISVD 	  3373#	  3674	  3827	  3880
TITN  	  3369#	  3530	  3725	  3806	  3890
TITQ  	  3350#	  3362	  3362#
TITQL 	  3363#	  3501	  3502	  3559	  3561	  3562	  3564
TITQN 	  3364#	  3503	  3557	  3560	  3655	  3659
TITQP 	  3362#	  3500	  3502	  3657	  3660	  3661	  3663
TITQSZ	  3349#	  3350	  3362	  3362#	  3557
TITQT 	  3361#	  3500	  3501	  3562	  3564	  3661	  3663
TKB   	    88#	   376	  2997	  3626
TKBRK 	   313	   376#
TKBRK1	   379	   381#
TKBRV 	    86#	   312	  3478
TKS   	    87#	  2730	  2995	  3480
TLEN  	   457#	   479
TLIST 	   479	  8902#
TLOGIN	  2369	  2532#
TML   	  5071#	  7929	  8101	  8462	  8681
TML.E 	  5071	  5201#
TMPDL 	   387	   388#
TMPDLL	   157#	   388
TMPDLP	   387#	  2237	  2240	  2263	  2266
TMS   	  5072#
TMS.E 	  5072	  5205#
TM.3  	  7580	  7609#
TM.5  	  7605	  7619#
TM.8  	  7578	  7623#
TO    	   935	  6858#
TO1   	  6865	  6867	  6872	  6873#
TO2   	  6870	  6928#
TO3   	  6882#	  6887
TO4   	  6884	  6889#
TO5   	  6879	  6917	  6925#
TO6   	  6876	  6929#
TO7   	  6881#	  6930
TO8   	  6860	  6862#
TOBF  	  3354#	  3380	  3380#
TOBFF 	  3380#	  3512	  4223	  4225	  4226	  4228
TOBFSZ	  3353#	  3354	  3380	  3380#	  4337
TOBP  	  3381#	  3511	  4195	  4199	  4329	  4331	  4332	  4334	  4339	  4341	  4344	  4346	  4348	  4349
TOBT  	  3379#	  3510	  3511	  3512	  4167	  4169	  4191	  4193	  4197	  4226	  4228	  4329	  4331	  4339
	  4341	  4346	  4348
TOCB  	  3441	  4359#
TOCH  	  3442	  4366#
TOCI  	  3445	  4372#
TOCI1 	  4373#	  4376
TOCM  	  3444	  4312#
TODING	  3386#	  3516	  3584	  4282	  4287
TOENT 	  4184	  4266#
TOF   	   563#
TOINB 	  4286	  4300	  4303	  4309	  4315	  4317	  4321	  4322	  4323	  4329#	  4361	  4374
TOINB1	  4330	  4332#
TOINB2	  4338	  4345	  4351#
TOINB3	  4340	  4347	  4350	  4354#
TOINB4	  4336	  4344#
TOLN  	  6936#
TOLN1 	  6942	  6947#
TOLN2 	  6945#	  6950
TOOT  	   936	  7550#
TOOT.0	  7551	  7553#
TOOT.1	  7557#	  7563
TOOT.9	  7555	  7562#
TOPC  	  3383#	  3514	  3651	  3823	  4170	  4248	  4252	  4269	  4278	  4351
TOPRNM	   664#	  2897	  5236	  5248	  6859	  6873	  6904	  6951	  6956
TOPS  	   496	   625#	  2862	  4423	  4432	  4453	  4498	  4527	  4562	  4603	  4604	  4923	  4924	  5637
	  5646	  5647	  5650	  5657	  5658	  5661	  5668	  5678	  5696	  6482	  6797	  6868	  6874	  6881
	  6896	  6926	  7141	  7144	  7157	  7160	  7168	  7170	  7227	  7255	  7271	  7273	  7442	  7448
	  7456	  7458
TOPS1 	   497	   626#	  6730	  6735	  6741	  6797
TOSND 	  3387#	  3505	  3699	  4258	  4335
TOSVC 	  3384#	  4270	  4352
TOSVD 	  3385#	  4271	  4353
TOTN  	  3382#	  3515	  4172	  4201	  4221	  4224	  4333	  4337
TO.1  	  7633#	  7636
TPB   	    91#	  2979	  2983	  4217	  7643
TPBRK 	   317	   382#
TPBRV 	    89#	   316	  3479
TPDLP 	  2370#	  2525	  2529
TPS   	    90#	  2977	  2981	  3481	  4216	  7641
TPTF  	   565#	  5004	  5007	  6618	  6642	  6736
TRA1  	  4996	  4998#
TRA2  	  5006	  5008#
TRA5  	  4999	  5001#
TRACE 	   937	  4997#
TRACEF	   569#	  2789	  4980	  5010	  5012
TRPBRV	   135#	   308
TRUE  	  3130	  5797	  5919	  5995	  8969#
TSTAB 	  3997#	  4043	  4070	  4103	  4128	  4149
TSTAB1	  4000	  4004	  4009#
TSTAB2	  4016#	  4044	  4071	  4104	  4129	  4150
TSTAB3	  4007	  4010#	  4048	  4078	  4111	  4133	  4154
TSTAB4	  4003#	  4020
TSTST 	  5955	  5991#
TSTST1	  5996	  5999#
TTP   	  3484	  3594	  3612#
TTYBR 	  3405#	  3531	  3721	  3803	  3813	  3846	  3850	  3852
TTYEBR	  3406#	  3532	  3914	  3924
TTYRS1	  3502#
TTYRS2	  3504#	  3573	  3581	  4246
TTYRS3	  3518	  3521#	  3733	  3739	  3816
TTYRS4	  3506	  3511#
TTYRST	  3461	  3500#
TTYST 	  3408#	  3504	  3517	  3519	  3521	  3537	  3544	  3570	  3649	  3682	  3706	  3713	  3744	  3758
	  3762	  3771	  3794	  3825	  3832	  3943	  3947	  3950	  3987	  3999	  4002	  4003	  4008	  4018
	  4019	  4244	  4255
TTYU  	  3411#	  3463	  3552	  3736	  3810	  4005
TUB   	   704#	  7701	  8005	  8708	  8740
TURCON	  7536	  7538	  7545	  7549	  7667#
TURMOV	  7525	  7528	  7531	  7534	  7574#
TUROFF	  7625	  7658#	  7671
TURON 	  7574	  7650#	  7667
TUROUT	  7558	  7561	  7597	  7600	  7603	  7616	  7620	  7624	  7635#	  7670
TURSIZ	   731#	  8695
TURTF 	   737#	  7524	  7527	  7530	  7533	  7535	  7537	  7541	  7545	  7550
TUT   	   490#	  8708	  8726	  8757	  8758
TYI   	  2718	  2840	  2993#	  3473
TYIBP 	  3368#	  3524	  3957	  3958	  3959	  4153
TYIDKI	  3735	  3961	  4138#
TYIDP 	  3397#	  3520	  3732	  4046	  4152
TYIDR 	  3324#	  3329	  4147
TYIFDP	  3398#	  3528	  3954	  4143	  4151
TYITN 	  3370#	  3725	  3815	  3952
TYO   	   674	  2021	  2717	  2837	  2976#	  2987	  3006	  3474	  4632	  5175	  5697
TYOT  	  2990#
TYP1  	   533#
TYPE  	   938	  5712#
TYPE1 	  5708	  5714	  5717#	  5720
U     	    68#	  1488	  1494	  1609	  1613	  1614	  1617	  1618	  1623	  1625	  1631	  1641	  1642	  1644
	  1647	  1649	  1676	  1686	  1716	  1720	  1721	  1722	  1724	  1725	  1740	  1747	  1760	  1762
	  1767	  1769	  1778	  1795	  1811	  1829	  1844	  1855	  1857	  1870	  1871	  1875	  1971	  1972
	  1973	  1974	  1975	  1978	  1979	  1980	  1981	  1982	  2645	  2646	  2647	  2648	  2652	  2653
	  2655	  2890	  2891	  2895	  3115	  3120	  3451	  3456	  3457	  3459	  3462	  3463	  3464	  3465
	  3466	  3467	  3469	  3552	  3555	  3568	  3571	  3580	  3594	  3614	  3632	  3636	  3941	  3942
	  3945	  3963	  4242	  4243	  4250	  4260	  4896	  4898	  4904
UAB   	   593#	  3250	  7084	  7092	  7106	  7118	  7126	  7412
UAC   	   611#	  1757	  1860
UACA  	   507#	  1796	  1830	  1971	  1978
UACB  	   508#	  1972	  1979
UACC  	   509#	  1973	  1980
UACD  	   510#	  1974	  1981
UACE  	   511#	  1975	  1982
UACRES	  1648	  1863	  1978#
UACSAV	  1612	  1756	  1971#
UBLK  	   504#	   524
UBLKFR	  1514#	  2150	  2199	  3233
UBLKG1	  1510	  1512#
UBLKGR	  1498#	  2040	  2080	  3193
UDSKAD	   522#	  1516	  1721	  1722	  2654	  4904
UEL   	  5073#	  5351	  6429
UEL.E 	  5073	  5151#
UFUN  	   531#	  4458	  4667	  6382	  6442	  6483	  6864	  6889	  7228	  9092
UGO   	  1625	  1720	  2723#
UHCT  	   606	  8948#	  8948	  8952	  8954	  8956
UINCON	  7264	  7279#
UINOB 	  7265	  7268#
UINTRN	  5659	  7267#
ULAST 	   392#	  1638	  1640	  1641
UMINS 	   960	  5734#
UMQ   	   612#	  1758	  1861
UNGRAB	   658#	  7413	  7421
UNXTDB	   521#	  1500	  1721	  1722	  4904
UOBCON	  7264	  7284#
UOBSCH	  5679	  7264#
UOBSKP	  7281#	  7286
UPC   	   514#	  1617	  1857
UPDLP 	   595#	  1771	  1854
UPLUS 	   957	  5733#
UQUANT	   398#	  1857	  1866	  1882	  1941
URELTM	  2236	  2258	  2275#
USER  	   391#	  1400	  1413	  1488	  1501	  1515	  1606	  1611	  1647	  1738	  1753	  1765	  1855	  1870
	  2885	  2890	  3115	  3936	  3941	  4235	  4242	  4896	  7683
USLENT	   427#	  2589	  2685
USR   	   613#	  1759	  1862
USWCNT	   426#	  1705	  1714	  2593	  2606	  2674	  2707
USWPAD	   517#	  1707	  1708	  1724	  1725
UTTY  	   515#	  3462	  3580	  3942	  4243
UTYI  	  2718	  3000#	  3002
UTYI1 	  3946#	  3948
UTYI2 	  3944	  3950#
UTYI3 	  3951	  3960	  3962#
UTYI4 	  3953	  3966#
UTYO  	  2717	  2981#
UTYO1 	  3698	  4257	  4278#
UTYO10	  4247	  4259#
UTYO11	  4246#	  4256
UTYO1A	  4286#	  4288
UTYO1B	  4283	  4290#
UTYO2 	  4292	  4296#
UTYO3 	  4297	  4308#
UTYO4 	  3443	  3446	  3447	  3448	  4309#	  4369
UTYO5 	  4306	  4310#	  4363	  4378
UTYO6 	  4311	  4325#	  4367
UTYO7 	  4319	  4324#
UTYO8 	  4251#	  4253
UTYO9 	  4249	  4255#
UTYOR 	  2985	  2989#
UVAR  	   532#	  4461	  4783	  4786	  6384	  6886	  9084	  9093	  9112	  9116	  9181
UVBLK 	   591#	   718	  1787	  1792	  1806	  1818	  1820	  1822	  2698	  2701
UVINIT	  2646#	  2651	  2680
UVREND	   609#	  1790	  1824
UVSAV 	  8940#
VARIAB	   741#	   888	   889	   904	   906	   915	   916	   921	   933	   938	   942	   954	   956
VBIND 	   548#	  3159	  5642	  6690	  6720	  7195	  9035	  9138	  9148
VERN  	     4#	  3286	  3286#	  4380	  4380#	  5274	  5274#	  7461	  7461#	  8908	  8908#	  8919
VERNF 	     3	     5	   366	  8919#
VERSN 	   939	  5016#
VNAF  	   554#	  6489	  6516
VSWPIN	  7204	  7392#
VSWPOT	  7393#
WC.DUN	  8160	  8173#
WC.LP 	  8159#	  8162	  8164	  8169
WDW   	  2740	  5074#
WDW.E 	  5074	  5128#
WEQUAL	  5852#
WIC   	  5075#
WIC.E 	  5075	  5209#
WIPE  	   940	  8122#
WIPECL	   941	  8152#
WIPE.L	  8136#	  8139	  8146
WIPOBS	  7388#
WIT   	  5076#	  6888
WIT.E 	  5076	  5248#
WORD  	   942	  5381#
WORDP 	   943	  5948#
WORDR 	  5384	  5418#
WORDT 	   748#	   896
WORD.1	  5384#	  5408
WORD.2	  5387	  5390#
WORD.3	  5397	  5405#	  5414
WORD.4	  5394	  5406#
WORD.5	  5400#
WORD.6	  5401#	  5415
WORD.N	  5389	  5411#
WSF   	  1126#	  1140	  1141	  1142	  1143	  1144	  1163	  1222	  1224	  3753	  3779	  3789	  3833
WSTART	  2742#
WTA   	  5077#	  5354	  5430	  5484	  6369	  6424	  6500
WTAA  	  5078#
WTAA.E	  5078	  5083#
WTAB  	  5079#	  5392	  5412	  5654	  5677	  5689	  5861	  6307
WTAB.E	  5079	  5091#
WTA.E 	  5077	  5099#
XCOR  	   944	  7988#
XYDIR 	  7907	  8398#
XYDIR1	  8400	  8403#
XYDIR2	  8404	  8407#
YCOR  	   945	  7992#
YINFIX	   743#	   954	   956	   959	   962	   966	   968	   970
YND   	  5080#
YND.E 	  5080	  5213#
YNT   	  5081#	  7543	  7547	  7552
YNT.E 	  5081	  5217#
.BIND 	  5643	  7142	  7145#
.BINDF	  4933	  6596	  6812	  6875	  7042	  7178#
.BINDL	  6398	  7141#	  7181	  7185	  7196	  7200	  7207
.BNDFS	  5000	  6905	  7071	  7206#
.BNDVN	  6654	  6777	  7193#
.BNDVS	  5665	  7189#
.CATLS	  6114#
.CERR 	  6106#
.CLNLS	  5411	  6193#
.CLNR 	  6173	  6188#	  6201
.CLNS1	  6187	  6189#
.CLNSN	  6185#	  6194
.CLSLN	  6248#
.CLSS0	  6214#	  6236
.CLSS1	  6215#	  6223	  6226
.CLSS9	  6216	  6241#
.CLSSN	  6200#	  6248
.CNOP 	  6110#
.CNXN1	  6221	  6225#
.CNXN2	  6218	  6228#
.CNXN9	  6229	  6231	  6234	  6238#
.CNXTD	  6144	  6148	  6172#
.CRLF 	  1402	  1412	  1698	  1784	  1850	  2015#	  2036	  2077	  2120	  2168	  2728	  2792	  2799	  2811
	  2816	  2829	  2833	  3476	  4896	  4937	  4954	  4965	  4979	  4992	  5089	  5097	  5104	  5109
	  5114	  5118	  5122	  5126	  5131	  5136	  5140	  5144	  5149	  5153	  5157	  5162	  5168	  5172
	  5178	  5182	  5186	  5191	  5195	  5199	  5203	  5207	  5211	  5215	  5219	  5222	  5226	  5230
	  5234	  5241	  5246	  5252	  5256	  5260	  5263	  5266	  5269	  5272	  5709	  6711	  6956
.CSNL0	  6136	  6143#
.CSNL1	  6144#	  6151
.CSNL2	  6139	  6145	  6149	  6153#
.CSNL3	  6157#	  6159
.CSNL4	  6133	  6158#
.CSNL5	  6133	  6156#
.CSNLL	  6137	  6141#
.CSNLN	  6119#	  6250	  6332	  6338
.CSNLS	  6129#	  6196
.CSRET	   495#
.FREE 	  7435#	  8622
.GCOL1	  3125#	  3127
.GCOL2	  3116#	  3119
.GCOL3	  3117	  3120#
.GCOLL	  3113#	  7417	  7741
.GRAB 	  7245	  7248	  7396#
.INTRN	  4463	  6871	  7215#	  7279
.IOT  	  7633	  7641#	  7642	  7651	  7653	  7659	  7661
.LDP1 	  5373	  5401	  5465	  5519	  6662	  6846	  6970	  7023	  7113#	  7428	  8049
.LDP2 	  5003	  5439	  5501	  6908	  6914	  7111#
.LDP2I	  5620	  5819	  6022	  6365	  7046	  7122#	  7314
.LOAD 	  2761	  2771	  2772	  2911	  2918	  2951	  2966	  4616	  4669	  4795	  4814	  4826	  4834	  4872
	  4943	  5293	  5488	  5555	  5817	  5880	  6020	  6114	  6185	  6631	  6651	  6828	  6939	  6999
	  7016	  7053	  7073	  7075	  7081#	  7240	  7363	  7364	  8643
.LOADC	  2776	  3070	  3142	  3146	  3153	  4854	  4941	  4948	  4957	  4973	  6630	  6827	  6830	  6848
	  6912	  6985	  6989	  6997	  7051	  7079#	  7149	  7298	  7345	  7361	  7449	  8608	  8613
.OBSCH	  7211#	  7284
.RDEF 	  5601#	  6239
.RPCNT	   479	  8887
.SPACE	  1686	  1689	  1695	  1781	  1847	  2012#	  4635	  4854	  4875	  4948	  4973	  6649	  6716	  6746
.SRDEF	  6164#	  6243
.STORE	  6664	  6789	  7088#	  7252	  7256	  7432	  7455
.STP1 	  5311	  5375	  5403	  5521	  7101#	  7382	  7386	  7437	  8624
.STP2 	  5008	  5511	  6911	  6916	  7012	  7098#	  7171	  8653
.TIME 	  1767	  1860	  2229#
.UTIME	  1765	  1859	  2251#
.ZZZ  	  3362#	  3362	  3367#	  3367	  3377#	  3377	  3380#	  3380	  3415#	  3416	  3416#
$     	   742#	   871	   872	   873	   874	   875	   876	   877	   878	   879	   880	   881	   882	   883
	   884	   885	   886	   887	   888	   889	   890	   891	   892	   893	   894	   895	   896	   897
	   898	   899	   900	   901	   902	   903	   904	   905	   906	   907	   908	   909	   910	   911
	   912	   913	   914	   915	   916	   917	   918	   919	   920	   921	   922	   923	   924	   925
	   926	   927	   928	   929	   930	   931	   932	   933	   934	   935	   936	   937	   938	   939
	   940	   941	   942	   943	   944	   945
$A    	  9107	  9112	  9126	  9130#
$AND  	   871#	  6504
$B    	  9108	  9116	  9128	  9133#
$BACK 	   872#
$BAR  	  9078	  9084	  9086	  9086#	  9093
$BLAP 	  9170	  9176	  9181#
$BLIP 	  9152	  9158	  9161	  9167	  9184#
$BUTFI	   873#
$BUTLA	   874#
$BVB  	  9135	  9136#
$C    	  9130	  9143#	  9181
$COUNT	   875#
$CTF  	   876#
$CVB  	  9145	  9146#
$DIFFE	   877#
$DISPL	   878#
$DO   	   879#
$DOTS 	   964#	  4536	  9157	  9166	  9175
$EDIT 	   880#
$ELSE 	   881#	  5976	  9061
$EMPTY	   882#
$END  	   883#	  6947
$EQUAL	   884#	   968#
$ERASE	   885#
$FIRST	   886#
$FL0  	  9102	  9104#
$FL1  	  9103	  9108#
$FL2  	  9104	  9112#
$FLLP 	  9099	  9100#
$FOO  	  9027	  9028#	  9092
$FOOF 	  9035	  9097#
$FORWA	   887#	  9180
$FPRIN	   888#
$FPUT 	   889#
$FSFB 	  9100	  9116#
$GO   	   890#
$GREAT	   891#
$GRTR 	   970#
$HEADI	   892#
$HERE 	   893#
$HIDET	   894#
$HOME 	   895#
$IF   	   896#	  5985	  9047
$KILLD	   897#
$LAST 	   900#
$LEFT 	   901#
$LESS 	   902#	   966#
$LEVEL	   903#
$LIST 	   904#
$LISTP	   905#
$LLPAR	   946#	  2942	  6434	  6436	  6525
$LPAR 	   950#	  2944	  6430	  9004
$LPOFF	   898#
$LPON 	   899#
$LPUT 	   906#
$MAKE 	   907#	  9077	  9151	  9160	  9169
$MINUS	   959#	  6584
$MOD  	   908#
$NEWSN	   909#
$NUMBE	   910#
$OB1  	  8955	  9025#
$OB2  	  8953	  9084#
$OB3  	  8949	  9124#
$OB4  	  8950	  9126#
$OB5  	  8951	  9128#
$OF   	   911#	  6493
$OUTPU	   912#
$PENDO	   913#
$PENUP	   914#
$PLUS 	   956#	  6578
$PRINT	   915#	  8984	  9006	  9057	  9063	  9083	  9111	  9115	  9156	  9165	  9174
$PROC 	   948#
$PRODU	   916#
$QUOTI	   917#
$REQUE	   918#
$RIGHT	   919#
$RPAR 	   952#	  5724	  6508	  6529	  9022
$RUG  	   920#
$SENTE	   921#
$SETHE	   922#
$SETTU	   923#
$SETX 	   924#
$SETXY	   925#
$SETY 	   926#
$SHOW 	   927#
$SHOWT	   928#
$SLSH 	   962#
$SNAP 	   929#
$STAR 	   954#
$START	   930#	  9178
$STF  	   931#
$STOP 	   932#
$SUM  	   933#
$THEN 	   934#	  9055
$TO   	   935#
$TOOT 	   936#
$TRACE	   937#
$TYPE 	   938#
$UMINS	   960#	  6586
$UPLUS	   957#	  6580
$VERSI	   939#
$WIPE 	   940#
$WIPEC	   941#
$WORD 	   942#
$WORDP	   943#
$XCOR 	   944#
$YCOR 	   945#
$.    	  9077#	  9077	  9078#	  9078	  9079#	  9079	  9080#	  9080	  9081#	  9083#	  9083	  9084#	  9086#	  9088#
	  9088	  9089#	  9089	  9090#	  9092#	  9092	  9093#	  9093	  9094#	  9094	  9095#	  9095	  9096#	  9096
	  9097#	  9099#	  9099	  9100#	  9102#	  9102	  9103#	  9103	  9104#	  9106#	  9106	  9107#	  9107	  9108#
	  9110#	  9110	  9111#	  9111	  9112#	  9114#	  9114	  9115#	  9115	  9116#	  9118#	  9118	  9119#	  9119
	  9120#	  9120	  9121#	  9121	  9122#	  9122	  9123#	  9123	  9124#	  9124	  9126#	  9128#	  9130#	  9132#
	  9132	  9133#	  9135#	  9135	  9136#	  9138#	  9138	  9139#	  9139	  9140#	  9140	  9141#	  9141	  9142#
	  9142	  9143#	  9145#	  9145	  9146#	  9148#	  9148	  9149#	  9151#	  9151	  9152#	  9152	  9153#	  9153
	  9154#	  9156#	  9156	  9157#	  9157	  9158#	  9160#	  9160	  9161#	  9161	  9162#	  9162	  9163#	  9165#
	  9165	  9166#	  9166	  9167#	  9169#	  9169	  9170#	  9170	  9171#	  9171	  9172#	  9174#	  9174	  9175#
	  9175	  9176#	  9178#	  9180#	  9180	  9181#	  9183#	  9183	  9184#	  9186#	  9186	  9187#
$$    	  9074#	  9075	  9077	  9077#	  9078	  9078#	  9079	  9079#	  9080	  9080#	  9081	  9081#	  9083	  9083#
	  9084	  9084#	  9086	  9086#	  9088	  9088#	  9089	  9089#	  9090	  9090#	  9092	  9092#	  9093	  9093#
	  9094	  9094#	  9095	  9095#	  9096	  9096#	  9097	  9097#	  9099	  9099#	  9100	  9100#	  9102	  9102#
	  9103	  9103#	  9104	  9104#	  9106	  9106#	  9107	  9107#	  9108	  9108#	  9110	  9110#	  9111	  9111#
	  9112	  9112#	  9114	  9114#	  9115	  9115#	  9116	  9116#	  9118	  9118#	  9119	  9119#	  9120	  9120#
	  9121	  9121#	  9122	  9122#	  9123	  9123#	  9124	  9124#	  9126	  9126#	  9128	  9128#	  9130	  9130#
	  9132	  9132#	  9133	  9133#	  9135	  9135#	  9136	  9136#	  9138	  9138#	  9139	  9139#	  9140	  9140#
	  9141	  9141#	  9142	  9142#	  9143	  9143#	  9145	  9145#	  9146	  9146#	  9148	  9148#	  9149	  9149#
	  9151	  9151#	  9152	  9152#	  9153	  9153#	  9154	  9154#	  9156	  9156#	  9157	  9157#	  9158	  9158#
	  9160	  9160#	  9161	  9161#	  9162	  9162#	  9163	  9163#	  9165	  9165#	  9166	  9166#	  9167	  9167#
	  9169	  9169#	  9170	  9170#	  9171	  9171#	  9172	  9172#	  9174	  9174#	  9175	  9175#	  9176	  9176#
	  9178	  9178#	  9180	  9180#	  9181	  9181#	  9183	  9183#	  9184	  9184#	  9186	  9186#	  9187	  9187#
%0    	    62
%1    	    63
%2    	    64
%3    	    65
%4    	    66
%5    	    67	    68
%6    	    69	    70
%7    	    71
%FNAM2	     4	  3286	  4380	  5274	  7461	  8908
BEGER 	  5026#	  5082	  5090	  5098	  5105	  5110	  5115	  5119	  5123	  5127	  5132	  5137	  5141	  5145
	  5150	  5154	  5158	  5163	  5169	  5173	  5179	  5183	  5188	  5192	  5196	  5200	  5204	  5208
	  5212	  5216	  5219	  5223	  5227	  5231	  5235	  5242	  5247	  5253	  5257	  5260	  5263	  5266
	  5269
CDM   	   851#	   946	   948	   950	   952	   954	   957	   960	   962	   964	   966	   968	   970
CONTUR	  7495#	  7535	  7537	  7544	  7548
DISGO 	  7516#	  7798	  7838	  7957	  8006	  8017	  8116	  8182
ENDC  	    52#	  1700	  1785	  1851	  2038	  2078	  2121	  2169
ENDER 	  5030#	  5088	  5096	  5103	  5108	  5113	  5117	  5121	  5125	  5130	  5135	  5139	  5143	  5148
	  5152	  5156	  5161	  5167	  5171	  5177	  5181	  5185	  5190	  5194	  5198	  5202	  5206	  5210
	  5214	  5218	  5221	  5225	  5229	  5233	  5240	  5245	  5251	  5255	  5259	  5262	  5265	  5268
	  5271
ERMM  	  5018#	  5039	  5040	  5041	  5042	  5043	  5044	  5045	  5046	  5047	  5048	  5049	  5050	  5051
	  5052	  5053	  5054	  5055	  5056	  5057	  5058	  5059	  5060	  5061	  5062	  5063	  5064	  5065
	  5066	  5067	  5068	  5069	  5070	  5071	  5072	  5073	  5074	  5075	  5076	  5077	  5078	  5079
	  5080
EXCH  	   291#	  3086	  5863
EXCHA 	  2303#	  2375	  2379	  2442	  2524	  2528
FOR   	    46#	  1678	  1774	  1840	  2026	  2068	  2111	  2159
IFL   	  3290#
IFN   	  3300#
MAKEAD	  7510#	  7706	  8167	  8490	  8533
MAKEPJ	  7502#	  7702	  8107	  8132
MOVTUR	  7488#	  7524	  7527	  7530	  7533
MSWF  	   421#	   426	   426#
NGPTWO	   763#	   864	   865	   865#
NODE  	  8910#	  9076	  9077	  9078	  9079	  9080	  9082	  9083	  9085	  9087	  9088	  9089	  9091	  9092
	  9093	  9094	  9095	  9096	  9098	  9099	  9101	  9102	  9103	  9105	  9106	  9107	  9109	  9110
	  9111	  9113	  9114	  9115	  9117	  9118	  9119	  9120	  9121	  9122	  9123	  9125	  9127	  9129
	  9131	  9132	  9134	  9135	  9137	  9138	  9139	  9140	  9141	  9142	  9144	  9145	  9147	  9148
	  9150	  9151	  9152	  9153	  9155	  9156	  9157	  9159	  9160	  9161	  9162	  9164	  9165	  9166
	  9168	  9169	  9170	  9171	  9173	  9174	  9175	  9177	  9179	  9180	  9182	  9183	  9185	  9186
NOP   	   282#	  6333	  6334	  6339	  6340
OLE   	   802#	   870	   871	   872	   873	   874	   875	   876	   877	   878	   879	   880	   881	   882
	   883	   884	   885	   886	   887	   888	   889	   890	   891	   892	   893	   894	   895	   896
	   897	   898	   899	   900	   901	   902	   903	   904	   905	   906	   907	   908	   909	   910
	   911	   912	   913	   914	   915	   916	   917	   918	   919	   920	   921	   922	   923	   924
	   925	   926	   927	   928	   929	   930	   931	   932	   933	   934	   935	   936	   937	   938
	   939	   940	   941	   942	   943	   944	   945	   947	   949	   951	   953	   955	   956	   958
	   959	   961	   963	   965	   967	   969
PAD   	   297#	  8880	  8963
POP   	   189#	  2822	  2871	  2894	  3110	  3277	  3962	  3963	  4259	  4260	  4261	  4262	  4552	  4556
	  4640	  4745	  4993	  5707	  5713	  5825	  6028	  6029	  6030	  6031	  6032	  6033	  6463	  6563
	  6564	  6565	  6566	  6567	  6568	  6588	  6762	  6764	  6798	  6805	  6973	  7162	  7165	  7172
	  7174	  7175	  7176	  7274	  7275	  7276	  7379
POPS  	   199#	  2926	  2962	  4421	  4431	  4526	  5561	  5597	  5636	  5649	  5670	  5702	  5718	  5931
	  5937	  5942	  5948	  5997	  6004	  6025	  6160	  6303	  6721	  6729	  6771	  6776	  6782	  6945
PRCR  	   238#	  1401	  1411	  1697	  1783	  1849	  2035	  2076	  2119	  2167	  2727	  2791	  2798	  2810
	  2815	  2828	  2832	  4895	  4936	  4953	  4964	  4978	  4991	  5089	  5097	  5104	  5109	  5114
	  5118	  5122	  5126	  5131	  5136	  5140	  5144	  5149	  5153	  5157	  5162	  5168	  5172	  5178
	  5182	  5186	  5191	  5195	  5199	  5203	  5207	  5211	  5215	  5219	  5222	  5226	  5230	  5234
	  5241	  5246	  5252	  5256	  5260	  5263	  5266	  5269	  5272	  6710	  6955
PRTXT 	   230#	  1402	  1408	  1417	  1418	  1682	  1777	  1843	  2012	  2030	  2071	  2114	  2162	  2724
	  2792	  2795	  2811	  2827	  4675	  4887	  4889	  4892	  4937	  4963	  4985	  4987	  4989	  5085
	  5087	  5093	  5095	  5100	  5102	  5107	  5112	  5116	  5120	  5124	  5128	  5134	  5138	  5142
	  5147	  5151	  5155	  5160	  5164	  5166	  5170	  5174	  5176	  5180	  5184	  5189	  5193	  5197
	  5201	  5205	  5209	  5213	  5217	  5220	  5224	  5228	  5232	  5237	  5239	  5244	  5250	  5254
	  5258	  5261	  5264	  5267	  5270	  6625	  6743	  6747	  6949	  6954
PUSH  	   184#	  2823	  2868	  2889	  3058	  3114	  3939	  3940	  4238	  4239	  4240	  4241	  4382	  4533
	  4567	  4592	  4608	  4630	  4652	  4658	  4690	  4722	  4754	  4774	  4841	  4869	  4966	  4984
	  5818	  5991	  6006	  6007	  6008	  6009	  6040	  6041	  6042	  6043	  6358	  6417	  6437	  6576
	  6590	  6598	  6604	  6705	  6709	  6936	  6963	  6978	  7035	  7068	  7145	  7224	  7268	  7269
	  7270	  7292	  7339	  7396	  7445	  8507	  8641
PUSHS 	   194#	  2809	  2861	  3128	  4543	  4555	  5083	  5091	  5667	  5912	  5918	  5993	  5994	  6000
	  6001	  6395	  6400	  6560	  6697	  6796	  7143	  7367
REPT1 	   265#	   444	   466	   478	  6257	  6259	  6263	  6265	  6269	  6271	  6275	  6277	  6281	  6283
	  6285	  6287	  6289	  8886	  8887	  8891
REPT2 	   272#	   306	   425
SPACE 	   242#	  1685	  1688	  1694	  1780	  1846	  4634	  4853	  4874	  4947	  4972	  6648	  6715	  6745
SPOP  	   208#	  1412	  1413	  1462	  1463	  1464	  1476	  1481	  1558	  1559	  1595	  1596	  1616	  1698
	  1734	  1761	  1874	  1889	  1890	  1952	  2050	  2090	  2244	  2245	  2246	  2247	  2248	  2268
	  2269	  2270	  2271	  2272	  2380	  2465	  2499	  2501	  2518	  2529	  2829	  3022	  3023	  3106
	  3108	  3109	  3613	  3614	  3615	  3616	  3635	  3636	  3637	  3638	  3669	  3670	  3671	  3991
	  3992	  4010	  4011	  4178	  4212	  4229	  4273	  4274	  4650	  4665	  4685	  4716	  4717	  4746
	  4763	  4780	  4877	  5591	  5592	  5826	  5882	  6464	  6466	  6637	  6649	  6668	  6669	  6773
	  6774	  6799	  6800	  6801	  6802	  6803	  6804	  6806	  6807	  6808	  6974	  7095	  7108	  7159
	  7163	  7166	  7328	  7331	  7373	  7385	  7431	  7440	  8178	  8539	  8545
SPOPS 	   217#	  6026
SPUSH 	   204#	  1398	  1399	  1455	  1459	  1460	  1468	  1549	  1550	  1584	  1585	  1681	  1730	  1856
	  1869	  1878	  1879	  1945	  2043	  2083	  2229	  2230	  2231	  2232	  2233	  2251	  2252	  2253
	  2254	  2255	  2374	  2435	  2491	  2511	  2523	  2764	  2765	  2766	  2767	  3011	  3012	  3059
	  3060	  3062	  3590	  3591	  3592	  3593	  3629	  3630	  3631	  3643	  3644	  3645	  3997	  4016
	  4026	  4053	  4084	  4117	  4138	  4160	  4209	  4266	  4267	  4268	  4383	  4384	  4385	  4386
	  4387	  4534	  4568	  4569	  4593	  4594	  4609	  4643	  4653	  4659	  4663	  4680	  4691	  4723
	  4755	  4761	  4775	  4776	  4842	  4843	  4870	  4871	  4967	  4968	  4969	  5477	  5586	  5587
	  5820	  5874	  5878	  6138	  6359	  6360	  6370	  6418	  6419	  6438	  6439	  6533	  6535	  6537
	  6539	  6541	  6543	  6548	  6550	  6552	  6554	  6556	  6558	  6599	  6600	  6601	  6602	  6603
	  6605	  6606	  6607	  6608	  6617	  6627	  6632	  6633	  6646	  6670	  6673	  6937	  6964	  6979
	  6980	  6981	  6982	  6983	  7036	  7037	  7038	  7039	  7069	  7070	  7088	  7102	  7146	  7147
	  7225	  7226	  7293	  7294	  7295	  7296	  7297	  7300	  7340	  7341	  7342	  7343	  7344	  7360
	  7397	  7407	  7435	  7446	  7447	  7924	  7974	  8175	  8508	  8509	  8510	  8511	  8512	  8536
	  8642
SPUSHS	   212#	  2788	  3129	  3130	  6340	  7368	  7981	  7982
TEXT  	   222#	   871	   872	   873	   874	   875	   876	   877	   878	   879	   880	   881	   882	   883
	   884	   885	   886	   887	   888	   889	   890	   891	   892	   893	   894	   895	   896	   897
	   898	   899	   900	   901	   902	   903	   904	   905	   906	   907	   908	   909	   910	   911
	   912	   913	   914	   915	   916	   917	   918	   919	   920	   921	   922	   923	   924	   925
	   926	   927	   928	   929	   930	   931	   932	   933	   934	   935	   936	   937	   938	   939
	   940	   941	   942	   943	   944	   945	   946	   948	   950	   952	   954	   956	   957	   959
	   960	   962	   964	   966	   968	   970	  1403	  1409	  1418	  1419	  1683	  1778	  1844	  2013
	  2031	  2072	  2115	  2163	  2725	  2793	  2796	  2812	  2828	  4676	  4888	  4890	  4893	  4938
	  4964	  4986	  4988	  4990	  5086	  5088	  5094	  5096	  5101	  5103	  5108	  5113	  5117	  5121
	  5125	  5129	  5135	  5139	  5143	  5148	  5152	  5156	  5161	  5165	  5167	  5171	  5175	  5177
	  5181	  5185	  5190	  5194	  5198	  5202	  5206	  5210	  5214	  5218	  5221	  5225	  5229	  5233
	  5238	  5240	  5245	  5251	  5255	  5259	  5262	  5265	  5268	  5271	  6626	  6744	  6748	  6950
	  6955
TIMER 	   246#	  1766
TIPNTR	  3310#	  3361	  3366	  3376	  3379
UNTIME	   250#	  1858
UTIMER	   255#	  1859
UUNTIM	   259#	  1764
WHICHT	  7480#	  7523	  7526	  7529	  7532	  7534	  7536
