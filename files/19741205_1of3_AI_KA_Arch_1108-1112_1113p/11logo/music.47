	.STITL	MUSIC PRIMITIVES
	VERN==VERN+%FNAM2

SING:	EXCH (P),2(P)
	JSR	PC,MCHK
	JSR	PC,REVS	;FOR MULTIPLE ARGUMENTS
	MOV	(SP)+,D	;NUMBER OF ARGS
	ASR	D	;IS IT EVEN?
	BCC	SING2
	ERROR+WNA	;WRONG NUMBER OF ARGS
SING2:	MOV	VOICEN,E	;INDEX FOR VOICE (0,2,4 OR 6)
	MOV	VLAST(E),F	;POINTER TO LAST NODE IN VOICE
SING3:	DEC	D
	BGE	SING31
	SEZ
	RTS PC
SING31:	JSR	PC,G2NARG	;DURATION IN B, PITCH IN A
	JSR	PC,SINGNO	;NORMALIZE MIDDLE C TO 0.  ERROR IF NOTE OUT OF RANGE
	TST	B	;DURATION
	BGE	SING7
SING6:	ERROR+DOR	;DURATION OUT OF RANGE
SING7:	CMP	B,#177	;LARGEST LEGAL DURATION (+- 7 BITS)
	BGT	SING6
	ADD	B,VOICLN(E)	;ACCUMULATE TOTAL FOR VOICE
	CMP	B,#1
	BLT	SING3	;IF ZERO THEN GO ON
	BNE	SING8
	NEG	B	;IF 1 THEN SET TO -1 AS FLAG FOR PERFORM
SING8:	SWAB	A
	BIC	#177400,B	;CLEAR TOP HALF
	BIS	A,B	;SET UP 8 BITS PITCH, 8 BITS DURATION IN B
	JSR	PC,ACTSTO	;BUILD ON TO VOICE LIST
	MOV	F,VLAST(E)	;NEW LAST NOTE
	BR	SING3


;NORMALIZE MIDDLE C TO 0
;ERROR IF NOTE OUT OF RANGE.
SINGNO:	ADD	#74,A	;NORMALIZE 0 TO MIDDLE C
	CMP A,#MBTRAP
	BEQ SINGN1
	CMP	A,#MBREST	;SMALLEST VALID PITCH
	BGE	SINGN2
SINGN1:	ERROR+NOG	;NOTE OUT OF RANGE
SINGN2:	CMP	A,#137	;HIGHEST VALID NOTE
	BGT	SINGN1
	RTS	PC
NOMUSIC:
	MOV USER,A
	MOV UTTY(A),E
	BIT #PTBF,TTYST(E)
	BEQ NOMUS1
	MOV #PMBOX,A
	JSR PC,TBCHK
	BEQ NOMU9
	BIC #INITF,(A)
	BR MUSIN
NOMUS1:	MOV	#MBDN,E
	JSR	PC,CLOSE2
	BNE	NOMU9	;BR IF NOT OPEN ANYWAY
	BR	MUSIN	;ELSE CLEAR OUT MUSIC VOICES, ETC.

;TRY TO GET MUSIC BOX AND INITIALIZE
;IF DON'T ALREADY HAVE IT
MCHK:	MOV USER,A
	MOV UTTY(A),E
	BIT #PTBF,TTYST(E)
	BEQ MCHK1
	MOV #PMBOX,A
	JSR PC,TBCHK
	BNE .+4
	ERROR+DNR
	BIT #INITF,(A)
	BNE NOMU9
	BIS #INITF,(A)
	BR MUSIN
MCHK1:	MOV	#MBDN,E
	CMP	A,TTYU(E)
	BEQ	NOMU9	;BR IF ALREADY OPEN
	JSR	PC,OPEN1
MUSIN:	MOV	#100,MUCWRD	;FOR NVOICES 4
	MOV	#MUSBEG,A
MUSIN1:	CLR	(A)+
	CMP	A,#MUSEND
	BLT	MUSIN1
	MOV	#MVOC,A	;CLEAR OUT THE POINTERS IN USER SPACE
	CLR	(A)+
	CLR	(A)+
	CLR	(A)+
	CLR	(A)+
	JSR	PC,MCL	;SET UP DUMMY NODES
	MOV	#6,NVOIC	;NUMBER OF VOICES
NOMU9:	SEZ
	RTS	PC

TBCHK:	SPUSH B
	SPUSH C
	MOV #NPTBOX,B
	MOV #PTBOX0,C
TBCHK1:	CMP USER,(C)+
	BEQ TBCHK2
	ADD #4*2,C
	SOB B,TBCHK1
TBCHSZ:	SPOP C
	SPOP B
	SEZ
	RTS PC
TBCHK2:	MOV #4,B
TBCHK3:	CMPB A,(C)
	BEQ TBCHCZ
	TST (C)+
	SOB B,TBCHK3
	BR TBCHSZ
TBCHCZ:	MOV C,A
	SPOP C
	SPOP B
	CLZ
	RTS PC
			;SET UP DUMMY MUSIC LISTS
MCL:	MOV	#6,F
	CLR	B
	MOV	#LSTR,A
MCL2:	MOV	MVOC(F),TOPS	;FREE MUSIC NODES
	JSR	PC,FRELST
	JSR	PC,GRBAD	;GET A NEW NODE
	BIS	A,C
	CLR	B
	JSR	PC,.STORE
	MOV	C,MVOC(F)	;POINTER TO IT
	MOV	C,VLAST(F)
	CLR	VOICLN(F)
	SUB	#2,F
	BGE	MCL2
	RTS	PC

MCLEAR:	JSR	PC,MCHK
	JSR	PC,MCL
	SEZ
	RTS PC
VLEN:	JSR	PC,MCHK	;OUTPUT LENGTH OF CURENT VOICE
	MOV	VOICEN,B
	MOV	VOICLN(B),B
	JMP	R1NARG

MLEN:	JSR	PC,MCHK
	MOV	#4,D
	MOV	#VOICLN,F
	CLR	B
MLEN1:	MOV	(F)+,A	;GET MAXIMUM VOICE LENGTH
	CMP	A,B
	BLE	MLEN2
	MOV	A,B
MLEN2:	DEC	D
	BNE	MLEN1
	JMP	R1NARG
GTVARG:	JSR	PC,G1NARG
	DEC	B	;TRANSFORM VOICE NUMBER (1,2,3,4) TO INDEX (0,2,4,6)
	ASL	B
	TST	B
	BGE	GTV2
GTV1:	ERROR+IVV	;INVALID VOICE NUMBER
GTV2:	CMP	B,#6
	BGT	GTV1
	RTS	PC

VOICE:	JSR	PC,MCHK
	JSR	PC,GTVARG
	MOV	B,VOICEN
	SEZ
	RTS PC

NVOICES:	JSR	PC,MCHK
	JSR	PC,MCL	;REINITIALIZE
	JSR	PC,GTVARG
	MOV	B,NVOIC	;SET NEW VOICE NUMBER
	SEZ
	RTS PC

MBON:	MOV #MBDN,E
	MOV	NVOIC,A
	ASR	A	;TURN INTO BYTE INDEX
	MOV	A,B
	CMP	#2,A	;IN NVOICES 3,
	BNE	MBON1
	INC	A	;IT IS NECESSARY TO SILENCE 4 VOICES
MBON1:	MOVB	MBSCH(A),D	;CHAR FOR A VOICES, BUT ALL SILENT
	JSR	PC,MUCTYO
	MOV	#MBREST,D
	INC	A
MBON2:	JSR	PC,GTYO	;OUTPUT REST
	SOB	A,MBON2
	MOVB	MBVCH(B),D	;CONTROL CHR  FOR NUMBER OF VOICES
	MOV	D,MUCWRD
	JSR	PC,MUCTYO	;LEAVE BOX READY FOR NOTES
	RTS	PC

;SILENCE MBOX, BUT DON'T CHANGE NUMBER OF VOICES OR ANYTHING
MBOFF:	MOV	MUCWRD,D
	BIC	#177774,D	;LEAVE NUMBER OF VOICES INFO INTACT
	BIS	#100,D
	MOV	D,MUCWRD
	JSR	PC,MUCTYO
	RTS	PC

;CALLED BY BREAK AND PAUSE TO SHUT THE  DAMN THING UP
BRKMOF:	MOV	#MBDN,E
	CMP	U,TTYU(E)
	BNE	BRKMO9
	JSR	PC,MBOFF
	RTS	PC

;CALLED BY CONTINUE TO TURN MBOX BACK ON
BRKMON:	MOV	#MBDN,E
	CMP	U,TTYU(E)
	BNE	BRKMO9
	MOV	MUCWRD,D
	JSR	PC,MUCTYO
BRKMO9:	RTS	PC
			;OUTPUT MUSIC TO THE BOX
PM:	JSR	PC,MCHK
	JSR	PC,MBON
	MOV	NVOIC,A
	MOV	A,F	;USED AS POINTER TO CORRECT VOICE
	ADD	#VOICLN+2,A	;SET UP FLAGS IN VOICLN SLOTS
PM1:	MOV	#-1,-(A)
	CMP	A,#VOICLN
	BGT	PM1
PM2:	JSR	PC,PMCHP	;GRAB DUMMY NODE OF EACH VOICE
	JSR	PC,PMCHP	;NOW SET UP FIRST NODE OF MUSIC
PM21:	TST	-(F)
	TST	F
	BGE	PM2
PM3:	MOV USER,F
	TST BRAKE(F)
	BNE PM7
	CLR	F	;LOOP TO OUTPUT NOTES
PM4:	JSR	PC,PMNXT	;F IS INDEX TO VOICE
	TST	(F)+
	CMP	F,NVOIC	;ONE NOTE FROM EACH VOICE
	BLE	PM4
	CLR	B
	MOV	NVOIC,A	;ADD FLAGS FOR ALL VOICES
	ADD	#VOICLN+2,A
PM5:	ADD	-(A),B
	CMP	A,#VOICLN
	BGT	PM5
	TST	B	;IF ALL FLAGS CLEARED THEN DONE
	BNE	PM3
PM6:	JSR	PC,MBOFF
	JSR	PC,MCL	;REINIT MUSIC VARIABLES
	SEZ
	RTS PC
PM7:	JSR PC,TBREST
	BR PM6
			;OUTPUT ONE NOTE FROM VOICE(F)
PMNXT:	DEC	TEMP	;NOTE COUNTER
	MOV	#MBREST,D
	TST	VOICLN(F)	;IF FLAG CLEARED OUTPUT REST
	BNE	PMNXT2
	JSR PC,TMBTYO
	RTS	PC
PMNXT2:	CMPB	VLAST(F),#1	;IF DUR=1 PLAY A REST
	BEQ	PMNX2A
	MOVB	VLAST+1(F),D	;PITCH
PMNX2A:	JSR	PC,TMBTYO
	DECB	VLAST(F)	;DECREMENT DURATION
	BGT	PMNXT3
	JSR	PC,PMCHP	;IF DUR<=0 SET UP NEXT NODE
	RTS	PC
PMNXT3:	CMPB	D,#MBPERC	;IS THIS A PERCUSSION SOUND?
	BGT	PMNXT4	;NO
	MOVB	#MBREST,VLAST+1(F)	;YES--CHANGE ALL BUT FIRST TO RESTS
PMNXT4:	RTS	PC

PMCHP:	MOV	MVOC(F),C	;SET UP NEXT NODE SKIP IF SUCCESSFUL
	BIC	#170000,C
	BNE	PMCHP1
	CLR	VOICLN(F)	;CLEAR FLAG TO INDICATE NO NEXT NODE
	RTS	PC
PMCHP1:	JSR	PC,.LOADC
	BIC #170000,A
	BIS #LSTR,A
	MOV	A,MVOC(F)
	MOV	B,VLAST(F)	;PUT PITCH,,DURATION IN VLAST SLOT
	JSR	PC,.FREE	;FREE OLD NODE
	RTS	PC

TMBTYO:	SPUSH C
	MOV #PMBOX,C
	JSR PC,TBTYO
	SPOP C
	RTS PC

