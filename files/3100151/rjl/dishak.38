TITLE DISPLAY DRIVER

T=2
B=3
C=4
D=5
E=6
Y=14
X=15
MOD=16
P=17

DDT=34000

CLKCHN==7
DDSCHN==6
SDSCHN==5




;THIS ATTEMPTS TO BE A FAIRLY WINNING NON-TIMESHARING
;340 DRIVER.
;THE USAGE IS:
	;	MOVEI T,DLIST
	;	PUSHJ P,DSTART
;STARTS UP THE 340, DISPLAYING DLIST. THE FORMAT OF DLIST IS:
	;DLIST:	-105,,PIC1-1	;BLKO POINTER
	;	-1050,,PIC2-1	;BLKO POINTER
	;	FOO	;ROUTINE TO JSR TO
	;	-105,,PIC3	;BLKO POINTER
	;			;ETC
	;	0	;TERMINATOR
;;BLKO POINTERS ARE USED IN THE EXPECTED WAY, I.E., THE SPECIFIED
;BLOCK IS SENT TO THE 340 UNTIL THE POINTER COUNTS OUT
;OR THE 340 IS GIVEN A STOP WORD
;AT THAT TIME THE NEXT ELEMENT OF THE LIST IS PICKED UP
;IF THE ELEMENT IS NOT NEGATIVE THE ADDRESED ROUTINE IS JSR'ED TO
;AT INTERUPT LEVEL(USUALLY THE DATA PIA LEVEL, BUT COULD BE
;THE SPECIAL PIA LEVEL IF 340 WAS SENT A STOP WORD)
;IF THE ROUTINE POPJ'S, THE NEXT ELEMENT IS PICKED UP
;IF THE ROUTINE DOES A JSR DISFLS, IT IS RESTARTED ON THE NEXT
;DATA INTERUPT. NOTE THAT NO AC'S ARE SAVED.
;IF THE ROUTINE DOES A JSR DISBFL THE ADDRESS IN A POINTS TO
;A BLKO POINTER, WHICH IS USED IN THE OBVIOUS WAY.
;WHEN THE BLKO COUNTS OUT OR A STOP WORD IS SENT TO THE 340
;THE ROUTINE IS RESTARTED WHERE IT DID THE JSR.
;THE COMMENTS ABOVE RELATING TO SENDING A STOP TO THE 340
;NEED NOT BE TRUE IF THE USER SETS STBRKA NON-ZERO.
;IN THIS CASE A STOP WILL CAUSE A JRST TO THE ADDRESS IN
;STBRKA. OTHER SPECIAL PIA INTERUPTS ARE HANDLED SIMILARLY:

STBRKA:	0	;STOP
LPBRKA:	0	;LIGHT PEN BREAK
VEGBRA:	0	;VERTICAL EDGE
HEGBRA:	0	;HORIZONTAL EDGE
VCLPBA:	0	;VECT CONT LP (????)
;OTHER INTERESTING LOCATIONS ARE:
LSTPNT:	0	;BEGINNING OF DLIST,,CURRENT POINTER INTO DLIST
DISSTR:	0	;SET TO -1 TO TELL CLKBRK TO RESTART DIS
DISASV:	0	;SAVED A FOR DATA BREAKS
SDSASV:	0	;SAVED A FOR SPECIAL BREAKS
DISDGO:	0	;IF NON-ZERO, GO HERE ON NEXT DATA BREAK
DISBLK:	0	;CURRENT OR LAST BLKO POINTER
TIME:	0	;TIME SINCE CSTART IN 60'THS
DISRUN:	0	;TO TELL CLOCK THAT DIS IS REALLY RUNNING
DISSTP:	0	;DIS STOPPED BY STOP WORD, NOT BLKO COUNT OUT


;TURN ON 340, DISPLAY LIST POINTED TO BY A
DSTART:	CONO PI,1000+1_<7-SDSCHN>+1_<7-DDSCHN>
	SETZM DISDGO
	SUBI T,1
	HRRM T,LSTPNT	;SET UP DLIST POINTER
	HRLM T,LSTPNT
	MOVE T,[BLKO DIS,DISBLK]
	MOVEM T,40+2*DDSCHN	;SETUP TO START INERUPT ROUTINE
	MOVE T,[CONO PI,4000+1_<7-SDSCHN>]
	MOVEM T,41+2*DDSCHN	;JUST IN CASE
	MOVE T,[JSR DISSPC]	;FOR SPECIAL INTERUPTS
	MOVEM T,40+2*SDSCHN	;NOTE THAT NONE OF THESE CHANELS CAN BE SHARED
	MOVE T,[JSR DISDNE]
	MOVEM T,41+2*SDSCHN
	MOVE T,[-1,,[0]-1]
	MOVEM T,DISBLK
	SETOM DISSTR
	CONO PI,2000+1_<7-SDSCHN>+1_<7-DDSCHN>	;TURN ON PI CHANNELS
	POPJ P,	;DONE (I KNOOW, YOU REALLY NEEDED THAT COMMENT.)


;TURN OFF DISPLAY TEMPORAIRILY
DSTOP:	CONO PI,1000+1_<7-SDSCHN>+1_<7-DDSCHN>
	CONO DIS,0
	POPJ P,

;CONTINUE DISPLAY AFTER DOING A DSTOP (GOOD LUCK!)
DCONT:	CONO DIS,200+SDSCHN_3+DDSCHN
	CONO PI,2000+1_<7-SDSCHN>+1_<7-DDSCHN>
	POPJ P,

;TURN ON CLOCK, SET TIME TO ZERO
CSTART:	CONO PI,1000+1_<7-CLKCHN>
	SETZM TIME
	CONO 433440+CLKCHN	;TURN OFF+CLEAR EVERYTHING EXCEPT TURN ON CLOCK
	MOVE T,[JSR CLKBRK]
	MOVEM T,40+2*CLKCHN
	CONO PI,2000+1_<7-CLKCHN>
	POPJ P,



;INTERUPT ROUTINES

;DISPLAY DATA BREAK
DISDNE:	0
	MOVEM T,DISASV
	SKIPE T,DISDGO
	JRST (T)
DISNXT:	SETOM DISRUN	;TELL CLOCK THAT WE'RE REALLY RUNNING
			;NOTE THAT IF A BLKO TAKES LONGER THAN A 60'TH TO COUNT OUT...
	AOS T,LSTPNT	;GET NEXT DISPLAY LIST ELEMENT
	SKIPN (T)	;ZERO IS THE LAST ELEMENT(DISDUM IS A GOOD DUMMY)
	JRST DISVDN	;DISPLAY VERY DONE
	SKIPL (T)
	JRST DISPUS
	JSR DISBFL
	JRST DISNXT

DISVDN:	MOVE T,LSTPNT
	HLRM T,LSTPNT	;RESET POINTER TO BEG OF LIST
	SETOM DISSTR	;TELL CLKBRK TO START UP DIS
	CONO DIS,0	;STOP DIS COLD
	MOVE T,[JSR DISFLS]
	MOVEM T,40+2*DDSCHN
	MOVE T,[-1,,[0]-1]
	MOVEM T,DISBLK
	MOVE T,DISASV
	JRST 12,@DISDNE	;WILL NOW GO AWAY TIL NEXT CLKBRK

DISPUS:	JSR @(T)	;GO TO ROUTINE
	JRST DISNXT	;GET NEXT BLKO OR ROUTINE ADDRESS


DISBFL:	0	;COME HERE TO SETUP BLKO AND FLUSH TILL COUNTED OUT
	MOVE T,(T)
	MOVEM T,DISBLK
	MOVE T,[JSR DISFLS]
	MOVEM T,40+2*DDSCHN
	MOVE T,DISBFL	;SET UP PLACE TO GO
	MOVEM T,DISDGO	;WHEN DONE
	MOVE T,DISASV	;RESTORE A
	AOSN DISSTP	;STOP WORD HIT?
	CONO DIS,100	;YES, CLOBBER DISPLAY
	CONO DIS,200+SDSCHN_3+DDSCHN
	JRST 12,@DISDNE

DISFLS:	0
	PUSH P,[BLKO DIS,DISBLK]
	POP P,40+2*DDSCHN
	JRST 12,@DISFLS

DISDUM:	0
	JRST @DISDUM


;DISPLAY SPECIAL BREAK

DISSPC:	0
	MOVEM T,SDSASV	;SAVE A
	CONSO DIS,10000	;IS IT VECT CONT LP?
	JRST .+3	;NO
	SKIPE T,VCLPBA	;IS THERE AN ADDRESS FOR THAT?
	JSR (T)	;YES, GO DO IT
	CONSO DIS,4000	;IS IT VERTICAL EDGE
	JRST .+3	;NO
	SKIPE T,VEGBRA	;IS THERE AN ADDRESS FOR THAT?
	JSR (T)	;YES, GO TO IT
	CONSO DIS,2000	;IS IT LIGHT PEN?
	JRST .+3	;NO
	SKIPE T,LPBRKA	;YES, IS THERE AN ADDRESS TO GO TO
	JSR (T)	;YES, GO DO IT
	CONSO DIS,1000	;IS TI HORIZONTAL EDGE?
	JRST .+3	;NO
	SKIPE T,HEGBRA	;YES, IS THERE AN ADDRESS
	JSR (T)	;YES
	CONSO DIS,400	;IS IT STOP?
	JRST SDISGO	;NO, RESTART DISPLAY
	SETOM DISSTP	;DISPLAY STOPED.
	SKIPE T,STBRKA	;YES, IS THERE AN ADDRESS?
	JRST (T)	;GO TO IT (NOTE DIFFERENT CALLING!!!!!!!!)
	MOVE T,DISSPC	;NO ADDRESS, MAKE IT LOOK
	MOVEM T,DISDNE	;LIKE A DATA BREAK
	MOVE T,SDSASV	;RESTORE A
	JRST DISDNE+1	;AND RUN DATA ROUTINE, ON THIS LEVEL
SDISGO:	MOVE T,SDSASV	;RESTORE A
	CONO DIS,200+SDSCHN_3+DDSCHN	;RESTART DIS
	JRST 12,@DISSPC	;DISMIS INT

;CLOCK BREAK ROUTINE
CLKBRK:	0
	CONSZ 430000	;IS IT NXM,PDL OV, MEM PROTECT?
	JRST 4,CLKDIS	;LOSEY,LOSEY!
	CONSO 1000	;IS IT CLOCK ?
	JRST CLKDIS	;WELL...
	AOS TIME
	CONO 1000	;TURN OFF CLOCK FLAG
	AOSG DISRUN	;HAS DISPLAY NOT RUN FOR 2 CLOCK BREAKS?
	AOSN DISSTR	;SHOULD I START THE DISPLAY?
	SKIPA
	JRST CLKDIS	;NO, GO AWAY
	SETZM DISDGO
	CONO DIS,5100+SDSCHN_3+DDSCHN	;TURN IT ON
CLKDIS:	CONO 433440+CLKCHN	;FLUSH ALL THE BAD GUYS
	JRST 12,@CLKBRK


;THE FOLLOWING ROUTINE ARE FOR SETTING UP DISPLAY LISTS
;THE INTERESTING VARIABLES ARE:
CHWD:	0	;THE CURRENT HALF WORD TO BE PUT ONTO THE LIST EVENTUALLY
DBYTEP:	0	;BYTE POINTER INTO LIST CURRENTLY BEING ACCUMULATED
DLISTB:	0	;STARTING ADDRESS OF CURRENT LIST
DLISTP:	0	;POINTER TO THE NEXT FREE ENTERY ON THE DISPLAY OBJECTS LIST
INTFY:	0	;0=>DON'T TURN INT BITS ON IN NEW ELEMENTS, NON-ZERO, TURN ON
CHARBP:	0	;POINTER INTO CURRENT HALFWORD OF CHARACTERS
DCASE:	0	;CASE WE ARE IN
;THIS SETS UP VARIABLES TO START A LIST AT THE ADDR IN A
DLSTST:	MOVEM T,DLISTB	;SAVE THE START ADDRESS
	HRLI T,442200	;MAKE A BYTE POINTER
	MOVEM T,DBYTEP
	POPJ P,
;THIS ENDS A LIST, RETURNING A BLKO POINTER IN A
;AND THE ADDR OF THE NEXT FREE WORD IN B
DLSTEN:	MOVEI T,0
	PUSHJ P,ENTMOD	;ENTER PARAMTER MODE
	MOVEI T,3000	;STOP WORD
	IOR T,CHWD	;I DON'T KNOW WHY, BUT
	IDPB T,DBYTEP
	IDPB T,DBYTEP
	IDPB T,DBYTEP
	IDPB T,DBYTEP
	;STOP!!!!!!!!!!!
	MOVE T,DLISTB
	HRRZ B,DBYTEP	;ADDRESS OF END
	SUBM T,B 	;NEGATIVE LENGTH
	SUBI T,1	;BEGGINING -1
	HRL T,B	;PLUS -LENGTH = BLKO POINTER
	HRRZ B,DBYTEP	;NEXT FREE WORD
	ADDI B,1	;FOR LUCK
	POPJ P,

;PARMETER SETUPS (INTENSITY, SCALE, LP ON/OFF)
;THE FOLLOWING N OR SO ROUTINES TAKE THIER ARGUMENTS IN C

;SET INTENSITY (NOTE THAT THIS DOES NOT ADD A HALF WORD TO THE LIST
;IF YOU ARE ALLREADY IN PARAMETER MODE)
SETINT:	MOVEI T,0
	PUSHJ P,ENTMOD	;ENTER PARAMTER MODE
	TRO C,10	;TURN ON ENABLE BIT
	IORM C,CHWD	;PUT INTO PARAMTER MODE WORD
	POPJ P,

;SET SCALE-SIMILAR TO SETINT
SETSCL:	MOVEI T,0
	PUSHJ P,ENTMOD	;ENTER PARAMETER MODE
	TRO C,4	;TURN ON ENABLE BIT
	DPB C,[40300,,CHWD]	;PUT IT IN THE RIGHT PLACE
	POPJ P,

;SET LIGHT PEN STATUS
;NOTE THAT LP STATUS CAN BE SET IN EITHER PARAMTER MODE
;OR POINT MODE-THUS, IF YOU ARE IN ONE OF THOSE MODES,
;SETTING LP STATUS WILL NOT TAKE ANY EXTRA WORDS
SETLP:	MOVEI T,0
	CAIE MOD,1	;POINT MODE?
	CAIN MOD,0	;OR PARAMTER MODE
	SKIPA
	PUSHJ P,ENTMOD	;IF NOT IN POINT OR PARM MODE, ENTER PARAM MODE
	TRO C,2	;TURN ON ENABLE BIT
	DPB C,[110200,,CHWD]	;AND PUT IT IN THE RIGHT PLACE
	POPJ P,
;THE FOLLOWING ROUTINES GENERATE POINT MODE WORDS
;NOTE THAT Y SHOULD BE DONE BEFORE X
;THIS SETS BOTH X ANFD Y
XYPOIN:	PUSHJ P,YPOINT
	JRST XPOINT
;THIS SETS Y, ALWAYS UNINTENSIFIED
YPOINT:	MOVEI T,1
	PUSHJ P,ENTMOD	;ENTER POINT MODE
	ANDI T,1777	;FLUSH EXTRA BITS
	TRO Y,220000	;STAY IN POINT MODE AND SPECIFY Y COORD
	IORM Y,CHWD
	POPJ P,
;THIS SETS X, ALWAYS UNINTENSIFIED
XPOINT:	MOVEI T,1
	PUSHJ P,ENTMOD	;ENTER POINT MODE
	ANDI X,1777	;FLUSH EXTRA BITS
	TRO X,20000	;STAY IN POINT MODE
	IORM X,CHWD
	POPJ P,
;THIS INTESIFIES THE LAST POINT
INTPOI:	CAIE MOD,1	;IN POINT MODE?
	JRST 4,DDT	;LOSE!
	MOVEI T,2000
	IORM T,CHWD	;SET INTENSIFY BIT
	POPJ P,
;PUT CHARACTER IN C INTO CURRENT DISPLAY LIST
DISCHA:	CAIN MOD,3	;IS MODE=CHARACTER?
	JRST DISCH1	;YES, GO
	PUSHJ P,CHRSET	;NO, SET UP
	MOVEI T,35	;GO INTO UPPER CASE
	IDPB T,CHARBP
	SETZM DCASE
DISCH1:	MOVE C,340CTB(C)	;TRANSLATE ASCII TO DISPLAY
	MOVEI T,0
	TRNN C,100	;IS IT LOWER CASE?
	SKIPN DCASE	;ARE WE IN LOWER CASE?
	JRST .+2	;NOT LOWER, OR LOWER AND ALREADY IN
	MOVEI T,35	;LOWER AND NOT IN
	TRZE C,100	;IS IT UPPER CASE?
	SKIPE DCASE	;ARE WE IN UPPER CASE?
	JRST .+2	;NOT UPPER, OR UPPER AND ALREADY IN
	MOVEI T,36	;UPPER AND NOT IN
	SKIPE T	;DO WE HAVE TO CHANGE CASE?
	TRZE C,200	;OR IS CHARACTER CASE INDEPENDENT?
	JRST .+2	;NO CASE CHANGE
	IDPB T,CHARBP	;CHANGE CASE
	PUSHJ P,CHRSET
	IDPB C,CHARBP	;DEPOSIT REAL CHARACTER

CHRSET:	MOVSI T,770000
	TDNE T,CHARBP	;BYTE POINTER TIRED?(=EXHAUSTED)
	POPJ P,	;NO, GO AWAY
	MOVEI T,3	;MAKE SURE YOUR'E IN CHAR MODE
	PUSHJ P,ENTMOD
	MOVE T,[220600,,CHWD]
	MOVEM T,CHARBP
	POPJ P,

;THIS SETS UP A VECTOR
;LENGTH MUST BE INSIDE PROPER RANGE
;VECTOR IS DRAWN RELATIVE TO WHERE YOU ARE
VECCON:	SKIPA T,[5]	;ENTER VECTOR CONTINUE MODE
RELVEC:	MOVEI T,4
	PUSHJ P,ENTMOD	;ENTER VECTOR MODE
	JUMPGE X,.+3
	MOVNS X	;TAKE ABS VALUE
	TRO X,200	;SET NEGATIVE BIT
	JUMPGE Y,.+3
	MOVNS Y	;TAKE ABS VALUE
	TRO Y,200	;SET NEGATIVE BIT
	ANDI X,377
	DPB Y,[101000,,X]	;SET UP A NICE VECTOR
	SKIPE INTFY	;SHOULD WE INTENSIFY?
	TRO X,200000	;YES
	MOVEM X,CHWD
	POPJ P,

;ENTER MODE-PUTS DISPLAY INTO SPECIFIED MODE
;FOR ALL MODES BUT PARMETER-
	;IF DIS WAS IN POINT MODE, CLOBBERS "NEXT MODE" FIELD AND PUTS CHWD ON LIST
	;IF DIS WAS IN PARMETER MODE, COLLOBERS "MODE" BITS AND PUTS CHWD ON LIST
	;IF DIS WAS IN ANY OTHER MODE, MAKES CHWD ENTER PARAMETER MODE,
	;PUTS CHWD ON LIST, PUTS PROPER PARM MODE WORD IN CHWD
;IF ENTERING PARAMERTER MODE
	;IF IN PARMETER MODE, EXITS
	;IF IN ANY OTHER MODE, CAUSES ENTANCE TO PARAM MODE
	;PUTS CHWD ONTO LIST
;MODE TO ENTER IN A;CLOBBERS B

ENTMOD:	CAMN MOD,T	;SAME MODE AS NOW?
	JRST OUTHWD		;YES, JUST OUTPUT CHWD
	CAIL T,0
	CAIL T,7
	JRST 4,DDT	;ILLEGAL MODE
	JRST @.+1(MOD)
	SETMOD	;LEAVE PARMETER MODE
	SETMOD	;LEAVE POINT MODE
	[JRST 4,DDT];LEAVE ???? MODE
	LVCHAR	;LEAVE CHARACTER MODE
	LVVECT	;LEAVE VECTOR MODE
	LVVECT	;LEAVE VECTOR CONTINUE MODE
	LVINCR	;LEAVE INCREMENT MODE

LVCHAR:	MOVEI B,37	;ESCAPE
	IDPB B,CHARBP
	SETZM CHARBP
	JRST .+2

LVVECT:LVINCR:
	TRO B,400000	;TURN ON ESCAPE BIT
	IOR B,CHWD	;GET INCRMENT OR VECTOR HWD OR CHARACTER
	IDPB B,DBYTEP	;PUT IT ON THE LIST
	SETZM CHWD	;CLEAR OLD HWD

SETMOD:	DPB T,[150300,,CHWD]	;WE ARE NOW EITHER IN PARMETER OR POINT MODE
			;PUT NEW MODE INTO POINT OR PARMETER WORD
	CAIE MOD,1	;IF OLD MODE WAS POINT, OUTPUT HWD
	JUMPE T,SETMD1	;IF NEW MODE IS PARMETER, AND OLD NOT POINT, WE'RE DONE
OUTHW1:	MOVE B,CHWD	;IF ENTERING NEW MODE OTHER  PARAMETER
			;OR IF NO MODE CHAGE WAS MADE
	IDPB B,DBYTEP	;THEN PUT THE WORD INTO THE LIST
	SETZM CHWD	;AND CLEAR IT FOR THE NEXT GUY
SETMD1:	MOVE MOD,T	;IT'S NOW OFFICIAL
CPOPJ:	POPJ P,

OUTHWD:	JUMPN MOD,OUTHW1
	POPJ P,




;MAIN PROGRAM GOES HERE
GO:	MOVE P,[-40,,PDL-1]
	CONO 200000	;IO RESET
	CONO PI,10000
	CONO PI,200	;TURN ON PI SYSTEM
	PUSHJ P,CSTART	;START CLOCK
	MOVEI MOD,0
	MOVEI T,FREE
	PUSHJ P,DLSTST
	SETOM INTFY
	MOVEI X,300
	MOVEI Y,100
	PUSHJ P,XYPOIN
	MOVEI C,1
	PUSHJ P,SETSCL
	MOVEI C,5
	PUSHJ P,SETINT
	MOVEI X,150
	MOVEI Y,50
	PUSHJ P,RELVEC
	PUSHJ P,DLSTEN
	MOVEM T,DLIST
	MOVEI T,DLIST
	PUSHJ P,DSTART	;START DISPLAY
	JRST .	;........

DLIST:	-2,,PIC1-1
	AOSER1
	AOSER2
	0

PIC1:	20117,,220000
	100000,,677577
	3000,,3000
	3000,,3000

AOSER1:	0
	AOS FOO1'
	JRST @AOSER1
AOSER2:	0
	AOS FOO2'
	JRST @AOSER2
PDL:	BLOCK 40

340CTB:	100?100?100?100?100?100?100?163
	100?100?233?100?100?234?100?100
	100?100?100?100?100?100?100?100
	100?100?100?100?100?100?100?100
	240
	REPEAT 37,.RPCNT+40
	REPEAT 33,.RPCNT
	100?100?100?100?100?100
	REPEAT 32,100+.RPCNT+1
	100?100?100?100?100

SIND:	FDVR A,SCD1	
	JRST SIN	
COSD:	FDVR A,SCD1	
COS:	FADR A,PIOT	
SIN:	MOVEM B,SB	
	MOVEM A,SX	
	MOVMS A	
	CAMG A,SP2	
	JRST S3A	
	FDV A,PIOT	
	CAMG A,ONE	
	JRST S2	
	MULI A,400	
	ASH B,-202(A)	
	MOVEI A,177	
	ROT B,3	
	LSHC A,33	
	FAD A,A	
	JUMPE B,S2	
	TLCE B,1000	
	FSB A,ONE	
	TLCE B,3000	
	TLNN B,3000	
	MOVNS A	
S2:	SKIPGE SX	
	MOVNS A	
	MOVEM A,SX	
	FMPR A,A	
	MOVE B,A	
	FMP A,SC9	
	FAD A,SC7	
	FMP A,B	
	FAD A,SC5	
	FMP A,B	
	FAD A,SC3	
	FMP A,B	
	FAD A,PIOT	
S2B:	FMPR A,SX	
	SKIPA B,SB	
S3A:	MOVE A,SX	
	POPJ P,
SC3:	577265210372	
SC5:	175506321276 	
SC7:	606315546346 	
SC9:	164475536722 	
SP2:	170000000000 	
SCD1:	206712273406
SX:	0
SB:	0
PIOT:	201622077325	
ONE:	1.0

	CONSTANTS
	VARIABLES
FREE:	END GO


