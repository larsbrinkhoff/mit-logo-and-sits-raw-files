.MACRO SAVE A
.ENDM
.MACRO REST A
.ENDM

FNBFNO==2	;FILE NUMBER
FNBVER==4	;VERSION NUMBER
FNBFN==6	;BEG OF NAME

VEROFF==2	;VERSION IN ENTRY
NAMOFF==4	;FIRST POSSIBLE PLACE FOR NAME
EOFOFF==6	;PALCE FOR LOW ORDER EOF WORD

MFEOFB==100000	;EOF, TIME+DATE PRESENT
MFACCB==40000	;ACCESS CODES PRESENT

;SEARCH THE DIRECTORY POINTED TO BY THE MFI IN A FOR THE FILE POINTED
;TO BY THE FNB IN B
;RETURN IN A A POINTER TO WHERE WE SHOULD PUT A NEW FILE OF THIS NAME,
;AND IN B A POINTER TO THE "EXACT" MATCH IF ONE WAS FOUND.
;IF THE FNB HAS NO VERSION NUMBER OR A SPECIFIC VERSION NUMBER,
;THEN THE DIRECTORY ENTRY MUST HAVE THE SAME FOR AN EXACT MATCH
;IF THE FNB HAS < FOR A VERSION NUMBER, THE FIRST FILE
;WITH A VERSION NUMBER IS AN EXACT MATCH. IF THE FNB HAS
;> AS A VERSION NUMBER, THEN THE LAST FILE WITH THE RIGHT
;NAME AND A VERSION NUMBER IS AN EXACT MATCH. NOTE THAT
;> AND < NEVER EXACT MATCH TO A FILE WITH NO VERSION NUMBER,
;AND A FILE WITH NO VERSION NUMBER NEVER EXACT MATCHES A FILE
;WITH ONE
;THE VERSION NUMBER OF THE EXACT MATCH IS RETURNED IN C
;AND Z IS SET IF NO EXACT MATHC IS FOUND
;CALL WITH MFI LOADED INTO ITEM 2
 ;RETURNS WITH DIR LOADED INTO ITEM 2
DIRSER:	JSR F,ACSAV
	CLR 2(P)	;RETURNED B
	MOV B,E		;COPY FNB POINTER
	MOV #1,FNBFNO(E)	;FIRST FILE (WE SKIP THE SELF ENTRY)
	MOV #DIR,A
	MOV EOFOFF(A),F	;POINTER TO END OF DIRECTORY
	ADD A,F		;REAL END POINTER NOW
	MOV (A),B	;FIRST WORD OF SELF ENTRY
	INC B		;ROUND OFF BYTE COUNT
	BIC #177401,B	;BYTE COUNT
	ADD B,A		;SKIP SELF
;AND THEN SKIP THE PARENT ENTRY TOO
DIRSE1:	INC FNBFNO(E)	;NEXT FILE
	MOV (A),B	;GET FIRST WORD OF ENTRY
	INC B		;ROUND OFF BYTE COUNT
	BIC #177401,B	;GET BYTE COUNT
	ADD B,A		;GO TO NEXT ENTRY
	MOV A,(P)	;SAVE FOR CALLER
	CMP A,F		;ARE WE AT OR PAST THE END?
	BHIS DIRSE2	;YUP, RETURN TO CALLER
	JSR PC,NAMCMP	;COMPARE THE FILE NAMES
	BGT DIRSE1	;HAVEN'T GONE FAR ENOUGH YET
	BLT DIRSE2	;WE'VE GONE TOO FAR
	MOV FNBVER(E),D	;MATCHED FILE NAMES, GET VERSION FROM FNB
	INC D		;WAS IT NO VERSION?
	BGE DIRSE4	;YES, OR POSITIVE VERSION
	CMP #-1,C	;NO VERSION ON THE DIR ENTRY?
	BEQ DIRSE1	;THEN IT CAN'T MATCH < OR >
	MOV A,2(P)	;THIS A REAL MATCH FOR <, AND A POSSIBLE FOR >
	MOV C,4(P)	;SO SAVE IT
	INC D		;WAS IT >?
	BEQ DIRSE1	;SEE IF WE CAN FIND A BIGGER ONE
DIRSE2:	CMP #-2,FNBVER(E)	;IS IT >?
	BNE 1$		;NOPE
	DEC FNBFNO(E)	;CORRECT FILE NUMBER
1$:	JSR F,ACRES	;RESTORE THE CLOBBERED RESGISTERS
	TST B		;SET Z IF NO EXACT MATCH
	RTS PC
DIRSE4:	DEC D		;COMPENSATE FOR TEST
	CMP D,C		;BOTH HAVE VERSIONS OR NO VERSION
	BGT DIRSE1	;FNB VERSION > FOUND VERSION, KEEP TRYING	
	BLT DIRSE2	;FNB VERSION < FOUND, GIVE UP
	MOV A,2(P)	;EXACT MATCH
	MOV C,4(P)	;PREPARE TO RETURN
	BR DIRSE2
;COMPARE THE NAME IN A FNB WITH THE NAME IN A DIRECTORY AN DECIDE
;IF THEY ARE GREATER, EQUAL OR LESS
;POINTER TO FNB IS IN E, POINTER TO DIR IS IN A
NAMCMP:	SAVE <#0,A,B,E>
	MOV A,B		;COPY DIRECTORY POINTER
	ADD #FNBFN,E	;POINT TO FILE NAME IN FILE NAME BLOCK
	MOV VEROFF(A),C	;GET VERSION NUMBER TO RETURN TO CALLER
	ADD #NAMOFF,A	;POINT TO POTENTIAL NAME
	BIT #MFEOFB,(B)	;ARE THERE TIEM DATE ETC?
	BEQ 1$		;NOPE
	ADD #10,A	;SKIP STUFF
1$:	BIT #MFACCB,(B)	;ACCESS CODES?
	BEQ NAMCM2	;NOPE
NAMCM1:	ADD #3,A	;SKIP ONE SET OF CODES
	TSTB -1(A)	;LAST?
	BLT NAMCM1	;KEEP GOING
NAMCM2:	CMPB (A)+,(E)+	;COMPARE CHARACTERS
	BNE NAMCM3	;NOT EQUAL, GO FINISH UP
	TSTB -1(A)	;DID THEY BOTH END?
	BGE NAMCM2	;NOPE
NAMCM4:	REST <E,B,A>
	TST (P)+	;SET CONDITION CODES
	RTS PC
NAMCM3:	MOVB -(A),A	;GET LAST CHAR FROM DIRECTORY
	MOV A,B		;COPY IT
	MOVB -(E),E	;GET LAST FROM FNB
	BIC #177600,A	;FLUSH CRAP
	BIC #177600,E	;LIKEWISE
	DEC 6(P)	;ASSUME FNB IS LESS
	CMP E,A		;WHICH IS GREATER?
	BLT NAMCM4	;ASSUMED RIGHT	
	BGT NAMCM5	;DIRETORY IS LESS
	TST B		;TEST SIGN EXTENDED DIRECTORY CHARACTER
	BGE NAMCM4	;DIRETORY ENDED FIRST, FNB IS BIGGER
NAMCM5:	MOV #1,6(P)	;DIRECTORY ENTRY IS SMALLER THAN FNB
	BR NAMCM4

ACSAV:ACRES:
