.MLLIT==1
TITLE SYMBOL TABLE CONVERT
A=2
B=3
C=15
D=16
P=17
DIC==1
DOC==2
TYOC==16
TYIC==17

;ITS STYLE COMMAND LINE SCANNER
;	NON-SKIP RETURN FOR NULL FILE SPEC
;CLOBBERS ACS WITH RECKLESS ABANDON

BREAK=1		;RETURNS WITH CHARACTER THAT BROKE SCAN
DEV=4		;RETURNS DEV,FN1,FN2,SNAME
FN1=5
FN2=6
SNAME=7
AC=10
CHAR=11
ACPTR=12
TEMP=13
LIMBO=14	;SCANNER READ AHEAD CHARACTER
		;CANNOT LEAVE NAME UNTIL ZERO
;COMMAND BUFFER FILLING AND GETTING

COMPNT:	0
COMBUF:	BLOCK 69.
COMCNT:	0
CRLF:	.IOT TYOC,[15]
	POPJ P,
TTYLIN:	MOVE B,[010700,,COMBUF-1]
	SETZM COMCNT
TTYL1:	.IOT TYIC,A
	JUMPE A,TTYL1
	CAIN A,177
	JRST RUBOUT
	CAIN A,15
	JRST TTYCR
	CAIN A,14
	JRST TTYL1	;IGNORE FORM FEEDS
	CAIN A,12
	JRST TTYLF
	PUSHJ P,COMPUT
	JRST TTYL1

RUBOUT:	SOSGE COMCNT
	JRST [	PUSHJ P,CRLF
		JRST TTYLIN]
	LDB A,B
	PUSHJ P,TYO
	PUSHJ P,DECBP	;DECREMENT BYTE POINTER
	JRST TTYL1

DECBP:	ADD B,[070000,,0]
	JUMPGE B,CPOPJ
	SUB B,[430000,,1]
	POPJ P,

TTYLF:	MOVEI A,15
	PUSHJ P,TYO
TTYCR:	PUSHJ P,COMPUT
	MOVEI A,12
	PUSHJ P,COMPUT
	MOVE B,[010700,,COMBUF-1]
	MOVEM B,COMPNT
	POPJ P,

COMPUT:	IDPB A,B
	AOS COMCNT
	POPJ P,

COMGET:	SOSGE COMCNT
	.VALUE
	ILDB BREAK,COMPNT
	POPJ P,


GETCC:	0			;GET CHARACTER FOR COMMAND LINE SCANNER
	SKIPN BREAK,LIMBO
	PUSHJ P,COMGET
	SETZM LIMBO
	JRST @GETCC

NAME:	0			;BREAK OFF WORD FROM INPUT STREAM
NA1:	JSR GETCC
	CAIE BREAK,40		;IGNORE LEADING SPACES
	CAIN BREAK,11		;TABS TOO
	JRST NA1
	MOVE ACPTR,[440600,,AC]
	TDZA AC,AC
NAME1:	JSR GETCC
	JSR BRKTST
	JRST NAMBRK		;FOUND A BREAK CHARACTER
NAME2:	TLNE ACPTR,770000	;IGNORE EVERYTHING AFTER 6 CHARACTERS
	IDPB CHAR,ACPTR
	JRST NAME1

NAMBRK:	JUMPN CHAR,@NAME	;NO TRAILING SPACES
NAMBR1:	JSR GETCC
	CAIE BREAK,40		;IGNORE TRAILING SPACES
	CAIN BREAK,11
	JRST NAMBR1
	JSR BRKTST
	JRST @NAME		;A BREAK CHARACTER
	MOVEM BREAK,LIMBO		;SPACE BROKE US
	MOVEI BREAK,40
	JRST @NAME

;CONVERTS BREAK TO SIXBIT AND PUTS RESULT IN CHAR
;^Q QUOTES NEXT CHARACTER
;FAILS TO SKIP ON BREAK CHARACTER

BRKTST:	0
	CAIN BREAK,11
	MOVEI BREAK,40
	JSR SIXTST
	JUMPL CHAR,[	CAIE BREAK,21		;^Q
			JRST @BRKTST		;NON-SIXBIT BREAKS US
			JSR GETCC
			JSR SIXTST
			JUMPL CHAR,@BRKTST	;NON-SIXBIT
			JRST BRKT1]
	JUMPE CHAR,@BRKTST
	CAIE CHAR,':
	CAIN CHAR,';
	JRST @BRKTST
BRKT1:	AOS BRKTST		;WHEW!
	JRST @BRKTST

;CONVERT BREAK TO SIXBIT

SIXTST:	0
	MOVNI CHAR,1
	CAIL BREAK,40
	CAILE BREAK,"_
	JRST SIXT1	;MIGHT BE LOWER CASE
	MOVEI CHAR,-40(BREAK)
	JRST @SIXTST
SIXT1:	CAIL BREAK,"A
	CAILE BREAK,"Z
	JRST @SIXTST
	MOVEI CHAR,<"A-"A-40>(BREAK)
	JRST @SIXTST

;THIS ROUTINE SCANS COMMAND LINE FOR FILE SPECIFICATION

GETFIL:0
	SETZB FN1,FN2
	SETZB DEV,SNAME
	SETZM LIMBO
	JSR NAME
	JUMPE AC,@GETFIL
	AOSA GETFIL
GETF1:	JSR NAME		;BREAK OFF FIRST NAME
	JUMPE AC,@GETFIL	;LET INITL WORRY ABOUT IT
	CAIN BREAK,":
	JRST [	MOVE DEV,AC
		JRST GETF1]
	CAIN BREAK,";
	JRST [	MOVE SNAME,AC
		JRST GETF1]

;THIS MUST BE FN1 OR FN2

	CAIE BREAK,40
	JRST [	JUMPN FN1,[	MOVE FN2,AC
				JRST @GETFIL]
		MOVE FN1,AC
		JRST @GETFIL]
	JUMPN FN1,[	MOVE FN2,AC
			JRST GETF1]
	MOVE FN1,AC
	JRST GETF1

TYO:	.IOT TYOC,A
	POPJ P,
GO:	.OPEN TYOC,[SIXBIT /  !TTY/]
	.VALUE
	.OPEN TYIC,[SIXBIT /   TTY/]
	.VALUE
	MOVEI P,PDL
	PUSHJ P,TTYLIN
	JSR GETFIL
	CAIN DEV,
	MOVSI DEV,'DSK
	HLRM DEV,INFILE
	HLRM DEV,OUTFIL
	CAIN SNAME,
	.SUSET [.RSNAM,,SNAME]
	.SUSET [.SSNAM,,SNAME]
	CAIN FN2,
	MOVE FN2,[SIXBIT /BIN/]
	MOVEM FN1,INFILE+1
	MOVEM FN1,OUTFIL+1
	MOVEM FN2,INFILE+2
	MOVE FN2,[SIXBIT /SYMS/]
	MOVEM FN2,OUTFIL+2
	.OPEN DIC,INFILE
	.VALUE
	.OPEN DOC,OUTFIL
	.VALUE
	PUSHJ P,GETW1
FINDSM:	PUSHJ P,GETW
	TDNN A,[-1,,600000]
	JRST FINDSM
OUTSYM:	PUSHJ P,OUTSIX
	.IOT DOC,["=]
	.IOT DOC,["=]
	.IOT DOC,["=]
	PUSHJ P,GETW
	TLNE A,4000
	.IOT DOC,["%]
	PUSHJ P,OUTOCT
	.IOT DOC,[15]
	.IOT DOC,[12]
	PUSHJ P,GETW
	JUMPN A,OUTSYM
	.CLOSE DIC,
	.CLOSE DOC,
	.VALUE [ASCIZ /:KILL /]
GETW:	MOVE A,(TEMP)
	AOBJN TEMP,CPOPJ
GETW1:	MOVE TEMP,[DBLK,,DBLK+1]
	SETZM DBLK
	BLT TEMP,DBLK+1777
	MOVE TEMP,[-2000,,DBLK]
	.IOT DIC,TEMP
	MOVE TEMP,[-2000,,DBLK]
	POPJ P,
DBLK:	BLOCK 2000
PDL:	BLOCK 100
OUTSIX:	MOVE B,[440600,,A]
OUTSX1:	ILDB C,B
	JUMPE C,CPOPJ
	ADDI C,40
	.IOT 2,C
	TLNE B,770000
	JRST OUTSX1
CPOPJ:	POPJ P,
OUTOCT:	MOVE B,[220300,,A]
OUTOC1:	ILDB C,B
	JUMPN C,OUTOC2
	TLNE B,770000
	JRST OUTOC1
	SKIPA
OUTOC3:	ILDB C,B
OUTOC2:	ADDI C,60
	.IOT 2,C
	TLNE B,770000
	JRST OUTOC3
	POPJ P,
INFILE:	SIXBIT /  &DSKL3000 SEGBIN/
OUTFIL:	SIXBIT /  !DSKL3000 SYMBOL/
END GO
;TTY ROUTINES

TERPRI:	PUSHJ P,OUTSTR
CRLF:	MOVEI A,15
	PUSHJ P,TYO
	MOVEI A,12
TYO:	.IOT TTYOCH,A
	POPJ P,

SOUT:	PUSHJ P,CRLF
	MOVEI A,"*
	JRST TYO

TYI:	.IOT TTYICH,A
	POPJ P,

SIXO:	MOVE C,[440600,,B]
SIXO1:	ILDB A,C
	JUMPE A,CPOPJ
	ADDI A,40
	PUSHJ P,TYO
	TLNE C,770000
	JRST SIXO1
	POPJ P,

;FILES NOT FOUND

TXTFNF:	MOVEI A,TXTO
	MOVEI B,[ASCIZ /TEXT /]
	JRST FNF
FNTFNF:	MOVEI B,[ASCIZ /FONT /]
	MOVEI A,FNTO(FONT)
FNF:	PUSH P,A
	AOS SET			;ERRORS HAVE HAPPENED
	PUSHJ P,OUTSTR
	POP P,A
	PUSHJ P,PNTFNM		;PRINT FILE NAME
	MOVEI A,40
	PUSHJ P,TYO
	.OPEN ERRICH,[	(SIXBIT /ERR/)
			1]
	.VALUE
FNF0:	.IOT ERRICH,A
	CAIGE A,40
	POPJ P,
	PUSHJ P,TYO
	JRST FNF0

OUTSTR:	HRLI B,440700
OUTS1:	ILDB A,B
	JUMPE A,CPOPJ
	PUSHJ P,TYO
	JRST OUTS1

DECPNT:	JUMPGE D,DECPN1
	MOVEI A,"-
	PUSHJ P,TYO
	MOVMS D
DECPN1:	IDIVI D,10.
	HRLM E,(P)
	JUMPE D,DECPN2
	PUSHJ P,DECPN1
DECPN2:	HLRZ A,(P)
	ADDI A,"0
	JRST TYO

;PRINTS FILE NAME

PNTFNM:	PUSH P,A
	HRLZ B,(A)	;DEVICE
	PUSHJ P,SIXO
	MOVEI A,":
	PUSHJ P,TYO
	MOVE A,(P)
	MOVE B,3(A)	;SNAME
	PUSHJ P,SIXO
	MOVEI A,";
	PUSHJ P,TYO
	MOVE A,(P)
	MOVE B,1(A)	;FILE NAME 1
	PUSHJ P,SIXO
	MOVEI A,40
	PUSHJ P,TYO
	POP P,A
	MOVE B,2(A)	;FILE NAME 2
	JRST SIXO

CRASH:	MOVE C,ABORTL+1
	MOVEI D,10
	MOVEM D,ABORTL
	LSH C,-24
	MOVEM C,XGPES'
	TRNE C,200
	PUSHJ P,E1
	TRNE C,40
	PUSHJ P,E2
	TRNE C,20
	PUSHJ P,E3
	TRNE C,10
	PUSHJ P,E4
	TRNE C,4
	PUSHJ P,E5
ABRTED:	SETZM PSKIP
	SETZM HDRCNT
	MOVEI B,[ASCIZ /LISTING ABORTED/]
	PUSHJ P,OUTSTR
	MOVE P,[-PDL,,PDB-1]
	JRST RECYCL

E1:	MOVEI B,[ASCIZ /PAPER LOW+/]
	JRST OUTSTR

E2:	MOVEI B,[ASCIZ /NO -12, PAPER JAM+/]
	JRST OUTSTR

E3:	MOVEI B,[ASCIZ /FUSER COLD+/]
	JRST OUTSTR

E4:	MOVEI B,[ASCIZ /FILAMENT COLD+/]
	JRST OUTSTR

E5:	MOVEI B,[ASCIZ %DRUM/WEB/FUSER OUT+%]
	JRST OUTSTR
;GETS PAGES FROM PDP-11
;	CALL WITH 11 ADDRESS IN A AND # BYTES DESIRED IN B

GET11:	LSH B,-2	;PROTECTION IN 10 WORDS
	TRZ A,3		;AVOID POSSIBLE EMBARASSEMENT
	LSH A,10	;10 STYLE ADDRESS
	TLO A,600000	;VALID AND WRITE ENABLE
	MOVEI C,XGP11
	LSH C,26.	;PDP-11 #
	IOR A,C
GET11A:	MOVEI C,1777	;POSSIBLE PROTECTION
	CAMG B,C
	MOVE C,B	;ONLY WANTS PART OF PAGE
	AOS T11PAG
	IOR C,A		;MAP ENTRY
	.CALL [	SETZ
		SIXBIT /T11MP/
		T11PAG
		SETZ C]
	.VALUE NOPDP11
	ADD A,[2000_12]	;SET FOR NEXT PAGE
	SUBI B,2000
	JUMPGE B,GET11A	;HE WANTS MORE
	POPJ P,

NOPDP11:
ASCIZ /: CANNOT GET PDP-11 PAGES 
/
;SENDS 8 BIT BYTE TO 11

CMDO:	SOSGE T,CMDPAR(CHNL)	;GET PARITY
	MOVNS T,CMDPAR(CHNL)
	SKIPL @CHHDRP(CHNL)
	JRST ABRTED		;CHANNEL CLOSED BY 11
	IDPB A,@CMDPTR(CHNL)
	IBP @CMDPTR(CHNL)
	SOSLE CMDCNT(CHNL)
	POPJ P,			;MORE ROOM IN BUFFER

;HERE TO FORCE BUFFER

CMDOF:	MOVE T,CMDSIZ(CHNL)	;SIZE OF THIS BUFFER
	SUB T,CMDCNT(CHNL)	;NUMBER OF BYTES IN BUFFER
	JUMPE T,CPOPJ		;DON'T FORCE
	SKIPL @CHHDRP(CHNL)
	JRST ABRTED		;CHANNEL CLOSED BY 11
	IDPB T,CMDBUF(CHNL)	;MARK WITH VALID COUNT
	ILDB T,CMDBUF(CHNL)	;NEXT ON RING
	JUMPE T,[	SKIPN @CMDBUF(CHNL)	;10-11 INTERFACE IS ON LEVEL 7
			.HANG			;AND SO IS RUG
			LDB T,CMDBUF(CHNL)
			JRST .]
	PUSHJ P,SETCBF
	SKIPL @CMDBUF(CHNL)
	.HANG			;WAIT FOR THAT ONE TO FREE UP
CMDOF1:	PUSH P,A
	ADDI T,1		;POINT AT NEXT TEN WORD
	ILDB A,T		;SIZE OF THIS BUFFER
	MOVEM A,CMDCNT(CHNL)
	MOVEM A,CMDSIZ(CHNL)
	MOVEI A,10		;SWITCH TO 8 BIT BYTES
	DPB A,[300600,,T]
	MOVEI A,0
	EXCH A,T
	MOVEM A,@CMDPTR(CHNL)
	ADDI T,1
	IBP A
	MOVEM A,@CMDPTR(CHNL)
	SETZM CMDPAR(CHNL)
POPAJ:	POP P,A
CPOPJ:	POPJ P,

;HERE TO OPEN  A 10-11 CHANNEL

OPEN:	SKIPL @CHHDRP(CHNL)
	.HANG
	MOVEI T,@CHHDRP(CHNL)
	PUSHJ P,ADRING		;WILL POINT TO BUFFER 11 IS HACKING
	PUSHJ P,ADRING		;ADVANCE TO NEXT BUFFER
	SKIPL (T)
	.VALUE			;THAT BUFFER BETTER BE FREE
	JRST CMDOF1		;FOUND HIM SET POINTERS

ADRING:	LDB T,[042000,,(T)]
SETCBF:	SUB T,BUFORG		;OFFSET IN BYTES
	SKIPGE T
	.VALUE			;PDP-11 BUFFERS BUGGERED
	LSH T,-2		;IN PDP-10 WORDS
	ADD T,[442000,,BUFFER]
	MOVEM T,CMDBUF(CHNL)
	POPJ P,

;HERE TO SEND WORD IN A TO 11

WRDO:	PUSH P,A
	PUSHJ P,CMDO		;LOW ORDER BYTE FIRST
	MOVE A,(P)
	LSH A,-10		;NOW HIGH ORDER BYTE
	PUSHJ P,CMDO
	JRST POPAJ
;TIME SHARING I/O ROUTINES

FNTOPN:	SETZM HEIGHT(FONT)
	SETZM KSTID(FONT)
	MOVE A,FNTSNM(FONT)
	.SUSET [.SSNAM,,A]
	.OPEN FNTICH,FNTO(FONT)
	POPJ P,
	PUSHJ P,FNTIN
	MOVEM A,KSTID(FONT)
	PUSHJ P,FNTIN
	HRRZM A,HEIGHT(FONT)
	PUSH P,A
	LDB A,[221100,,(P)]
	MOVEM A,BASE(FONT)
	LDB A,[331100,,(P)]
	MOVEM A,CPA(FONT)
	HRRZS (P)		;RETURNS HEIGHT OF FONT IN A
	PUSHJ P,CALINE
POPAJ1:	POP P,A
POPJ1:	AOS (P)
	POPJ P,

TXTOPN:	.SUSET [.SSNAM,,TXTSNM]
	.OPEN TXTICH,TXTO
	POPJ P,
	AOS (P)
	SETZM TXTFLG		;THAT FILE IS OPEN
TXTBF:	SKIPGE A,TXTFLG
	POPJ P,			;FOUND EOF
	SETZM TXTBUF
	MOVE A,[TXTBUF,,TXTBUF+1]
	BLT A,TXTBUF+TXTBFL-1
	MOVE A,[-TXTBFL,,TXTBUF]
	.IOT TXTICH,A
	MOVEM A,TXTFLG		;TRIPS EOF FLAG
	MOVEI A,TXTBFL*5
	MOVEM A,TXTCNT
	MOVE A,[440700,,TXTBUF]
	MOVEM A,TXTPTR
	MOVEI A,0
	SKIPL TXTFLG		;LAST BUFFER?
	POPJ P,
	HLRO A,TXTFLG		;CALCULATE # WORDS READ
	ADDI A,TXTBFL
	PUSH P,A
	IMULI A,5		;# CHARACTERS READ
	MOVEM A,TXTCNT
	POP P,A
	ADDI A,TXTBUF
	SETOM TXTBUF-1	;END TEST IF BUFFER HAS ONLY EOF STYLE CHARACTERS IN IT.
	HRLI A,010700		;LAST BYTE OF LAST WORD IN BUFFER
	PUSH P,B
DBPLR:	LDB B,A
	JUMPE B,DBPL		;NULL, IGNORE
	CAIE B,3
	CAIN B,14
	JRST DBPL		;EITHER EOF CHAR OR FORM FEED, FLUSH
TXTBIX:	MOVEI A,
	POP P,B
	POPJ P,

DBPL:	MOVEI B,0
	DPB B,A
	ADD A,[070000,,]	;BACKUP THE BYTE POINTER
	JUMPGE A,DBPLR		;RETURN TO CHECK THIS CHAR
	SOS A
	HRLI A,10700		;BACK UP A WORD WORTH
	JRST DBPLR

;HERE TO GET ONE CHARACTER FROM TEXT BUFFER

TXTBFI:	PUSHJ P,TXTBF
	JUMPL A,CPOPJ		;EOF
TXTI:	SOSGE TXTCNT
	JRST TXTBFI
	ILDB A,TXTPTR
	POPJ P,

;HERE TO GET WORD FROM FONT FILE

FNTIN:	.IOT FNTICH,A
	POPJ P,
;TRANSMITS FONT OVER COMMAND CHANNEL

SNDFNT:	MOVEI A,0		;ESCAPE TO KSET
	PUSHJ P,CMDO
	MOVNI A,1		;LOAD THIS FONT
	PUSHJ P,CMDO
	MOVE A,FONT
	IDIVI A,FNTVLN
	PUSHJ P,CMDO
	MOVE A,HEIGHT(FONT)	;HEIGHT
	PUSHJ P,CMDO
	MOVE A,BASE(FONT)	;BASE LINE
	PUSHJ P,CMDO
SNDFN0:	PUSHJ P,FNTIN		;IGNORE USER ID
	PUSHJ P,FNTIN		;CHARACTER CODE
	SKIPLE A
	CAILE A,177
	HRROI A,200		;ANY ILLEGAL CHARACTER STOPS US
	PUSHJ P,CMDO		;"SEND" IT
	JUMPL A,SNDFXT		;FORCE BUFFER AND EXIT
	MOVEI A,0		;LEFT KERN
	PUSHJ P,CMDO
	PUSHJ P,FNTIN		;WIDTH
	SKIPG A
	.VALUE			;0 OR NEGATIVE WIDTH
	PUSHJ P,CMDO		;SPACING WIDTH
	TLNE A,-1
	HLRZS A
	PUSHJ P,CMDO		;RASTER WIDTH
	ADDI A,7
	LSH A,-3		;# 8 BIT BYTES PER ROW
	MOVEM A,BYPR		;BYTS PER ROW
	MOVE E,HEIGHT(FONT)
	MOVE C,BYPR
SNDF1:	PUSHJ P,FNTIN
	MOVE D,A		;BYTES COME PACKED 4 PER WORD
	MOVE B,[441000,,D]	;THIS IS HOW WE UNPACK THEM
SNDF2:	ILDB A,B
	PUSHJ P,CMDO
	SOJLE C,SNDF5		;THATS ALL FOR THIS ROW
SNDF21:	TLNN B,700000
	JRST SNDF1		;THAT'S ALL FOR THIS WORD
	JRST SNDF2

SNDF5:	MOVE C,BYPR
	MOVEI A,0
	TRNE C,1		;IF ODD # OF BYTES, SEND A 0 BYTE
	PUSHJ P,CMDO
	SOJLE E,SNDFN0		;THATS ALL FOR THIS CHAR
	JRST SNDF21

;HERE EXIT SNDFNT

SNDFXT:	PUSHJ P,CMDOF		;FORCE BUFFER
	SKIPGE KSTLOD		;WAIT FOR PDP-11 TO FINISH
	.HANG
	LDB D,[242000,,KSTLOD]	;# CHARACTERS MISSED
	JUMPE D,CPOPJ
	PUSHJ P,DECPNT		;TELL HIM HOW MANY HE LOST
	MOVEI B,[ASCIZ / CHARACTERS LOST FONT /]
	PUSHJ P,OUTSTR
	MOVE D,FONT
	IDIVI D,FNTVLN
	PUSHJ P,DECPNT		;PRINT FONT #
	MOVEI A,40
	PUSHJ P,TYO
	MOVEI A,FNTO(FONT)
	PUSHJ P,PNTFNM
	JRST CRLF
;SNDTXT	SEND TEXT TO THE PDP-11

SNDTXT:	SKIPL PSKIP		;SKIPING PAGES
	JRST XGPLPT		;NO, PRINT SOME GOODIES
	PUSHJ P,TXTI		;GET A CHARACTER
	CAIN A,177		;RUBOUT IS ESCAPE CHARACTER
	PUSHJ P,TXTRUB		;PROCESS RUBOUT
	JUMPL A,SNDEND		;EOF WHILE SKIPPING?
	CAIN A,^L		;PAGE MARK?
	AOS PSKIP
	JRST SNDTXT

;HERE TO PROCESS RUBOUT WHILE READING TEXT FILE

TXTRUB:	PUSHJ P,TXTI		;GET NEXT CHARACTER
	JUMPL A,CPOPJ		;EOF?
	CAILE A,TXTRDL		;LEGAL CONTROL CODE
	JRST RUBSXT		;NO, JUST CLOBBER A AND RETURN
	JRST @.(A)		;DISPATCH
TXTRDO:	RUBCA			;1 COMPLICATED
	RUBS1			;2 COLUMN INCREMENT, SOAKS UP 1 CHARACTER
	RUBS2			;3 SKIP TO SCAN LINE, SOAKS UP 2 CHARACTERS
	RUBS13			;4 VECTOR, SOAKS UP 13 CHARACTERS
TXTRDL==.-TXTRDO

;SOAKS UP CHARACTERS FROM INPUT STREAM, LOOKS FOR EOF

RUBS3:	SKIPA B,[3]
RUBS13:	MOVEI B,13
	JRST RUBS
RUBS1:	SKIPA B,[1]
RUBS2:	MOVEI B,2
RUBS:	PUSHJ P,TXTI		;GET CHARACTER
	JUMPL A,CPOPJ		;EOF?
	SOJG B,RUBS
RUBSXT:	MOVEI A,0		;CLOBBER CHARACTER
	POPJ P,

;HERE TO PROCESS RUBOUT<CNTRL-A>

RUBCA:	PUSHJ P,TXTI		;GET CHARACTER
	JUMPL A,CPOPJ		;EOF?
	CAIGE A,MAXFNT		;FONT SWITCH?
	MOVE FONT,A
	SUBI A,37		;LOOK FOR OTHER CONTROL CODES
	JUMPLE A,RUBSXT		;UNDER?
	CAILE A,TXTADL		;OVER?
	JRST RUBSXT
	JRST @.(A)		;DISPATCH
TXTADO:	RUBS2			;40 COLUMN SELECT
	RUBS3			;41 UNDERSCORE
	RUBS1			;42 LINE SPACE
	RUBS1			;43 BASELINE ADJUST
	RUBSXT			;44 PRINT PAGE NUMBER
	TAKHDR			;45 ACCEPT HEADING TEXT
	RUBSXT			;46 START UNDERLINE
	RUBS1			;47 STOP UNDERLINE
	RUBS1			;50 SET INTERCHARACTER SPACING
TXTADL==.-TXTADO

;ACCEPTS HEADING TEXT

TAKHDR:	PUSHJ P,TXTI		;GET CHARACTER COUNT OF HEADER
	MOVEM A,HDRCNT
	JUMPLE A,CPOPJ		;EOF?
	SETZM HDRTXT		;CLEAR HEADER BUFFER
	MOVE A,[HDRTXT,,HDRTXT+1]
	BLT A,HDRTXT+HDRTXL-1
	MOVE B,HDRCNT		;PREPARE TO READ HEADER TEXT
	MOVE C,[440700,,HDRTXT]
TKHDR1:	PUSHJ P,TXTI
	JUMPL A,CPOPJ		;EOF?
	IDPB A,C
	SOJG B,TKHDR1
	JRST RUBSXT
;HERE TO PRINT THE REAL GOODS

XGPLPT:	MOVEI A,1		;ESCAPE TO "MIXED"
	PUSHJ P,CMDO
	MOVEI A,ZZ
	PUSHJ P,CMDO		;SEND COUNT OF NUMBER OF PARAMETER THAT FOLLOW
	MOVE A,HEIGHT		;USE FONT 0
	ADD A,VSP
	MOVEM A,BSP		;PDP-11 VERSION OF VSP IS BASE LINE SPACING
ZZ==0
IRP B,,[BSP,LFTMAR,TOPMAR,BOTMAR,PLINES,PAGE,AUTCUT]
ZZ==ZZ+1
	MOVE A,B
	PUSHJ P,WRDO
TERMIN
	PUSHJ P,CMDOF		;FORCE OUTPUT
	MOVEI CHNL,DOCHNL	;ALL THE REST GOES ON DATA OUT
	PUSHJ P,OPEN
	PUSHJ P,SNDRCA		;SEND RUBOUT<CNTRL-A>
	MOVE A,FONT		;DO EXPLICIT FONT SELECT
	PUSHJ P,CMDO
	SKIPG B,HDRCNT		;SEND HEADER TEXT?
	JRST XGPLOP
IFN 0,[

;REMOVE CONDTIONAL WHEN ACCEPT HEADER TEXT IS IMPLEMENTED IN PDP-11

	PUSHJ P,SNDRCA
	MOVEI A,46		;ACCEPT HEADER TEXT
	PUSHJ P,CMDO
	MOVE A,HDRCNT
	PUSHJ P,CMDO
]
	MOVE C,[440700,,HDRTXT]
	ILDB A,C
	PUSHJ P,CMDO
	SOJG B,.-2
	SETZM HDRCNT
XGPLOP:	PUSHJ P,TXTI
	JUMPL A,TXTEOF		;EOF?
	PUSHJ P,CMDO
	AOSE ABORTF
	JRST XGPLOP
TXTEOF:	MOVEI A,200		;EOF CODE
	PUSHJ P,CMDO
	PUSHJ P,CMDOF		;FORCE BUFFER
	MOVSI A,400000
	ANDCAM A,@CHHDRP(CHNL)	;CLOSE DATA OUT CHANNEL
SNDEND:	SETZM PSKIP
	SETZM HDRCNT
	POPJ P,			;AND RETURN

;SENDS ROUBOUT<CNTRL-A>

SNDRCA:	MOVEI A,177
	PUSHJ P,CMDO
	MOVEI A,1
	JRST CMDO
PDL==20
PDB:	BLOCK PDL

BYPR:	0		;BYTES PER ROW WHILE LOADING FONTS
DSKCMD:	0		;READING COMMANDS FROM DISK FLAG
NOTYPE:	0		;DON'T TYPE OUT
TTYNUM:	0		;NUMBER OF TTY WE HAVE
PDP11:	0		;-1=> WE HAVE XGP
ABORTF:	0	;NON ZERO => XGP 11 PROGRAM CRAPPED OUT
		;IN A WELL DEFINED WAY

TXTBFL==200
TXTCNT:	0		;TEXT BUFFER COUNTER
TXTPTR:	0		;BYTE POINTER INTO TEXT BUFFER
TXTFLG:	0		;NEGATIVE=>EOF SEEN

	0	;DUMMY TEXT BUFFER LOCATION USED FOR END
		;TEST AT DBPLR... MUST PRECEDE TXTBUF
TXTBUF:	BLOCK TXTBFL

COMBFL==200
COMCNT:	0
COMPNT:	0
COMBUF:	BLOCK COMBFL

T11PAG:	0		;NEXT PAGE TO GET FROM 11
SET:	0		;ERROR FLAG THAT STOPS XGP OUTPUT
BUFORG:	0		;ORIGIN OF BUFFERS IN 11 SPACE

;DEFAULT PAGE PARAMETERS

ILFTMAR==200
ITOPMAR==200
IBOTMAR==174
ISLINES==3504		;VSP, SLINES, TOPMAR, BOTMAR SET TO MAKE 60 LINES OF FIX25 PER PAGE
IPLINES==ISLINES+ITOPMAR+IBOTMAR
IVSP==6
IAUTCUT==-1
IPSKIP==0		;# PAGES TO SKIP AT BEGGINING
ITXTCMD==-1
IUDEPTH==-1

;PAGE PARAMETERS

LFTMAR:	0
TOPMAR:	0		;ALLOWS 60 LINES OF TEXT ON ONE 11" PAGE
BOTMAR:	0
NLINES:	0		;11 INCHES
VSP:	0		;VERTICAL SPACING
AUTCUT:	0
PSKIP:	0		;# PAGES TO SKIP AT BEGINING
TXTCMD:	0		;0 IMPLIES DONT LOOK FOR COMMANDS IN TEXT FILE
BSP:	0		;BASE LINE SPACING
UDEPTH:	0		;# PRINTS IN PROGRESS
PLINES:	0		;# SCAN LINES ON PAGE
SLINES:	0		;# SCAN LINES IN TEXT AREA
PAGE:	0		;PAGE # OF FIRST PRINTED PAGE
HDRCNT:	0		;# CHARACTERS IN PAGE HEADER
HDRTXL==<200+4>/5	;SIZE OF TEXT HEADER AREA
HDRTXT:	BLOCK HDRTXL	;BUFFER FOR HEADER TEXT

;FONT VARIABLES

FNTBEG==.
FNTO:	4,,(SIXBIT /DSK/)
FNTFN1:	SIXBIT /FIX25/
FNTFN2:	SIXBIT /KST/
FNTSNM:	SIXBIT /FONTS/
HEIGHT:	0		;HEIGHT OF FONT
BASE:	0		;BASE LINE
CPA:	0		;COLUMN POSITON ADJUSTMENT
KSTID:	0		;FONT ID
FCHFLG:	-1		;-1=> TRANSMIT TO 11
FNTVLN==.-FNTBEG	;LENGTH OF FONT VARIABLE AREA

LOC FNTBEG+<MAXFNT*FNTVLN>

TXTO:	6,,(SIXBIT /DSK/)
TXTFN1:	0
TXTFN2:	0
TXTSNM:	0

;10-11 CHANNEL DATA AREAS

CMDPAR:	BLOCK NCHNL	;PARITY
CMDCNT:	BLOCK NCHNL	;BUGGER BYTE COUNTER
CMDSIZ:	BLOCK NCHNL	;SIZE OF THIS BUFFER
CMDBUF:	BLOCK NCHNL	;BYTE POINTER TO FIRST 11 WORD OF BUFFER
CMDPTR:	REPEAT NCHNL,CONC CMDPT,\.RPCNT,(T)
REPEAT NCHNL,[
CONC CMDPT,\.RPCNT,[:	BLOCK 2]
]
CHHDRP:	REPEAT NCHNL,CHHDR+<BPRCHL/4>*.RPCNT

LITTER:	CONSTANTS
VARS::	VARIABLES
PAT:PATCH:
ICORE==<.+1777>_<-12>
END	GO
