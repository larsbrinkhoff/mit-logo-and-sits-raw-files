kQXrk˙ @õ5ÒÇWTìTLE	MACRO	V005A	06-AUG-72

	.SBTTL	TITLE PAGE

	.IDENT	/005A /

	.MACRO	GVNUM		;GEN VERSION NUMBER
	.ASCII	/05A/
	.ENDM

;	COPYRIGHT 1972  DIGITAL EQUIPMENT CORPORATION

R0=	%0
R1=	%1
R2=	%2
R3=	%3
R4=	%4
R5=	%5
SP=	%6
PC=	%7

	.IIF NDF XOVLAY, OVLAY=	0	;DEFAULT TO OVLAY MODE

OVRLVL=	0			;INIT OVERLAY LEVEL

PRGBEG:				;BASE OF PROGRAM


	.GLOBL	PSTBAS,	PSTTOP	;PERM SYMBOL TABLE
	.GLOBL	WRDSYM		;".WORDÙH"EçAULTÓÒCE	]˘∞‡ÃôÒ+°Ãü˙qV	]CSI1,	.CSI2,	.DELETÓÒBWMáALL	.¯∂$‘Y	.INI˙ãÆõONF,	.OPENıÇWRãAD
	.MCALL	.RL˙qV	]RSTRT,	.STAT,	.TRAP,	.WAIT
	.MCALL	.WRITE

	.MCALL	.CVTDT,	.FLUSH,	.RUN,	.STSTK,	.SYSDV

	˙u™.{Ò-	;SYSTEM VECTOR TABLEÒ¢Ñ”≠˙ï'¬{	2		;TOP OF BUFFERS

	.NLIST	BEX		;DON'T LIST BINARY ¯∂*EùSIONS
	.SBTTL		ASSEMBLY OPTIONS

;THE FOLLOWIN¯Ë&¡áRO CAUSES ¯4È≈õBLY OPTION˙h*OA¯QFäwPRINTED ON THE LOADER MAPÙgDAANY I˘¥&IáATIONS
;(SECOND ARGUMENTı(*OABE DEFINEDı»O°TIONS ARE
;SELECTED BY EQUATING THEM TOÙ¢“üı√E	.MACRO	LDRMAP	MNE,I˘¥&IãS
	.IF DF	MNE
	.LIST
	ı—ÊOÖL	MNE
	.N˘íi‘	.IRP	X,<IMPLIES>
X=	0	Ò"]…ù˙”Â≈AIMPLI¯pjIüNS
	.ENDM
	.ENDC
	.ENDM	LDRMAP


;THE FOLLOWING G˙SÍ–AENABLES FUNCTIO˘‘∆ä	LDR˘∞h	°AL11R,	<DO˙uö,˚`√•O,	X45,	XEDPIC>
	LDRMAP	PAL11R,	<XEDLSB,XEDPNC,	X¯±&CY	XLCTTM>
Ò3"RõAP	PAL11R,Ò/,ZãRR,	XRESKBıÇjRÉPS,	XCREF>Ò¢ÜäLDRMAP	DEB˙±ƒâwDEBUG VERSION
	LDRMAP	DOSV4,XRUN	;DOS Vˆà!œõPATIBLE
	LDRMAP	PDPV45		˜t"P[11/45 INSTRUCTI˘Û©ç	LDRM¯4‘•APS		;ENAB˘ëPT•APS FOR CALLS
Ò3"RõAP	OV˘êlâ;ENABLE OVERLAYS
	LDRMAPÒ4ÁGÖUF		;SINGLE BUFFERED INPUT
	L¯î¶¡°	DBLB˙±ÑâwTRAN'D INP˙µäLDRMAP	YPHASE		;.PHASE/.DEPHAS


;THEÙßÃôOWING GROUP DISABLES FUNCTIONSÒ¢ÜäLDRMAP	XOVLAY		;SUPPRESS OVERLAYS
	LDRMAP	XMACRO,XSML	;ALL GENERATED CODE (MACRO, REPT, ETC.)
	LDRMAP	XSML		;SYSTEM MACROS
	LDRMAP	X45,XFLTG	;PDP-11/45 FEATURES
	LDRMAP	XFLTG,XEDFPT	;FLOATING POINT EVALUATION
	LDRMAP	XEDABS		;ED.ABS
	LDRMAP	XEDAMA		;ED.AMA
	LDRMAP	XEDPIC		;ED.PIC
	LDRMAP	XEDFPT		;ED.FPT
	LDRMAP	XEDLSB		;ED.LSB
	LDRMAP	XEDPNC		;ED.PNC
	LDRMAP	XEDLC		;ED.LC
	LDRMAP	XEDCDR		;CARD READER FORMAT
	LDRMAP	XZERR		;"Z" ERRORS
	LDRMAP	XLCTTM		;NO LPT LISTING FORMAT
	LDRMAP	XLCSEQ		;SEQUENCE NUMBERS
	LDRMAP	XCREF,XRUN	;CREF SUPPRESSION
	LDRMAP	XRUN		;NO .RUN EMT USED
	LDRMAP	XRESKB		;NO RESIDENT KB
;THE FOLLOWING PARAMETERS CAN BE MODIFIED
;AT ASSEMBLY TIME.

	.MACRO	PARAM	MNE,	VALUE	;DEFINE DEFAULT PARAMETERS
	.IIF NDF MNE,	MNE=	VALUE
	.LIST
MNE=	MNE
	.NLIST
	.ENDM

	.IF DF	PAL11R
	.IF NDF	SRCLEN
SRCLEN	=	84.
	.ENDC
	.ENDC

	PARAM	CPL,	80.	;CHARACTERS PER LISTING LINE
	PARAM	LPP,	60.	;LINES PER PAGE
	PARAM	SRCLEN,	132.	;SOURCE STATEMENT LENGTH
	PARAM	BPMB,	20	;BYTES PER MACRO BLOCK
	PARAM	OBJLEN,	42.	;OBJECT BLOCK LENGTH
	PARAM	RLDLEN,	42.	;RLD BLOCK LENGTH
	PARAM	STKSIZ,	100.+290.	;STACK SIZE
	PARAM	SYSUIC,	000401	;SYSTEM UIC (1,1)
	.SBTTL		SECTOR INITIALIZATION

;SECTORS ARE ENTER¯±TëROUGH THE MACROÒ¢ù†EENTSEC", SPECIFYING THE SECTOR NAME FOR THE
;ARGU˘±gT]  THE MACRO "XITSEC"Ù¢‘´RNS TO
;THE DEFAULTÙ‚√©OR, "MAIN".  THE NULL .CSECT IS
;NEVER ˙¥‚ƒ]

	.MACRO	ENTSEC	N¯3bâwINIT A SECTION
	.CS¯∞Í	ùAME
	.ENDM

	.MACRO	XI˙î‚√	;EXIT TO DEFAU˘ïSã¯u$œù
	.CSECT	MAIN
	.ENDM

	.IF DF	OVLAY	Ò.Á÷ãRLAYS MUST BE LOWEST

;OVERLAYS ARE COLLECTED INÙ‚√©ORS OVR1 THROUGH
;OVRN, WHERE N (DECIMAL) ISÙ$EANUMBER OF OVERLAYS.ÓÒCEN´MOVR=	9.			;NUMBER OF OVERLAYS ALLOWED
XXX=	0			;LOOP COUNTER
	.RADI˚X∞	;GENERATE DECIMAL E˚"ŒßIONS
	.REPT	NUMOVR
XXX=	XXX+1			;BUMP COUNTÒ¢ÑÆìRP	N,<\XXX>	;FORCE BINARY TO ASCII
	ENTSEC	O˙‘ìŒOVR'N'B:
	.ENDM
	.ENDR

	.RADIX	8		;BACK TO OCTAL

	ENTSEC	OVRSEP		;OVERLAY SEPARATOR
OVRSEP:

	ENTSEC	OVR1
	.LIMIT			;OVERLAY TEST LOCATION
	GVNUM
	.BYTE	0
	.EVEN

	.ENDC

	ENT˙qaâõAIN		;DEFAULT SECTORÒ¢Ü;ìMPURE STORAGE IS DIV˘1"ƒAINTO THREE SECTORS:
; "IMPURE" BEING CLEAREDÙj ©HE BEGINNING OF THE
;PROGRAM, "IMPPAS" BEINGÙÊEÉRED AT THE BEGINNING
;OF EACH PASS, AND "IMPLIN" BEING CLEARED AT THE
;BEGINNING OF EACH LINE.

	ENTSEC	IMPURE		;IMPURE STORAGE AREA
IMPURE:Ò¢Ñ≈ùTSEC	IMPPAS		;CLEARED EACH PASS
IMPPAS:
	ENTSEC	IMPLIN		;CLEARED EAC˘&IùE
IMPLIN:


;ASS˘‰¡©ED WITH EACH IMPURE ¯4¢¡AIS AN EXECUTION
;SE¯u'“AWHICH DOES THE CLEAR˘3£†ÉND EXECUTES ANY
;OTHER CODE FOUND IN THE SECTOR.  SEE THE .RADIX
;HANDLER FOR AN EXAMPLE OF T˘PUßE OF THESE SECTORS
;TO INITIALIZE VARIABLES.Ò¢ÜäENTSEC	XCTPRG		;PROGRAM INITIALIZATION CODE
˚ÍP•G:
	.IIF DF OVLAY,	CALL	OVRBLD	;INIT OVERLAYÙb√ëANISM
	MOV	#IMPURE,˙Läc$:	CLR	(R0)+		;CLEAR IMPURE AREA
	CMP	#IMPTOP,R0
	BHI	1$

	ENTSEC	˚ÍPÉS		;PASS INITIALIZAT˘3Á áODE
XCTPAS:
	MOV	#˘3hPÉS,R0
2$:	CLR	(R0)+		;CLEAR IMPURE PART
	CMP	#IMPTOP,R0
	BHI	2$

	¯≥™SãC	XCTLIN		;LINE INITIALIZATION CODE
XCTLIN:
	MOV	#IMPLIN,R0
3$:	CLR	(R0)+
	CMP	#IMPTOP,R0
	BHI	3$

	ENTSEC	DPURE		;D-SPACE, PURE

	ENTSE¯bf…±ED		;MIXED PURE AND IMPURE
;THE MACRO "GENS˙ı ìS USED TO SPECIFY  A COMMAND
;STRING SWITCH ıi‘AARGUMENT) AND THE AD¯î¢”ß OF
;THE ROUTINE TOÙ¢†áALLED WHEN ENCOUNTER¯±(eND ARG).

	ENTSEC	SWTSEC		;SWITCH TABLE
SWTBAS:

	.MACRO	GENSWT	M˘—VAâDR,?LABEL
	ENTSEC	SWTSEC
LABEL:	.ASCIZ	/MNE/
.	=	LABEL+2		;TRIM TO ONE WORD
	.WORD	ADDR
	XITSEC
	.ENDM


;THE MACRO "GENEDT" IS USED TO SPECIFY .ENABL/.DSABL
;ARGUMENTS.  IT TAKES ONE TO THREE ARGUMENTS:

;	1-	MNEMONIC
;	2-	SUBROUTINE TO BE CALLED (OPTIONALı#E;ˆkD…çÙßŒ[NULL, .DSABLE IS DEFAULT

	ENTSEC	EDTSEC
EDTBAS:

	.MACRO	GENEDT	MNE,SUBR,INIT
	ENTSEC	EDTSEC
ED.'MNE=	1
	.REPT	<.-EDTBAS>/4
ED.'MNE=	ED.'MNE+ED.'MNE
	.ENDR
	.GLOBL	ED.'MNE
	.RAD50	/MNE/
	.IF NB	SUBR
	.WORD	SUBR
	.IFF
	.WORD	CPOPJ
	.ENDC
	XITSEC
	.IIF NB	INIT,	EDINIT=	EDINIT!ED.'MNE
	.ENDM	GENEDT

	.IIF NDF EDINIT,	EDINIT=	0
;THE MACRO "GENCND" IS USED TO SPECIFY CONDITIONAL
;ARGUMENTS.  IT TAKES TWO OR THREE ARGUMENTS:

;	1-	MNEMONIC
;	2-	SUBROUTINE TO BE CALLED
;	3-	IF NON-BLANK, COMPLEMENT CONDITION

	ENTSEC	CNDSEC
CNDBAS:
	.MACRO	GENCND	MNE,SUBR,TOGGLE	;GENERATE CONDITIONAL
	ENTSEC	CNDSEC
	.RAD50	/MNE/
	.IF B	<TOGGLE>
	.WORD	SUBR
	.IFF
	.WORD	SUBR+1
	.ENDC
	XITSEC
	.ENDM



;THE FOLLOWING SECTOR IS USED TO COLLECT BYTE STRINGS
;AND NEEDN'T BE LEFT AT AN EVEN LOCATION

	ENTSEC	TXTBYT



;THE FOLLOWING SECTORS ARE USED TO COLLECT THE
;BASE, TOP, AND ENTRY SIZE OF THE VARIOUS ROLLS.

	ENTSEC	ROLBAS		;ROLL BASE
ROLBAS:
	ENTSEC	ROLTOP		;ROLL TOP
ROLTOP:
	ENTSEC	ROLSIZ		;ENTRY SIZE
ROLSIZ:



	XITSEC			;ALWAYS LEAVE IN DEFAULT SECTOR
	.SBTTL		SYMBOLIC EQUIVALENCES
	.SBTTL			CHARACTERS

TAB=	11
LF=	12
VT=	13
FF=	14
CR=	15
SPACE=	40

CH.IOR=	'!
CH.QTM=	'"
CH.HSH=	'#
CH.DOL=	'$
CH.PCT=	'%
CH.AND=	'&
CH.XCL=	''

CH.LP=	'(
CH.RP=	')
CH.MUL=	'*
CH.ADD=	'+
CH.COM=	',
CH.SUB=	'-
CH.DOT=	'.
CH.DIV=	'/

CH.COL=	':
CH.SMC=	';
CH.LAB=	'<
CH.EQU=	'=
CH.RAB=	'>
CH.QM=	'?

CH.IND=	'@
CH.BSL=	'\
CH.UAR=	'^

LET.A=	'A
LET.B=	'B
LET.C=	'C
LET.D=	'D
LET.E=	'E
LET.F=	'F
LET.G=	'G
LET.O=	'O
LET.Z=	'Z

DIG.0=	'0
DIG.9=	'9
	.SBTTL			OBJECT FILE

RLDT00=	00	; ABSOLUTE DATA
RLDT01=	01	; INTERNAL RELOCATION		TST	#C
RLDT02=	02	; GLOBAL RELOCATION		TST	#G
RLDT03=	03	; INTERNAL DISPLACED RELOCATION	TST ABS
RLDT04=	04	; GLOBAL DISPLACED R¯≥'√ÉTION	TST	X
RLDT05=	05	; GLOBAL ADDITIVE RELOCATION	TST	#X+6
RLDT06=	06	; GLOBAL ADDITIVE DISPLACED RELOCATION	TST	#X+6
RLDT07=	07	; NEW CSECTÓÒT¶D©10=	1ˆ]†ßEQUENCE BREAK
˙S"Tc1=	11	; LIMIT
RLDT15=	15	; SECTOR ADDITIVE RELOCATION	TST	#O
RLDT16=	16	; SECTOR ADDITIVE DIS˙ √ãD RELOCATION	TST	#O+6

GSDT00=	00*400		; OBJECT MODULE NAME
GSDT01=	01*400		; PROGRAM SECTION NAME
GSDT02=	02*400		; INTERNAL SYMBOL TABLE
GSDT03=	03*400		; TRANSFER ADDRESS
GSDT04=	04*400		; SYMBOL DECLARATION
GSDT05=	05*400		; LOCA˘à)≈á˙ígŒA˘–f≈ÒQÈƒ©06=	06*400Ò"]†≠ERSION IDENTIFICATION

BLKT01=	01		; GSD
BLKT02=	02	Ò.–GßD END
BLK˙åΩ03		; TEXT BLOCK
BLKT04=Ò,	; RLD BLOCK
BLKT05=	05		˜h$”â
BLKT06=	ˆÑâw MODULE END
	.SBTTL			MISCELLANEOUS

;FLAGS USED INÙÏÕÖ˘ÛTÉBLE M˘Ò"ç
DEFFLG=	ˆ0c0		;DEFINED
RELFLG=	000040		;RELOCATABLE
GLBFLG=	000100		;GLOBAL

REGFLG=	000001		;REGISTER
LBLFLG=	000002		;LABEL
MDFFLG=	000004		;MULTILPY DEFINED


;STATUS BITS

SB.ILE=	001		;INVALID LINE ERROR
SB.CSE=	002		;CHECK SUM ERROR
SB.PFE=	004		;PARITY FORMAT ERROR
SB.DPE=	040		;DEVICE PARITY ERROR
SB.EOF=	100		;EOF
SB.EOM=	100		;EOM


;ADDRESS MODE FLAGS

AM.DEF=	10		;DEFERRED MODE
AM.INC=	20		;AUTO-INCREMENT MODE
AM.DEC=	40		;AUTO-DECREMENT MODE
AM.NDX=	60		;INDEX MODE
AM.PC=	07		;PC MODE ADDRESSING
AM.IMM=	AM.INC+AM.PC	;IMMEDIATE MODE
AM.REL=	AM.NDX+AM.PC	;RELATIVE MODE


OCTLEN=	^D<8*6>		;OCTAL PRINT STORAGE
LINLEN=	SRCLEN

;DIRECTIVE FLAGS DEFINED IN PST

	.GLOBL	DFLCND,	DFLMAC,	DFLGEV
	.GLOBL	DFLGBM,	DFLSMC
	.SBTTL		SUBROUTINE CALL DEFINITIONS

;THE MACRO "CALL" IS THE EQUIVALENT OF "JSR PC," AND
;IS USED FOR SIMPLICITY.  THE MACRO "RETURN" IS THE
;EQUIVALENT OF "RTS PC".

	.MACRO	CALL	ADDRESS
	JSR	PC,ADDRESS
	.ENDM

	.MACRO	RETURN
	RTS	PC
	.ENDM


;THE MACRO "GENCAL" DEFINES A MACRO WHICH CALLS A
;SUBROUTINE OF THE SAME NAME.  IF "TRAPS" ARE ENABLED,
;GENCAL CAUSES A TRAP.

	.IF NDF	TRAPS

	.MACRO	GENCAL	NAME	;CAN BE CHANGED TO OPDEFS OR TRAPS
	.MACRO	NAME
	JSR	PC,NAME
	.ENDM
	.ENDM

	.IFF
	.MACRO	GENCAL	NAME
	ENTSEC	TRPSEC
	.IRP	OFFSET,	<\.-TRPBAS>	;GENERATE NUMERIC
TRP'OFFSET=	TRAP+OFFSET
	.WORD	NAME
	.MACRO	NAME
	.WORD	TRP'OFFSET
	.ENDM
	.ENDM
	XITSEC
	.ENDM

	ENTSEC	TRPSEC
TRPBAS:				;TRAP VECTOR TABLE
	XITSEC

	.ENDC
	GENCAL	SAVR¯±ƒâwSAVE REGISTERS
	GEN¯pf	ãXPR		;CALL THE EXPRESSION EVALUATOR
	GENCAL	˙ëiM	GENCAL	RELEXP
	GE˘–‡ÃRELTST
	GENCAL	ABSEXP
	GENCAL	ABSTST
	GENC¯3¡ÖSERR
	GENCAL	GLBEXP
	GENCAL	ABSTRM		;ABSOLU˙ëPTãRM
	GENCAL	RELTRM		˜t¢ÃüCATABLE TERM
	GENCA˘ÇcÃÖTRM		;GLOBAL TERM

	GENCAL	GETSYM
	GENCAL	˙qjS≥M
	GENCAL	GETR50
	¯ÒgCÉL	SETR50
	GENCAL	TSTR50
	GENCAL	GETNB
	GENCAL	SETNBÓÒBc≈ùCAL	GETCHRÒ¢Ñ«ãNCAL	SETCHR
	GENCALÒ1È¡•G
	GENCAL	TSTARG
	GENCAL	SETIMM
	GENCAL	SE˙ë)–	GENCAL	STCODE

	GENCAL	SSRCH
	GENCAL	OSR¯rä.IIF NDF XMACRO, GENCAL	MSRCH
	.IIF NDF XEDL˙pñ èENCAL	LSRCH

	GENCAL	SETPF0
	GENCAL	SETPF1

	GENCAL	DNCÒ¢Ñ«ã˘–‡ÃCVTNUM
	GENCAL	R50UNP
	GENCAL	MOVBYT
	.IF DF	OVLAY
	GENCAL	CALOVR

	.MACRO	SETOVR	N
	.IF NE	OVRLVL
	.ERROR	OVRLVL	;  NOT = 0
	.ENDC
	.IF NDF	XOVR'N
OVRLVL=	1
OVRBAS=	OVR'N'B
	.CSECT	OVR'N
OVRTMP=	.
	.MACRO	XITSEC
	.CSECT	OVR'N
	.ENDM
	XITSEC
	.ENABL	PIC
	.IFF
OVRLVL=	-1
	.ENDC
	.ENDM

	.MACRO	ENTOVR	N
	SETOVR	N
	.IF GT	OVRLVL
	.CSECT	MAIN
	CALOVR
	.WORD	OVRTMP
	.CSECT	OVR'N
	.ENDC
	.ENDM

	.MACROÒ6$‘üVR	IN˘ígEÒBWIçÙhâü˙‘¶Vô
	.ERROR	OVRLVL	;  ˘”Í { 1
	ı—gDá
	.I¯»'B<INLINE>
Ò+°”ãCT	MAIN
OV.TMP˜¢W	XITSEC
	JMP	OV.TMP
	.ENDC
OVRLVL=	0
	.MACRO	XITSEC
	.CSECT	MAIN
	.ENDM
	XITSEC
	.DSABLÒ4$√ÒBWEùDM

	.MACRO	JMPOVRÒ0bR°˘’ªïUMP TO POSSIBLE OVERLAY
	.NTYPE	T.VAL,	ADRPNT
	.IF NEÒ5VÉL-<AM.INC!AM.DEF!AM.PC>
	MOV	ADRPNT,-(SP)
	.ENDCÒ¢Ñ õP	CALOVF
Ò+¢ŒâM
	.IFF	Ò"]ƒã¯–jÃ©S FOR NON-OVERLAY

	.MA¯tßâßETOVRÒ3†Õã
	.ENDM
	.MACRO	ENTOVR	˘–f≈	.ENDM
ÓÒBWMÉCRO	XITOVR	INLINE
	.ENDM

	.MACRO	JMP˘ı©	É¯î®N©
	JMP	@ADRPNT
	.EN¯ìFä	.ENDC
	.SBTTL		MISCEL˘êgEüUS MACRO D¯±§ŒìTIONS

	GENCAL	SETXPR
Ò¢ÑÆì¯»'Dç	PDPVˆçFä.MACRO	MUL	SRC,DST
	.IIF DIF <SRC>,<R3>,	MOV	SRC,R3
	ı“d∆ADIF <DST>,<R0>,Ò+¢“•OR	;I˘ì"«ÉL MUL ARGSÒ¢Ñ√É˘ìÕ´L
	.ENDM

	.MACRO	DIV	SRC,DST
	.IIF DIF <SRC>,˜îôæY	MOV	SRC,RˆcE	]IIF DIF <D˙u,yR0>,	.ERRO˙B]…ôLEGAL DIV ¯4£”	CALL	DIVÒ¢ÑÆãNDM

	.MACRO	SOB	REG,ADDR
	DEC	REG
	¯S¢âÉDDR
	.ENDM

	.ENDC

Ò¢ÑÆìF NDF	XCREF
	G¯≥°¡ô	CRFR¯±ÑâwCROSS REFE˙QgCã A SYMBOL
	GEN¯pf	áRFDEFÒ"]ƒìTTO, DEFINING IT
	.IFF
Ò+¶¡áRO	CRFREF		;DUMMY IF NO CREF
Ò+¢ŒâM
	.˘∞a“ü	CRFDEF
	ı—gDõ
	.ENDC
	.MACRO	PUTKB	ADDR	;LIST TO K¯CE	õOV	ADDR,R1
	CALL	PUTKB
	.END˘£E	.MACRO	PUTLP	ADDR	;LIST TO LP
	MOV	ADDR,R1
	CALL	PUTLP
	.ENDM

	.MACRO	PUTKBL	ADDR	;LIST TO KB AND LP
	MOV	ADDR,R1
	CALL	PUTKBL
	.ENDM

	GENCAL	PUTLIN		;GENERIC OF ABOVE

	.MACRO	SERROR	NUMBER
S'NUMBER=	2000!NUMBER
	JSR	R5,SERROR
	.WORD	S'NUMBER
	.ENDM

	.MACRO	ERROR	ARG
	BIS	#ERR.'ARG,ERRBTS
	.ENDM


	.MACRO	BRJMP	ADDR
	.IF GE	.-<ADDR>
	.IF LE	.-<ADDR>-254.
	BR	ADDR
	.MEXIT
	.ENDC
	.ENDC
	JMP	ADDR
	.ENDM

	.MACRO	CHSCAN	TABLE	;CHARACTER SCAN
	MOV	#TABLE,R0
	CALL	CHSCAN
	.ENDM

	.MACRO	GCHTBL	CHAR,	ADDR	;GEN CHARACTER SCAN TABLE
	.WORD	ADDR,	CHAR
	.ENDM
	ENTSEC	TXTBYT
ERRMNE:
	.IRPC	CHAR,	< ABEILMNOPQRTUZ>
ERR.'CHAR=	1
	.REPT	<.-ERRMNE>
ERR.'CHAR=	ERR.'CHAR+ERR.'CHAR
	.ENDR
	.ASCII	/CHAR/
	.ENDM
	XITSEC

	.MACRO	SETNZ	ADDR	;SET ADDR TO NON-ZERO FOR T/F FLAGS
	MOV	SP,ADDR
	.ENDM

	.MACRO	PROCSI	FILE	;PROCESS CSI
	MOV	#FILE'CSI,R0
	CALL	PROCSI
	.ENDM

	.MACRO	OPENO	FILE	;OPEN AN OUTPUT FILE
	MOV	#FILE'CSI,R0
	CALL	OPENO
	.ENDM

	.MACRO	WRITOF	LNKBLK,BUFHDR	;WRITE AND WAIT
	JSR	R5,WRITOF
	.WORD	BUFHDR,LNKBLK,BUFHDR+2
	.ENDM

	.MACRO	WAITOF	LNKBLK,BUFHDR	;WAIT ON OUTPUT FILE
	JSR	R5,WAITOF
	.WORD	LNKBLK,BUFHDR+2
	.ENDM

	.MACRO	FINDEV	ENTRY		;FIN DEVICES
	MOV	#E˘’)YYR1
	CALL	FINDE˙√E	]ENDM
	.MACRO	IMULI	COUNT,ADDR
	.LIST	MEB
T.VAL˜¢aœ´NT

	.IF EQ	T.VALÓÒBaÃ•	ADDR
	.IFF
	.IF L˙Çj.≠AL
T.VAL=	-T.VAL
	NEG	ADDR
	.ENDC

˙ã£LÉG=	0
T.MASK=	040000Ò¢ÑÆ•EPT	^D14
	.IF LE	T.˘∞iÀ[T.VAL
	.IF NE	T.MASK&T.V¯3ä.IF NE	T.MASK-Tı’†ÃÒBWIç EQ	T.FLAG
	MOV	ADDR,-(SP)
T.FLAG=	1
Ò+§∆ç
	.IF NE	T.MASK-1&T.VAL
	ADD	(SP),ADDR
	.IFF
	¯1"	QSP)+,ADDR
T.FLAG=	0
	.ENDC
	.ENDC
	.ENDCÓÒBWEùDC
	ASL	ADDR
	.END¯cET]MASK=	T.MASK/2
	.ENDR
	.IF NE	T.FLAG
	ADD	(SP)+,ADDR
	.ENDC
	.END¯cE	]NLIST	MEB
	.ENDM
Ò+©¬©TL	ROLL DEFINITIONS

	.MACRO	GENROL	NAME,	B¯4‚¨TOP,	SIZE
	ENTSEC	ROLBAS
NAME'ROL=	.-ROLBASÒ¢ÑÆØORD	BASE
	ENTSEC	ROLTOP
	.WORD	TOP
	ENTSEC	ROLSIZ
	.WORD	SIZE*2
RS.'NAME=	SIZE
	XITSEC
	.IIF GT	SIZE-MAXXMT,	MAXXMT=SIZE
	.ENDM

MAXXMT=	0		;MAX XMIT

				;START OF TABLE TO BE FILLEDÙg
	GENROL	SYM,     0ıà A 0,4	;SYMBOL TABLE
Ò+§∆ANDF	XMACRO
	GENROL	MAC,     0,     0,4	;MACR˘Ë)OôL
	GENROL	DMA,     0,     0,2	;DUMMY ARGUMEN˙à)OôL
	.ENDC
	.IF NDF	XEDLSB
	GENROL	LSY,     0,     0,4	;LOCAL SYMBOL ROLL
	.ENDC
	GENROL	SEC,     0,     0,5	;SECTION ROLL
	GENROL	COD,     0ıà A 0,4	;CODE ROLL
	.IF NDF	XMACRO
	GENROL	MAB,     0,     0,BPMB/2
	G¯≥©Oô	MAA,     0,     0,B˙a/e
	.ENDC

	GENROL	¯ïf¨A    0,     0,0	;DUMM˚(SãPARATES VARIABLE FRO˘®#I±ED)

	GENROL	CND,CNDBAS,CNDTOP,2	;CONDITIONAL ARGUMENTS
	GENROL	SWT,SWTBAS,SWTTOP,2	;COMMANDÙÍRìNG SWITCHES
	GENROL	EDT,EDTBAS,EDTTOP,2	;ENA¯SƒßABL
	GENROL	LCD,LCTBAS,LCTTOP,1	;LISTING CON˙îßÃ	GENROL	PST,PSTBAS,PSTTOP,4	;PERMANENT SYMBO˘à*AÖLE
	.IF NDF	XCREF
Ò1‚Œ•OL	CRF,CRFBAS,CRFTOP,1	;CREF MNEMONIC ROLL
	.ENDC
				;ROLL HANDLERÙ‡ÃôS

	.MACRO	SEARCH	˙SÊN´M	;BINARY SEARCH
	M˘ıÑ£•OLNUM,R0
	CALL	SEARCH
	.ENDM

	.MACRO	SCAN	ROLNUM	;LINEAR SCAN
	M˘ıÑ£•OLNUM,R0
	CALL	SCAN
	.ENDM

	.MACRO	SCANW	ROLNUM	;LINEAR SCAN, ONE WORD
	MOV	#ROLNUM,R0
	CALL	SCANW
	.ENDM

	.MACRO	NEXT	ROLNUM	;FETCH N¯∂* ãNTRY
	MOV	#ROLNUM,R0
	CALL	NEXT
	.ENDM

Ò+¶¡áRO	APPEND	ROLNUM	;APPEND TO END OF ROLL
	MOVÒ(ÈOôNUM,R0
	CALL	APPENDÒ¢ÑÆãNDM

	.MACRO	ZAP	R˘Û'Uõ	;CLEAR ROLL
	MOV	#˙SÊN´M,R0
	CALL	ZAP
	.ENDM

	GENCAL	INSERT		;INSERT (MUST BE PRECEDED B˚('Œã 
				;OF THE ABOVE TO SET POINTERS)
	GENCAL	SETROL		;SAVE AND SET REGS FOR ABOVE




	ENTSEC	MIXED		;DON'T CLEAR
PRGLIM:	.LIMIT			;PROGRAM LIMITS
ROLNDX:	.BLKW			;ROLL INDEX
ROLPNT:	.BLKW			;ROLL POINTER
ROLUPD:	.BLKW			;UPDATE IF NON-ZERO

	XITSEC
	ENTS¯∞ƒ…õ˙iEÒCEPÉSS:	.BLKW
				;NEXT GROUP MUST STAY TOGETHER
SYMBOL:	.BLKW	2		;SYMBOL ACCUMULATOR
MODE:
FLAGS:	.BLKB	1		;FLAG BITS
SECTOR:	.BLKB	1		;SYMBOL/EXPRESSION TYPE
VALUE:	.BLKW	1		;EXPRESSION VALUE
RELLVL:	.BLKW	1
	.REPT	MAXXMT-<<.-SYMBOL>/2>	;END OF GROUPED DATA
	.BLKW
	.ENDR

CLCNAM:	.BLKW	2		;CURRENT LOCATION COUNTER SYMBOL
CLCFGS:	.BLKB	1
CLCSEC:	.BLKB	1
CLCLOC:	.BLKW	1
CLCMAX:	.BLKW	1

	ENTSEC	IMPPAS		;CLEAR EACH PASS

CHRPNT:	.BLKW			;CHARACTER POINTER
SYMBEG:	.BLKW			;POINTER TO START OF SYMBOL
ENDFLG:	.BLKW

	XITSEC			;RETURN TO NORMAL
	.SBTTL	PROGRAM INITIALIZATION

	.GLOBL	START,	CONT,	FIN

START:
	.IF DF	TRAPS
	.TRAP	#0,#TRPPRO	;ENABLE TRAPS
	.ENDC
	MOV	#FINTBL,R1
1$:	CLR	@(R1)+		;CLEAR LNKBLK'S FOR RESTART
	TST	(R1)
	BNE	1$
	CALL	XCTPRG		;CLEAN THINGS UP A BIT
	.IF NDF	XRESKB
	.INIT	#CMILNK		;INIT COMMAND INPUT
	.IFF
	MOV	PRGLIM,SP	;MAKE ROOM FOR OUTPUT KB
	.ENDC
	.IF NDF	PAL11R
	.IF DF	OVLAY
	CMP	OVRBLD,CPOPJ	;ANY OVERLAY?
	BEQ	2$		;  NO, LEAVE "R"
	MOVB	#LET.O,HELLOF	;YES, SET TO "O"
	.ENDC
	.ENDC
2$:	PUTKB	#HELLO		;SAY HELLO

CONT:
	.IF NDF	XMACRO
	BIC	#BPMB-1,PRGLIM	;MACRO STORAGE MUST BE EVEN
	.ENDC
	.IF NDF	DOSV4
	.STSTK	PRGLIM		;INFORM MONITOR
;	TST	(SP)+		;PRUNE STACK IF NEEDED
	.ENDC
	MOV	PRGLIM,SP	;SET STACK POINTER
	MOV	#DUMROL,R1	;POINT TO SEPARATOR ROLL
2$:	MOV	SP,ROLBAS(R1)	;FILL IN VARIABLE BASE
	MOV	SP,ROLTOP(R1)	;  AND TOP
	CLRB	ROLSIZ+1(R1)	;CURRENT SIZE
	DEC	R1
	DEC	R1
	BGE	2$		;LOOP IF MORE ROLLS
	CALL	XCTPRG		;CLEAN UP MEMORY
	CALL	SETUP		;SET UP FOR CALL
	CALL	ASSEMB		;CALL THE ASSEMBLER
	.IF DF	XRESKB
	MOV	PRGLIM,SP	;MAKE ROOM FOR KB
	.ENDC
	CALL	SETDN		;CLEAN UP
FIN:	.IF NDF	XRESKB
	FINDEV	FINTB2		;CLOSE ALL FILES BUT KB
	.IFF
	FINDEV	FINTB1		;CLOSE ALL FILES
	.ENDC
	BR	CONT		;BACK TO "#"
SETUP:				;INITIALIZE THINGS
	¯≥™O≠R	1
	.IF DF	DOSV4
	.IF NDF	XCREF
	.SYSDV
	MOV	(SP)+,CRFLNK+6
	.ENDC
	.IF NDF	XSML
	.SYSDV
	MOV	(SP)+,SMLLNK+6
	.ENDC
	.ENDC

	.RSTRT	Ùq§Œ	;SETÙ¢”©ART ADDRESS

Ò4*‘óB	#HASH		;TYPE "#"

	MOV	#CMIHDR+6,R1
	MOV	#CMILEN,-(R1)
	CLR	-(R1)
	MOV	#CMILEN,-(R1)
	.˘1êDç	XRESKB
	.INIT	#CMILNK
	.IFTF
	.READ	#CMILNK,R1
	.WAIT	#CMILNK
	.IFT
	.RLSE	#CMILNK
	.RLSE	#CMOLNK
	.ENDC
	TSTB	3(R1)		;EOF?
	BEQ	1$		;  NO
	.EXIT			;YES,GOOD-BYE

1$:	MOVB	CMIBUF,R5	;FETCH FIRST CHAR
	TSTB	CTTBL(R5)	;EOL?
	B¯¥D≤IÒ"]†A˚1i¨A˘1ÁO•E
	.CSI1	ÙpÊƒÖUF
	MOV	(SP)+,R2	;GET ERROR FLAG
	BEQ	SETUP1		;  OK
Ò3g÷Ö	#CH.QM,(RˆJUâwERROR, SET "?"
	CLRB	(R2ı"DªA AND TERMINATOR
	PUTKB	#¯sd¬´F
	.IF ND¯¬bOßV4
	.FLUSH	#1
	.ENDC
2$:	JMP	FIN
SETUP1:	MOV	#CMDB˙±ñRcÒ¢ÑÕüV	#CM¯î‡÷YR2
	CALL	˚d‘o		;SAVE INITIAL CMD HEADER
	MOV	#2,CMDBUF
	PROCSI	OBJ		;PROCESS OBJECT FIRST
	MOV	R0,-(SP)	;STACK FLAG
	MOV	R1,-(SP)	;  AND POINTER
	ASR	R0		;ANY MORE OUTPUT FIELDS?
	BCS	14$		;  NO
	PROCSI	LST		;YES, PROCESS LISTING FIELD
	BPL	13$		;BRANCH IF EMPTY
	.INIT	R1
	INCB	LLTBL+LST.L	;ASSUME TERMINAL
	.STAT	R1
	BIT	#000400,(SP)+	;TRUE?
	BNE	12$		;  YES
	MOV	#LST.L+<LST.KL*400>,LLTBL+LST.L
12$:	INCB	LLTBL+LST.ER	;ERRORS TO LOGICAL LP
	CMP	(SP)+,(SP)+	;PRUNE .STAT RESIDUAL
13$:	ASR	R0
	BCS	14$		;BRANCH IF LAST SPEC
	SERROR	204		;  NO, ERROR

14$:	MOV	(SP)+,R1
	MOV	(SP)+,R0	;ANY OBJ OUTPUT?
	BPL	15$		;  NO
	.INIT	R1		;YES, INIT IT
15$:
	.IF NDF	XCREF
	TST	CRFFLG		;CREF REQUESTED?
	BEQ	SETUP2		;  NO
	.INIT	#CRFLNK		;YES, INIT IT
	.ENDC
SETUP2:	MOV	#LCSAVE,R1	;SAVE CURRENT LISTING FLAGS
	MOV	#LCSBAK,R2
	CALL	XMIT0-LCSAVL
	MOV	EDMASK,EDMBAK	;DITTO FOR ENABL/DSABL FLAGS
	CLR	CMDBUF		;SET FOR INPUT
	MOV	(PC)+,@(PC)+	;SET DEFAULT FILE NAME
	.RAD50	/TEM/
	.WORD	DEFNAM
	MOV	(PC)+,@(PC)+
	.RAD50	/P  /
	.WORD	DEFNAM+2

21$:	PROCSI	SRC		;SET FOR SOURCE
	BMI	22$		;BRANCH IF NON-NULL
	SERROR	206		;YOU LOSE!!
22$:	MOV	SRCFIL,R1	;GET SOURCE FILE NAME
	BEQ	23$		;  BRANCH IF NULL
	MOV	R1,DEFNAM	;NON-NULL, SET DEFAULT NAME
	MOV	SRCFIL+2,DEFNAM+2
23$:	ASR	R0		;ANY MORE?
	BCC	21$		;  YES

	MOV	(PC)+,R5	;SET DEFAULT LISTING EXTENSION
	.RAD50	/LST/
	OPENO	LST		;OPEN LISTING FILE
	RETURN
	XITOVR
SETDN:				;CLEAN UP
	ENTOVR	1
	MOV	#FINMSG,R1	;SET FOR FINAL MESSAGE
	MOV	#LINBUF,R2
	MOVBYT			˜sg÷ã INTO LINBUF
	MOV	E˙T°Œ©,R1
	DNC			;PRINT IN DECIMAL
	MOV	#FINMS1,Rˆ#E	õOVBYT
	MOV	FRECOR,Rˆ"]√üMPUTE FREE CORE SIZE
	ROR	R1		;CONVERT TO WO˙Q)ç	DNC			;PRINT RESULT
	MOV	#FINMS2,R1	;". WOR¯î—	MOVBYT
	CLRB	(R2)ÓÒBhU©KBL	#LINBUF		;LIST T˘Ë%¬A& LP
	PUTLP	#CMIBUF		;PRINT THE COMMAND STRI˘—∆ä.IF NDF	XRUN
	TST	C˙Q£Lè
	BEQ	9$
	TST	CRFNGF		;NO-GO?
	BNE	9$		;  YES
	FIND¯µÑ∆ìNTBL		;REL¯∞i≈AALL DEVICES
	SUB	#<ˆ™€+k+6+10>*2,SP
	MOV	SP,R2
	MOV	#LSTLNK-2,R1
	¯pfLXMIT5
	MOV	#LSTFIL-4,R1
	CALL	XMIT6
	MOV	#¯t£LùK-2,R1
	CALL	XMIT5
	MOV	#CRFFIL-4,R1
	CALLÒ6&…©6
	.RUN	#RUNBLK
	HALT
	.ENDC
9$:	RETURN

	XITOVR
FINDEV:	Ò"Dªá˘ìÈ≈ADEVIC¯¥∆äENTOV˙BXç1$:	MOV	(R1)+,RˆCE	©ST	(R2)
	¯Qhâe$
	.CLOSEÒ4ôÒ+©Lß¯¢i22$:	TST	(˙LTçÒ0ßE1$
	˙QjU•N
	XITOVRÒ¢ÜäENTSEC	DPURE
FINTBL:	.IIF DF	OVLAYıÇWWü˙Q‘•˘”'KFINTB1:		Ò+´œ•¯ÇaÕì˘ì•¨á˘≥ÊNóÒ¢£IùTB2:	.IIF NDF XSML,	.WORDÒ4ÊÃô˘“∆ä.IIF NDF XCREF,Ò+´œ•D	CRFLNK
Ò"DÆØORD	SRCLNKıÇg¬ï˘ì•ç¯“gTÖ3:			.WORD	LSTLNK
	Ò"WWü˙Q∞
	ENTSECÒ5,TÖYT
FINMSG˜BWAß¯rm	y¯tü<ôF>/ERRORS ¯ëjEáTED:  /
FINMS1:	.ASCII	<CR><LF>/FREE CO˙Q] Aı„EC•LF:	.ASCIZ	//
¯“gMß2:	.ASCIZ	/. WORDS/ÓÒR ”ë˜BWAßCIZ	<CR><LF> /#ıËV©>
HE˘ì'∫.ASCI˘"^C•><LF> /MACRO V/	;INT˙S–Mã˙t‡«ãÒ¢§Eô˘ì„:	.IF NDF	PAL11R
	.¯4·…ì	/R/
	.IF¯√E	]ASCII	/P/ÓÒBWEù¯ê∆ä¯ıßUõ			;GENERA˙ëPVãRSIONÙ™ÕÖ¯¥Üäı–i√ì˚BW†_Ò¢ÜäXITSE¯cE.IF NDF	XRUN
ÓÒBbŒ©SEC	M˘6"ƒÒT™ŒÖ˘í›	]WORD	˚–ò1aˆ0a00010011
Ò+´œ•D	RUN¯“f	.WORD	RUN˘ì•çÒ+´œ•D	2
Ò¢ÑÆØORD	0
RUNLNK:	ı’Á“â	0
	ı‘†ƒk0	/RUN/
	.WORD	1
	.RAD50	/SY/

	.WORD	0
	.WORD	4
˙UgFì˘éÑÆ•¯1∞/CREFÙçÒ+©Aâˆ¨ØA  /
	.BYT¯¢X,aÒ¢ÑÆØORD	0


	XITSEC
	.ENDC
PROCSI˜BDâ;PROC¯¥È†áSI FI¯≥"				;¯≥™R≥ R0: ˙‰Œ©¯¥êTüÙÈ…Ö˘í∆äÒ"DªãXIT  R0: CSI2 RETURNÒ¢ÑâÒ.– AÙ A  BIT 0: 1Ùc âEV SPECIFI¯±ä			;      ˙L] °OINTE˙H*OALNKBL˘cEÒ1gTüVR	1ÓÒBfœ≠	2(R0),R1	;POINT TO LNKBLK
	S¯5©EèÒ"DªßAVE CURREN˙à)EèS
	C˘¥®•1)+,(R1)+	;BYPASS TWO WORDS
	MOV	#^D72.,(R1)ıb]”ãT CSIÙ$ÕìT
	.CSI2	R0		;¯pfLAMONIT˘ÙÜäBIT	#2,(SP)		;T˘Û–M´CH SWITCHES?
	BNE	5$		;  YES
	ASL	(SP)		;CLEAR SIGN BIT
	TST	(R1)+		;ANYÙ"÷ìCE?
	BEQ	10$		;  NO
	SE¯bDâwYES, ¯” «AIT
1ˆ		•OR	(SP)
1$:	MO˙¬TRc)+,R3Ò.ÍH•OUGH?
	BEQ	6$		;  YES
	ADD	R3,R1		;NO, MOVE TO END OF BLOCK
	ADD	R3,R1
Ò3g÷R1,-(˙tâwMARK ˙í"†°LACEÓÒBfœ≠	-(R1ı+)ŸõBOL	;˙qj çOR SCAN
	SCANWÒ4Î‘•OL		;DO SO
	BE˙"Z§	;ERROR IF NOT IN TABLE
Ò3g÷#LINB˙±ñRe	;USEÙ$Œã BUFFER FOR UNP¯0Â…ùG
2$:	MOVB	#SPACE,(R2)+	˜t‚‘ADELIM˘5"“	DEC	R3		;END?
	BEQ	4$	Ò.– ≥ES
	MOV	-(R1),CHRPNT	;SET CHARACTER POINTER
	DEC	CHRPNT		;GET A RUNNING START
3$:	GETR50			;¯Òj áHAR AND TEST FO˙H Øù
	BLE	2$		;  N˘ÎTëROUGH
	MOVB	R5,(R2)+	;OK, STU¯—êI©Ò¢Ñ¬•Ò,“Ò¢ö$u	CLRBÒ*)2SÒ"]”ã˙à*E•MINATOR
	MOV	#LINBUF,CHR˙™	SETNB
	CLR	ER˙P™S	CLRÒ0iGáNT
	˘3°âáSIFLG		;INDICAT¯®+≈ORE IN THE COMMAND STRING
	CLRÒ3gƒãÒ¢ÑÕü˙¬iŸõ¯SÊ+e,VALU¯¢]ÕÉKE IT LOOK LIKE PST
	CALL	PROPC		;˙ß√ã˙t–AßÙc âIRECT˘5¢ç	DEC	CSIFLG
	M˘ıÑ®ßP)+,R1
	B˘4ƒ≈•RBTS,˙MDª•5 AND ERROR BITS MUST BOTH BE ZERO
	BEQÒ,R5$:	SERROR	203

6$:	MOV	(SP)+,R0	;SET R0 AN¯à#LÉGS
	RETURN

	ENTSEC	IMPURE
CSIFLG:	.BLKW			;SET WHE˘»)O´˙ígEßÙ‡ÃôED FR˘ÛPCßI
	X˘5)≈á
	XITOVR			; 1Ò¢ÜO°ENO:				;OPEN O˙µ(U© FILEÒ¢Ñ≈ùTOVR	˜#E	ßAVREGÒ¢Ñ‘ßT	(R0)+		;MOVE ˙i‘A¯sÊÕÉND BUFFER POINTER
	MOV	(R0)+,R3	;L˘3•†ÖLOCK POINTER TO R3
	TST	(R3)	Ò.‰ŒìTTED?Ò¢Ñ¬ãQ	OPENO4		;  NOÒ¢ÑÕüV	(R0ı+)4	;YES, FILE BLO¯r–PüINTER TO R4
	CMP	-(R4),-(R4)	;BACK UP TO ERR˘ÙêSôOT
	MOV	R4,R2		;GET A WORKING COPYÒ¢ÑÕü˙¬Qœ°¯≥ß≥Y(R2)+	;IGNORE D¯≥"‘ìON ER˙SÈ	MOV	#2,(R2)+	;¯” «AFOR O˙µ(U©
	MO˙¬i2YR1		;¯4È’õE NAM¯®)–ãCIFIE¯ÉE	©ST	(R2)		;TRUE?
	BNE	1$	Ò.– ≥¯¥∆ä˘≥Î	G¯ëcNÉM,R1	;NO, USE D¯±†’ô˙à'AõE
1$˜Bfœ≠	(R1)+,(R2)+	;X¯—i ù¯3bç	MOV	(R1)+ıä)2S+
	TST	(R2)		;EXPLICIT EXTENS˘3Á?ÒBaNã	2$		˜hYãS
	M˘ıÑ“k,(R2)		;NO, USE DEFAULT
ˆI	]DELETÒ4ô¨Q˙Lâ˜q"ÃãTE CURRENT
	XITOVR
OPEN˘Ï›	ãNTOVRÒ.FäCLR	(˙Mâ;CLEAR ERROR ADDRESS
	.O˙g	•3,(R0ı"DªüPEN T˘PFìLE
O˙gOi:	RETURN
Ò¢ÜäENTSEC	IMPURE
DEFNAM:	.BLKW	2Ò"]ƒã¯–jÃ© NAMEÒ¢Ñÿì˙î‚√ÒCE	±ITOVR

S¯¥©O•:				˜h©¢AERROR
	MOV	R5,ı™)–S	;DIS˙ ŸAADDRE˙t∆äSUB	#PRGBEG+2,(SP)	;GIVE RELATIVE A¯ë)Eß˙cE	õOV	(R5),-(SP)	;  AND NUMBER
	˘3Í	BRJMP	FIN
	.SBTTLÒ0i”ã˘∞¶E• PROPER

ASSEMB:				;ASSEMBLER PROPER
	CALL	1$		;PRO¯qi”APASSÓÒBdŒá	PASS		;SET FORÙ ”ßÙÜäc$:	CALL	XCTPAS		;INI˙à#O•Ù ”ß
	CALL	SECINI	Ò.‰ŒìT THEÙ‚√©OR ROLL
	ı“c ùDF	XC˙Qc	TST	PASS
	BEQ	2$		˜p©AùCH IF PASS 1
	TST	C˙Q¶Nó
	BEQ	2$	Ò.– ü˙H$∆ANO CREF INITTEDÒ¢ÑÕüV	LST¯“f,á˙Q£IôÒ.ÏFãR LIS˙à#IôE NAM¯®*OACREF FILE
	MOVÒ3)‘çIL+2,¯t£FìL+2
	MOV	(PC)+,R5	;SET DEFAULT EXT¯≥©…üN
	.RAD50	/CRF/
	OPENO	CRF		˜sËEù CREF FILE
	MOV	#CRFBUF,¯t£PùT	;IN˘5Fü˙H!“ã¯√E	]ENDCÓÒLí:¯pfL˙qjS•¯bDªßET SOURCE SCAN
3$:	¯pfLGETLIN		;G¯µTë¯®'E±T INPUT LI˘—Fä¯S¢âiÙÇDªAÙ©AùCH IF EOFÓÒBa¡ôL	STMNT		;˙ß√ã˙t–Të¯®)‘ÉTEMENT
4$˜Ba¡ô˘ÇbŒâLIN		;POLISH OF¯»&IùE
	TST	ENDFLG		;ENDÙ‚≈ù?
	BEQ	3$Ò"]†ANO, C˘Û™IùUE
	CALL	¯≥¢PÒ.ËRüCESS END-OF-PASS
CPOPJ:	RETURN

	ENTSEC	DPURE
R50ABS:	.R¯1∞/. ABS./
R50DOT:	.RAD50	/.     /
	XITSEC
˙qjS•¯nÑâÒ.È≈© SOUR¯qPFüR BEGINNING OF ˙i”	MOV	#CMDSAV,R1
	MOV	#CMDBUF,R2
	CALL	XMITˆ‚Dªß¯µCß˘(!UçFER
Ò¢£≈©SRC:				;GET TH¯®'E±T SOURCE FILE
Ò1gTü˙‘ÑπÒLR:CLR	P¯4È”Ø		;CLEAR PASS S˙ÚjCë
	PROCSI	SRC		;PROCESS T˘PSüURCE ¯“fE	DEC	PASS˙uƒâwANY PASS SWITCH?
	BMI	7$		;  ˘”∆äCMP	P¯4È”Ø,PASSÒ.Ï≈ß, THIS PASS?
	¯S¢âc$		;  NO, IGNOR¯®#IôE
7$˜BiO•	R0
	ROL	CSISAV		;FLAG POSSIBLE TERMINATOR
Ò+§ŒìT	#SR¯s'K	;INIT IT
	TST	SRCF˘3¥;EXPLICIT ¯∂*Eù˙rgŒÒ¢Ñ¬ùE	GETSR3		;  YES, USE ITÓÒBfœ≠	#R50˘∞a¨•2	;NOıà*R≥ ".MAC" AND ".PAL"
	XITO˙‘ÜäèETSRX˜BbŒ©OVR	9
GETSR2:	˘≥Î	GGETSR˚)“áFIL-4Ò¢ÑÕüV	(R2)+,SRCFIL+ˆÇ]ÕüVE IN NEXTÙ"∆É˙≥*	BNE	¯ÒjS•4		;BRANCH IF NON-NU˘ìäèETSR3˜BaÃ•	SRCFIL-4	˜sß†õ˘Ù¢†ãRRORS ALLOWED
¯ÒjS•4:	MOV	#4,SRCFIL-2
	.IF DF	DBLBUF
	.MCALL	.LOOK,Ò+©‘É˙ãÆ©˙Pg	.LOOK	#SR¯s'KY#SRCFIL,START	;LOOK IT UP
	MOV	#SRCTRN,R0	;POINT TO TRAN BLOCK
	MOV	(SP)+,(R0)	;SET STARTING BLOCK
	CMP	(SP)+,(SP)+	;PRUNE REMAINING TWO
	TST	(R0)+		;FOUND?
	BNE	5$		;  YES
	TST	SRCFIL-4	;NO, LAST CHANCE?
	BNE	GETSR2		;  NO, TRY NEXT EXTENSION
	.IFTF
	.OPEN	#SRCLNK,#SRCFIL
	.IFT
5$:	MOV	#SRCDB2,(R0)+	;READ INTO SECOND BUFFER
	CLR	SRCDBC
	CLR	SRCDBX
	.STAT	#SRCLNK
	ROL	(SP)
	BIC	#077777,(SP)
	MOV	(SP),SRCDTA
	CMP	(SP)+,(SP)+
	MOV	(SP)+,(R0)+	;SET BLOCK SIZE
	MOV	#4,(R0)+	;SET TO READ FORWARD
	.TRAN	#SRCLNK,#SRCTRN	;START FIRST READ
	.IFTF
	INC	FFCNT		;START A NEW PAGE
	XITOVR	INLINE
	.IF DF	SNGBUF
	RETURN
	.ENDC
	.IFF

INPSRC:				;INPUT A SOURCE BUFFER
	MOV	#SRCBUF,R0
	CLR	-(R0)		;CLEAR COUNT
	CLR	-(R0)		;  AND MODE
	MOV	#SRCLEN,-(R0)	;SET MAX LENGTH
	.READ	#SRCLNK,R0	;READ IT
	.ENDC
	RETURN

	ENTSEC	DPURE
R50MAC:	.RAD50	/MAC/
R50PAL:	.RAD50	/PAL/
	.RAD50	/   /		;TERMINATOR

	ENTSEC	IMPPAS
CSISAV:	.BLKW			;SET NON-ZERO ON LAST SRC FILE
	XITSEC

	GENSWT	PA,PASSSP

PASSSP:	ABSEXP			;/PASS, EVALUATE NUMBER
	MOV	R0,PASSSW	;STORE RESULT
	RETURN

	ENTSEC	IMPURE
PASSSW:	.BLKW			;PASS SWITCH
	XITSEC
GETLIN:				;GET AN INPUT LINE
	SAVREG
	CALL	XCTLIN		;INIT LINE-ORIENTED VARIABLES
GETL01:	MOV	FFCNT,R0	;ANY RESERVED FF'S?
	BEQ	31$		;  NO
	ADD	R0,PAGNUM	;YES, UPDATE PAGE NUMBER
	MOV	#-1,PAGEXT
	CLR	FFCNT
	.IF NDF	XLCSEQ
	CLR	LINNUM		;INIT NEW CREF SEQUENCE
	CLR	SEQEND
	.ENDC
	TST	PASS
	BEQ	31$
	CLR	LPPCNT
31$:	MOV	#LINBUF,R2
	MOV	R2,LCBEGL	;SEAT UP BEGINNING
	MOV	#LINEND,LCENDL	;  AND END OF LINE MARKERS
	.IF NDF	XSML
	TST	SMLCNT		;IN SYSTEM MACRO?
	BNE	GETL40		;  YES, SPECIAL
	.ENDC
	.IF NDF	XMACRO
	MOV	MSBMRP,R1	;ASSUME MACRO IN PROGRESS
	BNE	GETL10		;BRANCH IF SO
	.ENDC
	MOV	#SRCBUF,R1
	.IF DF	SNGBUF
	CALL	INPSRC
	.ENDC
	.IF NDF	DBLBUF
	.WAIT	#SRCLNK
	.IFF
	CALL	GETDBL
	.ENDC
	.IF NDF	XLCSEQ
	INC	LINNUM
	.ENDC
	MOVB	SRCHDR+3,R0	;GET CODE BYTE
	BIT	#SB.DPE!SB.PFE!SB.CSE!SB.ILE,R0	;ANYTHING BAD?
	BEQ	32$		;  NO
	ERROR	L		;YES, ERROR
32$:	ROLB	R0+<0&SB.EOF>	;EOF?
	BPL	GETL02		;  NO
	.IF NDF	DBLBUF
	.CLOSE	#SRCLNK
	.ENDC
	.RLSE	#SRCLNK
	BIS	CSISAV,ENDFLG
	BNE	34$
	CALL	GETSRC
	BR	GETL01

34$:	ERROR	E
	CLRB	(R2)		;MAKE INTO NULL LINE
	BR	GETL09
GETL02:	MOV	-(R1),R4	;GET BYTE COUNT
	CLR	(R1)+		;SET STOPPER
	ADD	R1,R4		;COMPUTE END
3$:	CLRB	(R4)		;FORM ASCIZ
	MOVB	-(R4),R5	;GET LAST CHAR
	CMP	R5,#CR		;IF > CR
	BHI	6$
	CMP	R5,#LF		;  OR < LF
	BLO	6$		;  MOVE ON
	CMP	R5,#FF		;FORM FEED?
	BNE	3$		;  NO, LOOP
	INC	FFCNT		;COUNT THE PAGE
	BR	3$

5$:	MOVB	R5,(R2)+	;MOVE INTO LINBUF
6$:	MOVB	(R1)+,R5	;FETCH NEXT CHAR
	MOVB	CTTBL(R5),R0	;GET CHARACTERISTICS
	BEQ	7$		;QUESTIONABLE
	BIT	#CT.LC,R0	;LOWER CASE?
	BEQ	5$		;  NO
	.IF NDF	XEDLC
	BIT	#ED.LC,EDMASK	;LOWER CASE ENABLED?
	BNE	4$		;  NO, CONVERT TO UPPER
	ADD	#240,R5		;YES, END UP WITH "200 + LC"
	.ENDC
4$:	SUB	#40,R5		;CONVERT LOWER TO UPPER CASE
	BR	5$		;STORE

7$:	MOVB	R5,(R2)		;QUESTIONABLE, ASCIZ NULL?
	BEQ	8$		;  YES, ALL SET
	ERROR	I		;NO, ILLEGAL CHARACTER
	MOV	#200,R5		;STORE ZERO WITH FLAG BIT
	BR	5$

8$:	.IF NDF	DBLBUF
	.IF NDF	SNGBUF
	.IF NDF	XSML
	TST	SMLCNT
	BNE	GETL09
	.ENDC
	CALL	INPSRC		;ALL SET FOR THE NEXT BUFFER
	.ENDC
	.ENDC
GETL09:	.IF NDF	XEDCDR
	MOVB	LINBUF+72.,CDRSAV	;SAVE COLUMN 73
	BIT	#ED.CDR,EDMASK	;CARD READER TYPE?
	BNE	38$		;  NO
	CLRB	LINBUF+72.	;YES, FORCE EOL
	.ENDC
38$:	MOV	#LINBUF,CHRPNT
	SETNB
	BNE	39$		;ALL SET IF NON-NULL LINE
	TST	FFCNT		;NULL, FORM FEED?
	BEQ	39$		;  NO
	BRJMP	GETL01		;YES, JUST BUMP PAGE COUNT

39$:	MOV	ENDFLG,R0	;RETURN WITH "ENDFLG" AS ARGUMENT
	NEG	R0
	RETURN


	.IF NDF	XSML
GETL40:	MOV	#LINBUF,R1	;SYSTEM MACRO,
	CLR	-(R1)		;  MOVE RIGHT INTO LINBUF
	CLR	-(R1)
	MOV	#SRCLEN,-(R1)
	.READ	#SMLLNK,R1	;READ IT
	.WAIT	#SMLLNK		;  AND WAIT
	MOVB	LINBUF-3,ENDFLG	;MARK IF EOF
	BNE	GETL09		;BRANCH IF EOF
	CMP	(R1)+,(R1)+	;ELSE MOVE INDEX
	DEC	(R1)+		;BYPASS FF, POINT TO LINBUF
	BR	GETL02		;PROCESS NORMAL
	.ENDC
	.IF NDF	XMACRO
GETL10:	CALL	20$		;MOVE A CHARACTER
	BGT	GETL10		;LOOP IF GT ZERO
	BEQ	19$		;END IF ZERO
	MOVB	-(R2),R0	;TERMINATOR, BACK UP POINTER
	CMP	R0,#MT.MAX	;END OF TYPE?
	BLOS	22$		;  YES
	MOV	R1,-(SP)	;REMEMBER READ POINTER
	MOV	MSBARG,R1
	TST	(R1)+
	MOV	R2,R3		;  AND WRITE POINTER
	NEG	R0		;ASSUME MACRO
	CMP	MSBTYP,#MT.MAC	;TRUE?
	BEQ	12$		;  YES, USE IT
	MOV	MSBCNT,R0	;GET ARG NUMBER
12$:	MOV	R3,R2		;RESET WRITE POINTER
13$:	CALL	20$		;MOVE A BYTE
	BGT	13$		;LOOP IF PNZ
	BLT	14$		;END IF LESS THAN ZERO
	SOB	R0,12$		;LOOP IF NOT THROUGH
14$:	TSTB	-(R2)		;YES, BACK UP POINTER
	MOV	(SP)+,R1	;RESET READ POINTER
	BR	GETL10		;END OF ARGUMENT SUBSTITUTION

19$:	MOV	R1,MSBMRP	;END OF LINE, SAVE POINTER
	BIS	#LC.ME,LCFLAG	;FLAG AS MACRO EXPANSION
	BR	GETL09

20$:	BIT	#BPMB-1,R1	;MACRO, END OF BLOCK?
	BNE	21$		;  NO
	MOV	-BPMB(R1),R1	;YES, POINT TO NEXT BLOCK
	TST	(R1)+		;MOVE PAST LINK
21$:	CMP	R2,#LINBUF+SRCLEN	;OVERFLOW?
	BLOS	23$		;  NO
	ERROR	L		;YES, FLAG ERROR
	TSTB	-(R2)		;  AND MOVE POINTER BACK
23$:	MOVB	(R1)+,(R2)+	;MOVE CHAR INTO LINE BU¯—¢“	RET˙¥ß
22$˜Ba¡ôL	END˘∞aâ;CLOSE MACRO
	JMP	GETL01Ò¢ÑÆãNDC
Ò¢ÜäENTSEC	IMPPAS
LPPCNT:	.BLKW	1		;FO˙P‚†ùEW PA¯ÒPWëEN NEGATIVE
FFCNT:	.BLKWÒ,DâwUNPROCESSED FF COUNT
PAG˘’f∫.BLKW	1		;PAGE ˘’f¬ãR
PAGEXT:	.BLK˙‚Xâ;PAGEÙ™ÕÖER EXTENSION
	ı“c ùDF	XL¯t‚—LINN˙≥]	]BLKW	2		;CREF LINE NUMBER
SEQ¯≥¢:.BLKW	1
	.ENDC

	XITSEC
	.IF DF	DBLBUF

GETDBL:				;GET DOUBLE-BUFFERED INPUT
	SAV˙Qcç	MOV	SRCDBP,R1	;POINTER T˘Ë)1	MOV	#SRCHDR+3ıîô	wWILL END UP AS ˙t°¬´F
	CLRB	(˙Lî´Ò.‚“•˘ÙêFôAGS
Ò0ÊRıô)W		;CHARACTER CO˙≥™	MOV	SRCDBC,R3	˜pÁ’ùT
1$˜BbEá	R3		;ANY MORE ˘3êB´¯—¢“
	BLT	3$	Ò.– ù˘„E	õOVB	(˙LT´Y˙Lª≥ES, FETCH THE N¯∂* áHAR
	BIC	#^C177,R0	;IGNO˙QPPÉRITY
	BEQÒ,R	˜rcŒü˙QPN´LLS
Ò0Ê–#177,R0
	¯Qhâc$		;  AND RUBOU˙î∆äINC	SRCHDR+4	;O˘kB´MP CH¯4†√©ER CO˙≥™	CMP	˙t°»âR,SRC˘)+i	;OVE˙KcLüW?
	¯S'”2$		;Ù'O	BIS¯BQ∞aˆ+)“á˘)+g	;YESıà)≈© ERRO˙H#LÉG
	D¯∞ƒ”•CHDR+ˆÉE	âEC	R2Ò¢ô$u	MOVBÒ4ò,Q˙Lî´˜tÍO•E CHA˙Pa‘ãR
	C˘¥“a,#FF	Ò.‚œô?
	B˘D±IÒ"]†A˘”∆äCMP	RˆÃç
	BL˘‚X§	MOVÒ4ò¨ßRCDBPÒ.„IùISHEDıà)Eß˙ìÈEA˙‰Œ©¯¥Üä˘≥Î	•ˆk)“á¯ê°âw  ANDÙÁ’ùT
	R¯µ*“ù

3ÙéÑ‘ßT	SRC˙îß	˜s$ŒóÙ‚‘
	BN¯¢Z$	;  Y¯¥∆äBISB	Ùt·.ã˘ÒñS•¯r"RW3	;NOıà"œç
	RE˙ïiN
4$˜BWWÉIT	#S˙PÊNó		;AW¯2j ©HE NE˚B´FFERÓÒBfœ≠	SRCD¯VRaÒ¢ÑÕü˙¬Q”•CTRN+ˆã)4	MOVÒ*)4Sıîôâ˜q‚‘ACOUNTÒ¢Ñƒã¯bi3Ò.‚EâUCT F˘ÙêPüINTERÒ¢Ñ¡ßL	R3	Ò.·œùVERT ˙ì–B≥TES
Ò3g÷-(R4)ıîòâwPOINT¯¥êTüÙ™∆ç¯¥êJ´ST RE¯1äMOV	S˙P‚BÖ(R0),ıö)	MOVÒ(⁄,ßRCTRNımÜäMOV	(˙LT´Y-(R4)Ò.È≈© NEW ˘ígK	BEQÒ-R	;  EN¯à$∆AZEROÓÒBaI©	SRCD˙êV(•4)
	¯Qhâm$
	N¯±ƒ®•4)
	¯RiâG00400ˆ)“áTRN+6Ò¢õ$uÒ+™RÉ˘¬Q”•CLNK,˙Mª•¯∞b ©˘PNãXT GU˚#E5I:	ADDÒ(Ÿ,•ˆDªç˘Ù¶†•˘3£†Ö˙±£E•
	BI¯bQﬁá2,R0ÓÒBfœ≠	R0,S˙P‚B±Ò¢Ñ¬•Ò,RÒÇbŒ©˙qaââPUREÓÒTÈCâBB:	.˙ÛÈDSRCDBˆ+”•CDB2,Ò4ÈCâ¯LFäÒBbŒ©SEC	I˘¥*“ã
SRC˙îß:.BLKWÒ¢ÑÆÖLKW
Ò+°LóW
	.¯S%◊		;IN˘5*EâÙ'†iÒ¢ÑÆÖLKW
Ò¢Ñ≈ù˙î‚√˘3hU•E
SR¯q!Xu	.BLK˙‚DâwRING ¯sÁT•OLLERÙ
 ü˙H)ÒTÈCâBP:	.¯S%◊		;PO˘3™E•
SRC¯ê°∫.BLKWÒ"DªáOUNTE˙CES•CDTA:Ò+°LóW

˙t°ƒÖ1:	.B˘íÎâi00		;¯UcFã˙T∆äß˙P‚Be:	.BL˘uƒ¥a0

Ò6$‘ß¯∞∆äı—gDá
EN¯ì$Œu				;¯≥¢ ü¯»&Iù¯®(RüCESSO˙CE	ß¯5©EèÒ¢Ñ√ôR	ROL˙¥"	;SET ˙ì–FãTCH F˙SÊ†áODE R˘Û&	TSTBÒ0ÍTÖ˘ä)5S	;EOL OR S¯≥d≠á˘Û'ŒÒ¢Ñ¬ô¯¢X§Ò.– ≥ES
	¯¥©O•	Q
1ÙéÑ√ôR	-(SP)		;INIT LISTING FL¯1∆ä.IF NDF	XEDCDR
	MOVB	CDR˙pk,ô˘3°UçımŸ.;REPLACE BORROWED CHAR
	.ENDC
	TS˙ÇhAßS		;PASS 1?
	B¯¥DπI		;  ˚1iç	TST	ERRBTS		;ANY ERRORS?
	BNE	7$		;  YES, G˘Ë"I•ECTLYıà"OANOT C˘Û&Eá˙ãE©C.
	TSTB	˘ì*Bô+LST.˘Ç]¡ùY LISTING ¯ëkIá¯Ø∆ä¯Qhâs$		; Ùßç	MOV	#LST.L,(SPı"]Ÿã˙kMÉ˘qPI© LOGICAL L˙E	ÖIT	#LC.LD,˘ê„LÉG	;LI˙u$ŒèÙ$“ã¯u$÷ã?
	BNE	5$		;  ˚1iç	TST	˘êÊVôÒ"]‘ãST OV¯¥ñ’ù¯ëi •˘1"ç	BLT	5$		;˘1ê<a, LIST ONLY IF ERROR˙cE	Ö¯ı∏I		;IFÙò,ALIST UNCON¯íjIü˘–fL≥Ò¢Ñ¬ì˙ÇQÃá.COM,LCMASK	;CO˘≥bŒ©ÙÍ–°RESSI˘ÛüçÒ0¢—2$		;  NOÓÒBfœ≠Ò0‰R°NT,LCENDL	;YES, ASSUME WEÙÙ¢†ßITTING AT COMMENT
2ÙéÑ¬ìT	#LCı‘ÈCYLCMAS˘b]ÃìNE SUPPRESSION?Ò¢Ñ¬ãQ	3$	Ò.– ùO
	M˘ıÑ£ôINBUFıì!≈ù¯ìª≥¯¥÷ °OINT ˙ì–S©¯4™ üF BUFFER
ˆi	.IF ˘—#	±MACROÒ¢Ñ‘ßTB	ROLSIZ+¯s‚Rü˘äÿâwANYTH˘3£†ìN COD¯®)OôL?
	BEQ	4ÙÇDªAÙßç	BIT	#LC.M¯∞ñLáMASK	˜s`√•O BIN¯4¨†ãXPANSION?
	BNE	4$		˜hNü
	BIC	#LC.ME,L¯q¶Aè	;YESıà$«ù˘Ù¢†õ¯®#LÉG
	.¯≥¢C4$:	BIT	LCMASK,LCFL¯1ƒªÉ˘÷jHìNG SU˙)Eß˙qb?ÒBaE£Ò.R	;  NO, USE CURRENT FLAGS
5$:	CLR	(SP)		˜vb”Y CLEA˙H&IßTING ˘≥‚E	BR	9$
7$:	M˘ı°	ôLTBL+˘îÍ.ãR,(SPı"]≈•˙SÈ,A˙qj °ROPER FLAGS

Ò+§∆ANDF	X˘êÈ≈£
	.I¯»'Dç	XLCT˙ìFäBIT	#LC.TTM,LCM¯4ÂâwTELETYPE M˘Ò"ø	BNE	8$		;  NO, BYP¯4È†ãXTRA LINE
	.EN¯ê∆äMOV	#STARS,R1	;"****ıJë	MOV	#OCTBUF,R2
	MO˙–¨‘Ò"]ÕüVE IN˙ì–Oá˙êf ÖUFFERÒ¢ÑÕüVB	#SPACE,(R2)+
	CALL	TS˙ëiR	;SETÙiRüRS
	¯s)Bıô)Ò.„O•M ASC˘6ÜäMOVB	ıË)YLSTMO¯ÉE	õOV	#OCTBUF,R1
	PUTLIN			;DRAW THE USER'S ATT¯≥™IüN
	.¯≥¢C8$:	MOV	#˘ígB´¯À&CÖEGL	;˘íi‘A¯≥™I•¯®&IùE
	MOV	#L˘3¢Œâ,LCENDL
9$:	CALL	PCROLL		;PRO¯qi”AENTRYÙÁ áODE R˘Û&ENDL10:	MOVB	(˙t¨ôSTMOD	;ANYTHING REQUESTED?
	BEQ	ENDL20		;  N˘„E	áLRB	@˘ê‚Œâ˘ÇDªß¯µAßCIZ TERMINATOR
	MOV	#OCT¯Uc,•ˆCE1cÙéÑÕüV	#SPACE*400+SPACE,(R2)+	;BLANK FILL
	CMP	#L˘3°Uç,R2	;TEST FOR END (BEGINNING OF LIN¯®!UçFER)
	BNE	11$ÓÒBWIç NDF	˚!‘©M
	BIT	#LC.TTM,LCMA˙rƒª©ELETYPE MO¯ë_ç	BNE	ENDL5ˆDªA NO
Ò+¢Œâ¯cE	õOV	#P¯ÃRcÒ¢Ñ‘ß˙ÇTRc)		;A˘÷jHì˘—–FüR FIRST PR˘3™ çIELD?
	BEQ	14$Ò"]†ANO
	MOV	#OCTPF0,R2	;YES, POINT TO ˘5äCALL	˙qjW•D		;UNPACK INTOÙ™∆çER
14$:	C˘îÑ®•ˆ*Dâw¯s"¡• PF0
	MOVÒ(ËFc,R1
	TST	(R1)		;ANYTHING FOR SECON¯à#IãLD?
Ò0¢—15$		˜hNü
	MO˙¬QœáTPF1,˙LÜäCALL	˙qjWâB		;L˘4Í Ø˘Ù¢ ü˙H!Y©E
	B˘5£o7*400ıä)1S	;TES˙à#O•Ù$Œó¯¥êMüDIFICATION
	BE˙"XµIÒ¢ÑÕüVB	#CH.XCL,(R2)Ò.–"O"
	BIT	#GLBFLGıä)1SÒ¢Ñ¬ãQ	15$Ò¢ÑÕüVB	#L¯µGYıô)15$:	CLR	(R1)		;CLE¯4êPçˆ#E	]˘1êNâ¯¬lLá˙qhç	MOV	Ùs·‘ßEQ,R2Ò¢ÑÕüV	#LI˘”™ÕYR0	;POINT TO CR¯±êLìNE NU˘∞¢“	MOVÒ*)0S+,R1
	CMP	R1,(R0)		;NEW CREF ˘’f¬ãR TO PUT O˙µçÒ0¢—ˆ-í	;  NOÒ¢ÑÕüV	R1,(R0)		;YES, CLEAR FL¯1∆äBIT	#LC.SEQ,LCM¯4ÂâwSUPPR¯¥È≈â?
	B˘—D±m$		;  YES
	DNC
	MOV	R2,˙qh≈ùD	;MARK HIGHESTÙ‚—´ENCE ¯≥¢16$:	˘≥ÎB#SPAC¯´Re)+
	¯sh	•2,SEQ¯≥¢	wTHROUGH?
	BLOS	16$		;  N˘„E	]ENDCÓÒBfœ≠	#OCT¯¥®,•2
	C¯3&	©STERR		;TEST FO˙H"“•ORS
Ò3g÷#OCTB˙±ï±m.,R2	˜t‚‘AFOR CONCAT¯≥†‘ìON
ENDL19:	MOV	LCBE¯ÛRc	;POI˘’Tü STAR˙à'∆ALISTI˘—–LìNE
	˘≥ÎB≥T			;˘≥ÎEAOVERÓÒBfœ≠	#OCTBUF,R1	;POINT TO OCT¯3B´FFERÓÒBhU©LIN			;TEST FOR HEADER AND LIST
ENDL20:
	CLRB	@LCBEGL		;DON'T DUPE LINE
	.IF NDF	XLCTTM
	TST	ROLUPD		;FINISHED?
	BEQ	ENDL30		;  YES, DON'T LOOP
	.ENDC
	CALL	PCROLL
	BEQ	ENDL30		;EXIT IF EMPTY
	BIT	#LC.BEX!LC.BIN,LCMASK	;BINARY EXTENSION SUPPRESSED?
	BEQ	ENDL10		;  NO
	BR	ENDL20		;YES, DON'T LIST

ENDL30:	TST	(SP)+		;PRUNE LISTING FLAG
	ZAP	CODROL		;CLEAR THE CODE ROLL
	MOV	CLCLOC,R0
	.IF DF	YPHASE
	SUB	PHAOFF,R0
	.ENDC
	CMP	R0,CLCMAX	;NEW HIGH FOR SECTOR?
	BLOS	31$		;  NO
	MOV	R0,CLCMAX	;YES, SET IT
31$:	RETURN
	.IF NDF	XLCTTM

ENDL50:	MOV	#OCTBUF,R2	;POINT TO START OF BUFFER
	CALL	TSTERR		;SET ERROR FLAGS
	.IF NDF	XLCSEQ
	MOV	#LINNUM,R0
	MOV	(R0)+,R1
	CMP	R1,(R0)
	BEQ	2$
	MOV	R1,(R0)
	BIT	#LC.SEQ,LCMASK
	BNE	2$
	MOV	R2,R4
	DNC
	MOV	#OCTBUF+7,R0
1$:	MOVB	-(R2),-(R0)
	MOVB	#SPACE,(R2)
	CMP	R2,R4
	BHI	1$
	.ENDC
	MOV	#OCTBUF+7,R2
2$:	MOVB	#TAB,(R2)+
	MOV	#PF0,R1
	BIT	#LC.LOC,LCMASK
	BNE	4$
	TST	(R1)
	BEQ	3$
	CALL	SETWRD
3$:	MOVB	#TAB,(R2)+
4$:	CLR	(R1)
	MOV	#PF1,R1
	BIT	#LC.BIN,LCMASK
	BNE	ENDL19
	MOV	#3,R4
5$:	TST	(R1)
	BEQ	6$
	CALL	SETWDB
	BIT	#77*400,(R1)
	BEQ	6$
	MOVB	#CH.XCL,(R2)+
	BIT	#GLBFLG,(R1)
	BEQ	6$
	MOVB	#LET.G,-1(R2)
6$:	MOVB	#TAB,(R2)+
	CLR	(R1)
	DEC	R4
	BEQ	ENDL19
	TST	ROLUPD
	BEQ	6$
	CALL	PCROLL
	BR	5$

	.ENDC
TSTERR:				;TEST AND PROCESS ERRORS
	MOV	ERRBTS,R0	;ANY ERRORS?
	BEQ	TSTER9		;  NO
	ENTOVR	9
	BIC	#ERR.,R0	;YES, ".PRINT"?
	BEQ	4$		;  YES
	INC	ERRCNT		;BUMP ERROR COUNT
4$:	MOV	#ERRMNE-1,R1
1$:	TSTB	(R1)+		;MOVE CHAR PNTR AND CLEAR CARRY
	ROR	ERRBTS		;ROTATE ERROR BITS
	BCC	2$
	MOVB	(R1),(R2)+
	.IF NDF	XCREF
	MOVB	(R1),R0		;FETCH CHARACTER
	TSTR50			;CONVERT TO RAD50
	CALL	MULR50		;LEFT JUSTIFY
	CALL	MULR50
	MOV	R0,SYMBOL	;STORE
	CLR	SYMBOL+2
	MOV	#ERRROL,ROLNDX	;PREPARE TO CREF
	CRFREF			;DO SO
	.ENDC
	BR	1$

2$:	BNE	1$
	XITOVR	INLINE
TSTER9:	RETURN

	ENTSEC	IMPURE
ERRCNT:	.BLKW			;ERROR COUNTER

	ENTSEC	IMPLIN
ERRBTS:	.BLKW			;ERROR FLAGS
	XITSEC

	.IF NDF	XEDCDR
	GENEDT	CDR,,1
	ENTSEC	IMPURE
CDRSAV:	.BLKW			;SAVED CHAR FROM CARD FORMAT
	.ENDC

	XITSEC
	.SBTTL	STATEMENT PROCESSOR

STMNT:
	MOV	CNDWRD,R0	;IN CONDITIONAL?
	BIS	CNDMEX,R0	;  OR MEXIT?
	BNE	40$		;  YES, BRANCH IF SUPPRESSED
	GETSYM
	BEQ	20$
	CMP	R5,#CH.COL	; ":"
	BEQ	LABEL
	CMP	R5,#CH.EQU	; "="
	BNE	1$		;  NO
	JMP	ASGMT		;YES, PROCESS IT

1$:	.IF NDF	XMACRO
	MSRCH
	BEQ	2$
	CRFREF
	JMP	MACROC		;MACRO CALL
	.ENDC

2$:	OSRCH
	BEQ	30$
	CRFREF
10$:	JMP	PROPC		;PROCESS OP CODE
20$:
	.IF NDF	XEDLSB
	MOV	#10.,R2		;NOT SYMBOL, PERHAPS LOCAL SYMBOL?
	CVTNUM
	BEQ	30$		;  NO
	CMP	R5,#CH.DOL	;NUMBER, TERMINATED BY "$"?
	BNE	30$		;  NO
	GETNB
	CMP	R5,#CH.COL
	BNE	30$
	MOV	CLCLOC,R0
	SUB	LSYBAS,R0	;COMPUTE LOCAL OFFSET
	BIT	#177400,R0	;IN RANGE
	BEQ	21$		;  YES
	ERROR	A		;NO, ERROR
21$:	LSRCH			;YES, DO A LOCAL SYMBOL SEARCH
	BR	LABELF		;EXIT THROUGH LABEL PROCESSOR
	.ENDC

30$:	SETSYM			;RESET CHAR POINTER AND FLAGS
	TSTB	CTTBL(R5)
	BLE	42$		;NULL IF END OF LINE
	MOV	#WRDSYM,R1	;NEITHER, FUDGE ".WORD" DIRECTIVE
	MOV	#SYMBOL,R2
	CALL	XMIT4		;MOVE PST ENTRY TO "SYMBOL"
	BR	10$

40$:	CALL	SETCLI		;UNSAT CONDITIONAL, TEST DIRECTIVE
	BMI	41$		;  BRANCH IF EOF
	BIT	#DFLCND,R0	;CONDITIONAL?
	BNE	10$		;  YES, PROCESS IT
	BIS	#LC.CND,LCFLAG	;MARK AS UNSAT CONDITIONAL
41$:	CLR	R5
42$:	RETURN			;IGNORE LINE
SETCLI:
	ENTOVR	5
1$:	GETSYM			;TRY FOR SYMBOL
	.IF NDF	XEDLSB
	BNE	3$		;BRANCH IF FOUND
	BITB	#CT.NUM,CTTBL(R5)	;PERHAPS A LOCAL?
	BEQ	5$		;  NO
2$:	GETCHR			;PERHAPS, TEST NEXT
	BITB	#CT.ALP!CT.NUM,CTTBL(R5)	;ALPHA/NUMERIC?
	BNE	2$		;  YES, TRY AGAIN
	SETNB			;NO, BYPASS ANY BLANKS
	.IFF
	BEQ	5$		;  EXIT IF NO SYMBOL
	.ENDC
3$:	CMP	R5,#CH.EQU	;ASSIGNMENT (=)?
	BEQ	5$		;  YES, IGNORE THIS LINE
	CMP	R5,#CH.COL	;LABEL (:)?
	BNE	4$		;  NO
	GETNB			;YES, BYPASS COLON
	BR	1$		;  AND CONTINUE

4$:	OSRCH			;TRY FOR OP-CODE
	MOV	MODE,R0		;MODE TO R0
	BPL	6$		;BRANCH IF DIRECTIVE
5$:	CLR	R0		;FALSE
6$:	RETURN

	XITOVR
LABEL:				;LABEL PROCESSOR
	.ENABL	LSB
	CMP	SYMBOL,R50DOT	;PERIOD?
	BEQ	4$		;  YES, ERROR
	.IF NDF	XEDLSB
	CALL	LSBSET		;FLAG START OF NEW LOCAL SYMBOL BLOCK
	.ENDC
	SSRCH			;NO, SEARCH THE SYMBOL TABLE
	CRFDEF
LABELF:	SETXPR			;SET EXPRESSION REGISTERS
	BIT	#DEFFLG,(R3)	;ALREADY DEFINED?
	BNE	1$		;  YES
	MOV	CLCFGS,R0	;NO, GET CURRENT LOCATION CHARACTERISTICS
	BIC	#377-<RELFLG>,R0	;CLEAR ALL BUT RELOCATION FLAG
	BIS	#DEFFLG!LBLFLG,R0	;FLAG AS LABEL
	BIS	R0,(R3)		;SET MODE
	MOV	CLCLOC,(R4)	;  AND CURRENT LOCATION
	BR	3$		;INSERT

1$:	BIT	#LBLFLG,(R3)	;DEFINED, AS LABEL?
	BEQ	2$		;  NO, INVALID
	CMP	CLCLOC,(R4)	;HAS ANYBODY MOVED?
	BNE	2$		;  YES
	CMPB	CLCSEC,(R2)	;SAME SECTOR?
	BEQ	3$		;  YES, OK
2$:	ERROR	P		;NO, FLAG ERROR
	BIS	#MDFFLG,(R3)	;FLAG AS MULTIPLY DEFINED
3$:	INSERT			;INSERT/UPDATE
	SETPF0			;BE SURE TO PRINT LO¯pjIü˘»#IãLD
	BR	5$

4$:	ER˙SÈ	£
5$:Ò1‚‘ùB			;BYPASS COLON
	MOV	CHRPNT,LBLEND	;MARK E˘—Oç LABEL
	BRJMP	STMNTÒ"]‘•Y FOR MORE

	.DSABL	LSB
	.SBTTL	ASSIGNMEN˙à(RüCESSOR

¯4„Õ©:
	ENTOVR	2
	GETNBÒ"DªÖYPASS "="
	MOV	#SYMBOL+4,R1	;˙qj õIX-MASTER REGISTER
	MOV	-(R1),-(SP)	;ST¯0Â†ßYMBOLÒ¢ÑÕüV	-(Rˆ*V-QSP)
Ò4¢ÃãXP			;GET NON-EXTERNAL EX˙¢”ßION
Ò3g÷(SP)+,(R1)+	;RESTORE SYMBOL
	MOV	(˙t´Y(R1)+Ò¢†”èMTF:	SETPF1			;SET LISTIN¯Ë#IãLD
	SETXPR			;SET EXPRES˙rgŒAREGISTERS
	BITÒ(‚“•.U,ERRBTS	;ANY ˙≥¢EçINED'˙o∆äBNE	3$		;  YES,Ù'ŒOT DEF˘3¢ç	BIS	Ùq"∆çLG,(R3)	;FLAG AS DEFINED
	MOVÒ*)3S,-(SP)	;NO, STACK VALUE
	MOV	(R4),-(SP)
	SSRCH			;SEARCH SYMBOL TABLE
	MOV	(SP)+,(R4)	;˙Qi‘üRE VALUE
	BIC	#^C<GLBFLG˜ÀRg)
	BIS	(SP)+,(˙L‘ç	CMP	(R1),R50DO˙Ç]ÕãSSING WITHÙ$EA˙ﬂçÒ0¢—1$		;Ù,≈ßÒ¢Ñ…ùSERT			;INSERT ˘—k†≠ALUE
	BR	3$
ÓÒLR:CMPB	ıô)YCLCSEC	;SAME SE¯u'“Ò¢Ñ¬ùE	2$		;  N˘ÎE•˙SÈ	MOV	ıö)Y¯s!ÃüC	;YES, SET NEWÙ'√ÉTION
	BR	3$

2$:	ERRORÒ3Fäg$:	CRFDEFÓÒBiE©˙¥ßÒ¢ÑÿìTOVRÓÒCÆßBTTL	OP CO¯ëPP•OCESSOR

PROP¯nÑâ	;PROCESS OP CO¯ëFäMOV	#˘≥‚EYR4	;P˘ÚgTATO MO¯ëFäMOV	(˙M¨•1		;L¯∞kEARESUL˙à$ŒAR1
	¯s)	QR4)+	Ò.È≈©Ù'†µ¯¥ß¨APOINTÙ'†≠ALUEÓÒBfœ≠	#CLC˘ì·¨•2	;PO˘3™ •2 TO ˘ì·¡©ION C˘ıgTã˙CE	Ö˘5£c00000ıq#LèEV,R1Ò.Á–ACODE ˘ÙêE≠EN DI˙Qa‘ì˙—_çÒ0¢—1$		;Ù'O	BITÒ(ÿ¨QR2)		˜vb”Y CURR¯≥™L≥ EVEN˜„E	Ö¯¥D±IÒ"]†A˚1içÒ2gCıô)Ò.ÁOY MAKEÙj ãVEN
Ò1iRüR	B		˜hAùD FLA¯Ë"“•˘ÙÜäcÙéÑ¬ìT	#DF˘ë·MYR1	;B˚5"†õODE D˘4¢√©˘5¢øÒBaE£	2$		˜hNü
	IN¯baY©MOD		˜vb”Y SET ¯” «2$:	˙îÍ	•1		;O˙aœâE?
	¯Sdâc0$		;Ù,≈ßÒ¢ÑÕü˙¬TRi),-(S˙
DªùO, DI˙Qa‘ì˙—WÒ0ÊR(R4)	Ò.·Ãã¯4êVÉ˘ïbç	CLR	˙LƒâwSTARTÙ‰‘ë R3=0Ò¢Ñ õPOVR	ıË)W		;GOÙ'†°ROPERÙ ŒâLER
Ò¢ò∞I˜Bfœ≠Ò(ÿ7o776,P¯t°Œ©	;LIS˙à&OáATIONÙ„ çIRST ˙ÛÈDAONLYÓÒBi‘áODE		Ò.È‘´FF BA˙ra†≠ALUEÓÒBWIç NDF	˚ÈEç
	MO˙–Ñ“c,CRFD¯”±;SET ÙJë áREF M¯4•≈•S
	.˘1™F	SWA¯Bi1	BICÒ(ÿ∑o600,Rˆ"]√ô¯∞i ë˘1‰ üRDER ¯RjSÒBfœ≠Ò4ò¨üPCLASÒ.È¡≠E CLA˙t∆ä¯4Ê	•ˆ#E	É˙s“cÒ"]∆üUR BY˙ëi†°ER TA¯S"†ãNTRYÓÒBaÃ•Ò+TS°ı"Dªß¯µAA˙u'–°ER
	˘≥Î	üPJTBLılîRc),-(S˙
DªßTACK ˙qaœù¯à “èÒ¢Ñ¬ùE	11$Ò"]¬•ANCH ˘1êTØO ARG˙cE	©ST	(S˙
Uâ;ONE ¯4£¨APRUNEÙ"“õ˘3†‘ü˙CE1c$:	MO˙¬g–ï˙ê¶(•ˆ*VRc	;SETÙ$EAFIRSTÙiG´MENTÓÒBaE£	14$	Ò.·RÉ˘–‰ ì¯»'OAARGSÓÒLY$u	MOV	˙LV-QSP)	;˙pkEAA COP˚('∆ATHE A˙Q∆äSWAB	ıË)	;SHI¯’CüUNT T˘Ë)IèHT HA˘ëÜä¯RaâGˆ-€¥a0,R1	˜riœôATE L˘ı–B≥˙ëFä˙îÍA•G			;¯sÊÕÉ TESTÒ¢Ñ√ô˙Bi0Ò.„UùCTIONÙ¢«ì˙u"“ÒBa¡ôL	OPJ¯Pi®•1)	;C¯3& °ROPERÙß’©INE
Ò+§∆©
	RO˘êÑ√•¯—#LW1	;MOVE SE¯sÁDA¯“bÃâÙ§‘ÒBWEù¯ê∆ä13$:	¯4Ê	•0		;S˘cTARESULT
	DECB	(SP)		;COUN˙à$ŒASP, RH
	BGE	13$
	ROR	R0Ò"]◊ãÙ‚Œ©ÙÁEATOO MANY
	MOV	ROLBAS+CODROL,R1
	B˘4ƒ“a,6(R1)	;SET EXP˙Qi”ìON BI˙î∆äTST	(SP)+		;PRUNE WORK ENTRY
14$:	MOV	(SP)+,˙LDªèET NE˚A•G FRO˘®)‘É¯r∆äBNE	12$		;¯T†ŒáH IF ˘”Í ©ERMINATORÓÒCE	]˘1êNâ¯¬lZãRR
	˘≥Î	•OLBAS+CODROL,R1Ò¢ÑÕü˙¬[(•ˆ*VRa	;SET FOR ÙVë ãRROR TESTSÒ¢ÑÕüV	R0,˙LFä¯RaâGˆ0a7,R1
	CMP	#000ˆ,ò,•1	;  ˘Sh Q˙JUç	BEQ	ˆLíÒ0§√Ùl0o00,R1
	CM˙Q∞a4020,R1	;  JSR  X,(Rˆ*UçÒ0¢—22$
Ò3g÷R0,R1
	BI˙ÇQ∞aˆÏ0Y˙LDªç˘4©‘AARG TYPE 0?
	B˘—D≤gÙÇDªA NO, ˘Ú∆ä¯RaâG100777,R1ÓÒBaE£Ò,ô§	CMP	#070000,R1	;DOUBLE ¯1"RãSS TYPE?
	BEQ	23$		˜hNü
	MO˙¬i0YR1
	¯RaâG170017,R1
	CMPÒ(ÿ0a760,Rˆ"]†AMOV P¯k-¿ªX(R)ÓÒBaE£Ò,ô$ÒBaIá	#177ˆÏ[¨•ˆ#E	áMP	#000020ıîòâw  (R)ıcE	ÖEQ	21ÙÉE	áMP	#000040ıîòâwÙ®•)
	B˘—D≤g$
21ÙéÑÕüV	R0,R1
	˙SÊ	•ˆ#E	•OL	R1
	SW¯0Ñ“c
	SU¯Bi0YR1
	¯Rj	G000007,R1	;  R1=R2
Ò0ßE23$
22$:	ERRORÒ6Üäe3$:
Ò+¢Œâ¯cEÒ4¢‘´RN
Ò+¶¡áRO	GENOPJ	NUMBER,SUB˙LVSáˆ+)’ÖR2,SCˆB]œ°ÙÁƒãÙ™Õ°Ù ¬ôE
	.GLOBL	OPCL'NUMBER
OPCL'NUMBER=	<.-˘Ù%TÖL>/4ÓÒBWIìF NB ˜îÍ¬•1>,	.BYTE	SUBR1ı≥ËJÖAS
	ı“d∆A B <S˙∞©1}ıÇWB≥˙ëD∞	.BYTE	SC1+0
Ò+§…ç NB <˙uaRe>,	.B˚5"âßUBR2-˘Ù%BÉS
	.IIF  B <SU¯Tô>Y	.BYTE	0
Ò+°Y©E	SC2+0
	.ENDM

	¯≥™SãC	DPURE
OPJTBL˜BDâ;OP CODE JUMP TABLEÓÒBc≈ùOPJ	00
	GENOPJ	01,	¯1lPÒBc≈ùOPJ	0ˆK¡ã˚	m,	AEX˙E	èENOPJ	03,	REGEXP
	GENOPJÒ,,BROPÓÒBc≈ùOPJ	0ˆ´“ã¯ÒlPYÒ-ñ	ÉEXP
Ò1‚ŒüPJ	06ıÇjRÉPOP
Ò¢ÑÆìF NDF	X45
	GENOPJ	07,	AEXP,	0,	REGEXP,	6
	G¯≥ß–ï	08,	˙Qc≈±P,	6,	SOBO˙E	è¯≥ß–ï	09,	¯1lPYÒ,	•¯±‚ÿ°,	6
	GENO˙Ñ±a,	MARKOP
	GENOPJ	11,	AEXP,	0,Ò1)GãXP,	6Ò¢Ñ«ãNOPJ	ˆ,ñ	âRGEXP,	6,	AEXP,Ò,äGENOPJ	13,	SPLOP
	GENOPJ	14,	AEXP,	0,	DRGEXPıÇ[	.END¯cEÒ¢Ñ≈ù˙î‚√IMPLIN
OPCLAS:	.BLKW			;˘ÙCü¯ëPCô¯4Èç	XITSEC
OPJBAS:				;INDEX BASE FOR FOLLOWIN¯Ë)O´TINES
	RETURN


REGEXP:				;REG˘4ÍE• EXPRESSION
	A¯T‚ÿ°			;E˙–fUÉTE ABSOLUTE
	BIT	#1ˆÌ€∑a,R0	;ANY O˙—iFôOW?
	BEQ	ˆ)âw  NOÓÒBb“•˘ÙÑ“	;YESıà#LÉ¯Ë"“•˘ÙÜäBIC	#ˆ-€∑oˆ)0;CLEAR OVE˙Q¶OØ
1$:	RETURN
ÓÒP©O°:				;BRANCH DISPLACEMENT TYPE
	RE˘ëlP	CMP¯Bi≈áTOR,CLCSEC
	BN¯¢Y$	SUB	CLCL˘÷RaÒ¢Ñ¡ß˙Bi0	BCS	2$
Ò1"√R0
	MOVB	R0,R3		;EXTEND SIGN
	CMPÒ4ò,•3		;P˙SËE•?
	B¯¥D≥I		;  ˚1iç2$:	E˙Tß“A
	M˘ıÑ£a00377ıîòˆi	Ö˘0ƒ£c77400ıîò	wCLEARÙ'”ßIBLE ˘c»A¯RjSÒBiE©URN

TRAPOP:	Ò"Dª©˙Ph ©YPE
	ENTOVR	2ÓÒBi≈©XPR			;SET EXPR¯¥È…ü˘»)EèISTER˙cE	õOV	(RˆäV-Q˙tâwSAVE THE VALUE
	EXP˙BDâw¯µ†Ã´¯5"†©˘PE±˙¢”ßION (˘’fLAOK)
Ò2gCBYTMO¯ÇDª©REAT AS BYTE
	˙qjIõM
	C˘¥!	QR2),#ˆL	wABSOLUTE?
	BNE	1$		;  NO
	TS˙ÇTS°)+		;YES, ˙™ŒãÙÍAá˘cE	õOV	(RˆäVRa		;VALUE TO MERGE
	RETUR˘√E1$:	ZAP	CODROL	Ò.·ÃãAR CO¯ëPRüLL
	˙u!œâE			;STORE ADDRESS
	MOV	ÙlX0a00,(R3)	;SET FO˙H ¬ßOLUTEÙ¨‘ã
	SW¯0Ñ®ßP)
	˘≥Î	QSP)+,ıö);SET ˘Ù§«ìONAL VALUE
	STCODE
	CLRÒ4ò	RETU˙SÜäXITOV˙CE.IF N¯ëÑÿi5

DRGEXP:			Ò.‚O´BLE R¯±‰”©ER EX˙¢”ßION
Ò0‡Ãô	REGEXP		;¯µ†Ã´ATE NORMAL
	MOV	#17ˆÌ€¥YR3	;T¯¥Í çOR OV¯¥£LüW
	B˙Bf¡ßKR3
Ò¢©œÖOP:		Ò"]”üB OPE˙PjO•
	CALL	BROP		;FREE-LOAD ˘Ò£ ÖRANCHÙËE•ATOR
	MOVB	R0,R0		;EXTEND SIGN
	NEG	R0		;POSITIVE FOR BACKWARDS
	BR	MASKB6		;MASK TO SIX BITS

SPLOP:				;SPL TYPE
	ABSEXP
	MOV	#177770,R3	;ONLY THREE BITS ALLOWED
	BR	MASKR3

MARKOP:				;MARK OPERATOR
	ABSEXP			;EVALUATE ABSOLUTE
MASKB6:	MOV	#177700,R3	;SET TO MASK HIGH ORDER
MASKR3:	BIT	R3,R0		;OVERFLOW?
	BEQ	1$		;  NO
	ERROR	T		;YES, FLAG TRUNCATION ERROR
	BIC	R3,R0		;CLEAR EXCESS
1$:	RETURN

	.ENDC
AEXP:	SAVREG			;ADDRESS EXPRESSION EVALUATION
	SETXPR			;  AND SET "EXPRESSION" TYPE
	INC	EXPFLG
	CLR	-(SP)		;ACCUMULATE ON TOP OF STACK
AEXP02:	CHSCAN	AEXTBL		;TEST FOR OPERATOR
	BEQ	AEXP22		;  NO
	JMP	(R0)		;YES, GO TO IT

	ENTSEC	DPURE
AEXTBL:				;ADDRESS EXPRESSION TABLE
	GCHTBL	CH.IND,	AEXP03	;  "@"
	GCHTBL	CH.HSH,	AEXP06	;  "#"
	GCHTBL	CH.SUB,	AEXP10	;  "-"
	GCHTBL	CH.LP,	AEXP12	;  "("
	.WORD	0		;TERMINATOR
	XITSEC

AEXP03:	TST	(SP)		;"@", SECOND TIME AROUND?
	BEQ	4$		;  NO
	ERROR	Q		;  YES
4$:	BIS	#AM.DEF,(SP)	;SET IT
	BR	AEXP02

AEXP06:				;LITERAL (#)
	.IF NDF	XFLTG
	CMP	#OPCL11,OPCLAS	;CLASS 11?
	BNE	8$		;  NO
	CALL	FLTG1W		;YES, TRY FOR ONE-WORD FLOATING
	BNE	9$		;BRANCH IF OK
	.ENDC
8$:	GLBEXP			;EVALUATE EXPRESSION
9$:	BIS	#AM.IMM,(SP)	;SET BITS
	BR	AEXP32		;USE COMMON EXIT

AEXP10:				;AUTO-DECREMENT (-)
	CMP	R5,#CH.LP	;FOLLOWED BY "("?
	BNE	AEXP20		;  NOT A CHANCE
	CALL	AEXPLP		;PROCESS PARENS
	BIS	#AM.DEC,(SP)
	BR	AEXP36

AEXP12:				; "("
	CALL	AEXPL1		;EVALUATE REGISTER
	CMP	R5,#CH.ADD	;AUTO-INCREMENT (+)?
	BNE	14$		;  NO
	GETNB			;YES, POLISH IT OFF
	BIS	#AM.INC,(SP)	;SET BITS
	BR	AEXP36

14$:	BIT	#AM.DEF,(SP)	;INDIRECT SEEN?
	BNE	16$		;  YES
	BIS	#AM.DEF,(SP)	;NO, SET BIT
	BR	AEXP36

16$:	CLR	(R3)		;MODE
	CLR	(R4)		;  AND VALUE
	BR	AEXP30
AEXP20:	SETSYM			;AUTO-DEC FAILURE, POINT TO -
AEXP22:	GLBEXP			;GET AN EXPRESSION
	CMP	R5,#CH.LP	;INDEXED?
	BEQ	24$		;  YES
	BIT	#REGFLG,(R3)	;FLAGS
	BNE	AEXP36
	.IF NDF	XEDPIC!XEDAMA
	TST	(SP)
	BNE	23$
	.IF NDF	XEDPIC
	BIT	#ED.PIC,EDMASK
	BNE	1$
	BIT	#GLBFLG,(R3)
	BNE	2$
	CMPB	(R2),CLCSEC
	BEQ	23$
	BR	2$
1$:
	.ENDC
	.IF NDF	XEDAMA
	BIT	#ED.AMA,EDMASK	;ABSOLUTE MODE REQUESTED?
	BNE	23$		;  NO
	.ENDC
2$:	BIS	#AM.IMM!AM.DEF,(SP)	;OK, SET ABS MODE
	BR	AEXP32
	.ENDC

23$:	BIS	#AM.REL,(SP)	;NO
	SETDSP			;SET DISPLACEMENT
	BR	AEXP34

24$:	BIT	#REGFLG,(R3)	;FLAGS
	BEQ	26$
	ERROR	R
	BIC	#REGFLG,(R3)	;FLAGS
26$:	MOV	(R1)+,-(SP)	;STACK CURRENT VALUE
	MOV	(R1)+,-(SP)
	MOV	(R1)+,-(SP)
	MOV	(R1)+,-(SP)
	CALL	AEXPLP		;PROCESS INDEX
	MOV	(SP)+,-(R1)	;RESTORE
	MOV	(SP)+,-(R1)
	MOV	(SP)+,-(R1)
	MOV	(SP)+,-(R1)
AEXP30:	BIS	R0,(SP)
	BIS	#AM.NDX,(SP)
AEXP32:	SETIMM
AEXP34:	STCODE
	CLR	R0
AEXP36:	BIS	(SP)+,R0
	RETURN
AEXPLP:				;AEXP PAREN PROCESSOR
	GETNB			;BYPASS PAREN
AEXPL1:	CALL	REGEXP		;GET A REGISTER EXPRESSION
	CMP	R5,#CH.RP	;HAPPY ENDING ")"?
	BNE	1$		;  NO
	JMP	GETNB		;YES, BYPASS AND EXIT

1$:	ERROR	Q		;NO
	RETURN

	.IF NDF	XEDAMA
	GENEDT	AMA,,1		;ABSOLUTE MODE ADDRESSING
	.ENDC
	.IF NDF	XEDPIC
	GENEDT	PIC,,1		;PIC MODE
	.ENDC
	.SBTTL	EXPRESSION TO CODE-ROLL CONVERSIONS

SETIMM:				;SET IMMEDIATE MODE
	SAVREG			;SAVE REGISTERS
	SETXPR			;  AND SET "EXPRESSION" TYPE
	MOV	#IMMMOD,R1	;SET TABLE INDEX
	TST	ENDFLG		;SPECIAL FOR .END?
	BNE	SETDS1		;  YES
	BITB	#GLBFLG,(R3)	;EXTERNAL?
	BNE	SETDS3		;  YES, USE COMMON HANDLER
	CMPB	(R1)+,(R1)+	;MOVE INDEX
	BITB	#RELFLG,(R3)	;RELOCATABLE?
	BEQ	SETDSX		;  NO, ALL SET
	TSTB	(R1)+
	CMPB	(R2),CLCSEC	;YES, CURRENT SECTOR?
	BEQ	SETDSX		;  YES
	BR	SETDS1		;NO


SETDSP:				;SET DISPLACEMENT MODE
	SAVREG			;SAVE REGISTERS
	SETXPR			;  AND SET "EXPRESSION" TYPE
	MOV	#DSPMOD,R1	;SET INDEX
	BITB	#GLBFLG,(R3)	;EXTERNAL?
	BNE	SETDS3		;  YES, TEST FOR ADDITIVE
	CMPB	(R1)+,(R1)+
	CMPB	(R2),CLCSEC	;CURRENT SECTOR?
	BEQ	SETDS2		;  YES
	TSTB	(R1)+
	TSTB	(R2)		;LOOKING AT ABSOLUTE?
	BEQ	SETDSX		;  YES
SETDS1:	TSTB	(R1)+
	CLR	R0		;CLEAR HIGH ORDER
	BISB	(R2),R0		;SET SECTOR
	IMULI	RS.SEC*2,R0	;MULTIPLY BY BYTES/BLOCK
	ADD	ROLBAS+SECROL,R0	;COMPUTE BASE OF SECTOR ROLL
	MOV	(R0)+,SYMBOL	;XFER SECTOR NAME TO SYMBOL
	MOV	(R0)+,SYMBOL+2
	BR	SETDSX
SETDS2:	MOVB	ROLSIZ+CODROL+1,R0	;GET CODE ROLL ENTRY NUMBER
	INC	R0
	ASL	R0		;MAKE IT 4 OR 6
	ADD	CLCLOC,R0
	.IIF DF YPHASE,	SUB	PHAOFF,R0
	SUB	R0,(R4)
	CLR	MODE
	BR	SETDSX

SETDS3:	TST	(R4)		;EXTERNAL, ANY OFFSET?
	BEQ	SETDSX		;  NO
	TSTB	(R1)+		;YES, ADVANCE INDEX
SETDSX:
	.IF NDF	XEDPIC
	BIT	#ED.PIC,EDMASK
	BNE	12$
	TSTB	(R1)
	BEQ	12$
	CMPB	(R2),CLCSEC
	BEQ	10$
	CMP	R1,#DSPMOD
	BHIS	11$
	BR	12$

10$:	CMP	R1,#DSPMOD
	BHIS	12$
11$:	ERROR	R
12$:
	.ENDC
	MOVB	(R1),(R2)	;FILL IN TYPE
	TST	BYTMOD		;IN BYTE MODE?
	BEQ	4$		;  NO
	TSTB	(R4)+		;MOVE TO HIGH BYTE OF "VALUE"
	MOVB	(R4),R0		;ANY HIGH ORDER BITES?
	BEQ	1$		;  NO, OK
	INC	R0		;YES, ALL ONES?
	BNE	2$		;  NO, YOU LOSE
1$:	CMPB	(R2),#RLDT01	;ERROR IF RLD ˙ñhEAˆ#E	ÖEQ	2$
	CMPB	(R2),#R˘ë*1k	;  O˙Hµ	BNE	3$
2$:	ABSERR			;FLAG ERROR
3$:	CLRB	ıö)	BISB	#200,(R2)	;FL¯1–Aß BYTE
4$:	RETURN


	ENTSEC	TXTBYT

IMMM˘Ò	]BYTE	RLDT0ˆK“ôDT05,	RLDT00,	RLDT01ıÇiLâT15,	0

DSPMOD:	.BYTE	RLDT04ıÇiLâT06,	RLDT00,	RLDT03,	RLDT16,	0

	ENTSE¯bdÕ°LIN
¯VjMüD:	.B˘íÎâ	;BYT¯®&œâE IF NON-ZERO
	XITSEC
Ò+©¬©TL	DI˙Qa‘ìVES

	SETOVR	3

	.GLOBL	GLOBL
¯Û'¬ô:				˜qÊOÖAL HANDLER
1$:	GSARG			;¯Òj É SYMBOL
	BEQ	3$		;  ENDÓÒBi”•CH			;NO, SEARC˘*”ãR SYMBOL TABLEÓÒBaI©	#REG¯”#¨çLAGS	;REGISTER?Ò¢Ñ¬ùE	2$	Ò.– ≥ES, E˙Tß“	BIS	#GLBFLG,FLAGS	;NO, FLAG ¯4–GôOBL
	INSERT			;UPDATE/INSERT
	CRFDEF
	BR	1$

2$:	ERROR	R
	BR	1$

3$:	RETURN


	ı—ÊOÖL	END

END:				;TEMP EN¯à"I•ECTIVE
	EXPR		Ò.‚÷ÉLUATE THE EXPRE˙t‰œù
	BNE	1$	Ò.– Ö˙PgCëÙc ùON-NU˘ìä˘3°âQR4)		;NULL, MAK¯®$‘AA ONE
1$:	RELT˙uâ;NO G˘ì·AôS ALLOWED
	INCÒ1gDç˘ë∆äSETIMM			;¯“fLA˘ıj ÖLOCKÓÒBi≈©˙òâ	;LIST FIELD 1ÓÒBfœ≠	#SYMBOL,R1
	MOV	#ENDVECıîô	JMP	XMIT4Ò"]Õü˙—PTüÙgDAVECTO˙CE	ENTSEC	IM˙iEENDVEC:	.BLKW	ˆÇDªãND VECTOR STORA¯ÒFä	ENT˙qaâ±CTPRGÒ¢Ñ…ùC	END˙—a´m	;DEF¯5fTATO NOÙgDAVECTO˙CE	XITS¯∞∆äXITOV˙CEı—ÊOÖ˘Ç`”ãCT,	C˙qa‘
	S¯µ'÷•	3
A˙qa‘u
	CA˘ì”ãTMAX	Ò.·ÃãAN UPÙÍ“•¯≥™ ß¯∞ÍO•
	MO˙¬i5aABS,S˚3aOô	;SETÙó ÉBS."ÓÒBfœ≠Ò4ö∞É¯T’≤YSYMBO˘äŸ	BR	C˙qa‘ç		;US¯®!œõMON E˚j
CSE¯uÒ0‡ÃôÒ4‚‘õ¯6âw¯s"¡ùÙh á˙¥©EùT SEC˙ìÈ	GETS˚3Dâ;GET ¯4£’õENT (˘ÙêN´˘ìç¯t‚√©F:	SC¯3Ñ”ãCROL	Ò.È√ÉN FORÙ`‘á˘E	Ö˘—D≥I		;  ¯T†ŒáH IF ˘∞jCë
	MO˙–Ñ“üLSIZ+ˆ*È≈áROL,S¯∞ÍO•	;NEWÙÍŸY SET ˙qa‘üR
	B¯¥D≤IÒ"]¬•¯3°»AIF AB˙h)≈áTOR  ıß“A˘”Î©ÒBaIß	#REL¯”#¨õ˘Ò"çˆI	ìNSERTÒ"DªÉTTACHÙ'†•OLL
ˆi	ßETPF1Ò¢Ñ√•FREFÓÒBfœ≠	#SYM¯SÊ,•1
	M˘ıÑ£á˘êÁAõıîô
	.I¯»'Dç	XEDL˙pÜäCALL	˚d‘k
	JM˙fSÖSET		˜t‚‘ANEW L˘‡ÃASYMBO˘à!AßE
	.˘1£	JMP	˚d‘k		;MO˙—PAùD EXI˙ÉE	]ENDCÓÒCE	]IF DFÒ6hHÉSE
	ı—ÊOÖL	PHA˙qV	âEPHAÓÒT$AßE:	RE˘ëlPÒBaÕ°¯Bi≈áTOR,C˘êÈ≈áÒ¢Ñ¬ù¯¢X§	MOVÒ4ò,°HAOFFÒ¢Ñ”´¯BaÃá˘ì·¨°˘g∆çÒ¢ÑÕüV	R0,¯s!ÃüC
	R¯µ*“ù

1ÙéÑ≈•˙SÈ	ÉÒ¢Ñ“ã˙ïiNÒCEDãPHA:	˙ua	°HAOFFıêÊCôOC
	¯s)	°HAOFFÒ¢Ñ“ã˙ïiNÒCE	ãNTSECÒ2f–°AS
P˘g∆ç:	.BL˘u∆äXITSE¯cE	]ENDCÓÒCE	±ITOVRÒ¢ÜSã¯rgIuÒ1gTüVR	3ÓÒBfœ≠Ò4ö∞É¯T÷S≥MBOL	˜t‚‘A". AB˙kë	MOV	˙MXAÖS+2,S˚3aOôılÜä¯pfLCSECT¯¬DªõOVE O˘’'†•OLL
Ò0ÊRSYMBO˘ÇDªâITTO ¯”È ÖLANK ¯t‚√©
	CL˙BiŸõBOL+2Ò¢ÑÆìF NDFÒ6"ƒÉ¯T∆ä¯Rj	GED.AB˙k"ƒõASK	;¯0©†õ˘Ò"øÒBaNã	CSEC˙ëÑâw  NOÓÒBiE©˙¥ßÒ+§∆ç
	BRÒ0È≈á˙ëÜäı—gDá

	ı“c ùDF	XE¯êaS	GEN¯±*	ÉBS,SE¯rgIY1
	.¯≥¢CÒBlI©OVR
SETM¯6	Ò"]”ã˙à&¡±ÙgDA¯≥™E• ONTOÙßÃô
	EN˙ìÎR3
	SAVREG			;PLAY IT SAF¯£E	õOV	#CLCNAM,R1
	MOV	#SYMB˘ÛReÒ¢Ñ√É˘ìÿõIT2		;MOVE NAME TO SYMBOL
	SCAN	SE¯tßÃ	;SCAN SECTOR R˘Û&	CALLÒ6&…©3		;SET REMAINDER OF ENTRIES
	JMP	INSERT		;U˙ ‘ã ROLLÙgDAEXITÓÒBlI©˘ı©

	.GLOB˘ÇfIõIT
ÓÒBi≈©OVR	9
LIM˘5	á¯3&	ü¯R¢M°
	CL˙BTRi)		;CLEAR VALUEÒ¢ÑÕü˙¬Q“ô¯ï±U400,-(R4)	˜t‚‘ARLD TYPE
Ò4ÍCüDE
	¯s)	Q˙MçÒ2¶–STCODE
	XITOVRÒ¢Ü	]GLOBLÒ5$‘ô¯´”ÖTTL,	˘1"Œ©Ò¢Üä˙qjO≠R	9
TITLE˜CE	èETSYM			;GET A SYMBO˘ÉE	Ö˘—D±I		;  ¯¥©O• IF NULL
Ò1iRü˙B`çÒ4¢‘´˙SÜä1$:	MOV	R0,PRG˙ï&	w˘≥ÎEAINTO ˙u'“É¯ÒFäMOV	SYMBOLılñP•¯ı*LW2
	CALL	SETSYM		;POINT T˘Ë)‘ÉRT OF TITLE
	MOV	#T˙ì!Uç,R2	;˙‰Œ© TO B˙±£E•
	CLRB	(R2)+		˜t‚‘ASTOPP¯¥Üäe$:	MO˙–Ñ“k,(R2)Ò"]”©˘Ù¢†á˘iAáTER
Ò0¢—ˆiâw  BRANCH I¯»"Œâ
	TS˙êÑ®•2)+
Ò1‚‘áHR			;GET ˙í"†ù¯∂*	CMP	˙Lñ#©TLBU2ı¨DªãND OF BUFF¯¥üçÒ0¶O2$		;  NOÓÒL“:MOV	#˙ï&B´2,R1	˜t‚‘ADESTINATION REG
4$:Ò3g÷Ö	-(R2),-(R1)	;M˘ı¢†áHARAC˙ëi ´˙E	Ö˘—D¥I
	MO˙–Ñ£çF,(R1)	;SET PAGE EJE¯uä˘≥Î	•1,TTL¯Qcâw˘∞iKA¯Qc…ù˘“gG	CLR	R5		;NO "Q" ERRORS
	RETURN

	XI˙ìÎR	SE˙ìÎR2

˙p™Tô:				;SUB-TITLEÙ$“ãCTIVEÒ¢ÑÕüV	#ST˘ê™∆Y˙LÑª°˘ÚgTATO SUB-TITLE BU¯—¢“	TSTÒ4 ”ß		;PA˙t–OùE?
	¯Qhâe$		;  YES
1$:	˘≥ÎBR5,(R2)+	;˘≥ÎEACHARACTER IN
	BEQ	1ˆiâw  BRANCH IF ENDÒ¢Ñ«ãTCHR			;GET THE NEXTÙ‰A•ACTER
	CMP	R2,#STLB˙±ï”©˘ì"Œ[1	;TE˙uFü˙H"Œâ
	BL˘‚X§	TSTB	-(R2)		;POLISH OFFÙ$Œã
	BRÒ,R
2$:Ò0§‘Ùs!Æ©˘÷LáMASKÓÒBaNã	13$ÓÒBjS©B	LLT¯SÃßT.L	;ANY LISTING DEVICE?
	BEQ	13$		;  NO, EX˘5äMOV	#˙ì·‘±T,R1
	MOV¯Vj	Ò.È≈© TABL¯®'∆A¯sÁTã˘’)ç	CALL	SETS˚3DâwPOINT TO ".SBTTL"
3$:	GETR50	Ò"]«ãT RAD˘6µa CHARÒ¢Ñ¬èT	3$		;STOP AT ¯“iS© TERMINATOR
	MOV	CHRPNT,R2	;SET POINTER
	.I¯»'Dç	XLCS¯¥Fä˘≥Î	ô˘3ßUõ,R0
	CALL	10$
	MOVB	#CHı‘Í¬Yı™)2SÒ¢ÑÆìFF
	MOVB	#TAB,-(R2)
	.ENDC
	MOV	PAGNUM,R0ÓÒBa¡ôL	10$
	MOVB	#SPACE,-(R2)
	MOV	R2,˙LFäJMP	PUTLP		;OUT˙j ìT

ˆ,:MOV	#3,R4
11$:	MOVBÒ(È–ÉCE,-(R2)
Ò3g÷R0,R1
	BE˙"X≤I
	CL˙Bi0ÒBbI≠	#^D1ˆ)0ÒB`ƒâÒ(‚Iè.0,R1Ò¢ÑÕü˙–Ñ“c,(R2)
12$˜BiœÖ	R4,11$
13$:	R¯µ*“ù
	XITOVR

	ENTSEC	TXTBYT
TOCTXT˜BWAßCIZ	/˙êaLã OF CONTENTS/
Ò6$‘ßEC
	SETO˙‘Ñ≥ÒCEIâ¯≥™:			;IDENT ¯íiEáTIVE
	CALL	RAD50		;TREAT AS RAD50ÓÒBaÃ•	ROLU˙âwPOINTÙ'†ßTART ˘ÒêCüDE-RO˘ìäMOV	#˙£…âN,R2	˜hAù¯à*OA˘1"Œ© BLOC˘cE1I:	NEX˙ÇaœâROL		˜q‚‘A˘—lTA˘5"Õ	MOV	VALUE,(R2ı*ƒªß˙ìÈEAIT
	CMP	R2,#PR¯ÚbNW4	;PROCESSED TW˘Ë+œ•¯îﬂç	BLO	ˆ)âw  NOÓÒBfœ≠Ò(„”âT06,(R2)+	;YES, SET ¯Ù‚ ©˚4"çÒ6†–¯s‚Rü˘ÇDªáLEAR ¯s‚EAROLLÓÒBiE©URN
Ò6$‘üVR

	ENTSEC	I˘¥*“ã
PRG˙ï&:.BLKWÒ-ä°RGIDN:	.BLKW	4		;IDENT BLOCK
Ò6$‘ßEC
	.GLO¯S–•˘3™,¯¥©O•

	˙qjO≠R	9

	.ENABL	LSB

PRI˘’	ERROR	<>		;NUL˘à"“•OR (D˘Ûì‘ACOUNTı#E	ÖR	1$

ERROR:	ERROR	P
1ÙéÑ”ãTPF0			;PRINT L˘‡‘ìON FI¯≥"	EXPRÒ"DªãVALUA˙ëPE±PRESS˘3Á	BEQ	ˆIâwBRANCH IF NULL
	SETPF1		Ò.ÁOù-NULLıà&IßT VAL˙±Fäe$:	RE˙ïiN
	.DSABL	LSBÓÒCE	.GLO¯S“ãM

˙Qf∫			; ÙK©Eõ" DIRECTIV¯£E	õOV	R5,R3		;SET TERMI˘–jIùG CHA˙Pa‘ãR
	B˘—D±I		;BR¯3°»AIF NO˘ÀgUôL
	E˙Tß“A		;E˙Tß“Y NO DELIMITING CHARACTERÓÒBiE©URN
Ò¢ò§u	GETCHR			;GET THE NEXT CHARACTER
2$:	TST	R5		;END OF LINE?
	BNE	3$		;  NO
	CALL	ENDLIN		;YES, POLISH OFF LINE
	CALL	GETLIN		;GET NEXT LINE
	BEQ	2$		;LOOP IF NO EOF
	RETURN			;EOF, EXIT

3$:	CMP	R5,R3		;IS THIS THE TERMINATOR?
	BNE	1$		;  NO
	JMP	GETNB		;YES, BYPASS AND EXIT

	XITOVR
	.GLOBL	BLKW,	BLKB,	EVEN,	ODD,	RADIX,	EOT

	SETOVR	3

BLKW:	INC	R3		;FLAG WORD TYPE
BLKB:	EXPR			;EVALUATE THE EXPRESSION
	BNE	1$		;BRANCH IF NON-NULL
	INC	(R4)		;NULL, MAKE IT ONE
1$:	ABSTST			;MUST BE ABSOLUTE
2$:	ADD	R0,(R2)		;UPDATE PC
	ASR	R3		;WORD?
	BCS	2$		;  YES, DOUBLE VALUE
	RETURN

EVEN:	INC	(R2)		;INCREMENT THE PC
	BIC	#1,(R2)		;CLEAR IF NO CARRY
	RETURN

ODD:	BIS	#1,(R2)		;SET LOW ORDER PC BYTE
EOT:	RETURN

RADIX:	MOV	CRADIX,R2	;SAVE IN CASE OF FAILURE
	MOV	#10.,CRADIX
	ABSEXP
	CMP	R0,#2.
	BLT	1$
	CMP	R0,#10.
	BLE	2$
1$:	ERROR	A
	MOV	R2,R0
2$:	MOV	R0,CRADIX
	JMP	SETPF1

	ENTSEC	IMPPAS		;IMPURE AREA
CRADIX:	.BLKW			;CURRENT RADIX

	ENTSEC	XCTPAS		;TO BE EXECUTED EACH PASS
	MOV	#8.,CRADIX	;INIT TO OCTAL RADIX

	XITSEC			;BACK TO NORMAL


	XITOVR
	.SBTTL		DATA-GENERATING DIRECTIVES

	.GLOBL	BYTE,	WORD

	SETOVR	3

WORD:	INC	R3		;"WORD" DIRECTIVE, SET TO 2
BYTE:
	INC	R3		;"BYTE" DIRECTIVE, SET TO 1
	MOV	(R2),-(SP)	;STACK CURRENT PC
1$:	TSTARG			;TEST FOR ARGUMENT
	BEQ	2$		;  END
	EXPR			;PROCESS GENERAL EXPRESSION
	SETIMM			;CONVERT TO OBJECT FORMAT
	STCODE			;PUT ON CODE ROLL
	ADD	R3,(R2)		;UPDATE PC
	BR	1$		;TEST FOR MORE

2$:	MOV	(SP)+,(R2)	;RESTORE INITIAL PC
DGTEST:	TSTB	ROLSIZ+CODROL+1	;ANY CODE GENERATED?
	BNE	1$		;  YES
	CLR	MODE		;NO, STORE A ZERO
	CLR	VALUE
	SETIMM
	STCODE
1$:	RETURN
	XITOVR
	.GLOBL	RAD50,	ASCII,	ASCIZ

	SETOVR	3

ASCIZ:	INC	R3		;  ".ASCIZ", SET TO  1
ASCII:	INC	R3		;  ".ASCII", SET TO  0
RAD50:
	DEC	R3		;  ".RAD50", SET TO -1
	CALL	23$		;INIT REGS
1$:	MOV	R5,R2		;SET TERMINATOR
	BEQ	28$		;ERROR IF EOL
2$:	CMP	R5,#CH.LAB	; "<", EXPRESSION?
	BEQ	10$		;  YES
3$:	GETCHR			;NO, GET NEXT CHAR
	MOV	R5,R0		;SET IN WORK REGISTER
	BEQ	28$		;ERROR IF EOL
	CMP	R5,R2		;TERMINATOR?
	BEQ	5$		;  YES
	TST	R3		;NO
	BMI	9$		;BRANCH IF RAD50
	.IF NDF	XEDLC
	MOV	CHRPNT,R0	;FAKE FOR OVLAY PIC
	MOVB	(R0),R0		;FETCH POSSIBLE LOWER CASE
	BIC	#177600,R0	;CLEAR POSSIBLE SIGN BIT
	.ENDC
	BR	4$

9$:	TSTR50			;TEST RADIX 50
4$:	CALL	20$		;PROCESS THE ITEM
	BR	3$		;BACK FOR ANOTHER

5$:	GETNB			;BYPASS TERMINATOR
6$:	TSTB	CTTBL(R5)	;EOL OR COMMENT?
	BGT	1$		;  NO
7$:	CLR	R0		;YES, PREPARE TO CLEAN UP
	TST	R3		;TEST MODE
	BEQ	24$		;NORMAL EXIT IF .ASCII
	BPL	20$		;ONE ZERO BYTE IF .ASCIZ
	TST	R1		;.RAD50, ANYTHING IN PROGRESS?
	BEQ	29$		;  NO, NORMAL EXIT
	CALL	20$		;YES, PROCESS
	BR	6$		;LOOP UNTIL WORD COMPLETED

10$:	MOV	(R4),-(SP)	;"<EXPRESSION>", SAVE PARTIAL
	ABSTRM			;ABSOLUTE TERM, SETTING R0
	MOV	(SP)+,(R4)	;RESTORE PARTIAL
	CALL	20$		;PROCESS BYTE
	BR	6$		;TEST FOR END
20$:	TST	R3		;RAD50?
	BPL	22$		;  NO
	CMP	R0,#50		;YES, WITHIN RANGE?
	BLO	21$		;  YES
	ERROR	T		;NO, ERROR
21$:	MOV	R0,-(SP)	;SAVE CURRENT CHAR
	MOV	(R4),R0		;GET PARTIAL
	CALL	MULR50		;MULTIPLY
	ADD	(SP)+,R0	;ADD IN CURRENT
	MOV	R0,(R4)		;SAVE
	INC	R1		;BUMP COUNT
	CMP	R1,#3		;WORD COMPLETE?
	BNE	24$		;  NO
22$:	MOV	R0,(R4)		;STUFF IN VALUE
	SETIMM			;CONVERT TO OBJ MODE
	STCODE			;STOW IT
23$:	CLR	R1		;CLEAR LOOP COUNT
	CLR	(R4)		;  AND VALUE
24$:	RETURN

28$:	ERROR	A
29$:	BR	DGTEST		;TEST FOR DATA PROCESSED
	XITOVR
	.IF NDF	XFLTG

	.GLOBL	FLT2,	FLT4

	SETOVR	3

FLT4:	INC	R3
FLT2:
	INC	R3		;MAKE IT 1 OR 2
	ASL	R3		;NOW 2 OR 4
1$:	TSTARG
	BEQ	DGTEST
	MOV	FLTPNT-2(R3),-(SP)	;EVALUATE NUMBER
	CALL	@(SP)+
	BNE	2$		;BRANCH IF NON-NULL
	ERROR	A		;  NULL, FLAG ERROR
2$:	MOV	R3,R2		;GET A WORKING COUNT
	MOV	#FLTBUF,R1	;POINT TO FLOATING POINT BUFFER
3$:	MOV	(R1)+,(R4)	;MOVE IN NEXT NUMBER
	STCODE			;PLACE ON CODE ROLL
	SOB	R2,3$		;LOOP ON WORD COUNT
	BR	1$		;CONTINUE

	ENTSEC	DPURE
FLTPNT:	.WORD	FLTG2W,	FLTG4W
	XITSEC

	.IF NDF	XEDFPT
	GENEDT	FPT,,1		;FLOATING POINT TRUNCATION
	.ENDC

	XITOVR
FLTG4W:	INC	FLTWDC		;FLOATING POINT NUMBER EVALUATOR
FLTG2W:	INC	FLTWDC
FLTG1W:
	ENTOVR	7
	SAVREG			;SAVE REGISTERS
	MOV	CHRPNT,-(SP)	;STACK CURRENT CHARACTER POINTER
	MOV	#FLTBUF,R3	;CONVENIENT COPY OF POINTERS
	MOV	#FLTSAV,R4	;  TO BUFFER AND SAVE AREA
	MOV	R4,R1
1$:	CLR	-(R1)		;INIT VARIABLES
	CMP	R1,#FLTBEG
	BHI	1$		;LOOP UNTIL DONE
	MOV	#65.,FLTBEX	;INIT BINARY EXPONENT
	CMP	#CH.ADD,R5	;  "+"?
	BEQ	10$		;  YES, BYPASS AND IGNORE
	CMP	#CH.SUB,R5	; "-"?
	BNE	11$		;  NO
	MOV	#100000,FLTSGN	;YES, SET SIGN AND BYPASS CHAR
10$:	GETCHR			;GET THE NEXT CHARACTER
11$:	BITB	#CT.NUM,CTTBL(R5)	;NUMERIC?
	BEQ	20$		;  NO
	BIT	#174000,(R3)	;NUMERIC, ROOM FOR MULTIPLICATION?
	BEQ	12$		;  YES
	INC	FLTEXP		;NO, COMPENSATE FOR THE SNUB
	BR	13$

12$:	CALL	FLTM50		;MULTIPLY BY 5
	CALL	FL˙ëÊSÒ.·œ•RECTION, MAKE THAT *ˆ,äSUB	#¯ícÆa,R5	;MAKE ABSOLUTE
	MOV	R4,R2		;POINT TO ENDÙ„ ÖUFFER
	ADD	R5,-(R2)Ò.‡ƒâ IN
	ADC	-(R2)		;RIPPLE CARRY
	ADC	-(R2)
	¯1!â[(R2)
13$:Ò0bDFLTDOT,FLTEXP	;DECRE˘±gTAIF PROCESSING FRACTION
	CLR	(˙tâ;CLEAR INITIAL CHAR POINTER (WE'RE GOOD)Ò¢Ñ¬•	10$	Ò.ÍR≥ FOR ˘≥ÈE
20ÙéÑ√õP	#CH.DOT,R5	;DECIMAL POI˘’ç	BNE	ˆLR	;  NO
	COM	FLTDOT		;YES, MARK IT
Ò0¶…10$		˜s'œ° IF FIRST TIME AROUND
21ÙéÑ√õP	#LET.E,R5	;EXPONENT?
	¯S¢âçLTG3		;  NO
	G¯µ'B		;YES, BYPASS ÙQQ ÉND BL¯3•”	MOV	CRADIX,-(˙tâwSTACKÙÍ“•ENT R¯1$ÿ	MOV	#10.,CRADIX	;SET TO DECI˘∞f	ABSTRM			;ABSOLUTE TERM
	MOV	(SP)+,CRADIX	;RESTORE RADIX
	ADD	R0,FLTEXP	;UPDATE EXPONEN˙ÉE;BR	FLTG3		;FALL THROUGH
Òë¶Tè3:	MOV	R3,R1
	˘≥Î	QR1)+,R0	;TEST F˘ÙêZãRO
	BIS	(˙LT´Y˙Lä¯RiâQR1)+,˙Lä¯RiâQR1)+,R0
	BEQ	F˘ï#≈±		;EXIT IF SO
ˆlR:TST	F˘ï"ÿ°		;TIME TO SCAL¯£E	Ö¯¥D∆ôTG5		;FINIÙc µ¯¥ßç	BLT	ˆåR	˜q$÷ìDE IF .LT. ZEROÒ¢Ñ√õP	(R3),#031426	;MULTIPLY,Ù‡ŒAWE *5?
	B˘D≥eÙÇDªAÙßç	CALLÒ1¶Tõ50		;YES, ˘µfTìPLY BY 5
	INC	¯”*BãX		;  AND BY TW˘„E	ÖR	33$Ò¢Üäg2$:	C¯3&	çLTM54Ò"]Õ´LTIPL˚(!YA5/4
Ò0bD#3.,F˘ï!E±	;  A˘—B≥ 8
3ˆi	â¯∞ƒ∆ô˙ëlP	;  O˙—i c0
	B˙BY±I

4ˆ		âEC	FL˙ê¢ÿ	;DIV˘4‰œù, LEF˙à%Uß˙ícYA¯RjS	CAL˘ÇcL©GLS
ˆåR:TST	(˙L‘â;SIGNÙ§‘A˙qj?ÒBaPô	40$	Ò.– ùO, LO˘ÙäMOV	#ˆ-ó*e,-(SPı"]±m OUTE˙K2A˘3ßE•Ò¢Ñ√É˘ì∆ô˙ëÈSÒ.È»ì¯’RìGHT
Ò0‡Ãô	FLTG˙uÑâwPLACEÙg ßAVE B˙±£E•Ò¢ö2I˜BaI©	#1,(˙tâ;ODD ˘êh?	BNEÒ-§Ò.– ≥¯¥∆äCALL	¯”*G•S		;M˘ı¢†É COUP˘ëPOç BITSÙ§«ëT
	C¯3&	çLTGRSÒ¢ö3I:	CAL˘ÇcL©GRS		˜sÁCãÙg“ãÙ'†©HE RI¯Ú*	CALLÒ1¶Tè¯1âw¯1" ìN SAV¯®!Uç¯—iÒ1"√(SP)	Ò.‚Œâ OF L˘ÛË?	BGTÒ-$	;  N˘„E	©ST	(S˙
Uâ;YES,Ù)UùE STA¯r∆ä˙ua	GˆkñFôTBEXÓÒBdŒá	FLTE˚äBR	31ÙÉEçLTG5:Ò1"√FLTBE˚DªôEFT J˙¥ÍIçT
	C¯3&	çLTGLSÒ¢Ñ¬áC	FLT¯ÌDâwLOSE ˘Û¢†ÖIT
	¯1"	G200,F˘ï!E±	;SETÙlCãSS 12˜ÜäBLE	2ÙÇDªÖRANCHÙc ´NDER-¯”'◊ÒBjS©¯BcL©BEX+1Ò.‰Iè˘'“â¯¥êZãRO?
Ò0¢—3$		;Ù,≈ßÒ¢ô$uÒ1iRü˙Bg	˜sß¨AERRORÒ¢ô§u	MOV	˙MRe		;SE˙à*OA˙r$∆©Ùd«ë˙à!I©˙cE	õOV	R2ıîòç	TST	ı™)1S		;R1Ùi†üNE LO˙Òi ©˘g •ˆCE4I:	CMPÒ+TRc),-(RˆJDªâOWN O˘—PWüRD
	˘≥ÎB(R1),ıô);MOVEÙh ÉÙ¨‘ãÒ¢Ñ”ØAB	(RˆJDâw¯Qk¡•¯®'∆ATHE I˘‘‰ƒã-OUT ˙–°	CMPÒ4ô,•3		;E˘—çÒ0ßEˆâäCALL	¯”*G•S		;S˘cTAONE P˘êa≈ARIGHTÒ¢Ñ“üR	(R4ı"DªßET HI¯ÚCÉRRY
Ò+§∆ANDF	X¯±#P©
	BI˙ÇQ≈âı—®TY¯±&¡ßK	;TR˙≥°¡©ION?ÓÒBaE£Ò-“	˜hYãS
	.¯≥¢C	MOVÒ1¶TØ¯ê÷ReÒ.„≈© SIZEÙÁ’ù˙ÉE	É˙s“e		;DO˙∞¶E	BNEÒ.	;PRES¯µT≥PE
	˘3°â•2		;S˘3£ÃãÙÁ“â
8$:	ASL	˙LÑâw¯sÁVã˙UTüÙ¨‘ã˙cE	ÖIS	#0ˆÌ€∑o,FLTB˙±îRe)
	SEC
5$:	ADC	FLTBUF(RˆJFäDEC	R2
	DEC	R2
	BGE	5$ÓÒBjS©Ò*)3SÒ"]‘ãST SIGN POSITION
	BPL	7$		;OK IF P˘Ù‰‘ìVE
6$:	ERROR	TÒ¢õ§u	ADD	¯”*SèN,(R3)	;SET SIGN, IF ANY
FLTGEX:	CLR	MODE		;˘∞e≈AABSOL˙µ"ç	CLR	¯”*Wâ¯bDªáLEAR COUNTÒ¢ÑÕüV	(R3ı++AôUE	;PLACE ¯“iS©ÙÍŸA˘3êVÉLUE
Ò3g÷(SP)+,R0	;ORIGI˘Û†ÃA¯r “A˙‰Œ©ER
	BEQ	1ÙÇDªµERO (GOOD)Ùc ÉNY DI¯ÚjSA˙ß√ã˙t‚ƒ	MOV	R0,CHRPNTÒ.ÁOùE, RE˙qj ©˘Ë+»ãRE WEÙ‡ÕãÙgÒ0ÊRR3		;FLAG ¯4–FÉLSE
1$:	MOV	R3,R0		˜t‚‘A¯” «AIN R0Ò¢Ñ õP	SETNB		;˙QjU•˘»+…©˘'Oùı∞¶AùK
FLTM54:				˜jöØiÒ¢Ñ√õP	(R3ı+±iˆÃÿ¥;ROOM?
	B˘ìƒ±IÒ¢Ñ√ÉLL	FLTGRS
	INC	FLTBEX
1ÙéÑ√ÉLL	FLTGSV		;SAVE IN ¯PaÀ´P
	C¯3&	çLTGRSÒ"]”áALE RIGHT
	CAL˘ÇcL©GRS
Ò0©	çLTGADÒ¢ÜäçLTM50˜BDâ˜jöçÒ0‡Ãô	FLTG˙uÜä¯pfLFLTGLS
	C¯3&	çLTGLSÒ¢ÜäçLTGAD˜BDâ;ADD SAVE ¯UcFã˙H*OAFLTBU¯√E	õOV	R4ıîô	;POINT TO ˙pkEA¯4¢¡1$:	ADD	6ıô)Y-(R2)Ò.‡ƒâ IN W˘Ù¢	MOV	R2,R1		;SET FORÙ‡“•IES
2$:	ADC	-(˙LTâ;ADD ˘3Üä¯PÈâeÙÇDªáONTIN˙±PRìPPLE, IF NECESSARY
Ò0Ê–˙LñRg		;TH˙SÍ«ë˜„E	Ö˘—D±IÒ"]†ANO
	RETURN
FLTGRS:	CLC			;RIGHT SHIFTÒ¢ÑÕüV	R3,˙LDâwRIGHTÙß‘ÉTE
	ROR	(R1)+ÓÒBiO•	(R1)ıcE	•OR	(Rˆ*UçÒ4ß“ıò©W
	RETURN

FL˙ëÊSu				;˘ëcTASHIFTÒ¢ÑÕüV	R4,˙LÜäASL	-(R2)
	ROLÒ+TRe)
	ROL	-(˙Lîç	ROL	-(R2)
	RETURNÓÒCEFôTGSV:	MOV	R3,R1Ò"]ÕüVE FLTBUF TO FLTSAVÓÒBfœ≠	R4,R2
	JMP	XMIT4
Ò¢Üä¯≥™SãC	IMP˙¥¢ç¯”*BãG:			Ò.È‘ÉRT OF FLOATING POINT IMPU˙QFäçLTSGN˜BWBôKW			˜t‰«ùÙ§‘ÒQ¶TâOT:	.¯S%◊		;DE¯rf¡ô POIN˙à#LÉG
FLTEXP:	.BLKW			;DECIMAL EXPONENT
FLTBEX:Ò+°LóW	1		˜p§ŒÉRY EXPONEN˙àM´˙uP•ECEEDÙ¶TÖ˙±îç¯”*B´F:	.BLKW	4Ò"]ÕÉIN AC
FLTSAV:	.BLKW	4

	ENT˙qaâìMPLINÒ¢£L©WDC:	ı–¶KØ			;WORD COUNTÓÒCE	±ITSEC

	XITOVR

	.ENDC
	.SBTTL	CONDITIO˘–fS
	.¯Û'¬ôÒ2d∆ÒCE	ßETOVR	5

IIF:				;IMMED˘0jEA˘gDô¯¥©ç	CALL	TCON		;TEST ARGUMENT
	TST	R3
	BMI	3$	Ò.– ÖRANCH IF UNSATISFIED
	CMP	#CH.COM,˙MDªáOMMA?
	BNE	1$	Ò.– ùO
	G¯µ!»•			;YES, BYPASS
1$:Ò3g÷CHRPNT,R1	˜t‡÷ã CURRENT L˘‡‘ìON
	˙qjNÖÒ"DªßET TOÙßÕ[¯S ŒóÒ¢Ñ¬ìT	#LCı–ÁDY˘êÊ¡ßK	;CONDITI˘Û†ÃASUPPRESSION?
	¯Qhâe$		;  NO
	MOV	R1,LCBEGL	;YES, SUPP˙Qi”AALL U˙*OACOMMA
2$:	CLR	¯4£√ùT
	JMP	ST˘≥™	˜p†√óÙ'†ßTATEMENT
Ò¢ô§u	CLR	R5		;FALSE, BUT NO "Q" ERROR
Ò0©	ãNDCXÓÒCE				;¯sÁCÉTENAT¯±CüNDITI˘Û†Ãß
	.I˙T¡•G,	<E˙+#≈Y¯ıLãıì*,ùE,G,Lıì≠,µ,DF,N¯ëü	.GLO¯S…çÙiGÒRc'ÉRG:
	.ENDM

Ò3g÷˙vf¬üL+2,SYMBOL	;TRE¯5SãCOND HALF AS AR¯ıf≈ù˙ÉE	áALL	T¯sÁF	;EXA˘≤gEA˘5äBR	IF1		;INTO THE MA˘3êS©˙Q`ÕÒCEÒ+£Ãü¯S…ç,	IFTıÇd∆ç,	IFT¯À≈ùDC
ÓÒRc:			;MICRO-PROGR¯3fÕãD CON¯íjIüNAL
Ò0‡Ãô	TCON		;TEST ARGUMENT
IF1:	MO˙¬Q√ùDLVL,R1	;P˘ÚgTA˙ì–Lã˙—f	CMP	ıò©Y#15.	;ROOM FOR ANOTHER?
Ò0£‘IFOERR		;  NO, ¯¥©O•
	IN¯bTRc)		;Y¯¥÷ ÖUMP LEVEL
	ASL	R3		;SET ¯piR≥ TO TRUE (0) ORÙ†ÃßE (1)Ò¢Ñ“üR	-(Rˆ*DâwROTAT¯®$Œ©O CND˘¥Âç	ASL	˙L∆äROR	-(R1)		;DITTO FOR CND˙Ù¢	BR	E˘—!ÿIFT˜BDâ;IF T˙Ub†ßUB-CONDITIONALÓÒBfœ≠	CNDM˙r÷Rg	;GETÙÍ“•ENT
Ò0©	ìFTF		;  AN¯à!RÉNCH

IFF:				;IF F¯3)≈ASUB-C˘Û¢I©IONALÒ¢ÑÕüV	CND˘¥Â¨•3	;GE˙à!’•RENT ¯sÁDìTIONÓÒBaœõ	R3		;USE COMPLEMENT AND ¯–fLATHROU¯ÚäIFTF:				;UNCONDITIONAL SUB-CONDITIONAL
				;(R3=0 WHEN CALLED DIRECTLY)
	TST	CNDLVL		;CONDITIONAL IN PROGRESS?
	BLE	IFOERR		;  NO, ERROR
	ASL	CNDWRD		;MOVE OFF CURRENT FLAG
	ASL	R3		;SET CARRY
	ROR	CNDWRD		;MOV ON
	BR	ENDCX

ENDC:				;END OF CONDITIONAL
	MOV	#CNDLVL,R1	;POINT TO LEVEL
	TST	(R1)		;IN CONDITIONAL?
	BLE	IFOERR		;  NO, ERROR
	DEC	(R1)		;YES, DECREMENT
	ASL	-(R1)		;REDUCE MASK
	ASL	-(R1)		;  AND TEST WORD
ENDCX:	BIT	#LC.CND,LCMASK	;SUPPRESSION REQUESTED?
	BEQ	2$		;  NO
	MOV	LBLEND,R0	;YES, ANY LABEL?
	BEQ	1$		;  NO, SUPPRESS WHOLE LINE
	MOV	R0,LCENDL	;YES, LIST ONLY LABEL
	BR	2$

1$:	BIS	#LC.CND,LCFLAG	;MARK CONDITIONAL
2$:	RETURN

IFOERR:	ERROR	O		;CONDITION ERROR
	RETURN
TCON:				;TEST CONDITION
	GSARG			;GET A SYMBOL
TCONF:	SCANW	CNDROL		;SCAN FOR ARGUMENT
	BEQ	IFAERR		;  ERROR IF NOT FOUND
	MOV	SYMBOL+2,R1	;GET ADDRESS
	ASR	R1		;LOW BIT USED FOR TOGGLE FLAG
	SBC	R3		;R3 GOES TO -1 IF ODD
	ASL	R1		;BACK TO NORMAL (AND EVEN)
	TST	CNDWRD		;ALREADY UNSAT?
	BNE	IFAERX		;  YES, JUST EXIT
	TSTARG			;BYPASS COMMA
	JMPOVR	R1		;JUMP TO HANDLER

IFAERR:	ERROR	A
IFAERX:	CLR	R5		;NO "Q" ERROR
	RETURN

	XITOVR


	GENCND	EQ,	TCONEQ
	GENCND	NE,	TCONEQ,	F
	GENCND	Z,	TCONEQ
	GENCND	NZ,	TCONEQ,	F
	GENCND	GT,	TCONGT
	GENCND	LE,	TCONGT,	F
	GENCND	G,	TCONGT
	GENCND	LT,	TCONLT
	GENCND	GE,	TCONLT,	F
	GENCND	L,	TCONLT
	GENCND	DF,	TCONDF
	GENCND	NDF,	TCONDF,	F
	SETOVR	5

TCONEQ:	ABSEXP			;EQ/NE, TEST EXPRESSION
	BEQ	TCONTR		;BRANCH IF SAT
TCONFA:	COM	R3		;  FALSE, TOGGLE
TCONTR:	RETURN			;TRUE, JUST EXIT

TCONGT:	ABSEXP
	BGT	TCONTR
	BR	TCONFA

TCONLT:	ABSEXP
	BLT	TCONTR
	BR	TCONFA

TCONDF:				;IF/IDF
	MOV	R3,R1		;SAVE INITIAL CONDITION
	CLR	R2		;SET "&"
	CLR	R3		;START OFF TRUE
1$:	GETSYM			;GET A SYMBOL
	BEQ	IFAERR		;  ERROR IF NOT A SYM
	SSRCH			;SEARCH USER SYMBOL TABLE
	CRFREF
	CLR	R0		;ASSUME DEFINED
	BIT	#DEFFLG,MODE	;GOOD GUESS?
	BNE	2$		;  YES
	COM	R0		;NO, TOGGLE
2$:	CMP	R0,R3		;YES, MATCH?
	BEQ	3$		;  YES, ALL SET
	MOV	R2,R3		;  NO
	COM	R3
3$:	MOV	R1,R2		;ASSUME "&"
	CMP	R5,#CH.AND	; "&"
	BEQ	4$		;  BRANCH IF GOOD GUESS
	CMP	R5,#CH.IOR	;PERHAPS OR?
	BNE	5$		;  NO
	COM	R2		;YES, TOGGLE MODE
4$:	GETNB			;BYPASS OP
	BR	1$		;TRY AGAIN

5$:	TST	R1		;IFDF?
	BEQ	6$		;  YES
	COM	R3		;NO, TOGGLE
6$:	RETURN

	ENTSEC	IMPPAS
				;CONDITIONAL STORAGE (MUST BE ORDERED)
CNDWRD:	.BLKW			;TEST WORD
CNDMSK:	.BLKW			;CONDITION MASK
CNDLVL:	.BLKW			;NESTING LEVEL
CNDMEX:	.BLKW			;MEXIT FLAG
	XITSEC

	XITOVR
	.SBTTL	LISTING CONTROL

	.GLOBL	NLIST,	LIST

	SETOVR	2
NLIST:	COM	R3		;MAKE R3 -1
LIST:
	ASL	R3		;MAKE R3 0/-2
	INC	R3		;NOW 1/-1
1$:	TSTARG			;TEST FOR ANOTHER ARGUMENT
	BNE	2$		;  VALID
	TST	ARGCNT		;NULL, FIRST?
	BNE	7$		;  NO, WE'RE THROUGH
	INC	ARGCNT		;YES, MARK IT
2$:	GETSYM			;TRY FOR A SYMBOL
	SCANW	LCDROL		;LOOK IT UP IN THE TABLE
	BEQ	6$		;  ERROR IF NOT FOUND
	CLR	R2
	SEC
3$:	ROL	R2
	SOB	R0,3$
	TST	CSIFLG		;CALLED FROM COMMAND STRING?
	BEQ	11$		;  NO
	BIS	R2,LCMCSI	;YES, SET DISABLE BITS
	BR	12$		;  AND SKIP TEST

11$:	BIT	R2,LCMCSI	;THIS FLAG OFF LIMITS?
	BNE	5$		;  YES
12$:	BIC	R2,LCMASK
	BIT	R2,#LC.		;NULL?
	BEQ	4$		;  NO
	ADD	R3,LCLVL	;YES, UPDATE LEVEL COUNT
	CALL	PAGEX		;SET LISTING CONTROL
4$:	TST	R3
	BPL	5$		;.LIST, BRANCH
	BIS	R2,LCMASK
5$:	BR	1$		;TRY FOR MORE

6$:	ERROR	A
7$:	RETURN

	GENSWT	LI,LIST		;GENERATE /LI
	GENSWT	NL,NLIST	;  AND /NL SWITCH ENTRIES

	.GLOBL	PAGE
PAGE:	INC	FFCNT		;SIMULATE FF AFTER THIS LINE
PAGEX:	BIS	#LC.LD,LCFLAG	;FLAG AS LISTING DIRECTIVE
	RETURN

	XITOVR
	.MACRO	GENLCT	MNE,INIT	;GENERATE LISTING CONTROL TABLE
LC.'MNE=	1
	.REPT	<.-LCTBAS>/2
LC.'MNE=	LC.'MNE+LC.'MNE
	.ENDR
	.GLOBL	LC.'MNE
	.RAD50	/MNE/
	.IF NB	<INIT>
	LCINIT=	LCINIT+LC.'MNE
	.ENDC
	.ENDM

LCINIT=	0

	ENTSEC	DPURE
LCTBAS:
	GENLCT	SEQ
	GENLCT	LOC
	GENLCT	BIN
	GENLCT	SRC
	GENLCT	COM
	GENLCT	BEX
	GENLCT	MD
	GENLCT	MC
	GENLCT	ME ,1
	GENLCT	MEB,1
	GENLCT	CND
	GENLCT	LD ,1
	GENLCT	TTM
	GENLCT	TOC
	GENLCT	SYM
	GENLCT	<   >		;NULL
LCTTOP:


	ENTSEC	IMPURE
LCSAVE:				;LISTING CONTROL SAVE BLOCK
LCMASK:	.BLKW			;MASK BITS
LCLVL:	.BLKW			;LEVEL COUNT
LCMCSI:	.BLKW			;COMMAND STRING STORAGE
LCSAVL=	.-LCSAVE

LCSBAK:	.BLKW	LCSAVL/2	;FOR INITTING PASS 2


	ENTSEC	IMPLIN
LCFLAG:	.BLKW			;FLAG BITS
LCBEGL:	.BLKW			;POINTER TO START OF LINE
LCENDL:	.BLKW			;POINTER TO END OF LINE
LBLEND:	.BLKW			;END OF LABEL (FOR PARSING)

	ENTSEC	XCTPRG
	.GLOBL	LCBITS
	.BLKW	1
LCBITS:
	.BLKW	-1
	MOV	#LCINIT,LCSBAK+<LCMASK-LCSAVE>	;DEFAULT FLAGS

	ENTSEC	XCTPAS		;EXECUTE THIS CODE EACH PASS
	MOV	#LCSBAK,R1	;RESET LISTING FLAGS
	MOV	#LCSAVE,R2
	CALL	XMIT0-LCSAVL

	XITSEC
	.SBTTL	ENABL/DSABL FUNCTIONS

	.GLOBL	ENABL,	DSABL

	SETOVR	2
DSABL:	COM	R3		;R3=-1
ENABL:				;R3=0
1$:	GSARG			;GET A SYMBOLIC ARGUMENT
	BEQ	8$		;END IF N˙≥&Ò4·¡ùW	EDTROL		;SEARCH TH¯®*AÖLE
	¯Qhâo$		;  NOT THERE, ERROR
	CLR	R2		;COMPUTE BITÙ'”ìTION
	SEC
2$:	ROL	˙LÜäSOB	R0,2$
	TST	CSIFLG		;CALLED FROM COMMAND ˙u)IùG?
	BEQ	3ÙÇDªA NO
	BIS	R2,EDMCSI	˜vb”Y SET DISABLE BITS
	BR	4$		;  ¯3¢ ÖYPASS TEST

3$:	BIT	R2,EDMCSI	;OVER-RI¯ë"ŒAFROM ¯t‰ø	BNEÒ,R	;  YE˙kIèNORE IT
4$:	BIC	R2,EDMAS˘b]Œü, CLE¯4êSãLECTED BIT
	TST	R3		;ENDBLE?
	BEQÒ-R	;  YE˙kLãAVE IT CLEAR
	BIS	R2,EDM¯4ÂâwNO, CLEAR IT
5$:	MOV	SYM¯SÊ+e,-(SP)	;MAKE ITÙ$√	TST	R3		;SET ¯” «ß
	CA˘ì¿QSP)+		;CALL ROU˙ígE	BR	ˆ)ä7$:	¯¥©O•	A
8$:	RETURN
	XITOVR


	¯≥™SãC	IMPURE
EDMASK:	.BLKW			;CONTAINS SET FLAGS
EDMCSI:	.BLKW			;BITS FOR CSI OVERRIDE
EDM¯Pe∫.BLKW			;TO RE-INIT FOR P¯4È†e

	ENTSEC	XCT˙£ç	.GLOBL	EDBITSÓÒBWBôKW	1
EDBI˙î›Ò+°Ló˙‚V±	MOVÒ(‚ƒì˘“j,ãDMBAK	;SET DEFA˙≥* áONDITIONS

	E˘’)≈á	XCTP¯4∆äMOV	EDMBAK,EDMA˙rƒªß¯µEÉCH PASS
ÓÒBlI©˙qaç

	¯ÒgSØ˙ÇbŒYENABL	;GENERATEÙ‚Œ	GENSWT	DS,DSABL	;  AND ıÒ)†ßWITCH TABL¯®"Œ©˙Rb”ÒCÆßBTTL	¯tß”ß REFERENCEÙ ŒâLERS

	.IF ND¯¬lC•EF

CRFLEN=	1ˆló		;CRE¯»!UçFER L¯≥£‘ë

C˙K´E•=	001ıo0c*400>Ò"]‘≥PE 1,Ù¢“ßION #ˆ#EC•.PAG=Ò,2Ò"]Œã˙Ë(AèE
CRı”$Œ{	003	Ò"]ŒãW LIN¯£EC•.SYM=Ò,0		;SY˘∞ßÃ	GEN˙uÍ	á˙K!“ç˙qj
ERR˙SÊ=1			;¯ïfÕ≥ ROLLÒ¢°“çSET:	Ò"Dªá˙Qc ß˙ÚjCë PROC¯¥Èœ•
	EN˙ìÎR9
	T˙u√õDBUF	Ò.ÁŒASOURC¯Ø∆ä¯QhâmÙÇDªAÙb”YÙiRü˙CE1I˜Bc”ÉRG			˜u)YAFOR A˙QÍÕãNT
	¯Qhâg$		; Ù§Œì˙r"ƒÒBi√ÉNW	CR¯‘ßÃ	;SCA˘»)OôL FORÙjÒ0¢—ˆ©âw  NOTÙ$E•E, ER˙SÈ	MOV	ÙlVRe
2$:Ò0iÃR2
	˙s·	•0,2$ÓÒBaIß	R2,RˆbDªÉCCUMU˘êjEA¯” «ßÒ¢Ñ¬•	1$
Ò¢ô§u	TST	˙Lƒâw¯3¨†É˙QÈø	BNEÒ-	˜hYã˙cE	õOV	#^¯lX,•3	;  ˘”÷ ÉLL BU˙àPE
4$:Ò3g÷R3,CR¯—¶G;SAVEÙ¶Aè
	RE˙ïiNÒCE5I˜BaÕ°	SYMB˘Û(°C)+	;˘”÷«ü SWIT¯rç	.RADˆ¨ØùG/
	¯S¢âm$		; Ùß¨AERRORÒ¢Ñ…ùC	CRF˘—„	;YES,Ù™Õ° FLAGÒ¢Ñ¬•	1$
Ò¢õ$u	ERRO˙B`ç	RETU˙SÜä	ENT˙qaââPUREÓÒPÈFÖAS:
Ò+§“°C	ARGıîÊ–á¯£E	]˙Pb5a	/ARGı„E	]¯≥¢MÒPÈF©OP:
Ò6$‘ßEC
	˚jO≠˙CEá˙Q¢Eç˜BdŒá¯Ba“çDFL		˜pÈEç DEFI˘“jIüN
CR¯‘¢∆uÒ"Dâw¯t¢∆A˙QcE•¯≥°≈	TSTÒ0ÈF°NT		;¯3¨†áREF O˙µ(U© AT T˘i†©˘3bøÒBaE£	9$		˜hNü
	SA˙‘¢«	MOVÒ0ÈF°NT,R2Ò.ËRãSET B˙±£E• POIN˙ëiÒ5)‘¯t£VãR		;V¯¥©…ü˘»'Uõ¯Qi ßENT Y¯µç	BNE	ˆ)âw  YESÒ¢ÑÕüV	#CRı’¢“Y˙LFä˘≥Î	•1,CRF˙—i	wSET F˘êcç	CALLÒ0ÈF©ST		;˙ëi‘AAND D¯¥'”ìT
	S˙a	•1
	M˘ı°	•1,(R2ı*ƒªßTUFF ˙—iSì˘ÛêN´˘∞¢“1$:	¯sh	áRFPAGıî «ù˙≥Dªù¯µ–PÉGE?
Ò0§Iß	2$		˜hNüÒ¢ÑÕü˙¬Q√•.PAG,˙LDª≥¯¥÷ ß¯≥¢ çLAG
Ò0‡Ãô	CRFT˙uäINC	C˙Q®Aè
	CL˙Ba“çLIN
Ò0©	cÙÉE2$:	CMP	CR¯”$ŒY˘ígN´˘¢]Œã˙Ë&Iù¯®'UõBER?ÓÒBaHìS	3$	Ò.– ùO
	MOV	#CR.LIN,R1
	CALLÒ0ÈF©ST
	INC	CRFLIN
	BR	2$
Ò¢ô§uÒ3g÷ÙpÈF©YP,R1
	MOV	CRFFLG,R0
4$:	ASR	R0
Ò0Ê–Ö	ROLNDX,(R1)+	;˘∞h •OLL N˙≥aE• TO CREF TYPE
	BNE	4$
	ASR	R0
	BCC	8$
	SU¯BQ√•FTYP+ˆ+a“]SYM,Rˆ#E	á¯3&	áRFTST
	R5ˆgP5$:	¯shB#SPACE,-(RˆJDª©˙Rf†©˙PdÃìNG BL¯3•”	BEQ	5$
	TSTBÒ*)2SıcE	õ˘ıÑ√•FDFL,R1	;S¯µ"G" BIT
	BP˘Ç[$	;BRA˘–‰ ì¯»'OAÙJë	BIS	#2,R1
6$:Ò0§”#CR.S˚3VRcÒ.È≈© TERM˘3†‘ü˙CE	õ˘ı°	•1,(R2)+
8ÙéÑÕüV	R2,CRFPNT	;STORE N¯µ–Pü˘3™E•
9$:Ò0ÊRÖ	CRFDFL
	˙QjU•˘√Eá˙Q™S©˜BDâ;TEST FOR ROOM ¯3¢ ß˙ìÈEABYTEÓÒBaÕ°Ò(·“çBUF+CRFLENı¨Y,•ˆB]“üOM TO STORE A FEW?
	BHI	ˆ)âw  YES
	CALL	CRFDMP	Ò.ÁOY DUMPÙÍ“•ENT
Ò3g÷#CRFBUF,R2	;STA˙UNãW LIN¯£E1I:	MOV¯Bi1Y(R2)+Ò.È‘ü˙QPTë¯®!Y©E
	R¯µ*“ùÒ¢ÜäáRFDMP:				˜q*Õ° CREFÙ™∆çER
	˘≥ÎB#VT,(R2)+	˜t‚‘A¯≥¢	MOV	˙Lñ-QSP)	;˙pkEAPOINTER TOÙgDÒBfœ≠	#CRFBUF,RˆB]–üINT T˘Ë)‘ÉRT
	˙ua	•2,(SP)		;COMPUTE LEN¯ı$	MOV	(SP)+,-(R2ı"]”©ORE I˙ÉE	á˘îÑ≠Q˙Lîâ;FORM¯5*Eâ ASCII
	WRITOF	CRFL˘“÷C•¯“"R;AWAI˙à!œõ˙"‘ì˘ÛÜä¯s)	áRFPNT		;  AND CLOSE
	RETURN

	ENTSEC	˘3hU•E
CR¯—¶Gu	.BLK˙„EC•FVER:	.BLKW			;˙—iSìON FL¯1∆äáRFPAG˜BWBô˘u∆äá˙Q¶Iù:	.BLKW
CRFPNT˜BWBôKW
C˙QßGç:	.BL˘uƒâ;NO-G˘Ë#LÉG

CRFHDR:	.B˘íÎâg
CRFBUF:	ı–¶KØ	CRFLEN/2

	ENTSECÒ2f–ôIN
CRFDFL:	.BL˘pÑ≤	; "#" AND "*" FLAGSÒ¢ÜäENTSEC	TXTBYT
CRFTY˙Üäı–¨‘ã	SYMR˘Ûäı“c ùDF	XM¯0ÈO	.BYTE	MACROL
	.IFF
	.¯VjE-1
	ı—gDá
	.B˚5"â°˙u)OôÒ¢ÑÆÖYTE	S¯∞ÈOô
	.B˚5"âãRRROLÒ¢ÜäENTSEC	DPURE
CRFCSI:	.WORD	CMDBUF,	CRFLNK,	C˙Q£Iô

	¯≥™SãC	MIXED
	ı’Á“âÒ,äáRFLNK˜BWWü˙Q∞ÒBWRÉD50	/CRF/ÓÒBWWüRD	1
	.RAD50	/SY/

	ENTSEC	˘3hU•E
	.¯S%◊2
CR¯—§Ãu	.BLKW	4

	XI˙î‚√
	.ENDC
	.SBTTL	LISTING STUFF

SETPF0:	Ò"DªßET PR˘3™ ç˘1fDA˚QiO	MOV	CLCFGS,PF0	;SET CUR˙QgTA˘ì·¡©˘3Á çLAGS
	BISB	#100,PF0+1	;ASSUME WORD
	MOV	CLC˘ì·¨°F0+2	;SET LOCATION
	RETURN

SETP¯Ã]			;SET PRINT FI¯≥" üNE
	˘≥Î	õODE,PF1	;SET MODE OFÙÍ“•ENT VALUEÓÒBaIßB	#100,PF1ılDªÉSSUMEÙÁ“âÒ¢ÑÕüV	VAL˙±VPçˆ*ŸÒ4¢‘´RN
ÓÒBbŒ©˙qaâìMPLIN
PF0˜BWBôKW	2
PF1:	.BLK˙‚Y	XITSEC

SETWDB:				;SET WORD OR ¯VjE	TSTÒ*)1S		;POSITIVE?
	¯SdâßETBYT		;  ˘”÷ Ö˚5"ç˙qjW•D:	MOV	R1,ı™)–S	;STACK REG
	MOV	2(R1),R1	;GET ACT˙∞f ≠ALUEÓÒBfœ≠B	#DI¯Îò/e,(R2)Ò.È≈© PRIM˘5$÷ã
	AS˘Çi1	ROL¯BTReı*ƒâw˘≥ÎEAIN BI˙ÉE	õOV	#5ıîò	BR	S¯µ!Y±Ò¢Üäß¯µ!Y©:	MOV	R1,-(SP)	˜tÍAá˘h$ŒâEX
	MOVB	2(R1)ıîòâwGET VALUE
	MOVÒ(È–É¯qVRa
	MO˙–Ñ“a,(R2)ıb]–É¯à+…©H SPACES
	MOVB	R0,(˙Lî´ÒBfœ≠¯Bi0Yıô)WÒ¢Ñ”ØAB	R1Ò"]ÕÉNIPUL¯5"†©O LEF˙à$AôF
	RORB	R1		;G¯µTëE LAS˙à#’≥
	CL¯cE	•OR	R1
	MOV	#3,R0
SETBYX:	SWA¯Bi0	ADD	#3,RˆE	õ˘ı°	G¯ícÆa/10,(˙Lîç1$:	ASL	R1
	ROLB	(R2)
	¯ëa¬R0
	BGT	1$
	T˙u!	QR2)+ÓÒBi◊ÉB	R0ÓÒBiœÖ	R0,SETBYX
	MOV	(SP)+,R1Ò¢Ñ“ãTURN
	.SBTTL	˘ql¬üARD H¯3¢LãRS
ÓÒBbŒ©SEC	M˘6"ƒ
	.˙ÛÈD0
CM˘Û'Ku	.WORD	0		;KB OUTPUT LINKÒ¢ÑÆ•AD50	ıÊœ_
	.W˘Ù¢	c
	.R¯1∞/KB/

	.WORD	ˆECõILNK:Ò+´œ•D	0		˜r· ìNPUT ˘ígK	.RAD50	/¯sdØ	.WORD	1
	.RAD50	/˘póç

	¯≥™SãC	IMP˙¥¢ç
CMI˘ëg=83.
Ò¢°ÕâBUF:	ı–¶KØ	7.		˜pÁÕõAND BUFFER HEADER
CMIHDR˜BWBôKW	3ÓÒPÊ…ÖUF:	.BLKW	<CMILEN+1>/2
CMDSAV:	.BLKW	7.
	XITSEC
	.SBTTL	OBJECT CODE HANDLERS

ENDP:				;END OF PASS HANDLER
	ENTOVR	4
	CALL	SETMAX
	CALL	TSTCOR		;TEST CORE SIZE
	TST	PASS		;PASS ONE?
	BEQ	2$
	JMP	EN¯î	;BRANCH IF PASS 2

1$:	CALL	GETLIN		;MOVE TO EOF
2$:	TST	SRCLNK		;FOUND?
	BNE	1$		;  NO
	TST	OBJLNK		;PASS ONE, ANY OBJECT?
	BEQ	ENDP1B		;  NO
	MOV	(PC)+,R5	;ASSUME RELOCATA¯S"çÒ+©Aâˆ¨ØüBJ/
Ò+§∆A˘—#	±EDABS
	BI˙ÇQ≈âı–aSYEDMAS˘b]«üOD GU¯¥Èø	BNE	8$		;  YE˙cE	õOV	(PC)+,Rˆ¢]Œüıà)≈© FOR ¯0©œôUTE
	.RAD50	/B˘3óç	.ENDC
8$:	OPENO	OBJ		;O˙g ©HE FILE
	MOV	#¯S%‘aˆ+!LóTYP	;˙qj Ö˘ì·ÀA˙ñh1A1
	C¯3&	üBJINI		;INIT THE POINTERS
	MOV	#PRGTTL,˙LDªßET "FROM" ˘3¢E±
	MO˙¬iLâPNT,R2	;  ¯3¢ E˙ì— ì˘—"ÿÒBa¡ôL	GSDDMP		;OUTPUT GS¯à!Lü¯r∆äı“c ùDF	DO˙uö	MOV	Ùt)GìDN,R1	;POINT TO SUB-TTL BUFFER
	TST	4(R1)		;SET?
	BEQ	9$		;  NO
	CALL	GSDDMP		;YES, STUFF IT
	.ENDC
9$:	CLR	-(SP)		;INIT FOR SECTOR SCAN
10$:	MOV	(SP)+,ROLUPD	;SET SCAN MARKER
	NEXT	SECROL		;GET THE NEXT SECTOR
	BEQ	ENDP1A		;BRANCH IF THROUGH
	MOV	ROLUPD,-(SP)	;SAVE MARKER
	MOV	#MODE,R1
	MOV	(R1),R5		;SAVE SECTOR
	CL˙PÑ“k		;ISOLATEÙjÒ4Î¡ÖÒ4öâ˜hAù¯à(LÉ¯qPIùÙ§«ë˙ÉE	Ö˘0ƒ£ΩC<RELFLG>,(R1)	;CLEAR ALL BUT REL BIT
	BIS	#<GSDT01>+DEFFLG,(R1)+	;SET TO TYPE 1, DEFINED
	MOV	R5,(R1)+	;ASSUME ABS
	BEQ	11$		;  OOPS!
	MOV	(R1),-(R1)	;  REL, SET MAX
11$:	CLR	ROLUPD		;SET FOR INNER SCAN
12$:	MOV	#SYMBOL,R1
	CALL	GSDDMP		;OUTPUT THIS BLOCK
13$:	NEXT	SYMROL		;FETCH THE NEXT SYMBOL
	BEQ	10$		;  FINISHED WITH THIS GUY
	BIT	#GLBFLG,MODE	;GLOBAL?
	BEQ	13$		;  NO
	CMPB	SECTOR,R5	;YES, PROPER SECTOR?
	BNE	13$		;  NO
	BIC	#^C<DEFFLG!RELFLG!GLBFLG>,MODE	;CLEAR MOST
	BIS	#GSDT04,MODE	;SET TYPE 4
	BR	12$		;OUTPUT IT
ENDP1A:	BIC	#^C<RELFLG>,ENDVEC+4	;CLEAR ALL ¯Uj •EL FL¯1∆äBIS	#¯Ù‚Ta3+DEFFLG,E˘—+Eá+4
	MOV	#ENDVEC,R1
	CALL	GSDDMP		;OUTPUT END BLO¯r∆ä¯pfLPCRDMP		;D˙≥h ìT
	MOV	#BLKT02,BLKTYP	;SET "E˘—Oç GSD"
	CALL	RLDDMP
	MOV	#BLKT04,BLKTYP	;INIT FORÙ"ÿ©Ù¶OáKS
E˘—(1Ö:	CLRÒ4ßÃ´PD		;SET FOR RE-INIT SCAN
31$:	NEXT	SEC˙SÊ	˜q‚‘ATHE NEXT ENTRY
	BEQ	32$		;  BRANCHÙc çINISHED
	¯s)	≠ALUE		;FOUND, RESET PC
	˘3©≈•T			;PUT BACK I˘»*AÖLE
	BR	31$

32$:ÓÒBWIçÙ¢FXRESKB
	PUTKB	ÙqgD°ˆ3DâwEND OF PAS˙lPMß¯„EÒ1gTßEC	TX˙ê¨‘ENDPˆ3]	]ASCIZ	<CR><LF>/¯≥¢ üF PAS˙hØ	XITSEC
Ò+¢Œâ¯cE	RETU˙SÜä
GSDDMP:				;DUMP A GSD BLOCK
	C˘¥“e,#RLD¯Uc+•LDLENı¨X	wROOM ¯”È ÉNOTHER?
	BLOS	ˆ)âw  YES
	CALL	PCRDMP		;NO,Ù*Õ° CURRENT
1$:	J˘¥ÿõIT4		˜sg÷ã FOURÙÁ“â˙cEã˘—(2u				;¯≥¢ ü¯»(Aß˙h	.IF ˘—#	±CREFÓÒBfœ≠Ò0ÈF°˘’ReÒ.‡Œ≥ CREF IN PROGRESS?
	BEQ	8$		;  NOÓÒBa¡ôL	CRF¯ìh	;YES, DUMPÙgDACLOSEÙ™∆çER
8ÙéÜäı—gDáÒ¢ÑÕüV	#SY˘µ,TYR1
	MOV	#STLBUF,R2
	MOV¯Vj		;SET "SYMBOL TABLE"ÙÍ¬[TITLE
	TST	BLK˙ñh	˜pgYAOBJEC˙à'’©PUT?
	BEQ	1$		˜hNü
	CALL	OB˘Q&–Ò.Ï≈ß, DUMP IT
	MOVÒ(·LóT06,B˘íÍY°	;SET END
	CALL	RLDDMP		˜q*Õ° IT
Ò+§∆ANDF	X¯± ¬ß
	BI˙ÇQ≈âı–aSYEDMASK	;ABS OUTPUT?ÓÒBaNãÒ,R	;  NO
	MOV	OBJPNT,RˆE	õ˘ıÑ≈ùDVEC+6,(R0)+	;S¯µEùD VECTOR
Ò3g÷R0,OB˘T'T	CALL	OBJDMP
	.END¯cE1I˜BjS©¯BfL©¯SÃß˙ã¶	w¯3¨†ô˘4ÍIùG OUTPUT?
	BEQÒ1gD°ˆQâwÙ'O	BITÒ(ÊC]SYM,L¯s`”ó	;SYMBOL T¯0¶EASUPPRESSIO˘œ∆ä¯S¢âãNDP2DÒ"]†AYES
	CLR	˘î(Cù˙ÇDªç˘Ù°≈ANEW P¯1‚ç	CLR	ROLUPD		;SET FOR SYM¯SÊ ©¯0¶EA˙p‡ŒÒLí:MOV	#LINBUF,R2	;POINT TO STORAGE
3$:	NEXT	SYMROL		;GET THE NEXT SYMBOL
	BEQ	ENDP2A		;  NO MORE
	R50UNP			;UNPACK THE SYMBOL
	MOV	#ENDP2T,R3
	CALL	ENDP2C
	MOV	#MODE,R1	;POINT TO MODE BITS
	BIT	#DEFFLG,(R1)	;DEFINED?
	BEQ	4$		;  NO
	CALL	SETWRD
	BR	6$

4$:	MOV	#STARS,R1
	MOVBYT			;UNDEFINED, SUBSTITUTE ******
6$:	CALL	ENDP2C
	MOV	#SECTOR,R1
	CMPB	#1,(R1)
	BGE	10$
	CMPB	-(R1),-(R1)
	CALL	SETBYT
10$:	MOVB	#TAB,(R2)+	;SEPARATOR
	CMP	R2,#LINBUF+50.	;ENOUGH FOR ONE LINE?
	BLO	3$		;  NO
	CALL	ENDP2B		;OUTPUT LINE
	BR	2$		;NEXT LINE
ENDP2A:	CLR	ROLUPD		;SET FOR SECTOR SCAN
21$:	CALL	ENDP2B		;OUTPUT LINE
	NEXT	SECROL		;GET THE NEXT ENTRY
	BEQ	ENDP2D		;  EXIT IF END OF ROLL
	R50UNP			;PRINT THE NAME,
	MOVB	#TAB,(R2)+
	MOV	#VALUE,R1
	CALL	SETWRD		;  THE VALUE,
	MOVB	#TAB,(R2)+
	MOV	#SECTOR-2,R1
	CALL	SETBYT		;  AND THE ENTRY NUMBER
	BR	21$

ENDP2B:	CLRB	(R2)
	PUTLP	#LINBUF
	MOV	#LINBUF,R2	;RESET TO START OF BUFFER
ENDP2D:	RETURN

ENDP2C:	CALL	31$
31$:	MOV	(R3)+,R0
	BIT	(R3)+,MODE
	BNE	32$
	SWAB	R0
32$:	MOVB	R0,(R2)+
	RETURN

	ENTSEC	DPURE
ENDP2T:
	.ASCII	/ =/
	.WORD	LBLFLG
	.ASCII	/% /
	.WORD	REGFLG
	.ASCII	/R /
	.WORD	RELFLG
	.ASCII	/G /
	.WORD	GLBFLG

	ENTSEC	TXTBYT
STARS:	.ASCIZ	/******/
SYMTXT:	.ASCIZ	/SYMBOL TABLE/
	XITSEC
	XITOVR
	.SBTTL	CODE ROLL HANDLERS

STCODE:	APPEND	CODROL		;APPEND TO CODROL
	RETURN

PCROLL:				;PROCESS CODE ROLL
	NEXT	CODROL		;GET NEXT CODE ROLL ENTRY
	BEQ	PCROL3		;  END
	SAVREG
	CLR	R5		;ASSUME BYTE
	CLR	R4
	BISB	SECTOR,R4	;GET THE RLD TYPE
	BMI	1$		;BRANCH IF BYTE
	INC	R5		;  WORD, BUMP TO 1
1$:	TST	PASS		;PASS ONE?
	BEQ	PCROL2		;  YES, JUST UPDATE PC
	INC	PCRCNT		;EXTENSION LINE?
	BMI	2$		;  YES
	SETPF0			;LIST COLUMN ZERO
2$:	SETPF1			;SET PRINT FIELD ONE
	ASLB	R4		;BYTE?
	TST	BLKTYP		;ANY OBJECT CODE CALLED FOR?
	BEQ	PCROL2		;  NO
	.IF NDF	XEDPNC
	BIT	#ED.PNC,EDMASK	;PUNCH DISABLED?
	BNE	PCROL2		;  YES
	.ENDC
	MOV	PCRTBL(R4),R4	;GET PROPER TABLE ENTRY
	MOV	RLDPNTıîô	wSET P˘ÚgTãR TO ˙S" ÖUFFERÒ¢Ñ√õPB	CLCSEC,OBJSEC	;SECTOR ¯r ŒèE?
	¯Qhâc0$		;  NO
	CMP	R2,#RLDBUF+RLDLEN-1ˆ]“üOM INÙÍ“•ENT RLD?
	BLOS	4$		;  YE˙cE	áALL	PCRDMP		;YES, DUMP CU˙T¢Œ© BUFFERS
4$:	M˘ıÑ£•LDT07,(R2)+	;SE˙à)Lâ TYPEÙ∆äMOV	CLCNAM,(R2)ıb]†AAND N¯µ–SãCTOR ˘–f≈	MOV	CLCNAM+2,(R2)+
	MOVB	CL¯t‚√YOBJSEC
	BR	12$
10$:	CMP	CLCLOC,OBJLOC	;DID PC MOVE ON US?
	BEQ	14$		;  NO
	CMP	R2,#RL¯ê™∆WRLDLEN-4	;ROOM IN CURRENTÙ¶DABUFFER?
	BLOS	ˆ,R	;  YES
	CALL	P¯t¢M°		;YES, DU˘¥C´˙T¢Œ©Ù™∆çER
1ˆ)	õ˘ıÑ£•LDT10,(R2)+
12ÙéÜä.IF DF	YPHASE
Ò3g÷CLCLO¯kRe)
	SUB	PHAOFF,ıô)WÒ¢ÑÆìFF
	MOV	C˘êÊOáıä)2S+	;SE˙à'EØÙ!ç	.ENDC
13$:	CA˘ì–áRDMP		;DUMP BUFFER
14$:	˘≥Î	üBJPNT,R0	;¯Òj á˘Ò"†°˘ÚgTãR
	A¯ë“k,R0		;COMP˙µ"†ùEW END
	CMP	R0ıàÁ¬ïBUF+OBJLEN-1	;R˘ÛÊø	BHIÒ,Y§	;  N˘„E	õOVB	Rˆã)0	;YESıà#≈© RLD ˙rmE	ADDÒ4ô,•0
	C˘¥“a,#RLD¯Uc+•˘ë&EùÒ¢Ñ¬ëI	13$Ò"]†ANO RO˘ÛV âUMP B˙±£E•
	MO˙¬g¬ïPNT,Rˆ#E	áMP	R1ıàÁ¬ï¯Uc	w¯“iS© ITEM˜„E	ÖNE	16ÙÇDªA NO
Ò+§∆ANDF	X¯± ¬ßÒ¢Ñ¬ì˙ÇQ≈â.ABS,¯±&¡ßK	;AB˙h'’©PUT?ÓÒBaE£	15$	Ò.– ≥ES
	ı—gDáÒ¢ÑÕü˙¬Q¬ô˘u3Yıò©WÒ.Ï≈ßıà)≈© BLOC˘h*Y°E
15ÙéÑÕüV	CLC˘ì·¨QR1)+	˜hAù¯à)‘É˙U$Œè ADDR¯¥Èç16$:	¯4Ê	•4		;A˘÷PRô¯è∆ä¯P·â°CROL1Ò"]†ANO
	˘≥ÎBSECTO˙KRe)+	;Y¯¥÷ ßET CO¯ëFäMOV	Rˆ+)0	SUBÒ(Á¬ïBUF,Rˆ]√ü˘¥*‘ãÙgDãX
	M˘ı°	•0,(R2ı*∆ä°¯tßÃc˜B`”ô	R4		˜pgYA˙vf¬ü˘à)E£UESTE¯è∆äBCC	2ˆ)âw  NOÓÒBfœ≠	SYMB˘Û(•2)+	;˚1i¨AMOVE ˘5äMOV	S˚3aOôılñ(•ˆJUç21$:	¯4Ê	•4		;A˘÷PVÉLUE?ÓÒBaCá	22$	Ò.– ùO
	M˘ıÑ÷ÉLUE,(˙Lî´;YES,Ùg÷ã IT
ˆLí:MOV	RˆK)LâPNT	;˙pkEAPOINT¯¥ÜäMOVB	˙–fUã,(R1)ıcE	©ST	R5Ò¢Ñ¬ãQ	29$Ò"]¬•ANCH ˘1êB≥TE IN˙u)Uá˙ígŒÒBfœ≠B	VAL˙±U±Yıò©WÒ¢ô9I:	MOVÒ4ò¨üBJPNTÒ¢Üä°¯tßÃe˜BdŒáÒ4öâ˜s`Àã COUN˙à†üR 2
Ò0bDR5,CL¯s'√˜uhDÉ˙ëPPáÒ¢ÑÕü˙¬aÃáLOC,O¯R¶Oá	;SETÙ‚—´ENCE ¯T¢¡ó
	SE˙ì≠	•ˆDªß¯µT•UE RE˙ïiNPCRO˘å›	•ETURNÒ¢ÜäENTSE¯bdÕ°LIN
˙ÈCùT:	.B˘íÎâÒ.‚ÿ©¯≥©…üN LIN¯®#LÉ¯„E	±˘5)≈á
PC˙Q&–u
	MO˙¬i2YRLDPN˙Ç]”ãT RLDÙ'…ù˙ëiÒ0‡Ãô	OBJD˘¥äMOV	R˘ë(N©,R2
Ò4¢‘´RN
ÓÒBbŒ©SEC	D˙iEPCRT¯S			;TA¯S"†ÖY RLDÙ,–ã
	.W˘Ù¢	aÒ¢ÑÆØ˘Ù¢	c20004Ò"]“ôDT01ÓÒBWWü˙Q±iˆ6	;RLD˙å	.WOR¯ÇX≤aˆ	˜t¶D©03
	ı’Á“âÒ,Z0aˆÑâwRLDT0ˆÉE	]WORD	ˆ-ò0c0		;R˘ë*0k
	.W˘Ù¢	c60010Ò"]“ô¯ï6	.WORD	0ÓÒBWWü˙Q∞ÒBWWü˙Q±aˆ0	;RLD˙åXç	.WOR¯ÇX	.WORD	0
	.WORD	0
	.WOR¯ÇX∂a010		;RLDT15
	.WORD	1600ˆ,âw˙S"Tcˆ√E
	ENTSEC	IMPPAS
	.ODD
OBJSEC:	.B˘í·	c		;OBJECT FILE ˙qa‘üR
OB˘S'√u	.BLKW	1		;OBJECT FILE LOCATION


	ENTSEC	˚ÍPÉS		;E˚a’©E EAC˘(Aß˙cE	áOMB	OBJSECÒ"]∆üRCE S¯¥j≈ùCE BREAK
Ò6$‘ß¯∞∆äÒCE	]IF ND¯¬lEâPNC
	GENEDT	PN¯k(Ná˙qj	w˙gCë CONTROL
Ò¢®NáSET:	MOVB	Ùl€∑YOBJSE¯b]∆ü˙P‚†ß¯¥j≈ùCE BREAK
	RETU˙SÜä.ENDCÒ¢ÜOÖ˘Q&–u				;¯ïf–A˙í"†ü¯R¢√© BUFFER
	˘≥Î	GOBJHDR+2,R0
	MOV	#1ıä)0Sıb]∆üRMATT¯±BìNARY
	MOVÒ3·J°˘’(•ˆ
Fä¯QhâüBJINX		;EXIT IFÙ™ÃôÙ
'O© INIT˙ëb)ÒBi’Ö	#OBJBUF,(˙Lâw¯sÊ–´TE SIZE
	BEQ	1$		;  BRAN¯rIç EMPTY
	WRITOF	OBJL˘“÷OÖJHDRÓÒLR:CMP	R˘ë(N©,#RLDBUF+2	;ANY˙í$Œè IN R˘ëç	BLOSÒ3·JìNI		;Ù'OYÙ™”©ÙgI©
RLD¯ìh:ÒBWIç NDF	XEDAB˙cE	ÖIT	#E¯ã†¬ß,EDMA˙rƒªÉBS OUTPUT?Ò¢Ñ¬ã˙"g¬ïINI		˜hYãS, NOÙ¶D	.ENDC
	˘≥Î	G˙S"B´F,R0
	MOVÒ0¶K©YP,(Rˆ
FäMOV	R˘ë(N©,-(R0)
	SUB	#RLDBUFıä)0S
	MOV	#1,-(R0)Ò¢Ñ◊•ITOF	˘•Lù˘k)Lâ˘)
OBJ˘3§∫MOV	#OBJBUF,OBJPNT
Ò3g÷Ùt¶DÖUF+2,˙S"Pù˙ÉEOÖ˘RgXuÒ4¢‘´RN


	ENTSEC	IMPURE
OBJPNT:	.BLKW
R˘ë(N©:	.BL˘u∆äÖLKTYP˜BWBôKW
	XITSEC
L˙uK{	1			˜s$”©ING T˘Ë%≈≥¯S‡“âÒ¢¶S©.L=	2			;LISTIN¯Ë*OALP
L˙uKô=	LSTı“–ÃßT.L		˜s$”©ING TO BOTH
LS˙ã¢“{	4			;ERRO˙H"E≠ICE

PUTKBL:	INCB	˘îÍMüD		;LIST TO BOT˘EP´TLP:	INCB	LSTMOD		;L˘4Í ©O LP
PUTKB:	INCB	LS˙ìgƒÒ.ÊIßT TO ˘pÜäÒT*‘ôIN:		Ò"]œ´TPUT A LINE
	SAVREG			;S˙êaÀAREGIS˙ëiS	MOV¯BfS©˘≥‚,•ˆb]«ãT LOG˘0‡ÃAINDEXÒ¢Ñ√ôRB	LS˙ìgƒ	;CLEAR FOR ABOVE INC'S
	MOVB	LLTBL(R3),R4	;˘∞h ©O PHY˙ra¡ô DEVICE
	¯Qhâ°˙µ&Is		;  ¯∂$‘A˘1êN´˘ìäASR	R3		;S˘cTAOUT KB FLAG
	BEQ	PUTLI2		;BRA˘–‰ ìF NO ˘ì„…áAL LPÒ¢ÑƒãC	LPPCNT		;YES,Ù"√•EMENT COUNT
	BGT	PUTLI2		;SKIP IF NOT TIME
Ò1gTüVR	8ÓÒT*‘ô˘,]	õ˘ıÑ£ôPP,LPPCNT	;RESET COUNT
	˘≥Î	•ˆ+®ß˙
DªßTACK CURRENT POINTER
	MOV	TTLEND,R2	;POINT T˘Ë(AèE NUMBER
	TST	PASS
	BEQ	11$
	MOVÒ(ÍS©HD1,R1
	MOVBYTÒ"DªõOVE "˙c≈E INTO POSITION
	MOVÒ4 «ùUM,R1
	DN¯bDâwCONVERT TOÙ"√ìMAL
Ò2gC˙c≈±T
	B¯¥D±cÙÉE	õ˘ı°	GCH.AD¯ãReı*∆äc1$:	CLRB	(˙Lîç	PUTLP	TTLBEG		˜t)IùT TITLE
	PUTLP	#STLBUF		;  SUB-TIT˘ëV	PUTL˙Q√•LF		;  AND A BL¯3•†ôINE
	MOV	ıË)WıîòçÒ6$‘üVR	INLINE	Ò.„AôL THROUGH
PUTLI2:	ASR	LLWAIT		;LI˙u$Œè REQU˘4¢†ØAIT?ÓÒBaCá	1$		˜hNü
	WA˘5'∆LSTLN˘k&S©HDR
ˆ)	õ˘ıÑ£ô˙u!Uç-2,R2Ò.È≈© DEST˘3†‘ìON IN¯ëlÒ0ÊRıô)W		;SET STOPPERÓÒBfœ≠Ò4ô,•3		;SAVE A COPYÒ¢ô1I:	MOVB	(R1)+,(RˆJUâw˘≥ÎEACHARA¯u"“ATO OU˙î*‘A¯UcFãR
	BGT	21$		;LOOP I¯»'O©˘gGA˙t"√ì¯3ä˘≥ÎB-(R2)ıîò	wSPECI¯3 ÖACK U˙ Œâ SET R0
	BEQ	2ˆIâwEND I¯»'UôL
	.˘1êNâF	XEDLC
	BICB	#200,-(R1)	;CLE¯4êSìGN BIT IN ˙sÍ“á¯£E	Ö˘—D≤c$		;R¯´i‘üRE IF LOWER CASE
	MOVB	#¯rQõ,(R1)	;MUST BE ¯¥©O•
	.I¯—ÜäMOVB	Ùp‰.£M,-(R1)	;ILLEGAL CHAR, SE˙à?E
	.ENDC
	BR	2ˆ)ä22$:Ò3g÷Ö	-(R2ı+)0;FETC˘(RãCEDIN¯Ë!»ÉR
	B˘5!	GCT.SP!CT.TAB,CTTBL(R0)	;B˘êgK
	BN¯¢Y2I		;  ˚1i¨ATRIM ˘5äCMPB	#VT,(R2)+	˜sg÷ã TO E˘— É VT?ÓÒBaE£	23$	Ò.– ≥ES, NO CR/˘ëÜäMOVB	#CR,(R2)+	;STUF¯»!“	MOV¯BQÃç,(R2)ıb]”ãT LFÓÒLô§u	SUB	˙L÷Re		;CO˘¥*‘ã CHAR¯0ÍE• COUNT
	MOV	R2,-(R3)	;SE˙à!œ´NT
	¯s)	[(R3)		;CLEAR MODE
	ASR	R4		;KB REQUESTED?
	BCC	2ˆ©âw  NO
	TST	CMOLNK		;YES, DEVICE INITTED?
	BNE	24$		;  ˘”∆äı“gI©Ò(·ÕüLNK
24$:	WRITO¯¬aÕüLNK,LSTHDR	;TYP¯® ŒâÙ‡…©Ò¢ô5I˜Bfœ≠	R4,LLWAIT	;LIS˙ígGAREQUE˙u"ƒÒ¢Ñ¬ã˙"hU©LI9		˜hNü
	.WRITE	Ùs)‘ôNK,#L˙u$D•Ò.Î“ì˙ëPI©Ò¢®U©LI9:	RETURN
	ENTSE¯bdÕ°˙¥¢çLLTBL:	.BLKB	5	Ò.ÊOè˘0‡ÃATO PH˚4‰√É˘à"E≠˘0‚†õAPPING
LSTMOD:Ò+°LóB	1		˜s'«ìCAL L˘4ÍIùG FLA¯Ù∆äôLWAIT˜BWBô˘uƒ±Ò.Î¡ìT FLAG

Ò1gTß¯∞ƒÿá˙î)G	INC¯BfL©BL+LS˙ã•âw˘3§‘ATO KBÒ¢Ñ…ù¯pÑÃôTBL+LST.KLÒ¢Ñ…ùCB	LL˙ê¶+ô˙uE•Ò.‚Eç¯5fTA¯¥©O•Ù"÷ìCE

	ENT˙qaâ©XTBYTÒ¢™S©˘∫.ASCIZ	/ P¯1‚†_
	XITSEC

WR˘5'∆u	.WRITE	(R5),(R5)+	;WRITE A LI˘—FäØ¯2jOç:	.WA˘5®•ˆ™Uâ˜u‡…© ON O˙µ(U©Ò¢Ñ¬ì˙ÇQ”Ö.EOM*ˆå,Å(R5)+	;EOM˜„E	ÖNE	1$Ò"]†A˚1i¨AERROR
	RTS	R5

1$:	FIN¯ëk	çINTB3		;NO, CLOSE PARTIALÒ¢Ñ”ã˙Tß“202		;BOMB OUT
	ENTSEC	˚ÍP•G
	CALL	SETHDRÒ"]√üME HE˙QPA© STAR˙à'∆A˙ß«•¯3Fä˚jSãC

˙qjHâR:				;INI˙à*HãÙ"¡â¯¥êB´¯—¢“ÒBbŒ©OVR	9
	MOV	#SETHD1,CHRPNT	;PRETENDÙ‚ß•E LOOKING AT REAL LINE
	˙qjCëR
	CALL	TITLE		;SET TITL¯® ŒâÙ™∆ç¯¥ÜäMOV	#TTLBU2,R2	;POINT TO CONSTANT AREA
	MOVB	#TAB,(R2)+
	MOV	#HELLO+2,R1
	MOVBYT			;DITTO FOR VERSION #
	.IF NDF	DOSV4
	.CVTDT	#0,R2		;CONVERT THE DATE
	ADD	#9.,R2		;MOVE PAS˙à)‘ü˙Qb â¯5"ç	MOVB	#SPACE,(RˆJUç	.CVTDT	#1ıîô	˜hAùD TIME
	ADD	#5.,R2
	.ENDC
	MOV	RˆK*Tô¯≥¢	RETURN

	ENTSEC	TXTBYT
SETHD1:	.ASCIZ	/.MAIN./	;DEFAULT TITLE

TTLLEN=	32.			;TITLE LENGTH

STLLEN=	64.			;SUB-TITLE LENGTH
	ENTSEC	IMPURE
TTLBUF:	.BLKB	1+TTLLE˘¬]‘ì˙ì"†ß˙ìÈAè¯£ET©LBU2:	.BLKB	44.		;DATE, PAGE #, ETC.
	.¯µ¢ŒÒU*LÖEG:	.BLKW			;TITLE B¯±‰Œù˘3£çTTLEND:	.BLKW			;TITLE END

	ENTSEC	IMPPAS
STLBUF:	.BLKB	STLLEN+1	;SUB-TITLE BUFFER
	.EVEN

	XITSEC

	XITOVR
DNC:				;DECIMAL NUMBER CONVERSION
	MOV	#10.,R3		;SET DIVISOR
DNCF:				;ENTRY FOR OTHER THAN DECIMAL
	CLR	R0
	DIV	R3,R0		;¯íkIâ¯®)1	MOV	R1,-(SP)	;SAVE REMAINDER
	MOV	R0,R1		;SET FOR NEXT DIVIDE
	BEQ	1$		;  UN˘ëi”A˚QiO	CALL	DNCF		;RECURSE
1$:	MOV	(SP)+,R1	;RETR˘1kEANUMBER
	ADD	#DIG.0,R1	;CONVERT TO ASCII
	MOVB	R1,(R2)+	;STORE
	RETURN


R50UNP:				;˙Pb k0 UNPACK ROUTIN¯£E	õOV	R4ıãTS°)	;SAVE REG
	MOV	#SYMBOL,R4	;POINT TO SYMBOLÙÍO•AGE
1$:	MOV	(R4)+,R1	;GET NEXT WOR¯ÉE	õOV	#50*50,R3	;S¯µDìVISOR
	CALL	10$		;DIVIDE AND STUFF IT
	MOV	#50,R3
	CALL	10$		;AGAIN FOR NEXT
	MOV	R1,R0
	CALL	11$		;FINISH LAST GUY
	CMP	R4,#SYMBOL+4	;THROUGH?
	BNE	1$		;  NO
	MOV	(SP)+,R4	;YES, RESTORE REGISTER
	RETURN


10$:	CLR	R0
	DIV	R3,R0
11$:	TST	R0		;SPACE?
	BEQ	23$		;  YES
	CMP	R0,#33		;TEST MIDDLE
	BLT	22$		;ALPHA
	BEQ	21$		;DOLLAR
	ADD	#22-11,R0	;DOT OR DOLLAR
21$:	ADD	#11-100,R0
22$:	ADD	#100-40,R0
23$:	ADD	#40,R0
	MOVB	R0,(R2)+	;STUFF IT
	RETURN
	.SBTTLÒ2WœABUFFERS

	ENTSEC	DPURE
SRCCSI:	.WORD	CMDBU¯À”•CLNK,	SRCFIL

	ENTSEC	I˘¥*“ã
	.BLKW	1
SRCLNK:	ı–¶KØ	4

SRCH¯îù	]¯S%◊3
SRCBUF:	.BLKW	SRCLEN/2+2

	.BLKW	2ÓÒTÈCç˘3	]BLKW	4

	ENTSEC	DP˙¥¢ç
LSTCSI:	.WORDÒ0ÊƒÖUF,	LSTLNK,	LSTFIL
Ò¢ß¬ïCSI:	.WORD	CMDBUF,	OBJLNK,	OBJFIL

	ENTSEC	IMPURE

	.BLKW	1
LSTLN˘nÑÆÖ˘íÎâi

LSTHDR:	.BL˘uƒ≥ÒS)‘Ö˙±ù	]BLKW	<OCTL¯≥ïÃì˘”"Œ}ıÏï±
	.¯S%◊2
LS˙ë§Ãu	.BLKW	4

	.BLKW	1Ò¢ß¬ï˘ì•∫.BLKW	4

OBJHDR:	.¯S%◊3
OBJBUF:	.BLK˙‚g¬ïLEN/2


	.BLKW	2
OBJFIL:	.BLKW	4

OCTBUF:
OCTERP:	.BLKB	0ÓÒS·‘ß¯¥]	]BLKB	2
OCTPF0:Ò+°Ló¯B[ç˘ÍPç1:	.BLKB	OCTLENıØ-üCTBUF>
LINBUF:	.BLK˙‚fIù˘ëg/e
LINEND:	.BLKWÒ,FäRLDHDR:	.BLKW	3
RL¯ê™∆uÒ+°LóW	RLDLEN/2

	XITSEC
	.SBTTL	EXPRESSION EVALUATOR

EXPR:				˜qlP•¯¥È…üN EVALUATION
	˙pkRã¯‚DâwSAVE REGIS˙ëiS	TER˘¢DâwTRY FOR A TERMÓÒBaE£	5$		;EXIT IF NULL
	CLR	-(SP)		;NON-NULL, SET REGISTER FLAG STORAGE
1$:	SETXPR			;SET EXPRESS˘3Á •¯±‰”©ERS
	BIS	(R3),(SP)	˜t‡÷ã REGISTER FLAG
	CHSCAN	BOPTBL		;SCAN TH¯®!IùARY OPERATOR TABLE
	BEQ	2$		;  BRANCH IF NOTÙß’ù¯ÉE	áALL	10$		;FOUNDıà!¡ô˘à$AùDLER
	BR	1$		;˙ëi‘AFOR MORE

2$:	BIC	ÙkX≠•EGFLG,(SP)	;MAS˘h ÃôÙ™‘A˙Qc…ßTER FLAG
	BEQ	6$		;¯T†ŒáH IF NOT REGIST¯¥ÜäBIT	#177770,(R4)	;INÙß’ù¯îﬂç	BNE	7$		;  NO,ÙiRü˙CE6I:	ASR	RELLVL		;TEST RELOCATON LEVEL
	BNE	3$	Ò.·RÉNCH IF NOT 0 ORÙFäBCC	4$		;BRANCHÙc aÒ¢Ñ‘ßT	(SP)		;RELOCATABLEıà*Eß˙à)EèISTER FLAGÒ¢Ñ¬ã˙"Z$Ò.·RÉNCH IF NOTÙ‚‘ÒM“:¯¥©O•	R		;REL A˘—Rã¯ÎE•˙SÈ	CLR	(SP)	Ò.·Ãã¯4êRãGISTER BIT
	BR	4$

3$:Ò1iRüR	A		;IMPROPER RELOCATION
4$:	BIS	ıË)Wıä)3S	;MERGE REGISTE˙H!I©Ò¢Ñ”ã˙ì≠	•0		;SET TRUE
5ÙéÑ“ãTURN

10$:	ENTOVR	˜E	õ˘ıÑ“a,-(SP)	;ST¯0Â†üPERATOR ADDRESS
	MOV	R1,˙Lƒâw˘ë`÷ã POINTER TO "SYMBOL" IN R3
	MOV	(Rˆ*U¨[(SP)	˜tÍAáK SYMBOL
	MOV	(R1)+,-(SP)
	MOV	(R1)+,-(SP)	˜hMüDE,
	MOV	ıò©WıãTS°)	;  VALUE,
	MOV	(R1)+,-(SP)	;  AND REL LEVE˘ÉE	èLBTRM			;EVALUATE NEXT TERN
	MOV	#EXPBAK+^D1ˆ)1˜t‚‘ATO UNSTACK PREVIOUS
	MOV	(SP)+,-(Rˆ*Dª•¯≥Lã˙—f	MOV	(SP)+,-(R1)	;VA˘ïbç	MOV	R1,R2		;R2Ù'…ù˙î–Tü PREVIOUS ˙–fUãÒ¢ÑÕü˙¬TS°)+,-(R1)	;MODEÓÒBfœ≠Ò*)–S+,-(R1)
	MOV	(˙t´Y-(R1)	;R1 POINTS TO ˙¢÷ìOUS SYMBOL
	AS˙BTS°)		;ABSOLUTE ONLY?
	BCS	12$		;  NO
	BIS	-(RˆJV-Q˙Mâw˚1i¨AMERGE FLAGS
	A¯TÍS©Ò"Dª©EST FOR ABSOLUT¯£E	áMP	(R2)+,(R4)+	;RESTORE R¯±‰”©ERS
12$:	ASL	(˙tâ;EVEN OUT ADDRESS
	JMPOVR	(SP)+		;EXIT THROU¯ÚHÉNDLER

	ENTSEC	IMPURE
¯∂(BÉK:	.BLKW	5Ò"]–•EVIOUS TERM STORAGE
	XIT˙qaç	ENTSEC	DPURE
BOPT¯S	Ò"]¬ìNARY OP TABLE
Ò1·»©BL	CH.ADD,	BOPADD+1	; "+"Ò¢Ñ«áHTBL	CH.SUB,	BOPSUB+1	; "-"
	GCHTBL	CH.˘µf,BOPMU˘Ç]†E*"
	¯‰TÖL	CH.¯ík,BOPDIV	; "/"
	GCHTBL	CH.¯3¢,BOPAN¯Ç]†E&"
	GCHTBL	CH.IOR,	BOPIOR	; "!"
	ı’Á“â	0
	˚jSãC

BOPSUB:	RELTST			;MA˘qPS´RE NO GLOBALS
	NEG	(R4)	Ò.–-Y NEGATE VALUE
Ò3¢«RELLVL		;  AND ˙QfL≠L

¯SËAâD:	ADD	(R2)+,(RˆäUâw +, A¯ëVÉLUESÓÒB`ƒâ	(R2),(R4)	;  AND RELOCATION L¯µ¢Ãß
	CMP	-(R2),-(R4)	;POINT BACK TO VALUES
	BIT	#GLBFLG!RELFLG,-(R2)	;ABS * XXX?
	BEQ	3$		˜hYãS, ALL SET
	BIT	#GLBFLG!˙QfFôG,-(R4)	;XXX * ¯0©ø	BEQ	4$		;  YE˙kOôD FLAGS
	¯RjBÙqÊBç˘ë÷(•2)+	;¯¥©O•Ùc ãITHER GLOBAL
	¯S¢âk$
	BITB	#GLBFL¯ÎRi)+
	¯S¢âk$
	CMPB	(R4),(˙Lîâw˙Qf W- REL, SAM¯®)≈á˙ìÈ?	BNEÒ-R	˜hNü, ERROR
	BISB	Ùt¢ÃçLG,-(R4)
	TST	RELLVL
	B˘—D≥I
	BIC	#17ˆÌ0C˙QfFô¯ÎRi)
3$˜BiE©URN

4$:Ò3g÷(R1)+,(R3)+
	M˘ıÑ®•1)+,(R3)+
	BISÒ*)1S+,(R3ı*∆äRETUR˘√E5$:	J˘¥¡ÖSERRÓÒCEBOPAN¯éÑ√üM	(R2ı#E	ÖIC	(RˆJV(•4)
	˙QjU•˘√E¯SËIüR:	BI˙bTRe),(R4ı#E	•ETURNÒ¢ÜBüPMUL:Ò"Dâw *
	˘≥Î	QR2),RˆDªç¯µ!»A¯“iS© ARGÓÒBfœ≠	R0,-ıË);SAVEÙPCüPY
	¯T&	cÙÇDª°˘Ù‰‘ìVE?
Ò3¢«R0		;Ù'OY MAKEÙj ßO
1$˜Bfœ≠	(R4)ıîôâ˜t‚‘A˙qaœù¯à “èÒ¢Ñ¬°˘ÇY$Ò.·RÉNCH I¯»(OßITIVEÒ¢ÑŒãG	R3	Ò.ÁEèATIVEıà&¡ó¯®$‘AıcE	áOM	(S˙
DâwTOGGL¯®)EßULT S˘1ÁˆI	õ˙≥“g,R0		˜sjÃ©IPLYÓÒBfœ≠	R1,RˆDªßET FO˙H"ÿìT
	B˙BaO°DVX		˜qlI© THRO˙±‰ âIVIDEÒ¢ÜäÖ˘Ù"I≠˜BDâ; /
Ò3g÷(R4),˙Lƒâw˙qj â˘5§”üR
	M˘ıÑ“gıãTS°ı"]”ÉVE A ¯sËY	BPLÒ,R	;BRAN¯rIç PLUSÒ¢ÑŒãG	R3	Ò.Ê¡óE IT ˙í*”1$:	˘≥Î	Q˙Lî¨•ˆ"DªßET QU˘ı$≈ùT
	B˙≤I		;AG¯2g!C!
	N¯±ƒ“c
	CO˘¢TS°)
2$˜BaÃ•	R0		˜sËE•ATE
Ò1$÷R3,R0Ò¢ÜäÖOPDVX˜BjS©	(SP)ıbDª©EST R¯¥ÍÃ©
	BP˘ÇX§	;  O˘h ”AIS
	˘—câ•0		;N˘ÎNãGATE ˘5äcÙéÑÕü˙¬i0Y(R4)	Ò.È≈©Ù¢”´˘ïäRETUR˘√E	XITO˙‘ÜäÒ+§∆A˘—#	°¯î+4kÒ¢Üä			;D˘5êRg,R0  Ù
)0AIGNOR¯±çÒ"Dâw˘µf •ˆk)0ÒQ$÷u				;¯ÒgE•AL DI˙“bEAROUTI˘—FäMOV	#ˆ-ó,[ıË)˜s'œ° COUN˙ÉE	áLR	-(˙tâ;RESU˘ïäc$:	AS˘ÇTS°)		;S˘cTARESUL˙ÉE	É˙s“cÒ"]”ëIFT W˘Ù•†•¯±‰”©¯¥©ç	ROL	˙Lâw  DOU¯S"†•EGIST¯¥ÜäCMP	Rˆ)3Ò.·IèÙgO´GH FO˙H'–ãRATIO˘œ∆äBLT	2ÙÇDªA NO
Ò4Í¬R3,R0Ò"]ŸãS
	I˘–ƒ®ßP)		;¯Uf–ARESUL˙ÉE2I:	DECÒ,îS°ı"Dª©¯¥Í çOR EN¯ÉE	ÖNE	1$Ò¢ÑÕü˙¬i0Y˙LDâwPLACEÙ¢ÕÉINDERÙg •ˆ#E	õ˘ıÑ®ßP)+,Rˆ]“ã˙ufTA˙ì–Ra
DIV˚j:TST	(˙t´	;PRU˘—PS©ACK
Ò4¢‘´RN
ÓÒSjÃuÒ"DâwGENERAL MU˘ï$–ô˚()O´˙ígEÒBfœ≠Ò4ò,[(SP)	˜q‚‘ATHE F˘4©‘AGUY
	CLR	R0		;CLEAR RESU˘ï)ç	CLR	R1
1$:	TST	(SP)		;T˘ß’è˘∆ä¯QhââIVXIT		;  YES
	ROR	(SP)
	BCC	2$
Ò0bDR3,R1
	ADC	R0ÓÒLí:ASL	RˆcE	ÖR	1$

	.ENDC
				;SPECIAL ENTRY POINT TOÙlP•
			Ò.ÁUôL FIE˘ëCÉ˙¥‚”AERROR
			Ò.È0ASET T˘Ë+AôUE

GLBT˙S]	©¯¥¶çÒ0¢—ABSER˙CE	ÖR	ABSERX

GLB¯∂(:Ò"Dªù˘ÛñŒ´LL EXPRESS˘3Á	EXPR
	BE˙"`¬ßERR
Ò0©	É¯T‚“±Ò¢Üä•ELTRM:	GLBTRM
Ò0©	•ELTSTÒ¢Üä•¯≥"ÿ°:
	G˘ê¢ÿ°Ò¢©Eô˙îÍ:BIT	#GLBFL¯Î#LÉGS
	BEQ	ABSERX
	BRÒ0aSã˙TÜäABST˙S]	èLBTRM
	BRÒ0aS©˙uäÒPaSã˚	GLBEXP
ABSTST˜BaI©Ò(„ÃÖFLG!R¯≥#Lèıë¶AèS
	BEQ	AB˙qiXÒPaSãRR:	CLR	MODE
	CLR	RELLVLÒ¢†¬ßERF:	ERROR	A
ABSERX˜Bfœ≠	VALU¯´)0;RETU˙SêWìTH VALUE IN R0ÓÒBiE©URN
ÒÇWSÖTTL	T¯¥¶†ãVALUA˙ìÈÒ¢™E•˘ÆÑâ	;TER˘®"÷É˘ï`‘üR
	SAVREGÒ"DªßAVE R¯±‰”©ERS
Ò4‚‘±PR			;  AN¯à)≈©Ù¢ÿ°RESSI˘Ûë ©YPE
Ò0ÊR(R3)		;CLE¯4êMü¯ëFäCLR	(R4)		˜hAùD VAL˙±FäCALL	˙ëiMc0		;PROCESS
	BIC	#D¯±£Lè!LBLFLG!MDFFLG,ıô©;CLEA˙H"ÿ©˙PgEü˙¥∆äCLR	R¯≥&Vô		;ASSUME ABSOLUTE
Ò0§‘Ùt¢ÃçLG,(RˆjDª©˙UbøÒBaE£Ò,R	INC	RELLVL		;  NO, RELOCATABLE
1$:	INCÒ1lPçLG		;˘∞iKAAS EX˙¢”ßION
	JMP	SETNBÒ"]≈±IT WI˙íNüN-BLA˘“–Aù¯à)0A˙qj
TERM10:	GETSY˘¢DâwTRY F˘ÙêAASYMBO˘ÉE	ÖEQ	TE˙SY0	;BRANCH IF NOTÙPS≥MBOL
	.IFÙ¢FXCREF
	MOV	#SYMROL,˙SÊNâX
	CRFREF
	.E˘—!ç	CMP	SYMBOL,R50DOT	;˘ì·¡©ION COUNTER?
	BEQ	1ˆââwÙ,≈ß, TRE¯5S°¯∞‰¡ô
	SS˙P‰		;SEARCH THE SYMBOL TABLEÒ¢Ñ¬ãQ	16$Ò"]¬•ANCH ˘1êNü˙à#O´˘—äBIT	#˘±#FôG,(R3ı"]Õ´LTIPL˚("EçINED?
	BEQ	11$		;  NO
	ERROR	M		;  YES
11$˜BaI©	#DEF¯”#¨QR3)	;DEFIN¯±çÒ0ßE12$		˜hYã˙cE	Ö˘5£èLBFLG,(R3)Ò.ÁOY GLOBAL?
	BNE	TERM28		;  YESÓÒBb“•OR	U	Ò.ÁOY UNDE¯“gEâ ERROR
12$:	BI¯bQ«ôBFLG,(R3)	;CLEAR INTERNAL GLOBAL FLAG
	BR	TE˙SY8
14ÙéÑÕü˙¬Q√ô¯s†ÕYR1	;DOT, MOVE TO WORKING ¯4¢¡ÒBfœ≠Ò(ÈŸõBOL,R2
	CALL	XMIT4
	CLRB	(R3)		;CLEAR FLAGSÒ¢Ñ‘ßT	(R3)		;ABSOLUTE SECTION?
	BEQ	TE˙SY8	;  YES
	BIS	#˙QfFôG,(R3ı"]Œü, SET FLAG
	BR	TERMˆNä16$:	OSRC˘DâwNOT USER D¯±§ŒãD, PE˙R –ßÙg üP-COD¯Ø∆ä˙îÍ	Q˙L‘â;OP C˘Ò"øÒBaMì	17$		;YESÒ¢Ñ”ßRCH			;SET SEAR¯rPüINTERS
	INSERT			;NOT IN TABLE, IN˙qiTAAS UN¯ëcIùED
	ERROR	U
1ˆÈ	áLR	(R3)		;¯QPS´˙QPMü¯ëPIß ZERO
	BRÒ5"“õ28
TERM20:
	MOV	CRADIX,R2	;ASSUM¯®'UõBER, ¯uiRãNT RA¯íl21$:	¯u™N´M			;¯sÁVãRT
	¯Qhâ©ERM30Ò"]†A˘”ËEYÙd”ßED AG¯2g	BPL	ˆLí	;NUMB¯¥ñ É˘÷PO≠¯¥£LüW?
	ERROR	T		;Ù,≈ßıà#LÉG IT
22$:	CMP	˙MV#áH.DOT	;NUMBER, ¯ëa…õ¯3ç	BEQ	ˆM	;  YE˙cE	]˘1êNâF	XEDLSB
	CMP	R5,#C˘¢OôÒ.ÁOYÙ'√É˘à)Ÿõ¯SÊ?	BEQÒ,ö$	;  Y¯¥∆ä.ENDCÒ¢Ñ‘ßTB	R0		;NO, ANYÙ™ÕÖERS O˙µOç RANG¯Ø∆äBEQ	TERM28		;  NO
	ERROR	N		;˚1i¨AFLAG IT
	¯TÑ‘ã˙SY8ÒCE2i$:	CM˙i2Y#10.		;"." OR "$", WERE W¯®"EáIMAL?
	BEQ	25$Ò"]†AYES
Ò4‚‘ßYM			˜sß¨	MOV	#10.,R2		;  TRY AGA˘3êWìTH DECIMAL RADI˚E	ÖR	21$Ò¢Üäe5$:	C˘¥“k,#CH.¯ìÍ	wDECIM¯3ç	BEQ	˙ëiMe7		;  YES
	.IF NDF	XEDLS¯CE	ôSRCH	Ò"]Œü, LOC¯3S≥MBOLÓÒBaNã	TERM27		;BRANC˘$∆AFOUNDÒ¢ÑÆãNDC
˙ëiMe6:	ER˙SÈ	´		;  NO, F˘êc†ÉS UNDEFINED
TERM27:Ò1‚‘áHR			˜p¨–ÉSS DO˙à'“ADOLLA˙CETãRM28:Ò4‚‘ùB			;˙QjU•N POI˘’$Œè TO NON-BLANK
	SETNZ	R0	Ò.„LÉG AS ¯”ÍŒâ
TERM29:	RETURN
TERM30:
	CHSCAN	UOPTBL		;SCAN ˙≥†“≥ OPERATOR TABLE
	BEQ	TERM29		;  NOT THERE
	CLR	R2		;C˘ë`“A¯”È ç˙µ*“ã USE
	CALL	(R0ı"DªçOUND, GO AND PR˘‚”ßÒ¢Ñ¬•Ò5"“õˆNâwEXIT TRUE


Ò1gTßEC	DP˙¥¢ç˙≥ËTÖ˘éÜäGCHTB˘Ça»]ADD,	GLBTR˘¢]†E+"
	¯‰TÖ˘Ça»]˙ua,˙ëiMi2	; "-"
	GCHTBL	CH.˙5&¨˙ëiMi4	; """
	GCHTB˘Ça»]˚Ê,TERM4ˆ¢]†EÙËÜä¯‰TÖL	CH.PCT,	TERM4ˆ¬]†E%"
	¯‰TÖL	CH.˘êa,TERM4ˆ‚]†E<"
	¯‰TÖ˘Ça»]˙∞i,TERM50	; "˚»Üäı’Á“âÒ,äXITSE¯cETERM4ˆNÑ¡Ö˙u)M		;EV¯3*¡©¯® ¬ßOLUTE
	NE¯‚TRi)		;N¯±‡‘ãÙ†Ã´¯£E	•¯µ*“ùÒ¢Üä©¯¥¶¥i:	INC	R2		˜h"E, MAR˘h$‘ÒU"“õ45:	MOV	R4ıîòâ; "'", SET TEMPÙÍO•E REGISTER
	SETSYM			;POINT B¯0Â†©˘Ë'–ãRATORÒ¢ò§uÒ1‚‘á˘Ñâ;GET ˙í"†ù¯∂* á˘iAáTER
Ò0¢—TERM48		;E˙Tß“AIF EO˘ÉE	]˘1êNâF	XEDLC
	MOVB	@CHRPNT,(Rˆ*DªßTORE ABSOLUTE CHAR
	BICBÒ(Ÿ0aıä)1S+	;CLEAR POSSIBLE SIGN BI˙à Œâ INDEX
	.IFF
Ò3g÷Ö	R5,(˙LT´	.EN¯ê∆ä¯ëaâ•ˆBDªÉ˘”ÍHãR CHA˙Pa‘ãR
	BEQ	1$Ò"]†A˚1içÒ0©	©¯¥¶≤oÒ"]¬≥PASS LAST CHAR

TERM46:	ABSTRM			˜t¢«ìSTER EXPRESSION
	BIS	#RE¯Ò¶GY(R3)	;FLAG IT
	RETURN
ÓÒU"“õˆç›	Ò"]†E<"
	GLBEXP			;PROCESS NON-NULL EXPRESSION
	CMP	R5,#CH.RAB	;">"?
	BEQ	TERM27		;  YES, BYPASS AND EXIT
TERM48:	JMP	ABSERF		;ERROR, FLAG IT
TERM50:				; "^"
	CHSCAN	UARTBL		;SC¯3êOùÙ¢ÿ©Ù‰A•ACTER
	BEQ	TER˘≠	;  INVALIDıà"“•˘ÙÜäJMP	(R0)		;CALL ROUTINE

	ENTSEC	¯î*“ãÒ¢™¡•TBL:				;UP ARROW TABLE
	GCHTBL	LET.C,	TERM51	;  ^C
	GCHTBL	LET.D,	TERM52	;  ^D
	GCHTBL	LET.O,	TERM53	;  ^O
	GCHTBL	LET.B	TERM54	;  ^B
	.IF NDF	XFLTG
	GCHTBL	LET.F,Ò5"“õˆ≠DªAÙ£Ò+¢ŒâC
	.WORD	0
	XITSEC

TERM51:	ABSTRM		Ò.ËRü¯qi”AABSOLUTE
	COM	(R4)	Ò.·œõ˙"ÕãNT VALUE
	RETURN

TERM52:	ADD	#2.,R2
TERM53:	ADD	#6.,R2
TERM54:	ADD	#2.,R2
	MOV	CRADIX,-(SP)	;STACK CURRENT RADIX
	MOV	R2,CRADIX	;REPLACE WITH LOCAL
	GLBTRM			;EVALUATE TERM
	MOV	(SP)+,CRADIX	;RESTORE RADIX
	RETURN

	.IF NDF	XFLTG
T¯¥¶µk˜Ba¡ôL	FLTG1W		;PROCESS ONE WORD FLOATING
	BEQ	TERM48		;ERROR IF NULL
	RETURN
	.EN¯ê∆äÒ+©¬©TL	SYMBOL/CHARACTER HANDLERS

GETSYM:
	SAV˙Qcç	MOV	CHRPNT,SYMBEG	;SAVE IN CASE OF RESCAN
	MOV	#SYMBOL+4,R1
	CLR	-(R1)
	CLR	-(R1)
	BI˙êÑ√©TBL(R5),#CT.ALPÒ.‡Ã°HA?
Ò0¢—5$		;  NO, EXIT FALSE
	MOV	#26455,R2
	SETR5ˆE1I:	CALL	MULR50
2$:	ASR	R2
	BCS	1$ÓÒB`ƒâ	R0,(R1)
3$:	G¯µ)5a
	BLE	4$
	ASR	R2
	BCS	2$
	BEQ	3$
	TST	(R1)+
	BR	1$

4$:	SETNB
5$:	MOV	SYMBOL,R0
	RETURN


MULR50:				;MULTIPLY R0 * 50
	IMULI	50,R0
	RETURN
GETR50:	GETCHR
SETR50:	MOV	R5,R0
TSTR50:	BITB	#CT.ALP!CT.NUM!CT.SP,CTTBL(R0)	;ALPHA, NUMERIC, OR SPACE?
	BEQ	1$		;  NO, EXIT MINUS
	CMP	R0,#CH.DOL	;YES, TRY DOLLAR
	BLO	2$		;SPACE
	BEQ	3$		;DOLLAR
	CMP	R0,#LET.A
	BLO	4$		;DOT OR DIGIT
	BR	5$		;ALPHA

1$:	MOV	#100000+SPACE,R0	;INVALID, FORCE MINUS
2$:	SUB	#SPAC¯´X±YR0	;SPACE
3$:	SUB	#11-22,R0	;DOLLAR
4$:	SUBÒ(Ÿ2[100,R0	;DOT, DIGIT
5$:	S˙∞Ñ£c00,R0		;ALPHABETIC
Ò4¢‘´RN
CVTNU˘ÆÑâÒ.·œùVERT TEXT TO NUMERIC

				; IN  -  R2 ÙRÉ¯íl
				; OUT -  VALUEÙ¢”´LT
				; R0 - ˘c»ABIT  - OVERFLOW
			Ò.– A - HIGH BYTE - CHARACTER COUNT
				;    - LOW  BYTE - OVERSIZE COUNTÓÒCEÒ4‡÷•EG
	CLR	R0		;R¯¥ÍÃ©Ù¶AèÙ¢«ìSTER
	CLRÒ4òâ˜s™Õã˙Ra†ÉCCUMU˘êjO•
	MO˙¬a»•PNT,SYMBEG	;SAVE FORÙ¢”á¯3Üäc$:	MOV	R5,R3		;GET AÙÁ–≥ OF THE CURRENTÙ‰A•
	SUB	#DIG.0,R3	;CONVERT TO ABSOLUTE
	CMP	R3,#9.		;NUMERIC?
	B˘DπIÒ"]†ANO, WE'RE THROU¯Úä¯sh	•ˆk)2	;YES, LESS THA˘»)AâIX?
	BLO	2$		;  YESÒ¢Ñ…ù¯bi0	;NO, BUMP "N" ¯¥©O• COUNT
2$:
	.IF ND¯¬hD°˙Õç	MOV	R2,R4		;COPY OF CURRENT RADIX
	CLR	-(SP)		;TEMP AC
3$:	ASRÒ4ö	˜t‰IçT RADIX
	BCC	4ÙÇDªÖ˙PgCë IF NO ACC˙≥jÃÉTIONÓÒB`ƒâ	R1,(SP)		;ADD ˘3Üäi$:	TST	R4		;ANY MORE BITS TO PROCESS?
	BEQ	5$		;  NO
	ASL	R1		;YES, SHIFT PATTERN
	BCC	3$		;¯T†Œá˘$∆ANO OVERFLOW
	BIS	#1ˆ0a,R0	;OH, OH.  FLAG IT
	BR	3$

5$:	MOVÒ*)–S+,R1	;SET NEW NUMBER
	.IFF
	MUL	R2,R1
	.EN¯ê∆ä¯1"	•3,R1		;ADD IN C˙¥©Eù˙à'UõBER
	GETCHR			˜q‚‘AANOTHER CHARACTER
	¯1"	G000400,R0	;TALL˚(!»É˙Pa‘ã˙H!œ´NT
	BR	1$

9$:	MO˙¬i1YVALUE	;RETURN  ˙Qi’ôT IN "VALUE"
	RETUR˘¬Dâw˙QjU•N, TESTING R0
ÒëÈ¡•¯ÓÑâ	;GET A SYMBOLIC ARGUMENT
	.ENABL	LSB
	TSTA˙Qƒâ;TEST GENERAL
Ò0¢—2$		;  EXIT NUL˘ÉEGß¯4£∆u	GETSYM			;ARG, TRY ¯”È ß˚3aOô
	BEQ	1$	Ò.– ã˙Tß“A˘1êNüT SYMBOL
Ò0Ê–˙LRkˆ'‘;  "."?
	¯S¢âeÙÇDªAÙß¨AOK
1$:	ER˙SÈ	ÉÒ¢Ñ√ôR	R0		;TREAT ALL ERRORS A˙h'UôL
2$:	RETURN
	.DSABL	LSB

TSTAR¯ÓÑâÒ.ÍEßT ARGUMENT
1$:Ò3g÷ÖÒ0ÍTÖ˘ä)5S,R0	;GET CHARAC˙ëiIßTICS
	BLE	12$		;THR˘ıc»A˘1êEüL OR SEMI-¯sÊOù
	TST	ARGCNT		;FIRST ARG˙≥bŒ©˜„E	ÖEQ	11$		;  YES, GOOD AS IS
	BIT	#C˙ã°œõ,R0	;˘”÷ áOMMA?
	BNE	10$		;  YES, BYPASS IT
	TST	EXPF˘ëƒâwNO, WAS ON¯®)E£˙≤iEâ?
	BEQ	2$		;  NO
	ERROR	A		;YES, FLAG ERRORÒ¢ô$u	CMP	CHRPNT,ARGPNT	;DID ANYBODY USE ANYTHING?Ò¢Ñ¬ù¯¢X±I		;  YES, OK
3$:	GETCHR			;NO, BYP¯4È†©˘Ë ÷ü˘1LüOPS
	BITB	#CT.PC+CTı‘Ë+áT.TAB-CT.COM-CTı‘Ê√Y¯u*Bô(R5)
	BNEÒ,“	˜hYã˙kB≥PASS
	SETNB			˜sß¨A˙qj ©O NON-BLANK
	E˙Tß“A		;FLAG ERROR
	BR	ˆ)âwNOW TRY AGAIN
Ò¢ò∞I:	GETNB			;BYPASS COMMA
11$:	INC	ARGCNT		;IN¯t¢Õã˘’A•¯ıf≈ùT COUNT
12$:	C˘îÑ≈±˙¶G	MOV	CHRPNT,AR¯Ù'T;SAVE POINTER
	BIC	#1776ˆRa	;SET FLAGS
	R¯µ*“ù


	ENTSEC	IMPLIN		;CLEAR EACH LINE
ARGCN˙éÑÆÖLKW			;ARGUMENT COUNT
AR¯Ù'Tu	.BLKW			;˙u “© OF LAST ARGUMENT
EXPFLG˜BWBôKW			;SET WHEN COMMAÙ¢—´˘4¢ƒ	XITSEC
CT.E˘Ûâa00		; EOL
CT.COM=	001		;ÙÁÕõA
CT.TAB=	002		; TAB
CT.SP=	004		; SPA¯qFäáT.PCX˜¢X1a		; P˙RgTìNG CH¯4†√©ER
CT.NUM=	020		; NUMERI¯cEC©.ALP=Ò,0	; ALPHA, DOT, DOLLAR
CT.LC=	100		˜hLüWER C¯4‚†ÉLPHA
CT.SMC=	200		;  SEM˘+aœôON  (MINUS BIT)

CT.PC=Ò0Í.áOM!CT.SMC!CT.PC˚a‘]NUM!CT.ALP	;PRI˘’$Œè CHAR˙cE	.MACRO	GENCTT	¯4£âwGENER¯5"†áHARAC˙ëi ©YPE TABLE
	.IRP	A,	<ARG>
	.B˚5"âáT.'A
	.ENDM
	.ENDM


	ENTSEC	DPURE
CTTBL:				;CHARACTER TYPE TABLE
	GENCTT	<EOL, EO˘ãEüL, EOL, EOL, EOL, EOL, EO˘èÜäGENCTT	<EOL, TA¯KEüL, EOL, EOL, EO˘ãEüL, EOL>
	¯ÒgC©˙Ç^Eü˘ãEüL, EO˘ãEü˘ãEüL, EOL, EOL, EO˘èÜäGENCTT	<EOL, EO˘ãEüL, EO˘ãEüL, EOL, EOL, EO˘èÜäÒBc≈ùCTT	<SP , ˙Ï,A˙Ï,APCX, ¯3(,A˙Ï,APCX, PCX>
	GEN¯u*	yPCX, PCX, PCX, PCX, COM, ˙Ï,AALP, PCX>ÓÒBc≈ù¯u*	y˘’f¨ANUM, ˘’f¨ANUM, NUM, ˘’f¨ANUM, NUM>
	GEN¯u*	yNUM, NUM, PCX, ˙sa¨APCX, ˙Ï,APCX, ˙Ï>
	G¯≥°‘©	<PCXıà Ã°, ALPıà Ã°, ALPıà Ã°, ALPıà Ã°>
	G¯≥°‘©Ò/ Ã°ıà Ã°, ALPıà Ã°, ALPıà Ã°, ALPıà Ã°>
	G¯≥°‘©	<ALPıà Ã°, ALPıà Ã°ıà Ã°ıà Ã°, ALPıà Ã°>
	G¯≥°‘©	<ALPıà Ã°, ALPıà(C±ıà(C±ıà(C±, PCXıà(C±>

Ò1‚ŒáTT	<E˘Û ôC , L¯h ôC , L¯h ô¯h ô¯h ô¯hÒ1‚Œá˙ïºô¯h ôC , L¯h ôC , L¯h ôC , L¯h ôC >
Ò1‚Œá˙ïºô¯h ôC , L¯h ôC , L¯h ôC , L¯h ô¯hÒ1‚ŒáTT	<L¯h ôC , L¯h ãOL, E˘Û ãOL, E˘Û ãOL>
Ò¢ÑÿìTSECÓÒC)≈©SYM:	Ò"DªßET SY˘∞ßÃA¯”È •¯´i√ÉN
	M˘ıÑ”≥MBEG,¯r)Pù˙Ç]”ã˙à*Hã POIN˙ëiÒ0©	ß¯µ!»•		;SE˙à!»ÉRACTE˙H Œâ FLAG˙cEGETNB˜BDâ;GET ¯('Où-BLAN˘h!»ÉRACTE˙CE	ì˘–ƒ√ë˙T'T	;BUM˙(OìNTERÓÒT‚‘ùB:	SE˙ê‰R		;SE˙à)EèISTERÙgDAFLAGSÒ¢Ñ¬ìTB	#C˙ã©–CCT.TA¯K!‘©BL(R5ı"]¬ôANK?ÓÒBaNã	GETN¯BDªA YES,Ù¨–ÉSS
	¯TÑ”ãTCHR	Ò.‚ÿìT, SE˙ï$Œè FLAG˙cEGETCH˙NÑâÒ.„≈©Ù$EANEXT ¯r “É¯u"“ÒBdŒá	CHRP˘’âwBUMP ˙‰Œ©¯¥Üäß¯µ!»•˜Bfœ≠¯B`CëRPNT,˙MDªßET RE¯Úi‘ãR ANDÙ¶Aè˙cE	]˘1êNâ¯¬lEâ˘ê∆äGENED˙ÇfCY,1		;˘ìÎ≈• CASEıà"EçAULT ˙ì–Oç¯√E	Ö˙±I		;OKÙc ùO SIG˘»!I©
	SU¯BQ±o7600+ˆåRk	;TRYÙß“ALOWERÙ‡”ãÙ`–ÒBWEùDC
	¯Sdâè¯µ!»•Ò"]ÃüOP IFÙgVÉLID C˘iAáTER
ˆ)	•ETURNÒ¢ÜäÒP‰Sá¯3ù			;CH¯4†√©ER SC¯3êRüUTINEÒ¢ò§u	TST	ıò)W		;EN¯àZãRO)?ÓÒBaE£	2$		˜hYãS
	C˘¥®•0)+,Rˆ¢]‘ë˘4–Të¯®'Œã?
	B˘—D±I		;  ˘”∆ä˙îÍ	[ıò)	;YESıà&œ≠E POI˘’"“A¯PaÀÒBfœ≠	CHRP˘’S≥˘∞¢«˜t‡÷ã CURR¯≥™ °OINTE˙CE	èETNB	Ò"]«ãT NEX˙à'Où-BLAN˘cE2I˜Bfœ≠	-(R0),R0	˜sg÷ãÙbD•ÙÈ µ¯¥ß†ì˘’'†•0
	R¯µ*“ù
	.˙p™Tô	ROLL HANDLERS

SSRCH:	Ò"Dª´SER DEFINED OPERAND SEARC˘E	ß¯∞iCëÒ4ÏÕ•OL
	RETURN

OSRCH:				;OP-CODE S¯∞iCë
	SEARCH	PSTRO˘ÉE	•ETURNÒ¢Üä.IF NDF	XMACRO
MSRCH:	SEARCH	MACROL
	RETURNÒ¢ÑÆãNDC
Ò¢ÑÆìF NDFÒ6"ƒô˙pÜäôSRCH:				;˘ì·¡ô SYMB˘ÛSãARCH
	TSTÒ3)Ÿç˘ëƒâw¯” «ASET?ÓÒBaE£	1$		;  NO
	CL˙BfS≥¯”#â˜vb”Y CLEAR ITÓÒBdŒá	LSYBKN		;¯Uf–ABLOCKÙ™ÕÖ¯¥ÜäcÙéÑÕüV	#SYMBOL,R0
	˘≥Î	ôSYBKNıä)0Sıb]ÕüVE IN˙ì–"ß˚3aOôÙCE	õOV	VALUE,(˙Lç	BEQ	2$		;ERROR IF Z¯¥ßçÒ0Ê–(R0),Ùw¢1e7	;  OR > ˆ,õçÒ0¶OßÒ,“ˆI	ãRROR	T		;YES, F˘êc†ã˙Tß“3$:	˙q`“á˘fS≥ROL		;SEAR¯rTë¯®)OôL
	RETURN

	ENTSEC	IMP˙içLSYFLG:	.BLKW			;BUM˙b ÉT "LA¯Qf:E
LSY¯RÁ:.BLKW			;BLOCK ˘’f¬ãR
LS˚0†”u	.BLK˙‚DâwSECTI˘ÛêBÉ˙qFäô˙q·Aß:	.BL˘uƒâ˜p†”ã FOR GENER¯5"ƒASYMBO˘î∆äXITSE¯cE	GENEDT	LS¯K&SÖ˙îÍ,c	;LOC¯3S≥MBOL ¯S'√ó

	.ENAB˘ÇfSÖÒ¢¶SÖTST:	BNE	2ÙÇDªÖYPASSÙc _DS
	¯TÑ±I

LSBSET:	BIT	#ED.˘î·,ãDMASK	;IN LSB O˙—i-•IDE?ÓÒBaE£Ò,í	˜hYãS
1$˜BdŒá	LSYFLG		;FLAG NEW B˘ì·ÀÒBfœ≠	CLCL˘÷Lß˚0†”˜t‚‘A˘—k†ÖASE
	BIC	#1,LSYBAS	;BE SURE ITS EVEN
	¯s)	ôSGBASÒ"]√ôEAR G¯≥¢“ÉTED SYMBOL BASEÒ¢ô$u	RETU˙SÜä	.DS¯0¶	ô˙pÜäı—gDá
SEARCH:				;¯RgA•Y ROL˘à)≈ÉRCH
Ò4‚‘•OL			˜t‚‘AROLL REGISTERSÓÒBfœ≠	R3,-(SP)ÓÒBi’Ö	R3,R1		;POINT ONE S˘ìÍ ôOW
	MOV	R2,R3ÓÒBi’Ö	R1,R3		;COMPUTE SIZ¯£E	áLR	R0		;GET SET TO C˘ÛhU©¯®)≈ÉRCH O¯—©≈©Ò¢Ñ”ãC			;ÙRa DOUBLES AS T/F FLAG)
1$˜BiOô	R0		˜t‰IçT BITÒ¢Ñ¬ì¯bi0Y˙LƒâwCLEARÙÁ“•ESPON¯ígGABIT. Ù ”© ONE?
	BNE	1$		;  NO
2$:	ADD	R0,R1
3$:	ASRÒ4ò	;END ˘ÒêI©ERATION, H¯3+EA˘Ò£SãT
	B˘0ƒ£eıîò	˜qgD
	BEQ	7$	Ò.– ≥ES
4$:	CMP	R2,R1		;OFF IN NO-˘∞gSOS LAN¯è∆äBLOS	ˆ…âw  YES
	CMP	(R4ı+Rc)	;NO, FIRST WORDS MATCH?
	BNE	5$		;  NO
	C˘¥≤QR4),2ıò©˜vb”YÙ'◊AABOUT SECOND?
	BEQ	8$		;Ù,≈ßıà#O´˘—äk$:	BHI	2$		;NO, BRANCH IF TOO HIGH
6$:	SUB	Rˆ)1	;LOWER INDEX
	BR	3$

7$:	CMP	(Rˆ*U¨QR1)+	;POINT TO ˘3©≈•TION ˙s'‘8$:	MOV	(SP)+,R3
	¯TÑ”áANX		;EXITÙ$RüUGH SCAN
Òì¢ÿ©:				˜q‚‘A˙í"†ùEXT E˘’)YÒBi≈©˙SÊ	MOV	˙SÊU°¯ã)0	ADD	R0,Rˆ#E	ÉDD	R3,R0
	CMP	˙LVRe
	BLO	SCANX
	BR	SCANXF

SCANW:	Ò"DªßCAN O˘—PWüRD
	SETROL			;˙qj •EGISTERS
Ò0ÊR˙Lâw¯4È’õE FALSE
1ÙéÑ…ùC	R0		;TALLY ENTRY COUNT
	CMP	(R4)ıä)1S	;MAT¯rç	BEQ	˙p‡Œ≥		;  ˚1iç	ADD	˙L÷Rc		;NOıà$ŒáREMEN˙à(Oì˘’"“ÒBaÕ°	R1,RˆBDªçINISH¯±ç	BLO	ˆ)âwÙ'OÒBaÃ•	R0
	RETURN			˜vb”YÙlI© FALSE

SCAN:Ò"DâwLINEAR ROLL SCA˘√E	ß¯µ)Oô			;S¯µRüLL RE¯Úi‘ã˙T∆äCLR	R0		;ASSUME FALS¯£E1I˜BaÕ°Ò4ô,•ˆ"Dªã˘—ç	BEQ	˙p‡Œ±F		; Ùb”Y EXITÙ†ÃßE
	INC	R0
	CM˙TRi),(R1ı"]Œü, MAT¯rOù FIRST WORDS?
	BNE	2$		;  YESÒ¢Ñ√õP	2(R4),2(˙LTâw˘”÷ ë˘ı–AÖOUT S¯∞ÁŒâ?
	BEQ	SCANX		;  YES
2$˜B`ƒâ	R3,R1		;INCREM¯≥™ ÖY SIZ¯£E	ÖR	1$ÓÒCE	]ENABL	LSB
SCANXF:	CLR	R0Ò"]∆ÉLSE EXIT
SCANX˜Bfœ≠	R1,R˘Û(N©	;SETÙgT•Y POI˘’"“	MOVÒ4ò,•OLUPDÒ.È¡≠E FLAG
	BEQ	1$		;BRANCH ˘1êNüT FOU˘—äßCANY:Ò3g÷R4,R2Ò"]–üINTER TO "SYMBO˘àÜäNEG	RˆbDªùEGATEÙgT•Y SIZ¯£E	ïMP	XMIT0(RˆjDªçOUND, XFER ARGUMENTSÒ¢Üäc$:	CM˙TRi)+,(RˆäUâwBYPAS˙h)ŸõBOL I˙î‚Ãç
	AS˙Bi3	;GETÙÁ“â COUNT
	SUB	#2,R3		;COMP¯≥©¡©E FORÙaO≠E CMP
	BLE	3$		;BRANCH IF END
2$:	CLR	(R4)+		;CL¯∞i ØORD
	SOB	R3,2$
3$:	RETURN
	.DSABL	LSB
APPEND:				;¯4(Eù¯à*OA¯≥¢ üF ROLL
	SETROLÒ¢ÑÕüV	R2,ROLPNT	;SE˙à(Oì˘’"“ÒBaÃ•Ò4ßÃ´PD
	BR	INSERFÓÒCEIùSERT:Ò"Dâw˘3©≈•˙à$ŒAROLLÓÒBa¡ôL	SETROF		˜t‚‘AROLL ˙Qc…ß˙ëiSAı™‘A˘”–A•G)
INSERF:	MOV	ROLP˘’RaÒ.ËOìNTS TO PROPER S˘ìÍÒ5)‘ROLUP¯ÇDªØ¯4–Sã¯4°»ATRUE?
	BNE	5$	Ò.– ≥ES
	˘3°¬ROLSI˚Jÿ®•5)	;U˙ ‘ã ENTR˚(!œ´˘’ä¯1"	•3,ROLTOP(Rˆ™Dª´˙ ‘ãÙ'–APOINT¯¥ÜäCMP	RˆK)Oô¯Pi´e(R5)	˜q‡–A¯QjWãEN ROLLS?ÓÒBaNã	5$		˜hYã˙kJ´˙uS©˙±£ ì˙ÉE	õ˘ıÑ”°,R1		;"FRO˘®êAâDRESSÒ¢Ñ”´¯Bi3YSP		;WE'REÙaO´T TO MOVE STACKÒ¢ÑÕüV	SP,R2		;"TO" ADDRESS
	SUB	Rˆ+)0Ò.·œõPUTE ¯VjEA¯sÍŒ©Ò¢Ñ¡ßR	R0	Ò.– ù˘ı–Wü˙QCüUNT
Ò¢ô$u	MOV	(R1)+ıä)2S+	;MO˙—PAùÙgT•Y DOWN
	SOB	R0,2$
4$:	S˙∞Ñ“g,ROLBAS(R5)	;DECREMENT PO˘3™E•˙cE	ßUB	R3,ROLTOP(R5)
	SUB	#2ıîöâ;MORE ROLLS?
	¯Q‚âi$		; Ùb”	MOVÒ4ô,•ˆDª°˘ÚgTA˙ì–IùSERTI˘ÛêSôOT
5$:	AS˙Bi3Ò.‰Aô˙—PSì˚QPCü˙≥™6$:	MOV	(R4)+,(R0)+	;MOVE AN ENTRY ˘3™OAPLACE
	SOB	R3,6$		;LOOP ˘1êNüT END
TSTCOR:				;TEST F˙Qb†á˘Ù¢†ß˘6¢ç	MOV	SP,R0		;GET CURRENT SP
	MOV	SVT.,-(SP)	;POINTER TO BASE OF SVT
	ADD	#SVTTOB,(SP)	;TOP OF BUFFER OFFSET
	SUB	@(SP)+,R0	;COMPUTE SIZE
	SUB	#STKSIZ*2,R0	;ALLOW FOR INTERRUPTSÒ¢Ñ¬ô˘‚X≤IÒ"]†AERROR IF NO ROO˘£E	áMP	R0,FREC˘ÙÑªù¯µ–MìNIMUM?
	BHIS	11$		;  NO
	MOV	R0,F˙Qaœ•Ò.Ï≈ß, SAVE IT
11$:	RETURN

12$:	SERROR	217		;INSUFFICIENT CORE

	ENTSEC	IMPURE
FRECOR:	.BLKW			;FREE CORE SIZE
	ENTSEC	XCTPRG
	DEC	FRECOR		;INIT TO 177777
	XITSEC
ÓÒCEZÉ˙ÑâÒ.‚Õ°˙ñPAAROLL
	SETROL
	MOV	R1,ROLTOP(R5)	;MAKE ˙ìË {Ùß‘©OM
	CLRB	ROLSIZ+1(Rˆ™Dªá˘ë`“AENTRY COUNT
	RETURN
	.SBTTL	UTILITIES

SETROL:				;SET ROLL REGISTERS
	MOV	R0,ROLNDX	;SET ARGUMENT
SETROF:	MOV	(SP)+,R0	;SAVE RETURN ADDRESS
	SAVREG			;SAVE REGISTERS
	MOV	R5,-(SP)	;  AND CURRENT CHARACTER
	MOV	ROLNDX,R5	;SET INDEX
	M˘ıÑ“ü˘ê†”QR5),R1	;CURRENT BASE
	MOV	ROLTOP(R5),R2	;CURRENT TOP
	MOVB	ROLSIZ(R5),R3	;ENTR˚()…µ¯£E	õOV	#SYMBOL,R4	;POINTER TO SYMBOL
	CALL	(R0)	Ò.·¡ôL PROPER ROUTINE
	MOV	(SP)+,R5	;RESTORE CURRENT CHARACTER
	RETURN			;  AND REST OF REGSÓÒCESETXPR:				;SETÙlP•ESSIO˘»)EèISTERS
	MOV	#SYMBOL,R1
	MOV	#SECTOR,R2
	MO˙¬QÕüDE,R3
	MOV	#VALUE,R4
	RETURN

S¯5©Eè:				;SAVE REGI˙u"“ß
	MOV	R3,-(SP)
	MOV	R2,-(SP)
	MOV	R1,-(SP)
	MOV	6.(SP),-(SP)	;PLACE RETURN ADDRESS ON TOP
	MOV	R4,8.(SP)
	CALL	@(SP)+		;RETURN THE CALL
	MOV	(SP)+,R1	;RESTORE REGISTERS
	MOV	(SP)+,R2
	MOV	(SP)+,R3
	MOV	(SP)+,R4
	TST	R0		;SET CONDITION CODES
	RETURN
	.REPT	MAXXMT-7
	MOV	(R1)+,(R2)+	;PAD TO MAX NEEDED
	.ENDR
XMIT7:	MOV	(R1)+,(R2)+
XMIT6:	MOV	(R1)+,(R2)+
XMIT5:	MOV	(R1)+,(R2)+
XMIT4:	MOV	(R1)+,(R2)+
XMIT3:	MOV	(R1)+,(R2)+
XMIT2:	MOV	(R1)+,(R2)+
XMIT1:	MOV	ıò©W,(R2)+
XMIT0:	RETURN

MOVBYT:				;MOVE BYT¯®)‘•ING
1$:	MOVB	(R1)+,(R2)+Ò.Êœ≠E ONE
	BNE	1$		;LOO˙$∆ANON-NULL
Ò5)‘ÖÒ+TRe)		;END, POINT BACK TO NULL
	RETURN

Ò+§∆A¯ëÑ‘•APS
TRPPRO:				;TRA˙(RüCESSOR
	MOV	(S˙
V2QSP)	;MOVE RETURN ADD˙Qi”AUP
	SUB	#2,(SP)		;POINT TO TRAP INSTRUCTION
	MOV	@(SP)+,-(SP)	;STACKÙjÒ0bD#TRPBAS-TRAP,(S˙
Dªç˘Ù¶†É¯ë)EßS
	MOV	@(˙t´Y˙ƒªÖ˙PgCë AND ˙™Œã
	.E˘—!ç	.SBTTL	MACRO HANDL¯¥©çÒ¢ÑÆìF NDF	XMACRO

MT.R˙âc77601
MT.IRP=	ˆ-€∂a2
MT.MAC=	177603
MT.MAX=	MT.MAC

	.GLOBL	REPT,	ENDR,	ENDM

˙QhTuÒ"DâwREPEAT HANDLERÓÒB`¬ß¯∂(	Ò.‚÷ÉLUATE COUNT
	M˘ıÑ“a,-(SP)	;SAVE COUNT
Ò4‚‘°¯ÃDâ;MARK THE LISTI˘—∆äCALL	GETBLK		;GET A ˙u'“É¯ÒPBôOCK
	CLR	(R2)+		;START IN THIRD WORD
	CLR	-(SP)		;NO ARGUMENTSÓÒBfœ≠Ò4ò,[(SP)	;  AND STA˙UOçÙ¶OáK
	CALL	E˘—&Iù		;PO˘íi»AOFF LINE
	ZAP	¯ì`“üL		;NO DUMMY ARGS FOR REPEAT
	CALL	PROMT		;USE MACRO STUFF

	MOV	#MT.RPT,R5	;FUDGE AN "END O¯»)E°¯∞j"REPTF:	CALL	WCIMT
Ò0‡Ãô	MPUSH		;PUSH PREVIOUS MACRO BLOCK
	MOVÒ*)–S+,(R2)+	;STORE TEXT POINTER
	MOV	(SP)+,(R2)+Ò.È‘ü˙QPA•G POINTER
	CLRÒ*)2SıbDªáOUNTER
	MOV	(S˙
U¨QR2)+	;MAX
	SETCHR		Ò.ÈEßTORE CHARACTERÓÒCEEù¯ì`√uÒ3g÷#MSBCNT,R0	;SET POIN˙ëi ©O COUNT
	INC	(˙Lâ;BUMP IT
	CMP	(R0)+ıä)0Sıb]‘ëROUGH?
	BGT	1$Ò"]†A˚1iç	MOV	MSBTXT,(R0)	;NO, SET READ POINTER
	ADD	Ùm(•0)		;BYPASS LIN˘cE	•ETURN

1$:	CL˙BaŒâ˘±l	;CLEAR MEXIT FLAG
	˘Sh	õ˙Ë
ENDM:
E˘—):ÒBbŒ©˘ı©	m
	.IFTF
Ò+£Ãü¯Sœ°¯qiROPCERR:	E˙Tß“˘„E	•¯µ*“ù
	.IFT
	˚jO≠˙CE.GLOBL	MACRO,	MACR

	SE˙ìÎR6
MACRO:
MACR:				;MACRO DEFINITI˘ÛÜä¯Ù‡“è			;GET THE NAM¯£E	Ö¯¥Dœ°¯qiR	;  ERROR IF NU˘ìäõACROF:
	TSTARG			;B˚4 ”ßÙ'”ßIBLE COMMAÒ¢ÑÕüV	SYMBOL,MACNAM
	MOV	SYM¯SÊ+eıì`√ùAM+2
	MSRCH			;SEARCH THE TABLE
	˘≥Î	QR4),RˆDªèET THE POINTER
	BEQ	1$		;BRANCH IF NULL
	CA˘ìƒãCMAC		;DEC˙Qf≈ù˙à*Hã REFERENCE
1$:	CALL	GETBLK		;GET A STORAGE B˘ì·À	MOV	R0,-(SP)	;SAVE POINTER
	MSRCH			;GETBL˘h&…è˘HÉVE MOVED THINGS
	MOV	(SP)+,(R4)	;S¯µPü˘3™E•Ò¢Ñ…ùSERT			;INSERT IN TA¯S"ç	CRFDEF
	CALL	˙ßÕÉÒ"]–•OCESS DUMM˚( “è˙cE	á˘îÑ®•2)+		;CLEAR LEV¯≥Cü˙≥™	MOV	ARGCNT,(R2ı*ƒªóEEP NUMBER OF ARGS
Ò3g÷MACGSB,(R2)+	; ÙgDAGENERATED SYMBOL BITS
	BIS	#LC.MD,LCFLAG
	C¯3&	ã˘—&IùÒ"]–üLISH OFF LINE
Ò0‡ÃôÒ4)OõT		;PROCESS THEÙ"ÿ©
	GETSYM
	BEQ	3$
	CMP	˙LMÉCNAM
	BNE	2$
Ò0Ê–SYMBOL+2,MACNAM+2
	BEQ	3$
2$:	ERROR	A
3$:	˘≥Î	GMT.MAC,R5
	CALL	WCIMT		;˙qj ãND MARKERÓÒBi≈©CHR
	RETURN
	XITOVR
M¯0ÈOá:				;MACRO CALL
	E˘’'÷•Ò-ÜäSETPF0			;MARK ˘ì·¡©ION
	MOV	VALUE,R0	;GET B˘ì·ÀAPOINTER
	BEQ	OPCERR		;  ERROR IF NULL
Ò3g÷R0,-(˙tç	CALLÒ2gCõAC		;˘3°“ãMENT REFERENCE
	CMP	(R0)ıkRa)+	;M˘ı¢†´P A COUPLE OF SLOTS
	MOV	(R0)+,ARG˘∞l	wSET N˙≥aE• OF ARGS
	MOV	(R0)+,MACG˙pÑªA AND GENERATED SYMBOL BIT˙cE	õOV	R0,-(SP)	;SA˙—PPüINTER
	CALL	PR˘Ûaâ;PROC¯¥È†áALL ARGUMENTS
Ò3g÷R0,R3Ò"]”ÉVE BL˘Â†°OINTER
	MOV	#MT.MAC,R5
	CALLÒ3hUßH		;PUSH NESTING LEVEL
	MOV	(SP)+,MSBMRP
	MOV	(SP)+,(R2)+	;SET TEXT POINTER
	MOV	R3,(R2ı*ƒªA AND ARGUMENT POINTER
	M˘ıÑ¡•GCNT,(R2)	;FILLÙg ÉRGUMENT COUNT
Ò3g÷(R2)+,(R2)ıb]†A¯3¢ •¯¥&EáATE
Ò4‚‘á˘ÜäRETURN
	XITOVRÒ¢Ü	]GLOBL	IRP,	IRPCÒ¢ÜäSETOV˙B[IRPC:	INC	R3
I˙TÒ0‡Ãô	GMARG
	B¯¥D±IÒ¢Ñ√ÉLL	PR˘Û`çÒ0‡Ãô	RMARG
	CALL	G˘∞iG	BEQ	1$
	MOV	#177777,AR¯Û`ÿ;ANY NUMBE˙H'∆A¯4£’õ¯≥™S	CAL˘ÇhRüMCF
	MOV	˙LRg
	CALL	RMARG
Ò0‡Ãô	GETBLK
	CLR	(˙Lî´	MOVÒ0iGáNT,-(˙tç	MOV	˙L÷-QSP)
Ò3g÷R0,-(˙tç	CALLÒ1gDôIN
	¯pfLPROMTÒ¢ÑÕü˙¬QÕ©ı“iPYR5
	˘Sh	•EPTFÓÒCE1I:	ERR˘ÙÑ¡	RET˙¥ß	XITO˙‘Üä	SETO˙‘Ñ∂ÒT)Oõ¯.Ñâ	;PRO¯qi”AMACROÙiGß
	ZA˙bMÉROL		˜pÊEÉ˙H"Uõ˘∂PA•GUMEN˙à)OôL
	C˘îÑ¡•GCNT	Ò.„≈© A FR¯¥‰ ßTART ˙ÚjHA¯4£’õ¯≥™SÒBaÃ•Ò3`√è˙pÑâw¯s"¡• GENE˙PjEâ BIT ˙jTãRN
	˘≥Î	G10000ˆ®ß˙
Dªß˙êaÀAFIRSTÙ‚ŒãRATEDÙÏÕÖOL BI˙ÉE1I˜BjS©¯4£â	;ANYÙg“ã ARGS˜„E	ÖEQ	3$Ò"]†ANO, Q˙≤j ÉND GOÙ'Õã
	CM˙Q√ë.QM,Rˆ¢]ŸãS, GE˘—iA©¯±T≥˙_ç	BNE	ˆIâw  NOÓÒBaIßÒ*)–Sıì`√èSB	;Y¯¥÷ ß¯µP•˘Ù"“ABIT
Ò1‚‘ùB			;¯VhAßS ITÓÒLí:CALL	¯Ù‡“èF		;G¯µS≥MBOLI¯h “èUMENTÒ¢Ñ¡°˙gD¯ì`“üL		;A˙"Œâ TO D˘∞PRüLL
	¯s!ç	ROR	ıË)	;SHI¯’GãNERAT¯±S≥M BITÒ¢Ñ¬•	1$
Ò¢ô§u	TST	ıË)W		;PR˙≥¢†ßTACKÓÒBiE©URN
Ò¢ÑÿìTOVRÓÒC”ãTOVR	ˆ√EP•OMC:	¯s)	•3
PR˘Ûa∆u
	CL˙B`“è¯s™Ò0‡Ãô	GETB˘í∆ä˘≥Î	•ˆ®ßP)
	˙îÍ	•3
	B˘—D∑IÒ¢ò§uÒ0Ê–¯4£ÕÉ˚ “èCNT
Ò0¶Oß	10$ÓÒBjS©ARG		Ò.·Y°¯4È†É˘÷PCü˘≥`çÒ0ßE9$		;˘Ú–Iç NON-˘’fL	TSTÒ3`√èSB		;˘’fLYÙgYA¯ÒgE•ATED ˙u*∆ç LEFT˜„E	ÖEQ	10ÙÇDªA NO, ˙í)O´GH
9ÙéÑ√õP	#CHı–©ÃY˙MDªAÙW?	BEQÒ,ò$Ò.– ≥¯¥∆äCALL	¯Û`“èF		;G¯µA•GUMEN˙ÉE	]IF ND¯¬lEâ˘î·Ò5)‘R5		;¯3¨†ÉRGUME˘’)ø	BNEÒ,í	;  YE˙cE	©ST	MA¯qÈ¬	;NO,Ù‚ŒãRATIO˘»)E£UESTE¯è∆äBMI	3ˆ	âwÙ,≈ßÒ¢ÑÆãNDC
ˆI3$:	C¯3&	Ø¯rf‘ÒBaE£	4$
Ò1‚‘áHR
	¯TÑ≥IÒ¢ÜäiÙéÑ√ÉLL	RM¯4£çˆ©	É˙sÕÉCGSB	Ò.Êœ≠E GEN¯¥†‘ìON BI˙à'÷ãR ONEÒ¢Ñ¬•	1$
Ò¢õ$uÒ2gCARGCNT
	G¯µ!»•Ò¢õ§uÒ0‡ÃôÒ5·…õ˙ÉE	ÖEQ	10ÙÉE	áLR	R5Ò¢Ñ√ÉLL	WCIMT
	BR	6$

10$:	¯sÊâ•5
	CALL	WCIMT
	COM	R5
Ò0§‘Ùs!Æõ¯k&CõASK	;MACRO CALL SUPPRESSION?
	BEQ	ˆ,í	;  NO
	MOV	LBL¯≥¢,•0	;YE˙kHÉVE WE A LABEL?
	BEQ	11$		;  NO, SUPPRESS ENT˘4¢†ôINE
Ò3g÷R0,LC¯≥¢L˜vb”Y LIST ONLYÙ ¬ãL
	B˙BX≤I

11$:	B˘4ƒ£ô¯k¶√Y˘ê„LÉG
12ÙéÑÕüV	(SP)+,R0
	RE˙ïiNÒC0I˜Bc≈©NB			; "\"ıà!Y°ASS
	ABSE˚â;EVAL˙∞jEA¯∂(Rã˙t‰œù, ABS
	MOV	R5,ı™)–S	;STA¯r–Cë¯4†√©ER
	˘≥Î	•ˆk®ß˙
FäMOV	CRADIXıîôâwBREAK OUT IN CURRENTÙ†ƒì˚E	õOV	R0ıîòâ;VALUE TO ˙LFä¯pfLˆå	˜pÁŒ≠ERT TO ASCII
	¯s)	•ˆ£E	áALL	W¯rf‘ÒBfœ≠	(SP)+,R3	˜t¢”©˘Ù¢†•EGS
	MOV	(SP)+,R5
	BR	5ÙÉE	.IF NDF	XEDLSB
30$˜BdŒá	LSGB¯4ƒâwGENER¯5"ƒASYMBOL, BUMP CO˙≥™	MOV	˘î„¬ÉS,R1	˜q¢‘áH ITÓÒB`ƒâÒ(ÔDyˆÕ±},R1	;˙u “©Ùj m4.
	MOV	Rˆ´®ßP)	;S˙êaÀACURRE˘’CëAR
	MOV	Rˆk®ß˙
DªÉND R3Ò¢ÑÕüV	#10ıÀ)3	;MAKE IT ¯ëa…õ¯3äCALL	40$		˜pÁŒ≠ERT T˘Ë ”áII
	˘≥Î	GCH.DOL,R5
	CALL	WCI˘µâwWRITE "$"
	CLRÒ4öç	CALLÒ5·…õ˙ÉE	õ˘ıÑ®ßP)+,Rˆb]“ãSTORE REGS
	MOV	(SPı*÷RkÒ¢Ñ¬•	4$		˜t¢‘´˙SÜäı—gDáÒ¢Üäi0$:				;MACRO NUMBER CONVERTER
	CLR	R0ÓÒBbI≠	R3,RˆE	õOV	R1ıãTS°)	;STACK REMAIN¯ëi	MOV	˙LRc		;SE˙à'EØÙ™ÕÖ¯¥ÜäBEQ	41$		;DOWN ˙ì–ZãRO?
Ò0‡Ãô	40$	Ò.– ùO, RE¯uiSã
41$:	MOV	(SP)ık)5	;GET NUMB¯¥ÜäADD	#DIG.0,R5	;CONVE˙UTü ASCII
	JMP	WC˘3j	;WRITE IN TREE AND E˚j
	XITOVR
PROMT:
Ò1gTü˙‘Ñ∂	CLRÒ4ôçˆ)	áALL	G¯µ&Iù
	BNE	2$
	BIS	#LC.MD,LC¯” «	CAL˘Çi≈©CLI
Ò0§‘Ùq#Lõ¯0÷Ra
	BE˙"[3I
	IN¯bi3	CMPÒ(‚ŒâM,VALUE
	BNE	3$
	DEC	R3
	DEC	R3
	BPL	3$
ˆI	•ETURNÒ¢õ3I:
	.IF ND¯¬lSõ˘ÉE	©ST	SM˘êÁTÒ.‰ŒA˙vi‘ãM MACRO?
Ò0¢—3$		;  NO
	BIT	#DFLSMC,R0	;YE˙kNãSTED?Ò¢Ñ¬ãQ	3$	Ò.– ùO
	CALL	SMLTSTÒ"]ŸãS, TEST FOR MORE
	.ENDC
3$:	MOV	#LINBUF,CHR˙™	SETC˘ÜäiÙéÑ«ã˙îÏÕ	BEQ	7$
	SCAN	DMAROL
	˘≥Î	•ˆ)4ÒBaE£	5$
	MOV	ROLUPD,R5
	NEG	R5
	DEC	CONCNT
	C¯3&	ØCIMT
	DEC	CONCNT
5$:	SETSYM
6$:	˙îÍ	•4
	BNE	61$
	C¯3&	ØCIMTÓÒMò§u	GETR50
	BGT	6$
7$˜BaÕ°	R5,#CH.XC˘ÉE	ÖEQ	8$
	CA˘ì◊áIMT
Ò0ßE˜)äCALL	¯≥¢Lì˘√E	Ö˙BX§
8$˜BdŒáÒ0ÁŒáNT
9$:	GE˙ê‰R	BR	4$

	XIT˘ı©	.GLOBL	NARG,	NCHR,	NTYPE,	MEXIT
Ò¢Ñ”ãTOVR	ˆCENÉRG:				;NUMBER ˘ÒêA•GUMENTS
	¯pfL¯Ù‡“èÒ"]«ãT A SYMBOLÒ¢Ñ¬ãQ	NTYPER		;ERROR IF MISSING
	MOV	M˙p°Œ©+2,R3Ò.È≈© NUMB¯¥ÜäBR	NT˚4"ÿ
NC˘ù			;NU˘∞¢“AOF CH¯4†√©¯¥©çÒ0‡Ãô	GSAR¯„E	ÖEQ	NT˚4"“	;  E˙Tß“A˘1NüÙÏÕÖOL
	CALL	GMARGÒ"]…ß˘Û ‘ã ARGUMENT
	BEQÒ3™Y°EX		;  ZERO IF ˘’fLÒBjS©	R5		˜tj…áK TES˙à#O•ÙÁÕ°LETION
	BEQ	2$		;  ˚1içˆ)	ì˘–ƒ“gÒ"]¬´˘¥CüUNT
Ò1‚‘áHR			˜q‚‘ATHE N¯∂* áHARACTER
	BNE	ˆ)âwLOOP ˘1êNüT ENDÒ¢ô$u	CALL	RMARG		;REMOVE ARG DELIM˘5"“ß
	BR	NTYP¯∂äÒS™Y°¯ÆÑâ	;TES˙à"ÿ°RESSION MODE
	CALL	GSARGÒ"]«ãT THE SYMBOL
	¯QhâùTYPERÒ"]†AERRORÒ¢Ñ‘ßTARG			;BYPASS ANY COMMASÒ¢ÑÕüV	#SYMBOL,R1
	˘≥Î	QR1)+,ı™)–S	;PRE˙qiVã SYMB˘ÛäMOV	(˙LT´Y-(SP)Ò¢Ñ√ÉLL	AEXP		;EVALUATE
	MOV	˙LRg		;SE˙à)EßULT
Ò6†–CODRO˘ÇDªáLEAR ANY GENERA˙ëb áODE
Ò3g÷(SP)+ıãTRc)	;RE˙u'“ã SYMBOL
	˘≥Î	QSP)+,-(R1)
NTYPEX:	¯s)	õODE		˜pÊEÉR MOD¯£E	õOV	R3ıï†Ã´E	;  ¯3¢ ßET VA˘ïbç	JMP	¯4„Õ©F		;EXIT THROUGH ASSIGNME˘’äNTYP¯¥ù	ãRROR	A
	BR	NTYPEX

MEXIT:				;MACRO/REPEAT EXITÒ¢ÑÕüV	MACLVL,CNDMEX	;IN MACRO?
	BNE	1$		;  YES, POP
	ERRO˙Bgâ˜hNüıà"“•OR
1$:	RETURNÓÒCE	±ITOVR
	GENCNDÒ0ñ	©¯pÜä¯ÒgCù¯ÇgBY	TCB,	F
	GENCN¯Çdƒù,	TCI¯ÉE	è¯≥°ŒâÒ1$∆Y	TCIDıÇc

	SETOV˙BZçTCB:	Ò"DªAÙRcBEÙÁŒâ˘5$œùAL
	BEQ	TCBERX		;OKÙc ù˙≥&	CALL	GMARGF		;˘4ÁÃÉ˙ëPA•GUMEN˙ÉE	ß¯µ'BÒ"]¬≥PASS ANY BLANKSÒ¢Ñ¬ãQ	TCI¯ïâwTRUE ˘1êPüINTIN¯Ë ‘ADELIM˘5"“ÒBaR˙ê‰ƒç		;ELSE FA˘î‚çÒ¢™CÖ¯¥©:ERRORÒ0DâwNAUGH˙ñFä©¯p¢“±:	RET˙¥ßÒ¢™CìD:				; "I¯“bNE COND˘5$œù¯3ä¯Qhâ©¯p¢“•Ò"]≈•˙SÈ ìF NULL ARGÒ¢Ñ√ÉLL	GM¯4£∆Ò.‰”üLATE FIRSTÙiG	MOV	CHRPNT,R1Ò.È¡≠E CHARACTER POINTER
	TST	-(R0ı#E	õ˘ıÑ≠QR0),RˆB]–ü˘3™E•Ù'†©ERMIN¯5'“ÒBa¡ô˘ÇiMÉRG		;˙QjU•N THIS ARGÒ¢Ñ√ÉLL	GM¯4£â˜q‚‘ATHE NEXT
	BEQ	TCBERR
1$˜Bfœ≠B	(R1),R0		;SET CHARACTERÙ©OõÙ§“ßT FIELD
	CMP	R1,R2		;IS ˘5TëE LAST?
	BNE	2ÙÇDªA NO
Ò0ÊRR0		;˚1i¨A¯s"¡•ÙjˆI	áMP	R0ıîöâ;MATCH?
	¯S¢â©¯rbFÒ.– ù˘„E	©˙u“k		;YES, FINISHED?
	BEQ	TCIDT		;  Y¯¥÷ èOOD SHOW
	GETCHR			;NO, ¯Òj ©HE NEXT CHARACTER
	INC	Rˆ"DªÉ¯ï†Œá¯®#I•ST ARG POINTER
	BR	1$		;TRY AGAIN

TCIDF:	COM	R3		;FALSE, TOGGLE CONDITION
TCIDT:	JMP	RMARG		;OK, RESTORE ARGUMENT

	XITOVR
GMARG:				;GET MACRO ARGUMENT
	TSTARG			;TEST F˘ÙêN´˘ìä¯QhâèMARGX		;  YES, ˘Ui‘AEXIT
GMAR¯Òù	ß¯5©Eè			;STASH REGISTERS
	CLR	R1		;CLEA˙H!œ´˘’äMOV	#CHRPNT,R2
	MOV	(R2),-(SP)	;SAVE INITIAL CHARACTER POINTER
	MOV	#CH.LAB,R3	;ASSUME "<>"
	MOV	#CH.RAB,R4
	CMP	R5,R3		;TRUE?
	BEQ	11$		;  YES
	CMP	R5,#CH.UAR	;UP-¯4©OØ˜„E	Ö¯¥D±aÙÇDªA YES
1$:	BITB	#CT.PC-CT.COM-CT.SMC,CTTB˘ä)5SÒ.ËRìNTING CHARACTER?
	B¯¥D≤cÙÇDªA NO
	GETCHR			;YES, MOVE ON
	BR	1$

10$:	GETNB			; "^", BYPASS IT
	BEQ	20$		;ERROR IF NULL
	MOV	(R2),(SP)	;SET NEW POINTER
	COM	R3		;NO "<" EQUIVALENT
	MOV	R5,R4		;">" EQUIVALENT
11$:	GETCHR
	BEQ	20$		;  ERROR IF EOL
	CMP	R5,R3		; "<"˜„E	Ö¯¥D±e$		;  YES
	CMP	R5,R4		;NO, ">"?
	BNE	11$		;  NO, TRY AGAIN
	DEC	R1		;YES, DEC˙Qf≈ù˙à&E≠EL COUNT
	DEC	R1
12$:	INC	R1
	BPL	11$		;LO˘ÙIç NOT THROUGH
	INC	(SP)		;POINT PAST "<"
	BIS	#100000,R5	;MUST MOVE PAST IN RMARG
	BR	21ÙÉE20$:	ERROR	A
2ˆ)	õOV	GM¯4'TYR0	;GET CURRENT ARG SAVE POINTER
	BNE	22$		;¯T†ŒáH IF INITIALIZED
	MOV	#GMABLK,R0	;¯ì–Sü
22$:	MOV	(R2)ıä)0S+	;SAVE POINTER
	MOV	R5,(R0)+	;  AND CHARACTER
	CLRB	@(R2)		;SET NULL TERMINATOR
	MOV	(SP)+,(R2)	;POINT TO START OF ARG
	SETCHR			;SET REGISTER 5
	MOV	R0,GMAPNT	;SAVE NEW BUFFER POINTER
GMARGX:	RETURN
RMARG:				;REMOVE MACRO ARGUMENT
	MOV	GMAPNT,R0	;SET POINTER TO SAVED ITEMS
	MOV	-(R0),R5	;SET CHARACTER
	TST	-(R0)
	MOVB	R5,@(R0)	;RESTORE VIRGIN CHARACTER
	ASL	R5
	ADC	(R0)
	MOV	(R0),CHRPNT
	SETNB
	MOV	R0,GMAPNT
	RETURN

	ENTSEC	IMPPAS
GMAPNT:	.BLKW	1		;PO˘3™E• TO FOLLOWING BUFFER
GMABLK:	.BLKW	1		;POINT¯¥êTü "BORROWED" CHARACTER
	.¯S%◊1		;CHARACTER ITSELFÒ¢ÑÆÖLKW	3*2		;˙SÁÕA¯”È õORE PAIRS
	XITSEC
WCIMT:				;WRITE CH¯4†√©¯¥êIù MACRO TREE
	DEC	CO˘–ÁT	;ANY CONCATENA˙ígŒACHARS PENDING?
	BMIÒ,R	;  NO
	MOV	R5,-(SP)	;YES, STACK CURRENT CHARACTER
	MOV	#CH.XCL,R5
	¯pfLˆIäMOV	(SP)+,R5
	¯TÑ◊á˘3jÒ¢ò§u	CLR	CONCN˙ÉE2I˜BaI©Ò(·PõB-1,RˆB]“üOM INÙ$Iß BLOCK?
	BNE	3$		; Ùb”ÒBi’Ö	#BPMB,R2	;NO, POINTÙ'†ôINK
	MOV	R2,-(˙tç	CALL	GETBLK
	MOV	R0,@(SP)+	;SET NEW LINK
3$:	MOVB	R5,(R2)+	;WR˘5"¨A˘ë`÷ìNG FLAGS SET
	˙QjU•˘√E¯ÒjBôK:				;GET A MA¯tß†ÖLOCK
	MOV	MACNXT,R0Ò.ÍEß˙à#O• BLOCK IN GARBA¯ÒFäBNE	1$		;  YES, USE ˘5ä¯4(EùD	MABROL		;NO, GET BLOCK IN ROLL
	MOV	ROLBAS+MABROL,R0	;GET STAR˙ÉE	õ˘ıÑ“a,ROLTOP+MABROL	˜v†–A˘∞a •OLL
	MOV	˙LRüLBAS+˘∞`“üL	;AWARD SPACE ˙ì–MÉA
	BR	2$

1$:	MOV	(R0),MACNXT	;SET NEW CHAIN
2$:	MOV	R0,R2
	CLR	(R2)+		;CLEAR LINK CELL, P˘ÚgTA˙i‘AIT
	RETURN



I˘–Ê¡á:	INC	2(R0)		;INCREMENT MACRO REFERENCEÓÒBiE©URN

DECMAC:	DEC	2(R0)		;DECREMENT MACRO ST˘Ù†«ãÒ¢Ñ¬°L	REMMAX		;JUSTÙlI©Ùc ùON-NEGATIVE

˙QfÕÉC:	MOV	R0,-(SP)	;SAV¯®(OìNTER
1$:	TST	(˙Lâ˜qgDA˘ÒêCëAIN?
	BEQ	2$		;  YE˙cE	õOV	(R0),R0		;NOıà&IùK
	BR	1$

2$:	MOVÒ3`√ù˚(•0)
	MOV	(SP)+,˘∞aŒ±˙ÉERãMMAX:	RETURN
MPUSH:				;PUSH MACRO NESTING ˘ëkEô
	CALL	GETBLK	Ò.„≈© A STORAGE BLOC˘cE	©˙u≠QR2)		;POINT TO STARTÒ¢ÑÕü˙¬QÕßBBLK,R1	;P˘ÚgTã˙H*OA˙u “© OF PROTOT˚4"çÒ3g÷˙Lñ-QSP)	;SAVE ¯ëi‘ì˘–jIü˘√E	õOV	R1,-(SPı"]†A¯3¢ áORE POINTERS
1$:	MOV	(R1ı+Re)+	;XFER AN ITEM
	CLR	(R1)+		;CLEA˙H!œ•¯®)ÃüT
	CMP	#MSBENDıîòâw˙í)O´¯Úç	BNE	1$		;  NOÓÒBfœ≠	(SP)+,R2	;YES, MAKEÙÁ“ãÙ"”©INATION
	˘≥Î	•5,(R2)+	;SAVE TYPE
	MOV	ıË)Wıä)2S+	;  AND PREVIOUS BLOCK POINTER
	I˘–ƒÕÉCLVL	Ò.·UõP LEVEL COUNT
	RETURN			;RETURN WITH R2 POIN˙ígGAAT MSBTXTÓÒCEM°˘Ù			;POP MACRO NESTING LEVEL
	MOV	#MSBARG+2,R2Ò.ËOìNT ONE SLOT PAST ARG
	MOV	-(R2),R0	;GET POIN˙ëi ©˘Ë “è BLOCK
	BEQ	1$		;BRANCH IF NULL
	¯pfL˙QfÕÉ¯bDª•EMOVE IT
1$:	MOV	-(˙Lî¨•0	;POINT TO TEX˙à!Lü¯r∆äBEQ	2$		;B˙PgCëÙc ù˙≥&	CALL	DECMAC		;¯ëa“ã˘±gTALEVEL
2$:	MOV	ı™)2S,R1	;GET PREVIOUS BL˘Âç	TST	-(R2)		;PO˘3™ ©O START
	MOV	R1,R0		;SAVE BLOCK POINTER
	CA˘ìÿõ˘5-y˘¥·EùD-MSBBLK>	;XFERÙ¶Oá˘cE	áLR	(R0)		;CLEARÙ$Œó
	CALL	REMMAC		;RETURN B˘ì·ÀAFOR DEPOSIT
	D¯∞ƒÕÉCLVL		;DECREMENT LEVEL COUNT
	RETURN


	E˘’)≈á	IMPURE
MSBBLK:				;PUSH¯0¶EABLOCK (MUS˙à!EAORDERED)
MSBTYP:	.BLKW		Ò.·LüCK TYPE
MSBPBP:	.BL˘uƒâ˜t)E≠IOUS BLOCK POIN˙ëiMSBTXT:	.BLKW			;POINTER ˙ì–BÉSIC TEXT BLOCK
MSBARG:	.BLKW			;POINTERÙ'†ÉRG BL˘ÂçMSBCN˙éÑÆÖLKW	2Ò"]“ãPEAT COUNT, ETC.
MSBMRP:Ò+°LóW			;˘∞a“ü READ POINTER
MSBEND:				;END OF O˙Q"“ãD STO˙Pc≈
MACNXT:	.BLKW
MACLVL:Ò+°LóW			;MACRO LEVEL COUNT
C˘Û°Œ©:	.BLKW
ARGMAX˜BWBôKW
MACNAM:	.BL˘uƒ≤MACG˙pù	]BLKW			;MACRO G¯≥¢“ÉTED S˚3aOô BITSÒ¢ÑÿìTSEC
	.GLOBL	MCALL		;.MCALLÓÒCE	ßETOVR	6
MCALL:
	CALL	SMLTST		;TEST FOR UNDEFINED ARGUMENTS
	BEQ	5$		;  BRANCH IF NONE
Ò+§∆ANDF	XSML		;ERROR IF NOT I˘¥&EõENTED
	TST	PAS˙bDªçOUND SOME, PASSÙÁE
	BNE	4$	Ò.– ù˘ÎE•˙SÈ	CLR	˙sfFì˘ä€	.INIT	#SMLLNKÓÒLX$u	.OPEN	#SMLLNK,ÙtÊÃçIL	;O˘kO°EN THE FILE
1$˜BaÃ•Ò4ôâ;SET COUNTÙ'†µ¯¥ßç2$:	C¯3&	è¯µ&Iù		;GET A NEW LI˘—FäBNE	3$		;EXIT IF EOF
	CA˘ì”ãTCLI		;TES˙à#O•Ù$“ã¯u$÷ã
	BI˙ÇQƒçLMAC,R0	;M¯0ÈO_ENDM?
	BEQ	2$	Ò.– ùO
	MOV	#VALUE,˙MªßET FO˙H&OáAL AN¯à&¡áROF
Ò1"√R3		;˚1i¨AASSUM¯®EùDM
	¯sh	GENDM,ıö);GOODÙÍ≈ß˙o∆ä¯Qhâe$		; Ùb”	INCÒ4ôâ;NO, ¯Uf–ACOUNTÒ¢Ñ…ùC	R3ÓÒBaÕ°	#1,RˆbDªü˙µ"“A˘ëkEô?
	B˘—D≤I		;  ˘”∆äGSARGÒ"Dª≥ES, G¯µNÉ˘±Fä¯Qhâg$		; ÙiRüR IF ˘’fL	MSR¯râ;SEAR¯rTÉBLE
Ò0¢—ˆIâw˘1ÁO•¯®$∆A˘”Í ©˘iEÒBjS©	(R4)Ò"]∆üUND, ˙–fUã OF Z¯¥ßø	BNEÒ,í	˜hNüıà'O© INTE˙Qi‘ãD
	C¯3&	õACROFÒ"]«ü˘Ò â¯±§Œã IT
Ò1"√SMLCN˙ÇDªâECREM¯≥™ áOUNTÓÒBaG©	1$		˜s'œ° IF M˘Ù¢†©O GOÓÒL“:.CLOS¯¢Q”õ˘ì'KÒ.·ÃüSE ITÒ¢Ñ‘ßT	SML¯s™	˜pgYA˘≥ÈE
	BG˙ÇiÕô¯¥©	˜hYãS, BEÙÍ“ã TO T˙VP[c,1]
ˆ,R:.RLSEÒ(ÈÕôLNK
Ò0©	k$

˙sfE•R=	.ÓÒBjS©Ò4ÊÃç˘3∂;LOOK˘3£†ôOCALL˚/∆äBNE	1ˆ)âw  NO,Ù‰÷ã UP
Ò3g÷#SYSU˘0÷SõLFIL+ˆ¬]ŸãS, TR˚(-±Y1]
	¯TÑ±a$

Ò+§∆©F
4$˜Bb“•OR	UÓÒMR:CLR	S˘≥!Œ©		;MA˘qPS´RE CO˙≥™ ìS ZAP˙b	CLR	¯≥¢Fô¯‚Dªâ˘5*OAFOR E˘—Fô¯1∆ä˙QjU•N

Ò6$‘üVR
ÓÒTÊÃã˙V	ã˘’'÷•Ò-Üä¯TÑ”õLERRÓÒC)ÕôTST:	Ò"Dª©EST M¯pfLA¯4£’õ¯≥™SÒLR:¯Ù‡“è			;F¯µ!»ANEXT ¯4£’õENT
Ò0¢—3$		;Ù"ÿì˙à$∆A˙í)O´GH
	˘¥ÈCë			;O˘kTãST FO˙H&¡áROS
Ò0ßE2$		;Ù#O´ND, N˘ıIù˙ëiEß˙ëb	INSE˙Uâ˜rgSã˙UWìTH ZE˙S–PüINTERÒ¢Ñ…ùC	SML¯s™	;BUMPÙÁ’ù˙ÉE2I˜Ba“çDEF		Ò.·“ãF ITÓÒBaR1$
ÓÒL“:MOV	S˘≥!Œ©,R0	;¯“gIßHED, ¯sÍŒ© TO RˆE	•ETURNÒ¢ÜäENTSE¯bdÕ°˙iç˙sfCùT:	.B˘íÎâ	;MCA˘ìHì˙à!œ´˘’äXITSE¯cE	.IFTÒ¢Üä¯≥™Sã¯bf…±ED
ÓÒBWWü˙Q∞ÒTÊÃôNK:	.˙ÛÈD0
	.˙Pb5a	/SMLı„E	]BYTE	ˆ+	.RADˆ¨Øß˚+∆ä	.WORD	SM˘ëiXÒBWB≥˙ëD¥YˆESõ˘ë§Ãu	.RADˆ¨ØßYSMACı„E	]RAD50	/SML/
	.WORD	0,0
Ò¢ÑÿìTSEC

	.ENDC			;XSML
	˚jO≠˙CEÒ+¢ŒâC			;XMACRO
	.IF DF	OVLAY

	.GL˘¶	üVRTBL,	OVRXCT
Ò+£ÃüBL	PR¯Û$ÕY	START,	TRNLNK,	SERROR
	.GLOBL	MUL,	DIV

	¯≥™SãC	MAC˘ı©	;OVER˘êl†ß¯∞ÍO•
;THE FOL˘ìÎ…ùG DUM˘∂PEùTRY POINTSÙj”©Ù¢†è˙SÍ–ãD!
ÓÒN’*U****
CALOVR:	M˘ıÑ¿Q˙t´Yı™)–S	;IN-LINE ˘ı¢“ôAY ENTRIESÒ¢°¡ôOVF:	˙QjU•˘¬Dâw˘ı¢“ôAY ENTRIES TO (˙tçOVRBL¯éÑ“ã˙ïiN		;OV¯¥¶A≥Ù™…ô¯ëi;*******
Ò¢Ñ≈ùTSEC	MIXED

	.WORDÒ,ä©˙S¶Nó:	.WO˙Q∞	.RAD50	/˘ı©/ÒBWWü˙Q±ÒBWRÉD50	/SY/

	XI˙î‚√ÒC≈ùTSEC	˘≤lEâÒ¢ÜäüVRLEN=	0
Ò¢ß÷•˙ê¶:XXX=	0
	.RADIX	10
	.RE˙Œ´MOVR
XXX=	XXX+1
	.˘4®	ù,<\XX˚ÜäENTSE¯bg÷•'N
	.IIF GT	.-˘ı©'ù'B-OV˙S"ŒY	OVRL¯≥ûÆ[OVR'NÙÜä¯≥™Sã¯bf…±ED
	ı’Á“âÒ3ÎRON'B
	.END˘£E	]ENDRÓÒBWRÉDIX	8Ò¢ÜäENTSEC	OVR˙qh˘ı©XáT=	.-˘ı©LãN		;S˙êiTAOF EXECUTI˘ÛêA•¯∞Fä.GLOBL	OVR˚Í
	EN˙î‚√MIXEDÒ¢Üä.WORD	OVRSEP

	XIT˙qaç
	.ENDC
	.SB˙ï&	çIN
ÓÒBbŒ©˙qaâì˘¥*“ã		;CL˘Ù‚†üUT IMPURE SECTORS
	¯≥™Sã¯bdÕ°PAS
Ò1gTß¯∞ƒ…õ˙$ŒÒRf–©OP:

	ENTSEC	XCTPRG
	ENTSEC	XCTPAS
	¯≥™SãC	XCT˘íg	RETU˙SÑâ;RETURN FROM AN˚('∆ATHE A¯SÎE
	E˘’)≈áÒ4Î‘ß¯∞∆äßWTTOP:
	ENTSECÒ1bTßEC
E¯ï*O°:

Ò1gTßEC	CN¯î‚√CNDTOP:				;TO˙'∆ACONDITIONA˘à)OôL

	XITSEC			;BE N¯∞j
	.END	START
`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É`¡É