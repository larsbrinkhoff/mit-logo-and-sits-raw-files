TITLE FOO
SEARCH STENEX
IFDEF .REQUIR,<.REQUIR SYS:STENEX>


IFNDEF RDINDX,<RDINDX==0>
F=0		;FLAG AC
A=1
B=2
C=3
D=4
E=5
NC=6
T1=7
T2=10
T3=11
BP=12
X=15
CH=16
P=17

NUSRS==2000		;MAXIMUM USER NUMBER+1
PAGLEN==^D58		;LINES WRITTEN ON A PAGE

C.ESC==33	;RECOGNITION REQUEST
C.FF==14		;FORMFEED
EOL==37

NAMPAG==100000		;PAGE FOR NAME STRING STORAGE
NAMPTR=200000		;POINTERS TO THE NAME STRINGS
UGRTAB=NAMPTR+NUSRS	;USER GROUP WORDS
DGRTAB=UGRTAB+NUSRS	;DIRECTORY GROUP WORDS
ORDRTB=DGRTAB+NUSRS	;TABLE OF INDECES INTO OTHER TABLES, SORTED
PRVTAB=ORDRTB+NUSRS	;TABLE OF PRIVILEGE BITS
TYPTAB=PRVTAB+NUSRS	;TABLE OF USER TYPE BITS
SPCTAB=TYPTAB+NUSRS	;TABLE OF DISK SPACE WORDS
DPWTAB=SPCTAB+NUSRS	;TABLE OF DEFAULT FILE PROTECTION WORDS
PRTTAB=DPWTAB+NUSRS	;TABLE OF DIRECTORY PROTECTION WORDS
DBKTAB=PRTTAB+NUSRS	;DEFAULT BACKUP COUNT
DATTAB=DBKTAB+NUSRS	;LAST LOGIN DATE
TEMPS==NAMPTR		;START OF PAGES TO BE ZEROED
ETEMPS==DATTAB+NUSRS-1	;END OF ZEROED AREA
DIRWND=ETEMPS+1		;WINDOW INTO DIRECTORY FILE
WINDEX=DIRWND+1000		;WINDOW TO INDEX FILE
;NOTHING ABOVE HERE. SUBINDECES ARE MAPPED FROM HERE ON UP.

;DEFAULT DIRECTORY VALUES: (ASSEMBLED, SINCE NOT AVAILABLE FROM SYSTEM)

D.SLIM==750		;DISK STORAGE LIMIT
D.FPR==500000777752	;FILE PROTECTION WORD
D.DPR==500000777760	;DIRECTORY PROTECTION
D.FRET==500000000002	;FILE RETENTION WORD
D.UGRP==0		;USER GROUPS
D.DGRP==0		;DIRECTORY GROUPS
D.PRV==0		;PRIVILEGE WORD
D.UTYP==0		;USER TYPE WORD (NUMERIC, FILESONLY,..)
D.SREC==0		;SPECIAL RESOURCE INFO

;FLAGS
R.MATCH==1		;MATCHED AT LEAST ONE SUBCOMMAND
R.PASS==4		;PASSWORDS WANTED IF ONE
R.WIDE==10		;WIDE PAPER IF ONE
R.DGRP==20		;DIRECTORY GROUP LISTING IF ONE.
R.AMB==40		;WORD IS AMBIGUOUS
R.LIN2==100		;SECOND LINE NEEDED IN NARROW LISTING
R.DGM==200		;GROUP HAS A MEMBER
R.LPT==400		;USER ASKED FOR OUTPUT TO LPT VIA LPT CMD
R.ALPH==1000		;ALPHABETIC LISTING
R.NUM==2000		;NUMERIC LISTING
R.MINI==4000		;MINI LISTING
R.COLL==10000		;HAVE COLLECTED AND SORTED NAMES
R.NETPSW==20000		;NETWORK USER LISTING PASSWORDS
R.ML2==40000		;MINILISTING, PASS 2 (ALPHA VS NUMERIC)

ENTRY START

START:	RESET
	MOVEI F,0		;DEFAULT FLAGS
RESTRT:	ANDI F,R.COLL		;CLEAR ALL FLAGS EXCEPT COLLECTED DATA
	MOVE P,PDP
	SETOM OUTFIL
	MOVEI A,100
	RFMOD
	IORI B,170000
	SFMOD
	MOVEI A,400000
	RPCAP
;	TRNN B,600000		;WHEEL OR OPER?
;	JRST NOCANDO
	MOVEM C,OLDCAP		;WILL RESTORE TO THESE CAPS ON EXIT
	MOVEM B,C
	EPCAP
	HRROI A,-1
	CLOSF
	  JFCL
	SETO A,
	RLJFN
	  JFCL
IFN RDINDX,<
	MOVSI 1,100001
	HRROI B,[ASCIZ /<SYSTEM>INDEX.;1/]
	GTJFN
	  0
	MOVEM A,IDXJFN
	MOVE B,[440000,,202000]
	OPENF
	  0
	MOVSI A,100001
	HRROI B,[ASCIZ /<SYSTEM>DIRECTORY.;1/]
	GTJFN
	  0
	MOVEM A,DIRJFN
	MOVE B,[440000,,202000]
	OPENF
	  0
	MOVSI E,-10		;THE INDEX (SUBINDEX 0)
MAPL0:	MOVS A,IDXJFN
	HRR A,E
	MOVSI B,400000		;THIS FORK
	HRRI B,<WINDEX/1000>(E)
	MOVSI C,100000		;JUST READ ACCESS
	PMAP
	AOBJN E,MAPL0
	MOVE A,[440700,,WINDEX+32]	;POINTER TO ASCII TABLE
	MOVEI B,0
	MOVEI C,200
	ILDB T1,A
	CAMLE T1,B
	MOVE B,T1
	SOJG C,.-3
	MOVEM B,NSUBI
	MOVNI E,(B)
	ASH E,^D21
	ADDI E,10
MAPL:	MOVS A,IDXJFN
	HRR A,E
	MOVSI B,400000
	HRRI B,<WINDEX/1000>(E)
	MOVSI C,100000
	PMAP
	AOBJN E,MAPL
>

COMMAN:	MOVEI A,100		;DIDDLE UP THE ECHOING
	MOVE B,FCOCB
	MOVE C,FCOCC
	TDZ B,[3B13!3B3!3B21]	;TURN OFF ^A,^F,^J
	TDZ C,[3B19!3B13!3B27]	;AND ^X, ESC, EOL.
	SFCOC
	MOVEI A,"*"		;PROMPT CHARACTER
	PBOUT
	SETZM COMWRD		;CLEAR WORD STRING
	MOVE A,[COMWRD,,COMWRD+1]	;CLEAR IT
	BLT A,ECMWRD		; ..
	MOVE BP,BP0		;START OF STRING SPACE
	SETZM COMCHC		;NO CHARACTERS IN THIS COMMAND YET
COMINL:	PUSHJ P,TYIAZ		;GET CHARACTER (A TO Z)
	  JRST COMBRK		;BREAK CHAR.
	IDPB A,BP		;STORE THE CHAR
	AOS A,COMCHC		;COUNT CHARACTERS IN WORD
	CAIL A,<5*<ECMWRD-COMWRD>> ;SANE LENGTH?
	JRST DUMMY		;NO.
	JRST COMINL		;OK, GET ANOTHER CHARACTER

COMBRK:	CAIN A,1		;CONTROL A?
	JRST DELCH		;YES.
	CAIE A,177		;RUBOUT
	CAIN A,30		;OR ^X?
	JRST DELWD
	CAIE A,6		;^F
	CAIN A,C.ESC
	JRST RECOG
	CAIE A,12		;LF
	CAIN A,EOL		;EOL?
	SKIPA
	JRST DUMMY		;NOPE
	MOVEI A,100
	MOVE B,FCOCB		;RESET THE ECHOING TO NORMAL
	MOVE C,FCOCC
	SFCOC
	MOVEI A,EOL		;OUTPUT THE EOL THAT WAS NOT ECHOED
	PBOUT
	CAMN BP,BP0		;NULL?
	JRST .GO		;YES. TREAT AS A GO COMMAND
	PUSHJ P,COMCHK		;LOOKUP THE COMMAND
	TRNE F,R.AMB		;AMBIGUOUS?
	JRST DUMMY		;YES.
	TRNN F,R.MATC		;MATCH A COMMAND AT ALL?
	JRST DUMMY		;NO.
	SKIPGE C,COMX		;GET COMMAND INDEX
	JRST DUMMY		;DON'T THINK THIS IS POSSIBLE
	HLRZ C,COMTB2(C)	;ADDRESS OF HANDLER
	JRST 0(C)		;GO DO IT.

DUMMY:	MOVEI A,100
	MOVE B,FCOCB
	MOVE C,FCOCC		;RESTORE ECHOING FOR THE ERROR MSG
	SFCOC
	CFIBF
	HRROI A,[ASCIZ /
? TYPE "HELP<RETURN>" FOR HELP
/]
TYPCOM:	PSOUT
	JRST COMMAN

HELPM2:	ASCIZ /

ASSUMED ARE: NUMERIC, NARROW, SECRET, AND OUTPUT TO TTY:

CARRIAGE RETURN IS THE SAME AS "GO".
/
CRLFM:	ASCIZ /
/
NOLPT:	HRROI A,[ASCIZ /
? LPT: NOT AVAILABLE. TYPE AN OUTPUT COMMAND.
/]
	JRST TYPCOM

DELCH:	CAMN BP,BP0		;ANY TO DELETE?
	JRST DING		;NO
	MOVEI A,"\"		;YES.
	PBOUT
	LDB A,BP		;GET DELETED CHAR
	PBOUT
	MOVEI A,0
	DPB A,BP		;CLOBBER IT
	ADD BP,[070000,,0]	;BACK UP A BYTE.
	SKIPGE BP		;SLIP OFF END OF WORD?
	SUB BP,[430000,,1]	;YES. ADJUST FOR THAT
	SOS COMCHC		;REMOVE THE COUNT OF THE CHAR
	JRST COMINL

DING:	MOVEI A,7
	PBOUT
	JRST COMINL

DELWD:	MOVEI A,100
	MOVE B,FCOCB
	MOVE C,FCOCC
	SFCOC			;HAVE TO GET THE CRLF OUT
	HRROI A,[ASCIZ /_
/]
	PSOUT
	JRST COMMAN		;START AT TOP OF COMMAND

RECOG:	PUSHJ P,COMCHK		;COMMAND ANY GOOD?
	TRNE F,R.AMB		;AMBIGUOUS?
	JRST DING		;YES.
	TRNN F,R.MATC		;MATCH AT ALL?
	JRST DUMMY		;NO.
	MOVE C,COMX		;GET WINNING COMMAND INDEX
	HRR C,COMTB1(C)	;POINT TO WINNING COMMAND
	HRLI C,440700		;BYTE STRING POINTER
	MOVE B,COMCHC		;COUNT
	IBP C
	SOJG B,.-1		;SKIP THOSE USER TYPED
RECOGL:	ILDB A,C		;GET A GOOD CHAR
	JUMPE A,RECOG1		;QUIT AT NULL
	PBOUT			;TYPE IT
	IDPB A,BP		;PRETEND TYPED IN.
	AOS COMCHC		;COUNT IT TOO
	JRST RECOGL
RECOG1:	JRST COMINL		;ANYTHING ELSE TO DO?

.GO:	SKIPL OUTFIL		;OUTPUT GET SPECIFIED?
	JRST GO1		;YES.
	MOVSI A,400001		;NO. TRY THE TTY OR LPT.
	HRROI B,[ASCIZ /TTY:/]	;TTY IS THE DEFAULT UNLESS LPT COMMAND
	HRRZM A,OUTFIL		;GOT ITS NAME
	MOVE B,[070000,,100000]	;OPEN FOR ASCII OUTPUT
	OPENF			; ..
	  JRST NOLPT		;NOT AVAIL?
GO1:

NOPASS:	PUSHJ P,COLECT		;GET DATA IF NOT DONE ALREADY
	TRNN F,R.ALPH!R.MINI!R.NUM!R.DGRP	;ANY LISTING ASKED FOR?
	TRO F,R.NUM		;NO. DEFAULT IS NUMERIC
	TRNE F,R.DGRP		;PRODUCE LISTINGS REQUESTED
	PUSHJ P,DIRGRP		;DIRECTORY GROUPS LISTING ASKED FOR
	TRNE F,R.ALPH
	PUSHJ P,ALPHA
	TRNE F,R.NUM
	PUSHJ P,NUMRIC
	TRNE F,R.MINI
	PUSHJ P,MINI
DONE:
IFN RDINDX,<
	SETO A,
	MOVN X,NSUBI
	SUBI X,1
	ASH X,^D21
	MOVE B,[400000,,<WINDEX/1000>]
	PMAP
	ADDI B,1
	AOBJN X,.-2
	HRRI B,<DIRWND/1000>	;AND THE ONE FROM DIRECTORY
	PMAP
>
	SETO A,
	CLOSF
	  0
	SETOM OUTFIL		;NO OUTPUT FILE OPEN
	MOVEI A,400000
	MOVE B,OLDCAP		;RESET TO CAPABILITIES
	MOVE C,B		;SET ON ENTRY
	EPCAP			; ..
	JRST RESTRT		;RESTART IN CASE WANT MORE.

.HELP:	HRROI A,[ASCIZ /

COMMANDS ARE:
/]
	PSOUT
	MOVSI C,-NCOMS
.HELPL:	MOVEI A," "
	PBOUT
	HRRO A,COMTB1(C)
	PSOUT
	HRRO A,COMTB2(C)	;REST OF TEXT
	PSOUT
	HRROI A,CRLFM
	PSOUT
	AOBJN C,.HELPL
	HRROI A,HELPM2
	JRST TYPCOM

NUMRIC:	SETZM USERNO		;NUMERIC LISTING. START AT USER 0
	SETZM LINENO		;AND START OF PAPER
	SETZM PAGENO		; ..
NUMERL:	PUSHJ P,DUMP
	 JFCL
	AOS A,USERNO
	CAIGE A,NUSRS
	JRST NUMERL
	PUSHJ P,FORM		;END THE PAGE
	POPJ P,0		;RETURN FROM NUMERIC.

;COMMAND TABLES

DEFINE COMS <
CC (<ALPHABETIC>,.ALPHA,< LIST OF USERS>)
CC (<DIRECTORY>,.DIR,< GROUP LISTING>)
CC (<GO>,.GO,< (START LISTING)>)
CC (<HELP>,.HELP,< TYPES THIS INFORMATION>)
CC (<LPT>,.LPT,< = OUTPUT TO LPT:>)
CC (<MINI>,.MINI,< LISTING (JUST NAME AND NUMBER)>)
CC (<NARROW>,.NARRO,< PAPER FORMAT>)
CC (<NUMERIC>,.NUMER,< LIST OF USERS>)
CC (<OUTPUT>,.OUTPT,< FILE>)
CC (<PASSWORDS>,.PASSW,< LISTED>)
CC (<QUIT>,.QUIT,< RETURNS TO EXEC>)
CC (<SECRET>,.SECRT,< (NO PASSWORDS LISTED)>)
CC (<WIDE>,.WIDE,< PAPER FORMAT>)
>

COMTB1:	DEFINE CC (WORD,TAG,HELP)<
	EXP [ASCIZ /WORD/]>

	COMS
NCOMS==.-COMTB1

COMTB2:	DEFINE CC (WORD,TAG,HELP)<
	XWD TAG,[ASCIZ /HELP/]>

	COMS

.NUMER:	TROA F,R.NUM
.ALPHA:	TRO F,R.ALPH
	JRST COMMAN

.DIR:	TRO F,R.DGRP
	JRST COMMAN

.NARRO:	TRZA F,R.WIDE
.WIDE:	TRO F,R.WIDE
	JRST COMMAN

.PASSW:	TROA F,R.PASS
.SECRT:	TRZ F,R.PASS
	JRST COMMAN

.MINI:	TROA F,R.MINI
.LPT:	TRO F,R.LPT		;OUTPUT TO LINEPRINTER
	JRST COMMAN
.QUIT:	HALTF			;TO THE EXEC
	JRST RESTRT		;IN CASE OF CONTINUE

COMCHK:	SETOM COMX		;CLEAR ANSWER TABLE INDEX
	TRZ F,R.AMB!R.MATC	;NO MATCHES YET
	MOVSI NC,-NCOMS		;COUNTER THRU DEFINED COMMANDS
COMCL1:	MOVE A,BP0		;START OF USER INPUT
	MOVSI B,440700		;POINTER TO A COMMAND
	HRR B,COMTB1(NC)	; ..
COMCL2:	ILDB C,A
	ILDB D,B		;GET A PAIR OF CHARACTERS
	CAME C,D		;DO THEY MATCH?
	JRST CCDIF		;NO.
	JUMPN C,COMCL2		;YES. LOOK ON UNLESS NULLS.
	HRRZM NC,COMX		;EXACT MATCH. STORE INDEX.
	TRO F,R.MATC		;SET FLAGS FOR EXACTLY ONE MATCH
	TRZ F,R.AMB		;  REGARDLESS OF OTHER COMMANDS.
	POPJ P,0		;AND RETURN

CCDIF:	JUMPN C,CCNOM		;IF USER NOT NULL, ERROR.
	HRRZM NC,COMX		;USER NULL. MATCHING SUBSTRING. SAVE IDX
	TROE F,R.MATC		;A MATCH. FIRST?
	TRO F,R.AMB		;NO. AMBIGUOUS.
CCNOM:	AOBJN NC,COMCL1		;LOOP THRU ALL LEGAL COMMANDS
	POPJ P,0		;DONE. RETURN.

ALPHA:	SETZM LINENO
	SETZM PAGENO		;CLEAR FORMAT COUNTERS
	MOVEI A,DUMP		;STANDARD OUTPUT ROUTINE
	MOVEM A,DMPADR		; FOR DISPATCH
	PUSHJ P,ALFDMP		;ALPHABETIZE AND THEN DUMP
	PUSHJ P,FORM		;END THE PAGE
	POPJ P,0		;END OF ALPHA ROUTINE

;MINI LISTING MAKER

MINI:	TRZ F,R.ML2		;NOT SECOND PASS YET
	MOVEI A,4		;COLUMNS IF NARROW
	TRNE F,R.WIDE		;WIDE PAPER?
	MOVEI A,^D7		;YES.
	MOVEM A,MAXCOL
MINI00:	MOVEI A,1		;START AT USER NUMBER 1
	TRNN F,R.ML2		;OR ALPHA SLOT ZERO ON FIRST PASS
	MOVEI A,0		; ..
	MOVEM A,PAGBAS
MINI04:	SETZM LINENO
MINI03:	SETZM COLUMN
MINI02:	MOVEI A,PAGLEN		;COMPUTE CURRENT USER NUMBER
	IMUL A,COLUMN
	ADD A,LINENO
	ADD A,PAGBAS
	TRNN F,R.ML2		;ALPHABETIC?
	MOVE A,ORDRTB(A)	;YES. CONVERT ORDER TO USER INDEX
	JUMPLE A,MINEOL		;IF NONE, END LINE.
	MOVEM A,USERNO
	CAMLE A,TOPUSR		;OVER THE TOP?
	JRST MINEOL		;YES
	MOVE A,OUTFIL		;NO. OUTPUT THE NUMBER
	HRRZ B,USERNO
	MOVE C,[100004,,10]	;IN COLUMNATED OCTAL
	NOUT
	  JFCL
	MOVEI B,40		;SPACE ONE
	BOUT
	HRRZ B,USERNO		;GET NAME STRING
	MOVE D,NAMPTR(B)
	HRLI D,440700		;POINTER TO NAME
	MOVEI C,^D14		;SIZE OF NAME
	ILDB B,D		;GET A CHAR OF NAME
	JUMPE B,MINI05		;QUITS ON NULL
	BOUT			;OUTPUT CHAR
	SOJA C,.-3		;LOOP FOR ALL CHARS OF NAME
MINI05:	JUMPLE C,MINI01
	MOVEI B,40
	BOUT
	SOJA C,.-3

MINI01:	AOS A,COLUMN		;FILLED COLUMN?
	CAMGE A,MAXCOL		; ..
	JRST MINI02		;NO
MINEOL:	HRROI B,CRLFM		;YES. TERMINATE THE LINE
	MOVE A,OUTFIL
	MOVEI C,0
	SOUT
	AOS LINENO		;COUNT LINES ON PAGE
	MOVE A,LINENO		;SEE IF THROUGH
	ADD A,PAGBAS		;NUMBER WE WOULD NOW BE UP TO
	CAMLE A,TOPUSR		;TOO HIGH?
	JRST MINEND		;YES.
	MOVE A,LINENO		;NO. SEE IF PAGE FULL
	CAIGE A,PAGLEN		; ..
	JRST MINI03		;NO.
MINEND:	PUSHJ P,FORM		;YES. FORMFEED.
	MOVEI A,PAGLEN
	IMUL A,MAXCOL
	ADDB A,PAGBAS
	CAMG A,TOPUSR
	JRST MINI04
	TRON F,R.ML2		;DONE SECOND PASS?
	JRST MINI00		;NO. DO IT.
	POPJ P,0

DUMP:	TRZ F,R.LIN2		;ASSUME NO SECOND LINE ON NARROW FORM
	SKIPLE LINENO
	JRST S1
	AOS PAGENO
	MOVE A,OUTFIL
	MOVEI B,C.FF
	BOUT
	MOVEI A,PAGLEN-3	;LEAVE OFF HEADING IN COUNT
	MOVEM A,LINENO		;INITIALIZE PAGE LENGTH COUNTDOWN
	HRROI B,[ASCIZ /NAME,PASSWORD/]	;IF PASSWORD LISTED
	TRNN F,R.PASS
	HRROI B,[ASCIZ /NAME	/]	;IF NO PASSWORD.
	MOVE A,OUTFIL
	MOVEI C,0
	SOUT
	HRROI B,[ASCIZ /	PAGE /]
	SOUT
	MOVE B,PAGENO		;LIST PAGE NUMBER
	MOVEI C,12		;IN DECIMAL
	NOUT
	  JFCL
	MOVEI B,11
	BOUT			;TAB OVER.
	SETO B,			;CURRENT DATE
	MOVSI C,322401
	ODTIM			;DATE STAMP THE LISTING
	PUSHJ P,LCRLF		;EOL (LOADS A, CLEARS C.)
	HRROI B,[ASCIZ /  DIR. #   LAST LOGIN  STORAGE LIM  USER GROUPS  DIR. GROUPS/]
	SOUT			;OUTPUT FIRST 5 HEADINGS
	TRNN F,R.WIDE		;IF NARROW FORMAT,
	PUSHJ P,LCRLF		;OUTPUT A LINEFEED HERE
	MOVEI B,"("		;IF NARROW
	TRNE F,R.WIDE
	MOVEI B," "		;IF WIDE
	BOUT
	HRROI B,[ASCIZ /   USER TYPE  PRIVILEGES  DEFAULT F.P. DIRECTORY P. DEFAULT F.R./]
	SOUT
	MOVEI B,")"
	TRNN F,R.WIDE
	BOUT
	PUSHJ P,LCRLF
	PUSHJ P,LCRLF

S1:	MOVE X,USERNO		;INDEX TO TABLES DURING DUMP
	MOVE A,OUTFIL
	MOVE B,USERNO		;CURRENT USER NUMBER
	HRRO B,NAMPTR(B)	;NAME OF THAT DIRECTORY
	TRNN B,-1		;DIRECTORY IN USE?
	POPJ P,0		;NO. RETURN.
	MOVEI C,0
	SOUT
	TRNN F,R.PASS		;WANT PASSWORDS LISTED?
	JRST S11		;NO.
	MOVE A,USERNO
	MOVEI B,STRBF
	HRROI C,STRBF+30
	GTDIR
	SETZ C,
	MOVE A,OUTFIL
	MOVEI B,","
	BOUT
	HRROI B,STRBF+30
	SOUT			;OUTPUT THE PASSWORD

S11:	TRNE F,R.WIDE		;WIDE PAPER?
	JRST S11A		;YES. NO EXTRA FIDDLING
	MOVSI C,-NORDR2		;NARROW. SEE IF SECOND LINE NEEDED
	ADD C,[NORDR1,,NORDR1]	;POINT TO SECOND LINE DATA
LN2QL:	MOVE A,ORDERT(C)
	ADDI A,(X)		;WHERE IN TABLE
	MOVE A,(A)		;GET DATUM
	CAME A,DEFLTT(C)	;DIFFERENT FROM DEFAULT?
	TROA F,R.LIN2		;YES. NEED SECOND LINE.
	AOBJN C,LN2QL		;SEARCH FOR ANY DIFFERENCES.
S11A:	PUSHJ P,LCRLF
	MOVEI B,(X)		;USER NUMBER
	MOVE C,[500010,,10]
	NOUT
	  JFCL
	MOVSI E,-NORDR2		;MAX NUMBER OF OCTAL DATA TO OUTPUT
	MOVEI B," "
	BOUT
	BOUT
S3:	MOVE A,OUTFIL		;WHERE TO WRITE
	MOVE C,ORDERT(E)	;GET THE DRIVING INFO
	MOVEI B,(C)		;TABLE BASE
	CAIN B,DATTAB		;DATE OF LOGIN?
	JRST S3DATE		;YES. SEPARATE CODE
	ADDI B,(X)		;INDEX INTO TABLE
	MOVE B,(B)		;GET DATUM
	HRRI C,10		;OCTAL PRINT RADIX
	SKIPN B			;IS DATUM ZERO?
	TLZ C,(1B3)		;YES, NO LEADING ZEROES
	NOUT			;OUTPUT THE NUMBER
	  JFCL
S3DATX:	TRNE F,R.WIDE		;WIDE OR NARROW?
	JRST NOBRK		;WIDE. PROCEED
	MOVEI B,0(E)		;NARROW. END OF LINE 1 YET?
	CAIE B,NORDR1-1		; ..
	JRST NOBRK		;NO
	TRNN F,R.LIN2		;YES. SECOND LINE NEEDED?
	JRST NOLIN2		;NO. DONE THIS USER.
	PUSHJ P,LCRLF		;YES. PRINT AND COUNT EOL
	MOVEI B,"("		;FLAG SECOND LINE WITH PARENS
	JRST S3A
NOBRK:	MOVEI B," "
S3A:	BOUT
	AOBJN E,S3
	MOVEI B,")"		;CLOSE OFF LINE 2 IF NEEDED
	TRZE F,R.LIN2		; ..
	BOUT			; ..
NOLIN2:	PUSHJ P,LCRLF
CPOPJ1:	AOS 0(P)
CPOPJ:	POPJ P,0

S3DATE:	MOVE B,DATTAB(X)	;LOGIN DATE
	JUMPE B,[HRROI B,[ASCIZ /    NEVER    /]
		MOVE C,TYPTAB(X)	;SEE IF FILES ONLY
		TLNE C,(1B0)		; ..
		HRROI B,[ASCIZ /             /]
		MOVEI C,0
		SOUT
		JRST S3DATX]
	MOVSI C,200400		;COLUMNATED DATE ONLY
	ODTIM
	JRST S3DATX

;SUBR TO CLLECT THE NAMES AND DIRECTORY GROUP INFO

COLECT:	TRNE F,R.COLL		;ALREADY GOT DATA?
	POPJ P,0		;YES. RETURN
	SETZM TOPUSR		;CLEAR HIGHEST USER NUMBER
	SETZM LOWHOL		;AND FIRST FREE USER NUMBER
	HRROI A,[ASCIZ /
READING DIRECTORY -/]
	PSOUT
	SETZB NC,USERNO		;START USER SCAN AT 0, NO GRPS SEEN
	SETZM TEMPS		;ACQUIRE AND CLEAR FRESH STORAGE
	MOVE A,[TEMPS,,TEMPS+1]
	BLT A,ETEMPS		; ..
	MOVEI E,NAMPAG		;E HOLDS CURRENT STRING FREE ADDR
IFE RDINDX,<
COLL1:	MOVE A,E		;MAKE A POINTER FOR DIRST TO WRITE WITH
	HRLI A,440700		; ..
	SETZM 0(A)		;IN CASE OF JUNK OR NO STRING RETURN
	HRRZ B,USERNO		;USER NUMBER
	DIRST			;CONVERT IT.
	  JRST [SKIPN LOWHOL	;ANY HOLES SEEN?
		HRRZM B,LOWHOL	;NO. THIS IS LOWEST HOLE
		JRST COLN1]	;TRY NEXT ONE
	HRRZM B,TOPUSR		;HIGHEST USER YET
	IBP A			;COUNT OVER THE NULL
	MOVEM E,NAMPTR(B)	;STORE ADDRESS OF THIS DIRECTORY'S NAME
	MOVEI E,1(A)		;AND NEXT AVAILABLE CELL TO E
	MOVE A,USERNO		;NOW GET THE DIRECTORY DATA
	MOVEI B,STRBF		;WHERE TO HOLD IT FOR A MOMENT
	HRROI C,STRBF+30	;PLACE FOR PASSWORD (NOT NEEDED)
	GTDIR
	MOVE B,STRBF+13		;USER GROUP BITS
	MOVEM B,UGRTAB(A)	;STORE THEM
	IOR NC,B		;THIS GROUP TO SUMMARY AC
	MOVE B,STRBF+14		;DIR GROUP BITS
	MOVEM B,DGRTAB(A)	;STORE THEM TOO
	IOR NC,B		;THIS GROUP TO SUMMARY AC
	MOVE B,STRBF+3		;WHEEL, OPER, CONFI BITS
	MOVEM B,PRVTAB(A)	;STORE
	MOVE B,STRBF+4		;FILES ONLY, ETC.
	MOVEM B,TYPTAB(A)	; ..
	MOVE B,STRBF+2
	MOVEM B,SPCTAB(A)
	MOVE B,STRBF+7
	MOVEM B,DPWTAB(A)
	MOVE B,STRBF+10
	MOVEM B,PRTTAB(A)
	MOVE B,STRBF+11
	MOVEM B,DBKTAB(A)
	MOVE B,STRBF+12
	MOVEM B,DATTAB(A)
COLN1:	AOS A,USERNO		;COUNT USERS
	CAIGE A,NUSRS		;KLUDGEY END TEST
	JRST COLL1
>

IFN RDINDX,<
	MOVEI A,-1
	MOVEM A,LOWHOL
	SETZM TOPUSR
	MOVEI T1,4		;ASSUME NEW DIRECTORY LAYOUT
	MOVEM T1,DIRLSH		; WHICH IS 16 PAGES CONTIGUOUS PER USER
	HRL A,DIRJFN		; SEE IF THAT'S TRUE
	HRRI A,10		; IF PAGE 10 EXISTS, IT MAY NOT BE TRUE.
	RPACS
	TLNN B,(1B5)		; PAGE EXIST?
	JRST COLL0X		; NO. USER 1 ALWAYS EXISTS, SO DIR MUST
				;  BE AT PAGE 20, NOT PAGE 10.
	MOVE B,[400000,,<DIRWND/1000>]
	MOVSI C,100000		; PAGE 10 EXISTS. SEE IF IT'S DIR 1
	PMAP			; BY CHECKING WHATS IN IT
	MOVE T1,DIRWND+2	; DIRECTORY NUMBER
	CAIE T1,1		; DIRECTORY ONE?
	JRST COLL0X		; NO. SO NOT OLD DIRECTORY FMT
	SKIPLE T1,DIRWND+3	; YES. CHECK SYMBOT,TOP,FRETOP.
	SKIPG T2,DIRWND+4	; WHICH SHOULD ALL BE POSITIVE
	JRST COLL0X		; ZEROES OR NEG. JUNK.
	MOVE T3,DIRWND+14	; FRETOP MUST BE OVER 32 AND UNDER SYMS
	CAIL T3,32		; AND ALSO A HALFWORD QUANTITY
	CAIL T3,777777		; ..
	JRST COLL0X
	CAML T2,T1		; SYMTOP MUST BE .GE. SYMBOT
	CAMG T1,T3		; AND SYMBOT .GT. FRETOP
	JRST COLL0X		; ELSE THIS IS NOT GOOD STUFF.
	SOS DIRLSH		; OK, OLD FORMAT. 8 PAGES PER USER.
COLL0X:	MOVN X,WINDEX+16	;LENGTH OF HASH TABLE
	HRLZS X
	HRR X,WINDEX+15	;AOBJN POINTER TO IT
COLL2:	SETZM 0(E)
	MOVE T1,WINDEX(X)	;GET XWD DDB,NUMBER
	TRNN T1,-1		;IN USE?
	JRST COLN2		;FREE SLOT
	MOVEI T2,(T1)		;DIR NUM
	CAMLE T2,TOPUSR		;NEW HIGH?
	MOVEM T2,TOPUSR		;YES. SAVE IT.
	HLRZ T2,T1		;DDB ADDRESS IN INDEX
	MOVE T3,WINDEX+7(T2)	;CONSISTENCY CHECK
	CAIE T3,(T1)		; ..
	JRST FOULED		;NOT RIGHT.
	MOVE T3,WINDEX+4(T2)		;PRIVS
	MOVEM T3,PRVTAB(T1)
	MOVE T3,WINDEX+5(T2)		;USER TYPE
	MOVEM T3,TYPTAB(T1)
	MOVE T3,WINDEX+10(T2)		;LAST LOGIN
	MOVEM T3,DATTAB(T1)
	MOVE T3,WINDEX+11(T2)
	IOR NC,T3		;ALL GROUPS SEEN
	MOVEM T3,UGRTAB(T1)	;USER'S GROUP ACCESS
	MOVEI A,(T1)		;DIR NUM
	LSH A,@DIRLSH		; SHIFT 4 OR 3 FOR NEW OR OLD DIR FMT
	HRL A,DIRJFN
	MOVE B,[XWD 400000,<DIRWND/1000>]
	MOVSI C,100000		;READ ACCESS
	PMAP
	HLRZ T3,DIRWND+22
	MOVEM T3,SPCTAB(T1)	;DISK SPACE
	MOVE T3,DIRWND+15
	MOVEM T3,DPWTAB(T1)	;DEFAULT PROT
	MOVE T3,DIRWND+16
	MOVEM T3,PRTTAB(T1)	;DIR PROT
	MOVE T3,DIRWND+17
	MOVEM T3,DBKTAB(T1)	;BACKUP VERSIONS TO KEEP
	MOVE T3,DIRWND+20
	MOVEM T3,DGRTAB(T1)	;GROUPS DIRECTORY IS IN
	HRRZ BP,WINDEX+1(T2)	;POINTER TO USER NAME
	MOVEI T3,(T2)		;WHAT SUBINDEX IS IT IN
	ADDI BP,WINDEX
	TRZ T3,7777
	ADDI BP,(T3)
	HRLI BP,010700		;BYTE POINTER TO NAME
	MOVE A,E
	HRLI A,440700
	ILDB C,BP
	IDPB C,A		;COPY NAME
	JUMPN C,.-2
	MOVEM E,NAMPTR(T1)
	MOVEI E,1(A)
COLN2:	AOBJN X,COLL2		;LOOP FOR ALL DIRECTORIES IN TABLE
	MOVEI X,NUSRS-1		;FIND LOWEST HOLE
	SKIPN NAMPTR(X)
	MOVEI C,(X)		;HOLE
	SOJG X,.-2		;CHECK DOWN THRU 1
	MOVEM C,LOWHOL
>
	MOVEM NC,GROUPS		;SAVE OR OF ALL GROUPS
	PUSHJ P,SORT		;MAKE THE SORTED INDEX POINTERS
	TRO F,R.COLL		;NOW HAVE ALL THE DATA
	HRROI A,[ASCIZ / DONE

/]
	PSOUT
	POPJ P,0		;ALL DONE

LCRLF:	MOVE A,OUTFIL
	HRROI B,CRLFM
	MOVEI C,0
	SOUT
	SOS LINENO
	POPJ P,0

FOULED:	HRROI A,[ASCIZ /
? CONSISTENCY FAILURE IN DIRECTORY INDEX
/]
	PSOUT
	HALTF
	JRST DONE
NOCANDO:
	HRROI A,[ASCIZ /
? NOT PRIVILEGED TO READ SYSTEM FILES.
/]
	PSOUT
	HALTF
	JRST DONE

FORM:	MOVE A,OUTFIL
	MOVEI B,C.FF
	BOUT
	POPJ P,0

$GTDIR:	HALT .
$DIRST:	HALT .
;ABOVE NOT WRITTEN YET

SORT:	SETOM USERNO		;NO PREVIOUS DUMP
	SETZM SORTP		;AND FIRST CELL IN SORTED BLOCK
ALPHA1:	MOVEI T1,0		;START TESTING AT ZERO
ALPL1:	SKIPE NAMPTR(T1)	;FIND SOMEBODY, ANYBODY AT ALL
	JRST ALPHA2		;GOT ONE.
	CAIGE T1,NUSRS-1	;ANYONE EXIST?
	AOJA T1,ALPL1		;MAYBE
	POPJ P,0		;NO. IMPOSSIBLE. DONE.

ALPHA2:	SKIPGE USERNO		;FIRST PASS?
	JRST ALPHA3		;YES. THIS T1 IS BEST SO FAR
	MOVE A,NAMPTR(T1)	;NO. GET NAME STRING ADR FOR CHECK
ALP2A:	MOVE B,USERNO		;COMPARE WITH PREVIOUS
	MOVE B,NAMPTR(B)	; ..
	PUSHJ P,STCAML		;SKIP IF STRING(A) LESS THAN STRING (B)
	  JRST ALPHA3		;B .GE. A
ALP2B:	CAML T1,TOPUSR		;RUN THRU THEM ALL?
	POPJ P,0		;YES. NONE AFTER PREVIOUS. DONE.
	SKIPE A,NAMPTR+1(T1)	;NEXT T1 IN USE?
	AOJA T1,ALPHA2		;YES. GO CHECK IT
	AOJA T1,ALP2B		;NO. LOOK FURTHER.

ALPHA3:	MOVEI T2,0		;START SECOND CHECK AT ZERO TOO
	SKIPN NAMPTR(T2)	;THIS USER EXIST?
	AOJA T2,.-1		;NO. FIND ONE. MUST BE ONE, WAS ABOVE.
ALP3A:	SKIPGE USERNO		;ANY PREVIOUS?
	JRST ALPHA4		;NO.
	MOVE A,NAMPTR(T2)	;YES. COMPARE T2 WITH PREVIOUS
ALP3B:	MOVE B,USERNO		; ..
	MOVE B,NAMPTR(B)	; ..
	PUSHJ P,STCAML		;SKIP IF T2 BEFORE OLD
	  JRST ALPHA4		;T2 AFTER OLD. IT'S A CANDIDATE
ALPHA6:	CAML T2,TOPUSR		;T2 NOT A CANDIDATE. AT END?
	JRST ALPHA7		;YES. BEST GUY POSSIBLE IS IN T1
	SKIPN A,NAMPTR+1(T2)	;NOT AT END. TRY ANOTHER.
	AOJA T2,ALPHA6		;THAT ONE NOT IN USE. SKIP IT.
	AOJA T2,ALP3A		;OK, TRY THIS ONE.

ALPHA4:	MOVE A,NAMPTR(T1)	;COMPARE THE TWO TEST NAMES
	MOVE B,NAMPTR(T2)	; ..
	PUSHJ P,STCAML		;SKIP IF T1 BEFORE T2
	  MOVE T1,T2		;T2 WAS FIRST. MOVE TO BEST SO FAR.
	JRST ALPHA6		;BEST IS IN T1. TRY ANOTHER T2.

ALPHA7:	HRRZM T1,USERNO		;THIS IS BEST GUY.
	MOVE T2,SORTP		;POINTER INTO SORTED BLOCK
	HRRZM T1,ORDRTB(T2)	;STORE ANSWER
	AOS SORTP		;PREPARE FOR NEXT ONE
	JRST ALPHA1		;AND START ALL OVER FOR ANOTHER ONE.

DIRGRP:	PUSHJ P,COLECT		;GET THE NAMES, USER AND DIR GRPS
	MOVE A,OUTFIL		;TITLE PAGE
	MOVEI C,0
	HRROI B,[ASCIZ /


	TENEX USER AND DIRECTORY GROUPS

		/]
	SOUT
	SETO B,			;CURRENT DATE
	MOVSI C,322401		;PRINT DATE ONLY
	ODTIM
	PUSHJ P,LCRLF
	HRROI B,[ASCIZ /


THE FOLLOWING GROUPS ARE IN USE:

/]
	SOUT
	PUSH P,GROUPS		;STACK A COPY OF ALL GROUP BITS
DIRGL1:	MOVE T1,0(P)		;GROUPS LEFT
	JFFO T1,.+2		;ANY LEFT?
	  JRST DIRGA		;NO.
	MOVE T1,BITTAB(T2)	;YES. MASK IT OFF STACKED BITS
	ANDCAM T1,0(P)		; ..
	HRRZM T2,GROUPN		;STORE CURRENT NUMBER
	HRRZM T2,LASTGP		;AND UPDATE HIGHEST.
	PUSHJ P,GNOUTE		;GROUP NOUT AND EOL
	PUSHJ P,LCRLF
	JRST DIRGL1		;LOOP FOR ALL BITS

DIRGA:	POP P,T1		;REMOVE JUNK FROM STACK
	HRROI B,[ASCIZ /

THE HIGHEST DIRECTORY IN USE IS NUMBER /]
	MOVEI C,0
	SOUT
	HRRZ B,TOPUSR
	MOVEI C,10
	NOUT
	  JFCL
	HRROI B,[ASCIZ /

THE FIRST FREE DIRECTORY NUMBER IS /]
	MOVEI C,0
	SOUT
	HRRZ B,LOWHOL
	MOVEI C,10
	NOUT
	  JFCL
	HRROI B,CRLFM
	MOVEI C,0
	SOUT
	MOVEI B,C.FF		;NEW PAGE
	BOUT			; ..
	SETZM GROUPN		;START AT GROUP ZERO
DIRDL1:	TRZ F,R.DGM		;INITIALIZE TO NO MEMBERS OF GROUP
	MOVEI A,DIRDA		;WHERE TO GO FOR DUMP TEST AND DUMP
	MOVEM A,DMPADR		;AS ALPHABETIZING PROCEEDS
	PUSHJ P,ALFDMP		;SCAN USERS
	TRNE F,R.DGM		;ANY MEMBERS?
	JRST DIRDB		;YES.
	PUSHJ P,LCRLF		;NO. SAY SO.
	HRROI B,[ASCIZ /

THERE ARE NO DIRECTORIES IN GROUP /]
	SOUT
	PUSHJ P,GNOUTE
	JRST DIRDB

GNOUT:	MOVE A,OUTFIL		;HANDY SETUP OF A. OUTPUT GRP NUMBER
	MOVE B,GROUPN
	MOVE C,[120002,,12]
	NOUT
	  JFCL
	POPJ P,0

GNOUTE:	PUSHJ P,GNOUT		;OUTPUT GROUP NUMBER AND
	JRST LCRLF		; EOL, RETURN WITH A/OUTFIL, C/0

DGNAME:	MOVE A,OUTFIL
	HRROI B,[ASCIZ /, /]
	MOVEI C,0
	TRNE F,R.DGM		;IF NOT FIRST,
	SOUT			;OUTPUT A COMMA AND A SPACE
	MOVEI A,2		;AND COUNT THOSE POSITIONS
	TROE F,R.DGM		;UNLESS FIRST TIME THRU (FLAG NOT FIRST)
	ADDM A,COLUMN		;UPDATE COLUMN COUNTER
DGNM1:	HRROI A,STRBF		;SCRATCH STORAGE
	HRRO B,NAMPTR(E)	;NAME TO TYPE OUT
	MOVEI C,1000		;LENGTH OF STRING
	MOVEI D,0		;TERMINATES ON A NULL
	SOUT
	MOVNS C			;COMPUTE STRING LENGTH
	ADDI C,1000		;GET CHARACTERS IN NAME
	ADDB C,COLUMN		;UPDATE COLUMN COUNT
	TRNN F,R.WIDE		;WIDE OR NARROW PAPER?
	 JRST [	CAIGE C,^D70	;WOULD IT OVERFLOW?
		JRST DGNGO	;NO. GO OUTPUT IT
		JRST DGNCR]	;YES. DO AN EOL AND RETRY.
	CAIGE C,^D130		;WOULD IT OVERFLOW WIDE PAPER?
	JRST DGNGO		;NO, IT FITS
DGNCR:	PUSHJ P,LCRLF		;OUTPUT NEW LINE
	SETZM COLUMN		;CLEAR COLUMN COUNTER
	JRST DGNM1		;AND TRY AGAIN

DGNGO:	MOVE A,OUTFIL		;OUTPUT THE NAME AT LAST
	MOVEI C,0		;INDEFINITE STRING
	HRRO B,NAMPTR(E)	;POINT TO NAME STRING
	SOUT			;OUTPUT IT
	POPJ P,0		;AND RETURN

DIRDB:	TRZ F,R.DGM		;NOW DO THE USERS OF THE GROUP.
	MOVEI A,DIRUA		;ROUTINE TO TEST USER GROUP AND DUMP
	MOVEM A,DMPADR		; ..
	PUSHJ P,ALFDMP		;ALPHABETIZE, DUMP IF IN GRP
	TRNE F,R.DGM		;THROUGH. ANY USERS?
	JRST DIRDC		;YES.
	PUSHJ P,LCRLF		;NO. MENTION THAT CROCK.
	HRROI B,[ASCIZ /

THERE ARE NO USERS OF GROUP /]
	SOUT
	PUSHJ P,GNOUTE		;LIST GROUP NUMBER
	JRST DIRDC

DIRDC:	AOS A,GROUPN		;COUNT CURRENT GROUP
	CAMG A,LASTGP		;DONE THEM ALL?
	JRST DIRDL1		;NO. LIST ANOTHER GROUP
	MOVEI A,BITDMP		;FOLLOWING ALL USE BIT TEST DUMP ROUTINE
	MOVEM A,DMPADR		; SO SAVE DISPATCH ADDRESS
	MOVE A,OUTFIL		;SPACE TO NEW PAGE
	MOVEI B,C.FF		; ..
	BOUT			; ..
	MOVEI T1,PRVTAB		;FIRST OF TWO TABLES WITH BITS
DIRDC1:	MOVEM T1,BITTBA		;TABLE ADDRESS
	MOVSI T1,(1B0)		;BIT TO TEST, START AT LEFT.
	MOVEM T1,BIT		; ..
BITDL:	MOVSI T2,-NUSRS		;CHECK ALL USERS FOR CURRENT BIT
	HRR T2,BITTBA		;IN RIGHT TABLE
	MOVE T1,BIT		;BIT TO LOOK FOR
	TDNE T1,0(T2)		;THIS USER HAVE BIT?
	JRST DIRDC2		;YES.
	AOBJN T2,.-2		;NO. DOES ANYONE HAVE IT?
	JRST DIRDCN		;NO. NO OUTPUT FOR THIS BIT.
DIRDC2:	MOVEI B,0		;CLEAR TEXT POINTER
	MOVSI E,-NBITN		;COUNTER THRU BITS WITH TEXT
DDC2L:	LSH E,1			;DOUBLE INDEX
	MOVE T1,BITT2(E)	;BIT IN TABLE
	MOVE T2,BITT2+1(E)	;AND TABLE TO CHECK IN
	ASH E,-1		;GET AOBJN POINTER BACK (INCL SIGN)
	CAMN T1,BIT		;IS THIS THE ONE WE FOUND?
	CAME T2,BITTBA		;AND IN RIGHT TABLE?
	SKIPA			;NO.
	HRRO B,BITT1(E)		;YES. GET THE MESSAGE.
	AOBJN E,DDC2L		;TRY TO FIND THE MESSAGE.
	MOVE A,OUTFIL		;SET UP FOR I/O
	MOVEI C,0		; ..
	JUMPN B,[	SOUT
			JRST DIRDC3]
	HRROI B,[ASCIZ /

THE FOLLOWING USERS HAVE /]
	SOUT
	MOVE T1,BITTBA		;WHICH KIND OF BIT?
	HRROI B,[ASCIZ /PRIVILEGE BIT /]
	CAIE T1,PRVTAB
	HRROI B,[ASCIZ /USER TYPE BIT /]
	SOUT			;DESCRIBE BIT WHICH HAS NO MESSAGE
	MOVE T1,BIT		;GET BIT NUMBER
	JFFO T1,.+1
	MOVEI B,(T2)
	MOVEI C,12		;IN DECIMAL
	NOUT
	  JFCL
	HRROI B,[ASCIZ /

/]
	MOVEI C,0
	SOUT
DIRDC3:	SETZM COLUMN		;START OF A LINE AFTER FOLLOWING TEXTS
	TRZ F,R.DGM		;FOR THE COMMA FIDDLER
	PUSHJ P,ALFDMP		;AND DUMP CLASS MEMBERS IN SORTED ORDER
DIRDCN:	MOVE E,BIT		;NEXT BIT IN MEMORY CELL
	LSH E,-1
	MOVEM E,BIT		; ..
	JUMPN E,BITDL		;LOOP IF MORE.
	MOVEI T1,TYPTAB		;FINISHED ONE TABLE. DONE BOTH?
	CAME T1,BITTBA		; ..
	JRST DIRDC1		;NO. TRY BITS IN TYPTAB TOO
	PUSHJ P,LCRLF		;LIST A COUPLE BLANK LINES
	PUSHJ P,LCRLF
	POPJ P,0		;DONE WITH DIR GRP LISTING

ALFDMP:	SETZB T1,SORTP		;START WITH FIRST SORTED INDEX
ALFDL1:	SKIPN T1,ORDRTB(T1)	;GET NEXT GUY ALPHABETICALLY
	POPJ P,0		;RAN OUT.
	MOVEM T1,USERNO		;STORE TO DRIVE DUMPERS
	PUSHJ P,@DMPADR		;DUMP OR TEST AND DUMP
	  JFCL
	AOS T1,SORTP		;UP TO NEXT ONE
	CAIGE T1,NUSRS		;ALL DONE?
	JRST ALFDL1		;NO. TRY THIS ONE
	POPJ P,0		;YES. END OF LINE.

DIRDA:	MOVE E,USERNO		;DRIVER OF DUMP ROUTINE IS USER NUMBER
	MOVE NC,GROUPN		;CURRENT GROUP NUMBER
	MOVE NC,BITTAB(NC)	;BIT FOR GROUP
	TDNN NC,DGRTAB(E)	;THIS DIRECTORY IN THE GRP?
	POPJ P,0		;NO
	TRNE F,R.DGM		;FIRST ONE?
	JRST DIRDA1		;NO.
	PUSHJ P,LCRLF
	HRROI B,[ASCIZ /

THE FOLLOWING DIRECTORIES ARE IN GROUP /]
	SOUT
	PUSHJ P,GNOUTE
	PUSHJ P,LCRLF
	SETZM COLUMN
DIRDA1:	PUSHJ P,DGNAME
	JRST CPOPJ1

DIRUA:	MOVE E,USERNO		;DRIVER OF DUMP ROUTINE IS USER NUMBER
	MOVE NC,GROUPN		;CURRENT GROUP
	MOVE NC,BITTAB(NC)	;BIT FOR IT
	TDNN NC,UGRTAB(E)	;USER IN THE GROUP?
	POPJ P,0		;NO
	TRNE F,R.DGM		;FOUND A USER. FIRST?
	JRST DIRUA1		;NO
	PUSHJ P,LCRLF		;YES. HEAD THE USER GROUP.
	HRROI B,[ASCIZ /

THE FOLLOWING USERS HAVE ACCESS TO GROUP /]
	SOUT
	PUSHJ P,GNOUTE		;TYPE THE NUMBER
	PUSHJ P,LCRLF		;BLANK LINE
	SETZM COLUMN		;CLEAR COLUMN COUNTER
DIRUA1:	PUSHJ P,DGNAME		;LIST THE USER NAME
	JRST CPOPJ1		;AND SEE WHO ELSE THERE IS

BITDMP:	MOVE E,USERNO		;GET USER NUMBER
	MOVE T1,BITTBA		;AND LOCATION IN TABLE
	ADDI T1,0(E)		; ..
	MOVE A,BIT		;AND PRIV BIT TO CHECK
	TDNE A,0(T1)		;IS IT ON?
	PUSHJ P,DGNAME		;YES. TYPE IT.
	POPJ P,0		;END OF BITDMP

BITT1:	[ASCIZ /

THE FOLLOWING USERS ARE WHEELS:

/]
	[ASCIZ /

THE FOLLOWING USERS ARE OPERATORS:

/]
	[ASCIZ /

THE FOLLOWING USERS HAVE CONFIDENTIAL INFORMATION ACCESS:

/]
	[ASCIZ /

THE FOLLOWING USERS HAVE MAINTENANCE ACCESS:

/]
	[ASCIZ /

THE FOLLOWING USERS ARE NET-WIZARDS:

/]
	[ASCIZ /

THE FOLLOWING DIRECTORIES ARE FILES-ONLY:

/]
	[ASCIZ /

THE FOLLOWING MAY USE ALPHANUMERIC ACCOUNTS:

/]
	[ASCIZ /

THE FOLLOWING USERS ALWAYS SEE LOGIN MESSAGE:

/]
NBITN==.-BITT1

BITT2:	EXP 1B18,PRVTAB
	EXP 1B19,PRVTAB
	EXP 1B20,PRVTAB
	EXP 1B21,PRVTAB
	EXP 1B22,PRVTAB
	EXP 1B0,TYPTAB
	EXP 1B1,TYPTAB
	EXP 1B2,TYPTAB

;XWD NOUT FLAGS FOR LH C,  INDEX INTO DIR BLK
ORDERT:	XWD 500015,DATTAB	;LAST LOGIN DATE
	XWD 500014,SPCTAB	;STORAGE LIMITS
	XWD 540014,UGRTAB	;USR GRPS
	XWD 540014,DGRTAB	;DIR GRPS
NORDR1==.-ORDERT	;NUMBER ALWAYS PRINTED EVEN ON NARROW FORM.
;BELOW HERE PRINTED ONLY IF NON-STD IN NARROW FORM.
	XWD 500014,TYPTAB	;USER TYPE
	XWD 500014,PRVTAB	;PRIVILEGES
	XWD 500014,DPWTAB	;DEFAULT FILE PROT
	XWD 500014,PRTTAB	;DIR PROT
	XWD 500014,DBKTAB	;DEF FILE RETENTION
NORDR2==.-ORDERT

DEFLTT:			;DEFAULT VALUES OF ABOVE, IN SAME ORDER.
	EXP -1,D.SLIM,D.UGRP,D.DGRP
	EXP D.UTYP,D.PRV,D.FPR,D.DPR,D.FRET

TYIAZ:	PBIN			;TYI, GETTING ALPHABETIC CH.
	CAIE A,0		;JUNK NULLS
	CAIN A,15		;AND CR'S
	JRST TYIAZ
	CAIG A,"Z"+40
	CAIGE A,"A"+40		;LOWER CASE?
	SKIPA			;NO
	TRZ A,40		;YES. MAKE UPPER.
	CAIG A,"Z"		;ALPHABETIC?
	CAIGE A,"A"		; ..
	POPJ P,0		;NO.
	JRST CPOPJ1		;YES.

.OUTPT:	TRZ F,R.LPT
	HRROI A,[ASCIZ /LIST USER INDEX ON FILE: /]
	PSOUT
	MOVSI A,460003
	MOVE B,[XWD 100,101]
	GTJFN
	JRST .OUTP1
	MOVEM A,OUTFIL
	MOVSI B,7B23
	HRRI B,101000
	OPENF
	JRST .OUTP1
	JRST COMMAN

.OUTP1:	SKIPL A,OUTFIL
	RLJFN
	  JFCL
	SETOM OUTFIL
	JRST DUMMY

STCAML:	HRLI A,440700
	HRLI B,440700		;MAKE TWO STRING POINTERS
STCMLL:	ILDB C,A
	ILDB D,B		;GET TWO CHARACTERS
	CAMGE C,D		;TO A DIFFERENCE WITH A LOWER?
	JRST CPOPJ1		;YES. SKIP RETURN
	CAME C,D		;B LOWER?
	POPJ P,0		;YES. NON-SKIP RETURN
	JUMPN C,STCMLL		;SAME. LOOP UNLESS BOTH NULLS.
	JRST CPOPJ1		;END ON MATCHING NULLS.

BITTAB:	REPEAT ^D36,<	EXP 1B<.-BITTAB>>
FCOCB:	BYTE (2)1,1,1,1,1,1,1,2,1,2,2,1,2,2,1,1,1,1
FCOCC:	BYTE (2)1,1,1,1,1,1,1,1,1,1,1,1,1,2

SBUF:	BLOCK 20
TBUF:	BLOCK 20
PDP:	IOWD 200,PDL
PDL:	BLOCK 200

STRBF:	BLOCK 60

COMWRD:	BLOCK 10		;STORAGE FOR COMMAND WORD
ECMWRD==.-1
BP0:	XWD 010700,COMWRD-1	;POINTER WHICH IDPB'S TO FIRST CHAR
				; OF COMMAND WORD STORAGE
COMX:	BLOCK 1		;COMMAND INDEX
USERNO:	BLOCK 1		;DIRECTORY NUMBER
TOPUSR:	BLOCK 1		;HIGHEST USER IN USE
LOWHOL:	BLOCK 1		;LOWEST FREE DIRECTORY
PAGBAS:	BLOCK 1		;FIRST USER NUMBER ON PAGE IN MINILIST
MAXCOL:	BLOCK 1		;COLUMNS PER LINE OF PAPER
LINENO:	BLOCK 1		;LENGTH OF PAGE COUNTER
DMPADR:	BLOCK 1		;DISPATCH FOR DUMP ROUTINE
PAGENO:	BLOCK 1		;PAGE COUNTER
OLDCAP:	BLOCK 1		;CAPABILITIES ON ENTRY
OUTFIL:	BLOCK 1		;OUTPUT JFN
IDXJFN:	BLOCK 1		;JFN FOR SYSTEM INDEX
DIRJFN:	BLOCK 1		;JFN FOR SYSTEM DIRECTORY
DIRLSH:	BLOCK 1		;4 OR 3 FOR NEW OR OLD DIR FORMAT, PGS PER USER
GROUPS:	BLOCK 1		;OR OF ALL GROUP BITS IN SYSTEM
LASTGP:	BLOCK 1		;HIGHEST G$OUP NUMBER IN USE
GROUPN:	BLOCK 1		;GROUP NUMBER CURRENTLY CONSIDERING
COLUMN:	BLOCK 1		;COLUMN ON OUTPUT PAGE FOR GROUP ROUTINE
COMCHC:	BLOCK 1		;COUNT OF CHARS IN COMMAND WORD
SORTP:	BLOCK 1		;POINTER TO SORTED USER BLOCK
BIT:	BLOCK 1		;BIT TO TEST IN PRIV WORD IN BITDMP
BITTBA:	BLOCK 1		;WHICH BIT TABLE BEING CHECKED
LOGDES:	BLOCK 1		;TTY FOR ERROR MESSAGES
NSUBI:	BLOCK 1		;NUMBER OF SUBINDEXES. 8 PGS EACH.

PATCH:	BLOCK 400

	END START

