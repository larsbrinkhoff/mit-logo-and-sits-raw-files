
; DIRSRT - directory sort routine (image mode disk-style directories).
; Takes two arguments:
;	A/  pointer to the directory to be sorted - will be sorted
;		in place.
;	B/  instruction to use for comparison.  Instruction should
;		expect pointers to name areas in A and B.  It should
;		skip if and only if the name area pointed to by B
;		should preceed the name area pointed to by A.  (the
;		instruction can use registers C and D without restoring
;		them.


DIRSRT:	MOVE	E,B		; SAVE THE COMPARE INSTRUCTION
	MOVEI	TT,2000-LUNBLK(A)	; GET POINTER TO END OF DIR
	ADD	A,UDNAMP(A)	; GET POINTER TO BEGINNING OF NAME AREA
DSRT01:	CAML	A,TT		; MORE THAN ONE ENTRY LEFT IN DIR?
	POPJ	P,		; NO - DONE
	MOVEI	B,LUNBLK(A)	; GET ADDRESS OF SECOND IN THIS SECTION
DSRT02:	XCT	E		; COMPARE THEM
	JRST	DSRT04		; NO SWITCH NEEDED
	HRR	C,A		; NEED TO SWITCH
	HRLI	C,-LUNBLK	; MAKE AOBJN POINTER
DSRT03:	MOVE	D,(C)		; SWAP THE ENTRIES
	EXCH	D,(B)
	MOVEM	D,(C)
	AOS	B
	AOBJN	C,DSRT03
	SKIPA			; HAVE ALREADY INCREMENTED B
DSRT04:	ADDI	B,LUNBLK
	CAMG	B,TT		; SECOND POINTER TO THE END?
	JRST	DSRT02		; NO - COMPARE THIS ONE
	ADDI	A,LUNBLK	; YES - DECREASE SORT SPACE
	JRST	DSRT01		; GO BACK FOR MORE



; This page contains comparison routines for various sort conditions.

; CNAME1 and CNAME2 are comparison routines used by the comparison
; routines.  They do not skip if the names are the same.  Skip if
; once if A preceeds B and twice otherwise.

CNAME1:	MOVE	C,UNFN1(A)	; SET UP COMPARISON OF NAME 1s
	MOVE	D,UNFN1(B)
CNAMES:	TLC	C,400000	; MAKE LETTERS COME LAST
	TLC	D,400000
	CAMN	C,D		; THE SAME?
	POPJ	P,		; YES - NO SKIP
	AOS	(P)		; SKIP AT LEAST ONCE
	CAML	C,D		; WHICH IS FIRST
	AOS	(P)		; (B) - SKIP
	POPJ	P,

CNAME2:	MOVE	C,UNFN2(A)	; SET UP COMPARISON OF SECOND NAMES
	MOVE	D,UNFN2(B)
	JRST	CNAMES

NAME1:	PUSHJ	P,CNAME1	; COMPARE ON NAME 1
	JRST	NAME1E		; THE SAME - RANK BASED ON NAME 2
	JRST	AFIRST		; (A) IS FIRST
	JRST	BFIRST		; (B) IS FIRST

NAME1E:	PUSHJ	P,CNAME2	; FIRST NAMES THE SAME - COMPARE SECOND
	POPJ	P,		; THE SAME  - DON'T EXCHANGE
	JRST	AFIRST		; (A) IS FIRST
	JRST	BFIRST		; (B) IS FIRST

NAME2:	PUSHJ	P,CNAME2	; REPEAT FOR COMPARING NAME 2 FIRST
	JRST	NAME2E
	JRST	AFIRST
	JRST	BFIRST

NAME2E:	PUSHJ	P,CNAME1
	POPJ	P,
	JRST	AFIRST
	JRST	BFIRST

; COMPARE BASED ON FILE LENGTH

LENGTH:	PUSH	P,A		; SAVE A AND B
	PUSH	P,B
	PUSHJ	P,FLEN		; GET FIRST LENGTH
	MOVE	C,A
	MOVE	A,(P)		; GET SECOND LENGTH
	PUSHJ	P,FLEN
	MOVE	D,A
	POP	P,B		; RESTORE A AND B
	POP	P,A
	JRST	COMPAR		; GO DO COMPARISON


; COMPARE BASED ON CREATION DATES

CDATE:	MOVE	C,UNDATE(A)	; COMPARE CREATION DATES
	MOVE	D,UNDATE(B)
	JRST	COMPAR

; COMPARE BASED ON REFERENCE DATES

RDATE:	HLRZ	C,UNREF(A)
	HLRZ	D,UNREF(B)

COMPAR:	CAMN	C,D
	JRST	NAME1		; IF THE SAME - SORT ON NAME BASIS
	CAMG	C,D		; OTHERWISE COMPARE
	JRST	AFIRST
	JRST	BFIRST

AFIRST:	SKIPE	ASCEND		; ASCENDING ORDER?
	AOS	(P)		; NO - SWITCH NEEDED
	POPJ	P,

BFIRST:	SKIPN	ASCEND		; ASCENDING ORDER?
	AOS	(P)		; YES - SWITCH NEEDED
	POPJ	P,

ASCEND:	0


; This page contains routines that are used for directory subset
; selection.

; KEEP IF DUMPED

IFDUMP:	PUSH	P,A
	MOVE	A,UNRNDM(A)
	TLNE	A,UNLINK
	JRST	NEVER
	TLNN	A,UNDUMP
	JRST	FLSHIT
	JRST	KEEPIT

; KEEP IF PACK NUMBER MATCHES THAT IT PACKNO

IFPACK:	PUSH	P,A
	MOVE	A,UNRNDM(A)
	TLNE	A,UNLINK
	JRST	NEVER
	LDB	A,[UNPKN+A]
	CAME	A,PACKNO
	JRST	FLSHIT
	JRST	KEEPIT

; KEEP IF A LINK

IFLINK:	PUSH	P,A
	MOVE	A,UNRNDM(A)
	TLNN	A,UNLINK
	JRST	FLSHIT
	JRST	KEEPIT

FLSHIT:	POP	P,A
	SKIPE	NOTSW
	AOS	(P)		; HE SAID NOT - KEEP IT
	POPJ	P,

KEEPIT:	POP	P,A
	SKIPN	NOTSW
	AOS	(P)		; HE SAID ONLY - KEEP IT
	POPJ	P,

NEVER:	POP	P,A
	POPJ	P,

NOTSW:	0
PACKNO:	0

