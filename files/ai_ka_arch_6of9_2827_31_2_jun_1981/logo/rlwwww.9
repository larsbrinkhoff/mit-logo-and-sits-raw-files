.xgp
.font 0 31vg			
.font 1 31vgb
.nofill
.he1
^
.he2
^
.ss
.dummy ^
.twinch 6
.tlinch 8.5
.sp 5
.ce
1A Computer Writing-Workshop0
.sp 20
.ce
1Abstract0
.ss
.adjust
^^^^^We present an analysis of the process of composition in terms of the conflicting subordinate roles the author must assume and go on to explore how computer derived concepts, such as debugging, and computer facilities could significantly enhance a writing workshop.
.sp 5
.nofill
.ce
Lawler & Papert
.ce
Logo Project
.ce
M.I.T. A.I. Lab.
.ds
.adjust
.page
.ce
1The Generality of Debugging0

^^^^^^^^^^Central to the vision of a Logo `mathland' has been the explicit focus on debugging as an intellectual skill.  Papert's description of debugging as a major component of problem solving -- and one not marked in either the vocabulary or concepts of pre-computer cultures -- was a theoretical ground for appreciating the computer's potential impact on intellectual development.  Debugging was more than a technique one learned to enhance arithmetic skills; we saw and introduced it as a meta-language for the more precise description of processes as diverse as juggling and the generation of concrete poetry.  Although its best successes have been in areas traditionally labelled "mathematical", Logo has always been more than a `mathland' in any narrow sense --  and this is so because of the centrality of debugging to developing thought.

Multiple Roles^^^^^^^^^^Our objective is to design computer facilities and applications to enable people to compose more effective text.  Since our analysis will take guidance from The Articulation of Complementary Roles, let us go beyond the example introduced earlier with this story of a six year old's developing game-length prediction in Tic tac toe.   When first introduced to Tic tac toe, the child, Miriam, learned to play as a TACTICIAN.  With two of her counters in line, she would complete a winning row.  Similarly, she would block an opponent's victory by executing `forced moves'.  Otherwise, she would move preferentially to the center cell and then to any empty corner.  Later Miriam began to play as a STRATEGIST, regularly attempting to achieve a specific fork from a corner opening move.  When temporarily deprived of an opponent, she played a game against herself, alternating roles of Strategist and Tactician; she continued playing alone this way.  Much later, in response to requests that she predict the outcome of games, Miriam worked out games in her mind, preferring the proof of victory to recalling results of earlier play.  Miriam's initial play was ego-centric in Piaget's sense (1926) of not attending to others at all.  Her final play was socialized, in the sense that she was able to simulate an opponent and thus work out the result of mutual engagement.  The advance was achieved through developing internal control over two disparate modes of play.  We describe her socialized play by saying she developed a cognitive structure, MASTER, to control her own structures of Tactician and Strategist.  We propose that a person becomes an author through development in a similar pattern.

^^^^^^^^^^We describe three roles for a person composing text as follows: the WRITER is that cluster of experience-based knowledge which generates text; the CRITIC is that cluster which analyses and judges text; the EDITOR is those structures which control the subordinate Writer and Critic clusters of knowledge.  (We will refer to the person composing text as the AUTHOR.  We propose to view development of an author's skills within such a scenario.  The path we will follow and conclusions we achieve are novel but not bizarre.  In practical terms, our proposals have much in common with those of a well known and respected text, Writing Without Teachers (Elbow, 1973), but they are different in emphasis because of our epistemological stance and our instrumental commitment to computers.

^^^^^^^^^^The typical complaint in composition is of writing block, i.e. a state of undiscriminated inability to write anything at all.  Elbow's description of writing block is that the Critic is too demanding of the Writer and his advice is for the Editor to disable the Critic until the Writer has a chance to generate a mass of text.  We will turn to these issues after taking a different stance: the primary problem is with the Critical facility.  We describe the improvement of text as a process of transforming the Critic's bug descriptions in to the Editor's controlled rewriting.  The separation of roles permits us to analyse the process as both giving advice and taking advice.
.page
.ce
1Giving Advice0

^^^^^^^^^^Why is criticism hard ?  The first problem is interest.  If the work is your own, you may be too interested, too defensive to assimilate negative reactions.  It is very hard to accept the first scribblings of your writer.  You are immediately confronted with incoherence and questionable value.  This is not pleasant.  If the text is another's, the Critic has the problem of paying sympathetic attention to someone else's incoherence.  This is not pleasant.  The function of the Critic, the second player in the game of composition, is not fun; this is a major contrast with the role interactions of Tic^tac^toe.  Before she could play as Strategist, Miriam enjoyed playing as Tactician.  She was engaged in a social situation where her limited ability at playing all the roles of the game did not limit her engagement with the activity.  Further, she did not appreciate at first how the roles of Strategist and Tactician needed to be integrated to achieve mature skill in the game.  The task of composition is intrinsically more difficult than Tic tac toe because the task of iriticism is not fun.  Consequently, the critic is underexercised precisely in the sense that its judgments remain undifferentiated, evaluative rather than analytic.  How should differentiation of the critic proceed ?

^^^^^^^^^^We have see in programming skill a critical development is the crisp articulation of bug descriptions within the procedures to be analysed. (See Lawler, 1979, 1981c.)  The key observation is that when a bug description is sufficiently precise, its fix is obvious as a contravening of some features of the bug description.  The progressive refinement of programming skill is witnessed as the development of a taxonomy of bugs  -  descriptions of how, precisely, a specific command of a procedure subverts the objective of the procedure.  We believe it is possible to develop a taxonomy of bugs for simple composition and propose such as a critical apparatus suited to the task of composition and to the progressive refinement of an Author's skills.  This is the profound similarity of procedure debugging and copy editing.  Believing that something is possible does not mean that it is easy.

1Why a Composition Bug Taxonomy Will Be Hard to Create0

^^^^^^^^^^Four reasons, at least, make difficult developing a taxonomy of composition bugs.  The first problem is that very seriality of text which makes it a fugitive medium, one whose effects are achieved by the integration of the latest element with the sum of all that has gone before.  This obliteration of prior elements in the present effect blurs the relation of elements and the whole they arrive at.  This fugitive quality, an essential characteristic of the genre, makes analysis inherently difficult.

^^^^^^^^^^A second difficulty is the typical complexity of text compared to simple procedures in terms of depth of structure.  Another is the underspecificity of common text's objectives in contrast with a turtle geometry procedure.  These two difficulties (the complexity of text and the underspecificity of its objectives) could be addressed by presenting material in a style characteristic of Logo debugging exercises.  A simple example will suffice to exhibit the style.  (For further examples, see One Child's Learning, section 14, Lawler,  1979 or Enculturation and Learning, Lawler, 1981c.).  Introducing debugging to children, we have shown them some imperfect procedures "other children" had written, asking the former to identify the bugs and explain how to fix them.  The objective in such exercises is to create opportunities for presenting examples of bugs and labelling their categories.  The interface bug shown below developed during a child's attempt to assemble a house from triangular ROOF and a square STOREY.  When executed separately on a cleared screen (which operation orients the turtle at heading zero), the ROOF and STOREY procedures make the figures below but -- when assembled in order -- together they produce the unexpected, ill-formed house:
.nofill
.ss
.indent 2
TO^^STOREY^^^^^^^^^^^^^^^^^TO^^ROOF^^^^^^^^^^^^^^^^^^^TO^^HOUSE
1^^^RT^^90^^^FD^^100^^^^^^^1^^^RT^^90^^^FD^^100^^^^^^^1^^^ROOF
2^^^RT^^90^^^FD^^100^^^^^^^2^^^LT^120^^^FD^^100^^^^^^^2^^^STOREY
3^^^RT^^90^^^FD^^100^^^^^^^3^^^LT^120^^^FD^^100
4^^^RT^^90^^^FD^^100
.SP 10

.DS
.ADJUST
.INDENT 0
^^^^^^^^^^In the microworlds of language, comparable introductory criticism might take the form of exercises in varying elements of over-familiar texts to appreciate how changing the elements of a text affect its impact.  The simplest example might be perverting jingles from TV commercials, (e.g. "Tab, Tab, what a horrible drink./  Tab, Tab, it makes your breath stink).  In a more sophisticated context, this could involve varying the text and phrasing of verse, as in this bathetic parody of a famous Longfellow quatrain:
.nofill
.ss
.indent 12
Life is real and Life is Earnest,
^^^And the Grave is not its Goal.
Keep your eye upon the donut,
^^^Not upon the donut hole.
.indent 0
.ds
.adjust

^^^^^^^^^^The final difficulty we foresee is tracing one's reactions to a text to the level at which a crucial failure occcurs. (Elbow, focussing on how to take criticism, advises people to attend only to reactions, not to judgments or advice.)   The  sine qua non for giving advice is fixing reactions experienced as a reader.  Elbow suggests "pointing" to words in reporting one's reactions to another person, indicating which specific words marked moments particularly salient in one's developing appreciation of a text.  If a reader could simply express his momentary reactions through attaching/inserting commentary at salient sites in the text, a new level of specificity in criticism could be achieved.  Such "marginalia" in the reader's text could be returned to a different person, the author, as "raw reaction data" or could be used by the critic to construct a more reasoned criticism.  (The former would probably be the more valuable.)  With computer resident texts,various hardware elements could be suited to this use.  For example, a "light pen" or touch sensitive display screen could specify a point for insertion of comments and a matrix keyboard or touch-display with rows specifying the dimension of reactions (e.g. trust in the writer, interest in the text) and the columns a scale of intensity (e.g. suspicion to trust, rejection to interest).  The signification of keys would have to be user-specifiable to permit expression of the individual critic's response.  The assigned meaning of the keyed code could be directly inserted into the text copy being annotated.

^^^^^^^^^^A more general taxonomy of bugs could take form as a more precise specification, filled out with lucid examples, of varieties of faults of these four general classifications:
.nofill
.ss
.indent 2
-- violations of the author-reader compact, e.g. purposefully deceiving readers.
-- insuperable complexity, faults rising from the writer's insufficient
^^^^understanding of how the reader's comprehension grows.
-- dialect/idiolect faults, e.g. jargon in popular writing.
-- technical faults such as spelling or grammatical errors or the inclusion of
^^^^unintended rhythmic, phonological, or metaphorical effects.

.adjust
.ds
.indent 0
A taxonomy of composition bugs would be an extended, refined, and exemplified classification such as this.  (The established literature of criticism can offer case book examples -- although typically positive examples for emulation are offered instead of examples of faulty text.)  The value of such a catalogue would be in giving confidence to the Author that on a second pass his Critic will not leave him vulnerable to ridicule.  The purpose served by such a conviction would be to free the Writer from the crippling interruptions of self-consciousness.
.page
.ce
1Taking Advice0

^^^^^^^^^^If rendering criticism is hard, how much harder is taking criticism.  Since a text is supposed to express a person's thoughts and feelings and since the Author understands what he intended, how easy it is to over-interpret criticism of a text as criticism of the person himself.  The Author's dilemma in the general case is essential to the task: he has chosen to attempt communication in a medium which does not permit feedback.  This ultimately requires simulating an audience with some part of his mind and setting aside -- or limiting the influence of -- what he does in fact know.  Simulating a thoughtful reader while pretending ignorance of essential information is most unnatural, may even be impossible, at least requires an unusual degree of reflexive control.  It is in default of such ability that a Author -- when he does manage to get some feedback -- inclines to see the external critic as an insensitive, malevolent oaf instead of as his best source of information.  Elbow advises any Author to extract from criticism only the reactions of critics to the text and to neglect or ignore the critic's specific suggestions, in effect he says, "Don't take the criticisms seriously; do take seriously the critic's specific reactions to particular aspects of your text."  The first, defensive element of this advice is to insulate the Author from criticism in order that he not take it too personally -- and thus either disregard the criticism entirely or quit writing in despair.

^^^^^^^^^^The basic advance computer-resident text provides is that the ease of copying text makes every draft a rough draft.  The Author does not have to feel his self-esteem or long labor is committed to a specific text version as a final form.  Within the scenario of a writer's seminar --  which could meet weekly with interim writing and peer text criticism -- computer-resident text permits this ultimate defense: the Author's showing the penultimate version of his work in this response to criticisms: "You've criticised a text my latest revisions have made obsolete, but your criticism was very valuable; let's discuss it in detail to make certain I appreciated it fully."  Going beyond offsetting fear of commitment, the ease of text manipulation may provide in composition what we witness as the most compelling factor of engagement that programming permits -- the incremental elaboration of one's thoughts, the immediacy of perfection as one small step away.  This factor even may lead to a new vision of text and a new criterion of completion: a text is finally complete when perfect, when susceptible of no more improvement at all.  If partial or imperfect versions of such a text in process must be given to others, they can be seen for what what they are, special versions of work in process.

^^^^^^^^^^A second aspect of computer-embodied textual criticism further insulates an Author from the interpersonal stress of criticism.  With a mechanical intermediary, the Author's immediate response to any reaction is irrelevant -- he is given a chance to absorb and appreciate criticism without having to respond or fearing to respond to it as he would in a personal encounter.  An Author need not use the computer this way, but if he needs such distancing from criticism, the computer-based criticism lets him have it.  Finally, low level criticisms, e.g. typographical errors, can be relegated to their deserved level of unimportance.  Matters of spelling, grammar, and so forth can be handled in computer notes.  More complex criticisms or involved reactions can be addressed in personal encounters where the writer can prepare himself beforehand for dealing with the congenial or antipathetic critic.
.page
.ce
1Composing With a Computer -- and Without One0

^^^^^^^^^^The primary benefit of using computers for composition aids is a cluster  of ideas the experience can create.  First is the naturalness of bugs.  In computer cultures, it is recognized that bugs are an outcome of doing something complex enough to be worthwhile.  Debugging is a recognized phase of the creative process.  It is expected that changes in a procedure may generate bugs and that major revisions of systems of procedures need be followed by more extensive testing.  The coding and testing cycle of program production should be reflected in cycles of writing and criticism.  This perspective on the process of coding and testing programs supports Elbow's suggestions that one should inhibit self-criticism while writing but later criticize sharply to focus and purge already  generated text.

^^^^^^^^^^The facility computers add to text editing basically apply directly to low-level problems.  Many of the easy changes are "superficial", i.e. typographical and spelling corrections, automatic line length adjustment, and so forth.  Their impact is, however, qualitative because they free the author for more serious concerns.  They permit the author to focus on the coherence of interacting ideas and the effectiveness of rhetoric at a high level of organization.

Genetic Intent^^^^^^^^^^Since the primary effect of computer experience on composition is to establish a set of ideas about the process of composition, once those ideas are achieved, the actual use of a computer becomes of secondary importance.  The intention in the use of a computer in composition is primarily genetic, i.e. although continued use may be a convenience, its primary importance is educational, shaping the way one thinks about the process of composition and the product.  Similarly, the experience of a writing class is genetic with respect to developing communication ability: its purpose is to sharpen the author's ability to imagine how others might react to his composition -- to permit his developing a theory in action of communication through text.  Once the writer becomes capable of playing both roles in a controllable and flexible way -- as Miriam became capable of "forward play in the game tree"  of Tic tac toe -- he has learned one essential lesson of composition as we understand it.  The other great lesson, having fun, delighting in the performance itself, is not something we pretend to give instruction in  -- but we do note that the widely-witnessed " holding power" of computers for programmers suggests that computer-based composition may promise much more engagement for future authors than most students today find in the lessons they must surmount to reach the threshhold of presentable writing.
.page
.ce
1References0
.nofill
.ss

Elbow, Peter.  Writing Without Teachers.  London: Oxford University Press, 1973.

Lawler, Robert.  Introducing Writing with a Computer. SIGCUE, July 1980.

Lawler, Robert.  The Progressive Construction of Mind.  Cognitive Science, 1981a
^^^5, pp. 1 - 50.

Lawler, Robert.  The Articulation of Complementary Roles.  Submitted for publication
^^^1981b.

Lawler, Robert.  Enculturation and Learning.  In preparation,  1981c.

Papert, Seymour.  Mindstorms: Children, Computers, and Powerful Ideas.
^^^New York: Basic Books, 1980.
