.TITLE FD DRIVER
;LIKE FL, ONLY DOUBLE DENSITY
.GLOBL FDSYS,FDINT


.MCALL	.DRBEG,.FORK,.DREND,.DRAST,.DRFIN

MMG$T=0
ERL$G=0
TIM$IT=0

R0=%0
R1=%1
R2=%2
R3=%3
R4=%4
R5=%5
SP=%6
PC=%7

SMSCSR=177200		;THE CSR FOR THE SMS TO PDP11 INTERFACE
SMSDBF=SMSCSR+2	;THE DATA BUFFER BYTE
SMSCMD=SMSDBF+2	;THE COMMAND BUFFER BYTE
SMSLGT=SMSCMD+2	;LIGHT REGISTER
SMSBRV=270		;TRAP VECTOR ADDRESS
SMSTV=SMSBRV
CLKBRV=100	;CLOCK TRAP ADDRESS
SMSRST=0	;RESET COMMAND, SECOND BYTE IGNORED
 SMSINI=200	;INIT COMMAND, SECOND BYTE GIVES FORMAT
 SMS512=2	;512 BYTE SECTORS
 SMSDBL=4	;DOUBLE DENSITY
SMSSEK=1	;SEEK, OR WITH DISK DRIVE_3, SECOND BYTE TRACK ADDRESS
SMSRED=2	;READ, OR WITH DISK DRIVE_3 AND:
 SMSDTB=100	 ;DISK TO BUFFER BIT
 SMSBTH=200	 ;BUFFER TO HOST BIT
		  ;SECOND BYTE ON READ IS SECTOR
SMSRID=3	;READ NEXT SECTOR ID, OR WITH DISK DRIVE_3, SECOND BYTE IGNORED
SMSWRT=4	;WRITE, OR WITH DISK DRIVE_3 AND:
 SMSBTD=100	 ;BUFFER TO DISK
 SMSHTB=200	 ;HOST TO BUFFER
		  ;SECOND BYTE ON WRITE IS SECTOR
SMSWRD=5	;WRITE WITH DELETED DATA MARK, OTHERWISE SAME AS WRITE
SMSFMT=6	;FORMAT THE TRACK THE HEADS ARE OVER
		 ;OR WITH DISK DRIVE_3, SECOND BYTE IS TRACK ADDRESS TO WRITE ON DISK
SMSSTS=7	;READ STATUS, OR WITH DISK DRIVE_3, SECOND BYTE IGNORED

;STATUS BITS IN CSR
SMSERR=100000	;ERROR IN OPERATION
SMSRSB=40000	;RESET BIT
SMSPWR=4000	;POWER ON DISK DRIVES
SMSCLE=2000	;CLOCK INTERUPT ENABLE
SMSST1=1000	;STAT ID BIT 1
SMSST0=400	;STAT ID BIT 0
SMSDNE=200	;DONE
SMSINT=100	;INT ENABLE
SMSBSY=40	;BUSY
SMSCMW=20	;WAITING FOR A COMMAND BYTE
SMSDDR=10	;DATA DIRECTION
SMSFDO=4	;FDC ON
SMSXFW=1	;WAITING FOR XFR

;STATUS BITS IN STATUS BYTE
;COMMAND STATUS
SMSITA=2	;INVALID TRACK ADDRESS
SMSISA=4	;INVALID SECTOR ADDRESS
SMSIBS=10	;INVALID BUFFER SPEC
;DISK DRIVE STATUS
SMSDNR=1	;DRIVE NOT READY
SMSDUS=2	;DRIVE UNSAFE
SMSDWP=4	;DRIVE WRITE PROTECTED
SMSNAM=10	;NO ADDRESS MARKS FOUND
SMSSIP=40	;SEEK IN PROGRESS
;OPERATION STATUS
SMSRWA=1	;READ/WRITE ABORTED
SMSHPE=2	;HEAD POSITIONING ERROR
SMSDAM=4	;DATA ADDRESS MARK MISSING
SMSDOV=10	;DATA OVERRUN
SMSSUR=20	;SECTOR UNRECOVERABLE
SMSCRC=40	;CRC ERROR
SMSRWC=100	;READ/WRITE COMPLETE
SMSDDR=200	;DELETED DATA READ


PR7=340
PR5=240

RMON=54	;POINTER TO ORIGN OF RMON
QMNGR=270	;POINTER TO I/O Q MANAGER ROUTINE

NRETRY=10.	;NUMBER OF TIMES TO RETYR BEFORE HARD ERROR

CS.ERR=1	;HARD ERROR BIT
CS.EOF=40000	;EOF BIT



RKSYS	== 0
FLSYS	== 0
DTSYS	== 0		
DLSYS	== 0
DSSYS	== 0
DXSYS	== 0
DPSYS	== 0
RFSYS	== 0
DMSYS	== 0
DYSYS	== 0


.DRBEG FD,200,1216.,100100

;HERE IS WHERE WE ENTER
	JSR PC,DISK	;ACTUALY PERFORM THE OPERATION
;THEN RETURN TO RT11
	.DRFIN FD

DISK:	MOV FDCQE,R4	;POINTER TO BLOCK (POINTS TO BLOCK NUMBER)
	MOVB 3(R4),UNIT
	BIC #177774,UNIT
	ASL UNIT
	ASL UNIT
	ASL UNIT
	MOV #SMSCSR,R3
	BIT #SMSPWR,(R3)	;IS THE POWER ALREADY ON?
	BNE 1$		;YUP
	BIS #SMSPWR!SMSRSB,(R3)	;TURN IT ON AND RESET
2$:	BIT #SMSFDO,(R3)
	BNE 2$
3$:	MOV #SMSSTS,R0		;READ STATUS
	JSR PC,DCMD
	JSR PC,CMD2	;SECOND BYTE IGNORED
	JSR PC,GETST
	BIT #SMSDNR,R0	
	BNE 3$		;LOOP TILL READY
	CLR R3
	JSR PC,SEEK
1$:	MOV #SMSINI,R0
	JSR PC,DCMD
	MOV #SMSDBL!SMS512,R0
	JSR PC,CMD2
	MOV (R4),R0	;GET THE BLOCK NUMBER
	MOV R0,CURSEC
	MOV 4(R4),R2	;THIS IS THE TRANSFER ADDRESS
	MOV 6(R4),R4	;AND THIS IS THE WORD COUNT
	BLT FDWRTE	;NEGATIVE => WRITE
	BGT FDREAD	;POSITIVE => READ
	RTS PC		;ZERO => SEEK, IGNORED

FDWRTE:	NEG R4		;GET A POSIITVE WORD COUNT
	MOV #1,DOIO	;FLAG
	BR DODISK

FDREAD:	CLR DOIO	;ZERO => READ

DODISK:	MOV #NRETRY,RETRYC	;RETRY COUNT FOR THIS SECTOR
	JSR PC,SECCOM	;COMPUTE REAL SECTOR AND TRACK NUMBER
	MOV R2,-(SP)	;SAVE XFER ADDRESS
	MOV R4,-(SP)	;AND WORD COUNT
RETRY:	JSR PC,SEEK
	TST DOIO
	BEQ REDTRY	;ZERO => READ
	JSR PC,WRITES
	BR ERRCHK
REDTRY:	JSR PC,READS	;PROCESS ONE SECTOR
ERRCHK:	BEQ DISKER
NEXSEC:	CMP (SP)+,(SP)+	;FLUSH SAVED XFER AND WORD COUNT
	INC CURSEC	;NEXT SECTOR	
	TST R4		;ANY LEFT TO XFER?
	BNE DODISK	;YUP
	RTS PC		;DONE THE XFER

DISKER:	DEC RETRYC
	BLT 1$		;TIME TO GIVE UP
	MOV (SP),R4	;WORD COUNT
	MOV 2(SP),R2	;XFER ADDRESS
	BR RETRY	;TRY AGAIN
1$:	MOV FDCQE,R5
	BIS #CS.ERR,@-(R5)	;SET ERROR
	CMP (SP)+,(SP)+
	RTS PC
	

SECCOM:	MOV CURSEC,R1
	MOV R1,R3
	ASR R3
	ASR R3
	ASR R3
	ASR R3		;GET THE TRACK IN R3
	INC R3
	BIC #177760,R1	;SECTOR
	ADD PC,R1
	ADD #DBLSTB-.,R1
	MOVB (R1),R1	;MUNG IT
	RTS PC		;THAT'S ALL

DBLSTB:	.BYTE 1,5,9.,13.,2,6,10.,14.,3,7,11.,15.,4,8.,12.,16.

READS:	MOV #SMSRED!SMSDTB,R0
	JSR PC,DCMD
	MOV R1,R0	;SECTOR NUMBER
	JSR PC,CMD2
	JSR PC,GETST
	BEQ READER
	MOV #SMSRED!SMSBTH,R0
	JSR PC,DCMD
	JSR PC,CMD2	;SECOND BYTE IGNORED
1$:	BIT #SMSXFW,@#SMSCSR
	BEQ 1$	
	MOV #256.,R5
2$:	MOVB @#SMSDBF,(R2)+
	MOVB @#SMSDBF,(R2)+
	DEC R4
	BGT 3$
	MOV #ZAP,R2
	CLR R4
3$:	DEC R5
	BNE 2$
	JSR PC,GETST
	BEQ READER
	CLZ
	RTS PC

READER:	SEZ
	RTS PC





WRITES:	MOV #SMSWRT!SMSHTB,R0
	JSR PC,DCMD
	JSR PC,CMD2
1$:	BIT #SMSXFW,@#SMSCSR
	BEQ 1$
	MOV #256.,R5
2$:	MOVB (R2)+,@#SMSDBF
	MOVB (R2)+,@#SMSDBF
	DEC R4
	BGT 3$
	CLR R4
	MOV #ZAP,R2
	CLR (R2)
3$:	DEC R5
	BGT 2$
	JSR PC,GETST
	BEQ WRTEER
	MOV #SMSWRT!SMSBTD,R0
	JSR PC,DCMD
	MOV R1,R0
	JSR PC,CMD2
	JSR PC,GETST
	BEQ WRTEER
	RTS PC	


WRTEER:	SEZ
	RTS PC


SEEK:	MOV #SMSSEK,R0
	JSR PC,DCMD
	MOV R3,R0
	JSR PC,CMD2
2$:	BIT #SMSXFW,@#SMSCSR
	BEQ 2$
	TST @#SMSDBF	;FLUSH STATUS	
1$:	RTS PC

DCMD:	BIS UNIT,R0
CMD2:	BIT #SMSCMW,@#SMSCSR
	BEQ CMD2
	MOV R0,@#SMSCMD
	RTS PC

GETST:	BIT #SMSXFW,@#SMSCSR
	BEQ GETST
	MOV @#SMSCSR,R0
	BPL 1$		;NO ERROR
	MOV R0,ERRCSR
	MOV @#SMSDBF,R2
	MOV R2,ERRDAT
	MOV R3,-(SP)	;SAVE REAL TRAKC
	CLR R3		;GO TO ZERO TO RECAL
	JSR PC,SEEK
	MOV (SP)+,R3
	SEZ
	RTS PC

1$:	MOV @#SMSDBF,R0
	CLZ
	RTS PC



FDQUIT:	RTS PC

	.DRAST FD,4,FDQUIT
	RTS PC

UNIT:	0
CURSEC:	0	;CURRENT SECTOR ADDRESS
DOIO:	0
RETRYC:	0
ZAP:	0
ERRCSR:	0
ERRDAT:	0
	.DRFIN FD
	.DREND FD
.END
