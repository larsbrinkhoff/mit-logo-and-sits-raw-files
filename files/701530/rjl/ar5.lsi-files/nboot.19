	.TITLE 3500 FLOPPY DISK BOOTSTRAP
.INSRT SITS;SITMAC >
.INSRT RJL;FLOPDF >
TPS==177564
TPB==177566

.IIF NDF DISKN,DISKN=0
SMSSTS=SMSSTS!<DISKN*10>
SMSSEK=SMSSEK!<DISKN*10>
SMSRED=SMSRED!<DISKN*10>


.=0
	12.	
	JMP GO
.=40
	111111

.=10000

GO:	BR 2$		;START HERE TO DO NORMAL THING
	BR RESTAR	;START HERE IF F IS SET UP
2$:	MOV #1000,P	;TEMP PDL
	BR 3$		;MAGIC!!!
4$:	MOV (P)+,@#4
	CLR F		;START LOOKING AT ZERO
1$:	TST (F)+	;TEST TILL YOU GET A TRAP
	BR 1$
3$:	JSR PC,4$	
MEMEND:				;THIS WILL TRAP TO ITSELF THE FIRST TIME
	CLR -(F)		;THIS IS A FLAG TO BLOADR, IF NON ZERO GIVES FILE TO LOAD
RESTAR:	RESET		;PREVENT ANY INTERUPTS THAT MIGHT BE PENDING
	MOV PC,A
	ADD #ITAB-.,A
	CMP A,D		;WAS IT SET TO SOMETHING OTHER THAN ITAB?
	BNE 10$		;YES, GO SET IT TO ITAB
	CMP (A)+,(A)+	;TURN IT INTO ITAB+4
10$:	MOV A,D
	MOV F,P
	MOV #SMSCSR,E	;COMMONLY USED CONSTANT
	MOV PC,B
	ADD #CMDWA2-.,B
	MOV #SMSPWR!SMSRSB,(E)	;RESET THE SMS CONTROLLER
6$:	BIT #SMSFDO,(E)	;IS IT ON?
	BNE 6$		;NOT YET
5$:	MOV #SMSSTS,A	;STATUS
	JSR PC,(B)	;CMDWA2
	JSR PC,GETSTB	;GET STATUS BYTE
	BIT #SMSDNR,A	;IS DISK READY
	BNE 5$		;NOPE, WAIT
	MOV #SMSRST!SMSINI,A
	MOVB 2(D),F
	JSR PC,(B)	;RESET SINGLE DENSITY, SET DENSITY OF DOUBLE
	CLR F
	JSR PC,SEEK	;SEEK TO TRACK 1
	CLR C		;C IS THE CORE ADDRESS TO READ INTO
	MOV #1,F	;SECTOR TO READ
3$:	MOV #SMSDTB!SMSRED,A	;READ INTO BUFFER
	JSR PC,(B)	;CMDWA2
	JSR PC,GETST		;GET STATUS OF THE READ
	MOV #SMSBTH!SMSRED,A
	JSR PC,(B)		;BUFFER TO HOST READ
				;SECOND BYTE IS IGNORED

	MOV (D),-(P)		;GET THE SECTOR LENGTH
11$:	BIT #SMSXFW,(E)		;WAITING FOR US?
	BEQ 11$
2$:	MOVB @#SMSDBF,(C)+
	DEC (P)
	BNE 2$
	JSR PC,GETST	;GET STATUS BYTE
	TSTB (D)	;DOUBLE DENSITY MAKES THIS 0
	BNE 12$		;MEANS SINGLE DENSITY
	CMPB (F)+,(F)+
12$:	CMPB (F)+,(F)+
	CMPB 3(D),F	;ARE WE OVER END?
	BGT 3$		;NOPE, READ NEXT
	BLT 4$		;JUST READ BLOCK 26., DONE
	MOV #2,F	;GO BACK TO GOBBLE THE EVEN SECTORS
	BR 3$
4$:	CLR PC		;START THE MAGIC PROGRAM


SEEK:	JSR PC,(PC)
1$:	MOV #SMSSEK,A	;SEEK TO TRACK ZERO
	JSR PC,(B)
	INC F

GETST:	TSTB (E)		;WAIT FOR DONE
	BPL GETST
	TST (E)		;ERROR?
	BLT ERROR
GETSTB:	BIT #SMSXFW,(E)	;WAITING TO XFR?
	BEQ GETSTB
	MOV @#SMSDBF,A		;GOBBLE STATUS
	RTS PC			;AND IGNORE IT

CMDWA2:	JSR PC,(PC)		;CALL THIS ROUTINE TWICE
CMDWAI:	BIT #SMSCMW,(E)	;READY FOR COMMAND BYTE?
	BEQ CMDWAI		;NOPE
	MOV A,@#SMSCMD		;GIVE IT TO IT
	MOV F,A
	RTS PC

ERROR:	MOV P,F
	BIT #4,D
.IF P1
	0				;BRANCH WILL GO HERE
.IFF
.IIF EQ ITAB&4,	BEQ RESTAR		;NOT YET
.IIF NE ITAB&4,	BNE RESTAR		;NOT YET
.ENDC
	JSR A,ERRTYP
ERRMES:	.ASCIZ /Error
/
.EVEN

ERRTYP:	TSTB @#TPS
	BPL ERRTYP
	MOVB (A)+,@#TPB
	BNE ERRTYP
	BR RESTAR

ITAB:	128.			;NOTE THAT THIS IS .BYTE 128.,0
	.BYTE 0,27.		;26 SECTORS/TRACK, GO AROUND TWICE
	512.			;AND THIS IS .BYTE 0,1
	.BYTE 6,17.		;8 SECTORS/TRACK, GO AROUND TWICE, GETTING 4 SECTORS

LEN==.-GO
.REPT 128.
	.IIF LT .-GO-254.,-1	;FILL OUT WITH -1'S
	.IIF Z  .-GO-254.,<DISKN*2>!177771
.ENDR

.MACRO PRAD A,B
.PRINT /A'B
/
.ENDM
.IF2
PRAD <END=>,\.
PRAD <LENGTH=>,\LEN
.IIF GT LEN-256.,.ERROR TOO LONG!!!!!
.ENDC
.END 2
